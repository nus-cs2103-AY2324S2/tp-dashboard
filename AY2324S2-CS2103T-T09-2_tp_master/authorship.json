[{"path":"README.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"kailinteoo"},"content":"[![CI Status](https://github.com/se-edu/addressbook-level3/workflows/Java%20CI/badge.svg)](https://github.com/AY2324S2-CS2103T-T09-2/tp/actions)","lastModifiedDate":"2024-03-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"[![codecov](https://codecov.io/gh/AY2324S2-CS2103T-T09-2/tp/graph/badge.svg?token\u003dBMICX593IT)](https://codecov.io/gh/AY2324S2-CS2103T-T09-2/tp)","lastModifiedDate":"2024-02-17"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":5,"author":{"gitId":"-"},"content":"![Ui](docs/images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"kailinteoo"},"content":"# Introduction","lastModifiedDate":"2024-03-06"},{"lineNumber":8,"author":{"gitId":"rertyy"},"content":"","lastModifiedDate":"2024-04-05"},{"lineNumber":9,"author":{"gitId":"kailinteoo"},"content":"Welcome to BookKeeper, your solution for efficient customer management for **small business owners in the floral","lastModifiedDate":"2024-03-14"},{"lineNumber":10,"author":{"gitId":"kailinteoo"},"content":"industry**. \u003cbr\u003e","lastModifiedDate":"2024-03-06"},{"lineNumber":11,"author":{"gitId":"kailinteoo"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":12,"author":{"gitId":"kailinteoo"},"content":"This application is designed to streamline customer lists and enhance productivity for individuals operating","lastModifiedDate":"2024-03-06"},{"lineNumber":13,"author":{"gitId":"kailinteoo"},"content":"small businesses with limited resources and manpower. With BookKeeper, you can easily manage customer information, track","lastModifiedDate":"2024-03-06"},{"lineNumber":14,"author":{"gitId":"kailinteoo"},"content":"orders, and personalize your customer interactions, all through a user-friendly command-line interface.","lastModifiedDate":"2024-03-06"},{"lineNumber":15,"author":{"gitId":"kailinteoo"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":16,"author":{"gitId":"rertyy"},"content":"For the detailed documentation of this project, see","lastModifiedDate":"2024-04-05"},{"lineNumber":17,"author":{"gitId":"rertyy"},"content":"the [BookKeeper website](https://ay2324s2-cs2103t-t09-2.github.io/tp/).","lastModifiedDate":"2024-04-05"},{"lineNumber":18,"author":{"gitId":"kailinteoo"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":19,"author":{"gitId":"kailinteoo"},"content":"# Acknowledgement","lastModifiedDate":"2024-03-06"},{"lineNumber":20,"author":{"gitId":"kailinteoo"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":21,"author":{"gitId":"kailinteoo"},"content":"The project simulates an ongoing software project for a desktop application (called _AddressBook_) used for managing","lastModifiedDate":"2024-03-06"},{"lineNumber":22,"author":{"gitId":"-"},"content":"contact details.","lastModifiedDate":"2024-02-17"},{"lineNumber":23,"author":{"gitId":"rertyy"},"content":"","lastModifiedDate":"2024-04-05"},{"lineNumber":24,"author":{"gitId":"kailinteoo"},"content":"* It is written in OOP fashion.","lastModifiedDate":"2024-03-06"},{"lineNumber":25,"author":{"gitId":"kailinteoo"},"content":"* It provides a reasonably well-written code base bigger (around 6 KLoC)","lastModifiedDate":"2024-03-06"},{"lineNumber":26,"author":{"gitId":"kailinteoo"},"content":"* It comes with a reasonable level of user and developer documentation.","lastModifiedDate":"2024-03-06"},{"lineNumber":27,"author":{"gitId":"kailinteoo"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":28,"author":{"gitId":"rertyy"},"content":"This project is based on the AddressBook Level-3 project and is a part of","lastModifiedDate":"2024-04-05"},{"lineNumber":29,"author":{"gitId":"rertyy"},"content":"the [se-education.org](https://se-education.org/addressbook-level3) initiative.","lastModifiedDate":"2024-04-05"},{"lineNumber":30,"author":{"gitId":"kailinteoo"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":31,"author":{"gitId":"kailinteoo"},"content":"# Features","lastModifiedDate":"2024-03-06"},{"lineNumber":32,"author":{"gitId":"kailinteoo"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":33,"author":{"gitId":"kailinteoo"},"content":"## Customer Feature","lastModifiedDate":"2024-03-06"},{"lineNumber":34,"author":{"gitId":"kailinteoo"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":35,"author":{"gitId":"kailinteoo"},"content":"### 1. Add Customer","lastModifiedDate":"2024-03-06"},{"lineNumber":36,"author":{"gitId":"rertyy"},"content":"","lastModifiedDate":"2024-04-05"},{"lineNumber":37,"author":{"gitId":"kailinteoo"},"content":"Adds a customer to the customer\u0027s storage.","lastModifiedDate":"2024-03-06"},{"lineNumber":38,"author":{"gitId":"kailinteoo"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":39,"author":{"gitId":"kailinteoo"},"content":"Example: `add \u003ccustomer name\u003e`","lastModifiedDate":"2024-03-06"},{"lineNumber":40,"author":{"gitId":"kailinteoo"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":41,"author":{"gitId":"kailinteoo"},"content":"Expected output:","lastModifiedDate":"2024-03-06"},{"lineNumber":42,"author":{"gitId":"rertyy"},"content":"","lastModifiedDate":"2024-04-05"},{"lineNumber":43,"author":{"gitId":"kailinteoo"},"content":"```","lastModifiedDate":"2024-03-06"},{"lineNumber":44,"author":{"gitId":"kailinteoo"},"content":"Successfully added \u003ccustomer name\u003e to your list!","lastModifiedDate":"2024-03-06"},{"lineNumber":45,"author":{"gitId":"kailinteoo"},"content":"```","lastModifiedDate":"2024-03-06"},{"lineNumber":46,"author":{"gitId":"kailinteoo"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":47,"author":{"gitId":"kailinteoo"},"content":"### 2. Delete Customer","lastModifiedDate":"2024-03-06"},{"lineNumber":48,"author":{"gitId":"rertyy"},"content":"","lastModifiedDate":"2024-04-05"},{"lineNumber":49,"author":{"gitId":"kailinteoo"},"content":"Delete selected customer from the customer\u0027s storage.","lastModifiedDate":"2024-03-06"},{"lineNumber":50,"author":{"gitId":"kailinteoo"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":51,"author":{"gitId":"kailinteoo"},"content":"Example: `delete \u003ccustomer name\u003e`","lastModifiedDate":"2024-03-06"},{"lineNumber":52,"author":{"gitId":"kailinteoo"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":53,"author":{"gitId":"kailinteoo"},"content":"Expected output:","lastModifiedDate":"2024-03-06"},{"lineNumber":54,"author":{"gitId":"rertyy"},"content":"","lastModifiedDate":"2024-04-05"},{"lineNumber":55,"author":{"gitId":"kailinteoo"},"content":"```","lastModifiedDate":"2024-03-06"},{"lineNumber":56,"author":{"gitId":"kailinteoo"},"content":"Successfully removed \u003ccustomer name\u003e from the list","lastModifiedDate":"2024-03-06"},{"lineNumber":57,"author":{"gitId":"kailinteoo"},"content":"```","lastModifiedDate":"2024-03-06"},{"lineNumber":58,"author":{"gitId":"kailinteoo"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":59,"author":{"gitId":"kailinteoo"},"content":"### 3. Edit Customer","lastModifiedDate":"2024-03-06"},{"lineNumber":60,"author":{"gitId":"rertyy"},"content":"","lastModifiedDate":"2024-04-05"},{"lineNumber":61,"author":{"gitId":"kailinteoo"},"content":"Edit selected customer information by adding more information such as Age, Phone Number, Past purchased record,","lastModifiedDate":"2024-03-06"},{"lineNumber":62,"author":{"gitId":"kailinteoo"},"content":"Birthday, Address.","lastModifiedDate":"2024-03-06"},{"lineNumber":63,"author":{"gitId":"kailinteoo"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":64,"author":{"gitId":"kailinteoo"},"content":"Example: `edit \u003ccustomer name\u003e`","lastModifiedDate":"2024-03-06"},{"lineNumber":65,"author":{"gitId":"kailinteoo"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":66,"author":{"gitId":"kailinteoo"},"content":"Expected output:","lastModifiedDate":"2024-03-06"},{"lineNumber":67,"author":{"gitId":"rertyy"},"content":"","lastModifiedDate":"2024-04-05"},{"lineNumber":68,"author":{"gitId":"kailinteoo"},"content":"```","lastModifiedDate":"2024-03-06"},{"lineNumber":69,"author":{"gitId":"kailinteoo"},"content":"Successfully edit \u003ccustomer name\u003e information","lastModifiedDate":"2024-03-06"},{"lineNumber":70,"author":{"gitId":"kailinteoo"},"content":"```","lastModifiedDate":"2024-03-06"},{"lineNumber":71,"author":{"gitId":"kailinteoo"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":72,"author":{"gitId":"kailinteoo"},"content":"### 4. VIP Customer","lastModifiedDate":"2024-03-06"},{"lineNumber":73,"author":{"gitId":"rertyy"},"content":"","lastModifiedDate":"2024-04-05"},{"lineNumber":74,"author":{"gitId":"kailinteoo"},"content":"Indicating that this specific customer is important.","lastModifiedDate":"2024-03-06"},{"lineNumber":75,"author":{"gitId":"kailinteoo"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":76,"author":{"gitId":"kailinteoo"},"content":"Example: `vip \u003ccustomer name\u003e`","lastModifiedDate":"2024-03-06"},{"lineNumber":77,"author":{"gitId":"kailinteoo"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":78,"author":{"gitId":"kailinteoo"},"content":"Expected output:","lastModifiedDate":"2024-03-06"},{"lineNumber":79,"author":{"gitId":"rertyy"},"content":"","lastModifiedDate":"2024-04-05"},{"lineNumber":80,"author":{"gitId":"kailinteoo"},"content":"```","lastModifiedDate":"2024-03-06"},{"lineNumber":81,"author":{"gitId":"kailinteoo"},"content":"Successfully set \u003ccustomer name\u003e as VIP","lastModifiedDate":"2024-03-06"},{"lineNumber":82,"author":{"gitId":"kailinteoo"},"content":"```","lastModifiedDate":"2024-03-06"},{"lineNumber":83,"author":{"gitId":"kailinteoo"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":84,"author":{"gitId":"kailinteoo"},"content":"## Order Feature","lastModifiedDate":"2024-03-06"},{"lineNumber":85,"author":{"gitId":"kailinteoo"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":86,"author":{"gitId":"kailinteoo"},"content":"### 1. Add Order","lastModifiedDate":"2024-03-06"},{"lineNumber":87,"author":{"gitId":"rertyy"},"content":"","lastModifiedDate":"2024-04-05"},{"lineNumber":88,"author":{"gitId":"kailinteoo"},"content":"Adds an order into the order\u0027s storage, together with the customer name.","lastModifiedDate":"2024-03-14"},{"lineNumber":89,"author":{"gitId":"kailinteoo"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":90,"author":{"gitId":"kailinteoo"},"content":"Example: `add \u003ccustomer name, order, due date\u003e`","lastModifiedDate":"2024-03-06"},{"lineNumber":91,"author":{"gitId":"kailinteoo"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":92,"author":{"gitId":"kailinteoo"},"content":"Expected output:","lastModifiedDate":"2024-03-06"},{"lineNumber":93,"author":{"gitId":"rertyy"},"content":"","lastModifiedDate":"2024-04-05"},{"lineNumber":94,"author":{"gitId":"kailinteoo"},"content":"```","lastModifiedDate":"2024-03-06"},{"lineNumber":95,"author":{"gitId":"kailinteoo"},"content":"An order has been added for \u003ccustomer name\u003e","lastModifiedDate":"2024-03-06"},{"lineNumber":96,"author":{"gitId":"kailinteoo"},"content":"```","lastModifiedDate":"2024-03-06"},{"lineNumber":97,"author":{"gitId":"kailinteoo"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":98,"author":{"gitId":"kailinteoo"},"content":"### 2. Delete Order","lastModifiedDate":"2024-03-06"},{"lineNumber":99,"author":{"gitId":"rertyy"},"content":"","lastModifiedDate":"2024-04-05"},{"lineNumber":100,"author":{"gitId":"kailinteoo"},"content":"Delete order of the specific customer.","lastModifiedDate":"2024-03-06"},{"lineNumber":101,"author":{"gitId":"kailinteoo"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":102,"author":{"gitId":"kailinteoo"},"content":"Example: `delete \u003ccustomer name, order\u003e`","lastModifiedDate":"2024-03-06"},{"lineNumber":103,"author":{"gitId":"kailinteoo"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":104,"author":{"gitId":"kailinteoo"},"content":"Expected output:","lastModifiedDate":"2024-03-06"},{"lineNumber":105,"author":{"gitId":"rertyy"},"content":"","lastModifiedDate":"2024-04-05"},{"lineNumber":106,"author":{"gitId":"kailinteoo"},"content":"```","lastModifiedDate":"2024-03-06"},{"lineNumber":107,"author":{"gitId":"kailinteoo"},"content":"\u003ccustomer name\u003e order of \u003c(order item)\u003e has been cancelled","lastModifiedDate":"2024-03-06"},{"lineNumber":108,"author":{"gitId":"kailinteoo"},"content":"```","lastModifiedDate":"2024-03-06"},{"lineNumber":109,"author":{"gitId":"kailinteoo"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":110,"author":{"gitId":"kailinteoo"},"content":"### 3. Edit Order","lastModifiedDate":"2024-03-06"},{"lineNumber":111,"author":{"gitId":"rertyy"},"content":"","lastModifiedDate":"2024-04-05"},{"lineNumber":112,"author":{"gitId":"kailinteoo"},"content":"Edit the customer\u0027s order.","lastModifiedDate":"2024-03-06"},{"lineNumber":113,"author":{"gitId":"kailinteoo"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":114,"author":{"gitId":"kailinteoo"},"content":"Example: `edit \u003ccustomer name, old order, new order\u003e`","lastModifiedDate":"2024-03-06"},{"lineNumber":115,"author":{"gitId":"kailinteoo"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":116,"author":{"gitId":"kailinteoo"},"content":"Expected output:","lastModifiedDate":"2024-03-06"},{"lineNumber":117,"author":{"gitId":"rertyy"},"content":"","lastModifiedDate":"2024-04-05"},{"lineNumber":118,"author":{"gitId":"kailinteoo"},"content":"```","lastModifiedDate":"2024-03-06"},{"lineNumber":119,"author":{"gitId":"kailinteoo"},"content":"Successfully edit \u003ccustomer name\u003e order","lastModifiedDate":"2024-03-06"},{"lineNumber":120,"author":{"gitId":"kailinteoo"},"content":"```","lastModifiedDate":"2024-03-06"},{"lineNumber":121,"author":{"gitId":"kailinteoo"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":122,"author":{"gitId":"kailinteoo"},"content":"### 4. Prioritize Order","lastModifiedDate":"2024-03-06"},{"lineNumber":123,"author":{"gitId":"rertyy"},"content":"","lastModifiedDate":"2024-04-05"},{"lineNumber":124,"author":{"gitId":"kailinteoo"},"content":"Prioritize the customer\u0027s order.","lastModifiedDate":"2024-03-14"},{"lineNumber":125,"author":{"gitId":"kailinteoo"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":126,"author":{"gitId":"kailinteoo"},"content":"Example: `prioritize \u003ccustomer name, order\u003e`","lastModifiedDate":"2024-03-06"},{"lineNumber":127,"author":{"gitId":"kailinteoo"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":128,"author":{"gitId":"kailinteoo"},"content":"Expected output:","lastModifiedDate":"2024-03-06"},{"lineNumber":129,"author":{"gitId":"rertyy"},"content":"","lastModifiedDate":"2024-04-05"},{"lineNumber":130,"author":{"gitId":"kailinteoo"},"content":"```","lastModifiedDate":"2024-03-06"},{"lineNumber":131,"author":{"gitId":"kailinteoo"},"content":"Successfully prioritized \u003ccustomer name, order\u003e","lastModifiedDate":"2024-03-06"},{"lineNumber":132,"author":{"gitId":"kailinteoo"},"content":"```","lastModifiedDate":"2024-03-06"},{"lineNumber":133,"author":{"gitId":"kailinteoo"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":134,"author":{"gitId":"kailinteoo"},"content":"## Viewing Feature","lastModifiedDate":"2024-03-06"},{"lineNumber":135,"author":{"gitId":"kailinteoo"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":136,"author":{"gitId":"kailinteoo"},"content":"### 1. View Customer Detail","lastModifiedDate":"2024-03-06"},{"lineNumber":137,"author":{"gitId":"rertyy"},"content":"","lastModifiedDate":"2024-04-05"},{"lineNumber":138,"author":{"gitId":"kailinteoo"},"content":"View customer information, such as Name, Age, Phone Number, Past purchase record, Birthday, Address.","lastModifiedDate":"2024-03-06"},{"lineNumber":139,"author":{"gitId":"kailinteoo"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":140,"author":{"gitId":"kailinteoo"},"content":"Example: `view \u003ccustomer name\u003e`","lastModifiedDate":"2024-03-06"},{"lineNumber":141,"author":{"gitId":"kailinteoo"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":142,"author":{"gitId":"kailinteoo"},"content":"Expected output:","lastModifiedDate":"2024-03-06"},{"lineNumber":143,"author":{"gitId":"rertyy"},"content":"","lastModifiedDate":"2024-04-05"},{"lineNumber":144,"author":{"gitId":"kailinteoo"},"content":"```","lastModifiedDate":"2024-03-06"},{"lineNumber":145,"author":{"gitId":"kailinteoo"},"content":"Jasper Tan info: [...]","lastModifiedDate":"2024-03-06"},{"lineNumber":146,"author":{"gitId":"kailinteoo"},"content":"Tan Qing Yong info : [...]","lastModifiedDate":"2024-03-06"},{"lineNumber":147,"author":{"gitId":"kailinteoo"},"content":"```","lastModifiedDate":"2024-03-06"},{"lineNumber":148,"author":{"gitId":"kailinteoo"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":149,"author":{"gitId":"kailinteoo"},"content":"### 2. View Order Detail","lastModifiedDate":"2024-03-06"},{"lineNumber":150,"author":{"gitId":"rertyy"},"content":"","lastModifiedDate":"2024-04-05"},{"lineNumber":151,"author":{"gitId":"kailinteoo"},"content":"View Order information, such as order by when, who order, quantity.","lastModifiedDate":"2024-03-06"},{"lineNumber":152,"author":{"gitId":"kailinteoo"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":153,"author":{"gitId":"kailinteoo"},"content":"Example: `view \u003corder\u003e`","lastModifiedDate":"2024-03-06"},{"lineNumber":154,"author":{"gitId":"kailinteoo"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":155,"author":{"gitId":"kailinteoo"},"content":"Expected output:","lastModifiedDate":"2024-03-06"},{"lineNumber":156,"author":{"gitId":"rertyy"},"content":"","lastModifiedDate":"2024-04-05"},{"lineNumber":157,"author":{"gitId":"kailinteoo"},"content":"```","lastModifiedDate":"2024-03-06"},{"lineNumber":158,"author":{"gitId":"kailinteoo"},"content":"Petite Bouquet: ","lastModifiedDate":"2024-03-14"},{"lineNumber":159,"author":{"gitId":"kailinteoo"},"content":"1. total of \u003cquantity\u003e order by \u003ccustomer name\u003e on \u003cdate\u003e ","lastModifiedDate":"2024-03-06"},{"lineNumber":160,"author":{"gitId":"kailinteoo"},"content":"2. total of \u003cquantity\u003e order by \u003ccustomer name\u003e on \u003cdate\u003e ","lastModifiedDate":"2024-03-06"},{"lineNumber":161,"author":{"gitId":"kailinteoo"},"content":"[...]","lastModifiedDate":"2024-03-06"},{"lineNumber":162,"author":{"gitId":"kailinteoo"},"content":"```","lastModifiedDate":"2024-03-06"},{"lineNumber":163,"author":{"gitId":"kailinteoo"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":164,"author":{"gitId":"kailinteoo"},"content":"### 3. View Statistics","lastModifiedDate":"2024-03-06"},{"lineNumber":165,"author":{"gitId":"rertyy"},"content":"","lastModifiedDate":"2024-04-05"},{"lineNumber":166,"author":{"gitId":"kailinteoo"},"content":"Show how many orders has been completed.","lastModifiedDate":"2024-03-06"},{"lineNumber":167,"author":{"gitId":"kailinteoo"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":168,"author":{"gitId":"kailinteoo"},"content":"Example: `stat`","lastModifiedDate":"2024-03-06"},{"lineNumber":169,"author":{"gitId":"kailinteoo"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":170,"author":{"gitId":"kailinteoo"},"content":"Expected output:","lastModifiedDate":"2024-03-06"},{"lineNumber":171,"author":{"gitId":"rertyy"},"content":"","lastModifiedDate":"2024-04-05"},{"lineNumber":172,"author":{"gitId":"kailinteoo"},"content":"```","lastModifiedDate":"2024-03-06"},{"lineNumber":173,"author":{"gitId":"kailinteoo"},"content":"\u003ca list of stat\u003e","lastModifiedDate":"2024-03-06"},{"lineNumber":174,"author":{"gitId":"kailinteoo"},"content":"```","lastModifiedDate":"2024-03-06"},{"lineNumber":175,"author":{"gitId":"kailinteoo"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":176,"author":{"gitId":"kailinteoo"},"content":"### 4. View Ranking","lastModifiedDate":"2024-03-06"},{"lineNumber":177,"author":{"gitId":"rertyy"},"content":"","lastModifiedDate":"2024-04-05"},{"lineNumber":178,"author":{"gitId":"kailinteoo"},"content":"View which florist sell the best and total sell quantity.","lastModifiedDate":"2024-03-14"},{"lineNumber":179,"author":{"gitId":"kailinteoo"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":180,"author":{"gitId":"kailinteoo"},"content":"Example: `view ranking`","lastModifiedDate":"2024-03-06"},{"lineNumber":181,"author":{"gitId":"kailinteoo"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":182,"author":{"gitId":"kailinteoo"},"content":"Expected output:","lastModifiedDate":"2024-03-06"},{"lineNumber":183,"author":{"gitId":"rertyy"},"content":"","lastModifiedDate":"2024-04-05"},{"lineNumber":184,"author":{"gitId":"kailinteoo"},"content":"```","lastModifiedDate":"2024-03-06"},{"lineNumber":185,"author":{"gitId":"kailinteoo"},"content":"Top 1: Preserved Hydrangea Bouquet, total sold of \u003cquantity\u003e ","lastModifiedDate":"2024-03-14"},{"lineNumber":186,"author":{"gitId":"kailinteoo"},"content":"[...]","lastModifiedDate":"2024-03-06"},{"lineNumber":187,"author":{"gitId":"kailinteoo"},"content":"```","lastModifiedDate":"2024-03-06"},{"lineNumber":188,"author":{"gitId":"kailinteoo"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":189,"author":{"gitId":"kailinteoo"},"content":"## Sorting Feature","lastModifiedDate":"2024-03-06"},{"lineNumber":190,"author":{"gitId":"kailinteoo"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":191,"author":{"gitId":"kailinteoo"},"content":"### 1. Sort Order by Date","lastModifiedDate":"2024-03-06"},{"lineNumber":192,"author":{"gitId":"rertyy"},"content":"","lastModifiedDate":"2024-04-05"},{"lineNumber":193,"author":{"gitId":"kailinteoo"},"content":"Sort when the order is due based on the date (excluding prioritize order).","lastModifiedDate":"2024-03-06"},{"lineNumber":194,"author":{"gitId":"kailinteoo"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":195,"author":{"gitId":"kailinteoo"},"content":"Example: `sort orderdate`","lastModifiedDate":"2024-03-06"},{"lineNumber":196,"author":{"gitId":"kailinteoo"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":197,"author":{"gitId":"kailinteoo"},"content":"Expected output:","lastModifiedDate":"2024-03-06"},{"lineNumber":198,"author":{"gitId":"rertyy"},"content":"","lastModifiedDate":"2024-04-05"},{"lineNumber":199,"author":{"gitId":"kailinteoo"},"content":"```","lastModifiedDate":"2024-03-06"},{"lineNumber":200,"author":{"gitId":"kailinteoo"},"content":"1. Jasper Tan, Eternal Love Preserved Red Rose Flower Bouquet, 24 Feb 2024 ","lastModifiedDate":"2024-03-14"},{"lineNumber":201,"author":{"gitId":"kailinteoo"},"content":"2. Tan Qin Yong, Mocha Romance Bouquet, 1 Apr 2024 ","lastModifiedDate":"2024-03-14"},{"lineNumber":202,"author":{"gitId":"kailinteoo"},"content":"[...]","lastModifiedDate":"2024-03-06"},{"lineNumber":203,"author":{"gitId":"kailinteoo"},"content":"```","lastModifiedDate":"2024-03-06"},{"lineNumber":204,"author":{"gitId":"kailinteoo"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":205,"author":{"gitId":"kailinteoo"},"content":"### 2. Sort Order by order type","lastModifiedDate":"2024-03-06"},{"lineNumber":206,"author":{"gitId":"rertyy"},"content":"","lastModifiedDate":"2024-04-05"},{"lineNumber":207,"author":{"gitId":"kailinteoo"},"content":"Sort depending on what kind of order.","lastModifiedDate":"2024-03-06"},{"lineNumber":208,"author":{"gitId":"kailinteoo"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":209,"author":{"gitId":"kailinteoo"},"content":"Example: `sort ordertype`","lastModifiedDate":"2024-03-06"},{"lineNumber":210,"author":{"gitId":"kailinteoo"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":211,"author":{"gitId":"kailinteoo"},"content":"Expected output:","lastModifiedDate":"2024-03-06"},{"lineNumber":212,"author":{"gitId":"rertyy"},"content":"","lastModifiedDate":"2024-04-05"},{"lineNumber":213,"author":{"gitId":"kailinteoo"},"content":"```","lastModifiedDate":"2024-03-06"},{"lineNumber":214,"author":{"gitId":"kailinteoo"},"content":"Mocha Romance Bouquet:","lastModifiedDate":"2024-03-14"},{"lineNumber":215,"author":{"gitId":"kailinteoo"},"content":"1. Jasper Tan, 24 Feb 2024 ","lastModifiedDate":"2024-03-06"},{"lineNumber":216,"author":{"gitId":"kailinteoo"},"content":"2. QinYong, 1 Apr 2024 ","lastModifiedDate":"2024-03-06"},{"lineNumber":217,"author":{"gitId":"kailinteoo"},"content":"[...]","lastModifiedDate":"2024-03-06"},{"lineNumber":218,"author":{"gitId":"kailinteoo"},"content":"```","lastModifiedDate":"2024-03-06"},{"lineNumber":219,"author":{"gitId":"kailinteoo"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":220,"author":{"gitId":"kailinteoo"},"content":"### 3. Sort Customer name by alphabetical order","lastModifiedDate":"2024-03-06"},{"lineNumber":221,"author":{"gitId":"rertyy"},"content":"","lastModifiedDate":"2024-04-05"},{"lineNumber":222,"author":{"gitId":"kailinteoo"},"content":"sort the customer list.","lastModifiedDate":"2024-03-06"},{"lineNumber":223,"author":{"gitId":"kailinteoo"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":224,"author":{"gitId":"kailinteoo"},"content":"Example: `sort customer`","lastModifiedDate":"2024-03-06"},{"lineNumber":225,"author":{"gitId":"kailinteoo"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":226,"author":{"gitId":"kailinteoo"},"content":"Expected output:","lastModifiedDate":"2024-03-06"},{"lineNumber":227,"author":{"gitId":"rertyy"},"content":"","lastModifiedDate":"2024-04-05"},{"lineNumber":228,"author":{"gitId":"kailinteoo"},"content":"```","lastModifiedDate":"2024-03-06"},{"lineNumber":229,"author":{"gitId":"kailinteoo"},"content":"1. Jasper Tan","lastModifiedDate":"2024-03-06"},{"lineNumber":230,"author":{"gitId":"kailinteoo"},"content":"2. Tan Qing Yong ","lastModifiedDate":"2024-03-06"},{"lineNumber":231,"author":{"gitId":"kailinteoo"},"content":"[...]","lastModifiedDate":"2024-03-06"},{"lineNumber":232,"author":{"gitId":"kailinteoo"},"content":"```","lastModifiedDate":"2024-03-06"},{"lineNumber":233,"author":{"gitId":"kailinteoo"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":234,"author":{"gitId":"kailinteoo"},"content":"## Notification/ Reminder/ Deadline/ Progress Tracker","lastModifiedDate":"2024-03-06"},{"lineNumber":235,"author":{"gitId":"kailinteoo"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":236,"author":{"gitId":"kailinteoo"},"content":"### 1. Deadline approaching soon for an order (within a week)","lastModifiedDate":"2024-03-06"},{"lineNumber":237,"author":{"gitId":"rertyy"},"content":"","lastModifiedDate":"2024-04-05"},{"lineNumber":238,"author":{"gitId":"kailinteoo"},"content":"Send notification when order is due within a week.","lastModifiedDate":"2024-03-06"},{"lineNumber":239,"author":{"gitId":"kailinteoo"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":240,"author":{"gitId":"kailinteoo"},"content":"### 2. Progress Bar","lastModifiedDate":"2024-03-06"},{"lineNumber":241,"author":{"gitId":"rertyy"},"content":"","lastModifiedDate":"2024-04-05"},{"lineNumber":242,"author":{"gitId":"kailinteoo"},"content":"Show how many order left to be done.","lastModifiedDate":"2024-03-06"},{"lineNumber":243,"author":{"gitId":"kailinteoo"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":244,"author":{"gitId":"kailinteoo"},"content":"Example: `progress`","lastModifiedDate":"2024-03-06"},{"lineNumber":245,"author":{"gitId":"kailinteoo"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":246,"author":{"gitId":"kailinteoo"},"content":"Expected output:","lastModifiedDate":"2024-03-06"},{"lineNumber":247,"author":{"gitId":"rertyy"},"content":"","lastModifiedDate":"2024-04-05"},{"lineNumber":248,"author":{"gitId":"kailinteoo"},"content":"```","lastModifiedDate":"2024-03-06"},{"lineNumber":249,"author":{"gitId":"kailinteoo"},"content":"Left \u003cquantity\u003e ","lastModifiedDate":"2024-03-06"},{"lineNumber":250,"author":{"gitId":"kailinteoo"},"content":"Done \u003cquantity\u003e ","lastModifiedDate":"2024-03-06"},{"lineNumber":251,"author":{"gitId":"kailinteoo"},"content":"Pending \u003cQuantity\u003e\"","lastModifiedDate":"2024-03-06"},{"lineNumber":252,"author":{"gitId":"kailinteoo"},"content":"```","lastModifiedDate":"2024-03-06"},{"lineNumber":253,"author":{"gitId":"kailinteoo"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":254,"author":{"gitId":"kailinteoo"},"content":"## Usage Help","lastModifiedDate":"2024-03-06"},{"lineNumber":255,"author":{"gitId":"kailinteoo"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":256,"author":{"gitId":"kailinteoo"},"content":"### 1. Autocomplete","lastModifiedDate":"2024-03-06"},{"lineNumber":257,"author":{"gitId":"rertyy"},"content":"","lastModifiedDate":"2024-04-05"},{"lineNumber":258,"author":{"gitId":"kailinteoo"},"content":"Show all possible next commands based on currently keyed in values.","lastModifiedDate":"2024-03-06"},{"lineNumber":259,"author":{"gitId":"kailinteoo"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":260,"author":{"gitId":"kailinteoo"},"content":"Expected output:","lastModifiedDate":"2024-03-06"},{"lineNumber":261,"author":{"gitId":"rertyy"},"content":"","lastModifiedDate":"2024-04-05"},{"lineNumber":262,"author":{"gitId":"kailinteoo"},"content":"```","lastModifiedDate":"2024-03-06"},{"lineNumber":263,"author":{"gitId":"kailinteoo"},"content":"/modi(fy)","lastModifiedDate":"2024-03-06"},{"lineNumber":264,"author":{"gitId":"kailinteoo"},"content":"```","lastModifiedDate":"2024-03-06"},{"lineNumber":265,"author":{"gitId":"kailinteoo"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":266,"author":{"gitId":"kailinteoo"},"content":"### 2. User manual","lastModifiedDate":"2024-03-06"},{"lineNumber":267,"author":{"gitId":"rertyy"},"content":"","lastModifiedDate":"2024-04-05"},{"lineNumber":268,"author":{"gitId":"kailinteoo"},"content":"Shows a list of commands that can be used.","lastModifiedDate":"2024-03-06"},{"lineNumber":269,"author":{"gitId":"kailinteoo"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":270,"author":{"gitId":"kailinteoo"},"content":"Example: `help`","lastModifiedDate":"2024-03-06"},{"lineNumber":271,"author":{"gitId":"kailinteoo"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":272,"author":{"gitId":"kailinteoo"},"content":"Expected output:","lastModifiedDate":"2024-03-06"},{"lineNumber":273,"author":{"gitId":"rertyy"},"content":"","lastModifiedDate":"2024-04-05"},{"lineNumber":274,"author":{"gitId":"kailinteoo"},"content":"```","lastModifiedDate":"2024-03-06"},{"lineNumber":275,"author":{"gitId":"kailinteoo"},"content":"Commands list: ","lastModifiedDate":"2024-03-06"},{"lineNumber":276,"author":{"gitId":"kailinteoo"},"content":"1. add. Adds a new customer to the list. Example: \"add...\" ","lastModifiedDate":"2024-03-06"},{"lineNumber":277,"author":{"gitId":"kailinteoo"},"content":"[...]","lastModifiedDate":"2024-03-06"},{"lineNumber":278,"author":{"gitId":"kailinteoo"},"content":"```","lastModifiedDate":"2024-03-06"},{"lineNumber":279,"author":{"gitId":"kailinteoo"},"content":"","lastModifiedDate":"2024-03-06"}],"authorContributionMap":{"kailinteoo":230,"rertyy":43,"-":6}},{"path":"build.gradle","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2016-08-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2017-12-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2017-12-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2022-06-17"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2016-12-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    id \u0027jacoco\u0027","lastModifiedDate":"2020-08-07"},{"lineNumber":7,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-29"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-29"},{"lineNumber":9,"author":{"gitId":"-"},"content":"mainClassName \u003d \u0027seedu.address.Main\u0027","lastModifiedDate":"2019-02-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"sourceCompatibility \u003d JavaVersion.VERSION_11","lastModifiedDate":"2019-02-20"},{"lineNumber":12,"author":{"gitId":"-"},"content":"targetCompatibility \u003d JavaVersion.VERSION_11","lastModifiedDate":"2019-02-20"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    maven { url \u0027https://oss.sonatype.org/content/repositories/snapshots/\u0027 }","lastModifiedDate":"2018-04-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"checkstyle {","lastModifiedDate":"2016-10-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2022-04-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-10-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":23,"author":{"gitId":"rertyy"},"content":"run {","lastModifiedDate":"2024-03-26"},{"lineNumber":24,"author":{"gitId":"rertyy"},"content":"    enableAssertions \u003d true","lastModifiedDate":"2024-03-26"},{"lineNumber":25,"author":{"gitId":"rertyy"},"content":"}","lastModifiedDate":"2024-03-26"},{"lineNumber":26,"author":{"gitId":"rertyy"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":27,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2018-03-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2018-03-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    finalizedBy jacocoTestReport","lastModifiedDate":"2020-08-07"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-08-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-08-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"task coverage(type: JacocoReport) {","lastModifiedDate":"2020-08-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    sourceDirectories.from files(sourceSets.main.allSource.srcDirs)","lastModifiedDate":"2020-08-07"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    classDirectories.from files(sourceSets.main.output)","lastModifiedDate":"2020-08-07"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    executionData.from files(jacocoTestReport.executionData)","lastModifiedDate":"2020-08-07"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    afterEvaluate {","lastModifiedDate":"2020-08-07"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        classDirectories.from files(classDirectories.files.collect {","lastModifiedDate":"2020-08-07"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            fileTree(dir: it, exclude: [\u0027**/*.jar\u0027])","lastModifiedDate":"2020-08-07"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        })","lastModifiedDate":"2020-08-07"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-08-07"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    reports {","lastModifiedDate":"2020-08-07"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        html.required \u003d true","lastModifiedDate":"2022-06-17"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        xml.required \u003d true","lastModifiedDate":"2022-06-17"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-08-07"},{"lineNumber":45,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-03-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    String jUnitVersion \u003d \u00275.4.0\u0027","lastModifiedDate":"2019-02-10"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    String javaFxVersion \u003d \u002717.0.7\u0027","lastModifiedDate":"2023-07-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-05"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    implementation group: \u0027com.fasterxml.jackson.core\u0027, name: \u0027jackson-databind\u0027, version: \u00272.7.0\u0027","lastModifiedDate":"2018-03-29"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    implementation group: \u0027com.fasterxml.jackson.datatype\u0027, name: \u0027jackson-datatype-jsr310\u0027, version: \u00272.7.4\u0027","lastModifiedDate":"2018-03-29"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-05"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: jUnitVersion","lastModifiedDate":"2018-03-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: jUnitVersion","lastModifiedDate":"2018-03-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-29"},{"lineNumber":72,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2016-08-29"},{"lineNumber":73,"author":{"gitId":"Jaspertzx"},"content":"    archiveFileName \u003d \u0027bookkeeper.jar\u0027","lastModifiedDate":"2024-03-21"},{"lineNumber":74,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-29"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"defaultTasks \u0027clean\u0027, \u0027test\u0027","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"rertyy":4,"Jaspertzx":1,"-":71}},{"path":"config/checkstyle/checkstyle.xml","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"\u003c!DOCTYPE module PUBLIC","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    \"-//Checkstyle//DTD Checkstyle Configuration 1.3//EN\"","lastModifiedDate":"2019-03-06"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    \"https://checkstyle.org/dtds/configuration_1_3.dtd\"\u003e","lastModifiedDate":"2019-03-06"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c!--","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    This configuration file enforces rules for the coding standard at","lastModifiedDate":"2022-05-29"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    https://se-education.org/guides/conventions/java/intermediate.html","lastModifiedDate":"2022-05-29"},{"lineNumber":9,"author":{"gitId":"-"},"content":"--\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"\u003cmodule name\u003d\"Checker\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"  \u003cmodule name\u003d\"FileTabCharacter\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    \u003c!-- Checks that there are no tab characters in the file. --\u003e","lastModifiedDate":"2016-10-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"  \u003c/module\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"  \u003cmodule name\u003d\"NewlineAtEndOfFile\"\u003e","lastModifiedDate":"2016-12-10"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    \u003c!-- Accept LF, CR or CRLF to accomodate devs who prefer different line endings --\u003e","lastModifiedDate":"2016-12-10"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    \u003cproperty name\u003d\"lineSeparator\" value\u003d\"lf_cr_crlf\"/\u003e","lastModifiedDate":"2016-12-10"},{"lineNumber":20,"author":{"gitId":"-"},"content":"  \u003c/module\u003e","lastModifiedDate":"2016-12-10"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"  \u003cmodule name\u003d\"RegexpSingleline\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    \u003c!-- Checks that FIXME is not used in comments.  TODO is preferred. --\u003e","lastModifiedDate":"2016-10-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    \u003cproperty name\u003d\"format\" value\u003d\"((//.*)|(\\*.*))FIXME\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    \u003cproperty name\u003d\"message\" value\u003d\u0027TODO is preferred to FIXME.\"\u0027 /\u003e","lastModifiedDate":"2016-10-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"  \u003c/module\u003e","lastModifiedDate":"2016-10-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"  \u003cmodule name\u003d\"SuppressionFilter\"\u003e","lastModifiedDate":"2017-08-20"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    \u003cproperty name\u003d\"file\" value\u003d\"${config_loc}/suppressions.xml\"/\u003e","lastModifiedDate":"2019-02-20"},{"lineNumber":30,"author":{"gitId":"-"},"content":"  \u003c/module\u003e","lastModifiedDate":"2017-08-20"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-20"},{"lineNumber":32,"author":{"gitId":"-"},"content":"  \u003cmodule name\u003d\"LineLength\"\u003e","lastModifiedDate":"2020-05-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    \u003c!-- Checks if a line is too long. --\u003e","lastModifiedDate":"2020-05-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    \u003cproperty name\u003d\"max\" value\u003d\"120\"/\u003e","lastModifiedDate":"2020-05-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"  \u003c/module\u003e","lastModifiedDate":"2020-05-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-20"},{"lineNumber":37,"author":{"gitId":"-"},"content":"  \u003c!-- All Java AST specific tests live under TreeWalker module. --\u003e","lastModifiedDate":"2017-08-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"  \u003cmodule name\u003d\"TreeWalker\"\u003e","lastModifiedDate":"2017-08-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    \u003c!-- Required to allow exceptions in code style --\u003e","lastModifiedDate":"2016-10-12"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"SuppressionCommentFilter\"\u003e","lastModifiedDate":"2016-10-12"},{"lineNumber":42,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"offCommentFormat\" value\u003d\"CHECKSTYLE.OFF\\: ([\\w\\|]+)\"/\u003e","lastModifiedDate":"2016-10-12"},{"lineNumber":43,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"onCommentFormat\" value\u003d\"CHECKSTYLE.ON\\: ([\\w\\|]+)\"/\u003e","lastModifiedDate":"2016-10-12"},{"lineNumber":44,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"checkFormat\" value\u003d\"$1\"/\u003e","lastModifiedDate":"2016-10-12"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    \u003c/module\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    \u003c!--","lastModifiedDate":"2016-10-12"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    IMPORT CHECKS","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    --\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    \u003c!-- Checks the ordering of import statements follow the rules that the default Eclipse formatter uses.","lastModifiedDate":"2017-01-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    The order rule \"STATIC###STANDARD_JAVA_PACKAGE###SPECIAL_IMPORTS###THIRD_PARTY_PACKAGE\" consists of:","lastModifiedDate":"2017-01-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"      1. STATIC: static imports","lastModifiedDate":"2017-01-19"},{"lineNumber":54,"author":{"gitId":"-"},"content":"      2. STANDARD_JAVA_PACKAGE: standard java/javax imports","lastModifiedDate":"2017-01-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"      3. SPECIAL_IMPORTS: defined as org imports","lastModifiedDate":"2017-01-19"},{"lineNumber":56,"author":{"gitId":"-"},"content":"      4. THIRD_PARTY_PACKAGE: defined as com imports","lastModifiedDate":"2017-01-19"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    --\u003e","lastModifiedDate":"2017-01-19"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"CustomImportOrder\"\u003e","lastModifiedDate":"2017-01-19"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        \u003cproperty name\u003d\"customImportOrderRules\"","lastModifiedDate":"2017-01-19"},{"lineNumber":60,"author":{"gitId":"-"},"content":"            value\u003d\"STATIC###STANDARD_JAVA_PACKAGE###SPECIAL_IMPORTS###THIRD_PARTY_PACKAGE\"/\u003e","lastModifiedDate":"2017-01-19"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        \u003cproperty name\u003d\"specialImportsRegExp\" value\u003d\"^org\\.\"/\u003e","lastModifiedDate":"2017-01-19"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        \u003cproperty name\u003d\"thirdPartyPackageRegExp\" value\u003d\"^com\\.\"/\u003e","lastModifiedDate":"2017-01-19"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        \u003cproperty name\u003d\"sortImportsInGroupAlphabetically\" value\u003d\"true\"/\u003e","lastModifiedDate":"2017-01-19"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    \u003c/module\u003e","lastModifiedDate":"2017-01-19"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    \u003c!-- Checks for redundant import statements.","lastModifiedDate":"2017-01-19"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    An import statement is redundant if:","lastModifiedDate":"2017-01-19"},{"lineNumber":68,"author":{"gitId":"-"},"content":"      * It is a duplicate of another import. This is, when a class is imported more than once.","lastModifiedDate":"2017-01-19"},{"lineNumber":69,"author":{"gitId":"-"},"content":"      * The class non-statically imported is from the java.lang package, e.g. importing java.lang.String.","lastModifiedDate":"2017-01-19"},{"lineNumber":70,"author":{"gitId":"-"},"content":"      * The class non-statically imported is from the same package as the current package.","lastModifiedDate":"2017-01-19"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    --\u003e","lastModifiedDate":"2017-01-19"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"RedundantImport\"/\u003e","lastModifiedDate":"2017-01-19"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    \u003c!-- Checks for unused import statements.","lastModifiedDate":"2017-01-19"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    An import statement is unused if:","lastModifiedDate":"2017-01-19"},{"lineNumber":76,"author":{"gitId":"-"},"content":"      It\u0027s not referenced in the file.","lastModifiedDate":"2017-01-19"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    --\u003e","lastModifiedDate":"2017-01-19"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"UnusedImports\"/\u003e","lastModifiedDate":"2017-01-19"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"AvoidStarImport\"/\u003e","lastModifiedDate":"2018-01-25"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-18"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    \u003c!--","lastModifiedDate":"2016-08-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    NAMING CHECKS","lastModifiedDate":"2016-08-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    --\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    \u003c!-- Validate abbreviations (consecutive capital letters) length in identifier name --\u003e","lastModifiedDate":"2017-04-07"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"AbbreviationAsWordInName\"\u003e","lastModifiedDate":"2017-04-07"},{"lineNumber":88,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"ignoreFinal\" value\u003d\"false\"/\u003e","lastModifiedDate":"2017-04-07"},{"lineNumber":89,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"allowedAbbreviationLength\" value\u003d\"1\"/\u003e","lastModifiedDate":"2017-04-07"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    \u003c/module\u003e","lastModifiedDate":"2017-04-07"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-07"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"PackageName\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":93,"author":{"gitId":"-"},"content":"      \u003c!-- Validates identifiers for package names against the supplied expression. --\u003e","lastModifiedDate":"2016-10-12"},{"lineNumber":94,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"format\" value\u003d\"^[a-z]+(\\.[a-z][a-z0-9]{1,})*$\"/\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":95,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"severity\" value\u003d\"warning\"/\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    \u003c/module\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"TypeName\"\u003e","lastModifiedDate":"2017-01-29"},{"lineNumber":99,"author":{"gitId":"-"},"content":"      \u003c!-- Validates static, final fields against the expression \"^[A-Z][a-zA-Z0-9]*$\". --\u003e","lastModifiedDate":"2016-10-12"},{"lineNumber":100,"author":{"gitId":"-"},"content":"      \u003cmetadata name\u003d\"altname\" value\u003d\"TypeName\"/\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"severity\" value\u003d\"warning\"/\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    \u003c/module\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"ConstantName\"\u003e","lastModifiedDate":"2017-01-29"},{"lineNumber":105,"author":{"gitId":"-"},"content":"      \u003c!-- Validates non-private, static, final fields against the expression \"^[A-Z][A-Z0-9]*(_[A-Z0-9]+)*$\". --\u003e","lastModifiedDate":"2016-10-12"},{"lineNumber":106,"author":{"gitId":"-"},"content":"      \u003cmetadata name\u003d\"altname\" value\u003d\"ConstantName\"/\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"applyToPrivate\" value\u003d\"false\"/\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"      \u003cmessage key\u003d\"name.invalidPattern\"","lastModifiedDate":"2016-08-08"},{"lineNumber":109,"author":{"gitId":"-"},"content":"               value\u003d\"Variable \u0027\u0027{0}\u0027\u0027 should be in ALL_CAPS (if it is a constant) or be private (otherwise).\"/\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":110,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"severity\" value\u003d\"warning\"/\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    \u003c/module\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"StaticVariableName\"\u003e","lastModifiedDate":"2017-01-29"},{"lineNumber":114,"author":{"gitId":"-"},"content":"      \u003c!-- Validates static, non-final fields against the supplied expression. --\u003e","lastModifiedDate":"2016-10-12"},{"lineNumber":115,"author":{"gitId":"-"},"content":"      \u003cmetadata name\u003d\"altname\" value\u003d\"StaticVariableName\"/\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"format\" value\u003d\"^[a-z][a-zA-Z0-9]*_?$\"/\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":117,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"severity\" value\u003d\"warning\"/\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    \u003c/module\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"MemberName\"\u003e","lastModifiedDate":"2017-01-29"},{"lineNumber":121,"author":{"gitId":"-"},"content":"      \u003c!-- Validates non-static members against the supplied expression. --\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"      \u003cmetadata name\u003d\"altname\" value\u003d\"MemberName\"/\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"format\" value\u003d\"^[a-z][a-zA-Z0-9]*$\"/\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"severity\" value\u003d\"warning\"/\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    \u003c/module\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"MethodName\"\u003e","lastModifiedDate":"2017-01-29"},{"lineNumber":128,"author":{"gitId":"-"},"content":"      \u003c!-- Validates identifiers for method names against the supplied expression. --\u003e","lastModifiedDate":"2016-10-12"},{"lineNumber":129,"author":{"gitId":"-"},"content":"      \u003cmetadata name\u003d\"altname\" value\u003d\"MethodName\"/\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":130,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"format\" value\u003d\"^[a-z][a-zA-Z0-9]*(_[a-z][a-zA-Z0-9]+){0,2}$\"/\u003e","lastModifiedDate":"2017-04-03"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    \u003c/module\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"ParameterName\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":134,"author":{"gitId":"-"},"content":"      \u003c!-- Validates identifiers for method parameters against the expression \"^[a-z][a-zA-Z0-9]*$\". --\u003e","lastModifiedDate":"2016-10-12"},{"lineNumber":135,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"severity\" value\u003d\"warning\"/\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    \u003c/module\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"LocalFinalVariableName\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":139,"author":{"gitId":"-"},"content":"      \u003c!-- Validates identifiers for local final variables against the expression \"^[a-z][a-zA-Z0-9]*$\". --\u003e","lastModifiedDate":"2016-10-12"},{"lineNumber":140,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"severity\" value\u003d\"warning\"/\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    \u003c/module\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"LocalVariableName\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":144,"author":{"gitId":"-"},"content":"      \u003c!-- Validates identifiers for local variables against the expression \"^[a-z][a-zA-Z0-9]*$\". --\u003e","lastModifiedDate":"2016-10-12"},{"lineNumber":145,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"severity\" value\u003d\"warning\"/\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    \u003c/module\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    \u003c!--","lastModifiedDate":"2016-08-08"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    LENGTH and CODING CHECKS","lastModifiedDate":"2016-08-08"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    --\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    \u003c!-- Checks that array type declarations follow Java Style","lastModifiedDate":"2017-04-01"},{"lineNumber":154,"author":{"gitId":"-"},"content":"      Java style: public static void main(String[] args) // Allowed","lastModifiedDate":"2017-04-01"},{"lineNumber":155,"author":{"gitId":"-"},"content":"      C style:    public static void main(String args[]) // Not allowed","lastModifiedDate":"2017-04-01"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    --\u003e","lastModifiedDate":"2017-04-01"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"ArrayTypeStyle\"/\u003e","lastModifiedDate":"2017-04-01"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    \u003c!-- Checks if a catch block is empty and does not contain any comments. --\u003e","lastModifiedDate":"2017-04-03"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"EmptyCatchBlock\"/\u003e","lastModifiedDate":"2017-04-03"},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-03"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"LeftCurly\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":163,"author":{"gitId":"-"},"content":"      \u003c!-- Checks for placement of the left curly brace (\u0027{\u0027). --\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":164,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"severity\" value\u003d\"warning\"/\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    \u003c/module\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":167,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"RightCurly\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":168,"author":{"gitId":"-"},"content":"      \u003c!-- Checks right curlies on CATCH, ELSE, and TRY blocks are on","lastModifiedDate":"2016-08-08"},{"lineNumber":169,"author":{"gitId":"-"},"content":"      the same line. e.g., the following example is fine:","lastModifiedDate":"2016-08-08"},{"lineNumber":170,"author":{"gitId":"-"},"content":"      \u003cpre\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        if {","lastModifiedDate":"2016-08-08"},{"lineNumber":172,"author":{"gitId":"-"},"content":"          ...","lastModifiedDate":"2016-08-08"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        } else","lastModifiedDate":"2016-08-08"},{"lineNumber":174,"author":{"gitId":"-"},"content":"      \u003c/pre\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":175,"author":{"gitId":"-"},"content":"      --\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":176,"author":{"gitId":"-"},"content":"      \u003c!-- This next example is not fine:","lastModifiedDate":"2016-08-08"},{"lineNumber":177,"author":{"gitId":"-"},"content":"      \u003cpre\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        if {","lastModifiedDate":"2016-08-08"},{"lineNumber":179,"author":{"gitId":"-"},"content":"          ...","lastModifiedDate":"2016-08-08"},{"lineNumber":180,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        else","lastModifiedDate":"2016-08-08"},{"lineNumber":182,"author":{"gitId":"-"},"content":"      \u003c/pre\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":183,"author":{"gitId":"-"},"content":"      --\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":184,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"severity\" value\u003d\"warning\"/\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":185,"author":{"gitId":"-"},"content":"    \u003c/module\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":187,"author":{"gitId":"-"},"content":"    \u003c!-- Checks for braces around loop blocks --\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":188,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"NeedBraces\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":189,"author":{"gitId":"-"},"content":"      \u003c!--","lastModifiedDate":"2016-08-08"},{"lineNumber":190,"author":{"gitId":"-"},"content":"      if (true) return 1; // Not allowed","lastModifiedDate":"2017-04-05"},{"lineNumber":191,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":192,"author":{"gitId":"-"},"content":"      if (true) { return 1; } // Not allowed","lastModifiedDate":"2016-10-12"},{"lineNumber":193,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":194,"author":{"gitId":"-"},"content":"      else if {","lastModifiedDate":"2016-08-08"},{"lineNumber":195,"author":{"gitId":"-"},"content":"        return 1; // else if should always be multi line","lastModifiedDate":"2016-08-08"},{"lineNumber":196,"author":{"gitId":"-"},"content":"      }","lastModifiedDate":"2016-08-08"},{"lineNumber":197,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":198,"author":{"gitId":"-"},"content":"      if (true)","lastModifiedDate":"2016-08-08"},{"lineNumber":199,"author":{"gitId":"-"},"content":"        return 1; // Not allowed","lastModifiedDate":"2016-08-08"},{"lineNumber":200,"author":{"gitId":"-"},"content":"      --\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":201,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"allowEmptyLoopBody\" value\u003d\"true\"/\u003e","lastModifiedDate":"2016-10-12"},{"lineNumber":202,"author":{"gitId":"-"},"content":"    \u003c/module\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":203,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":204,"author":{"gitId":"-"},"content":"    \u003c!-- Checks that each variable declaration is in its own statement and on its own line. --\u003e","lastModifiedDate":"2017-09-21"},{"lineNumber":205,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"MultipleVariableDeclarations\"/\u003e","lastModifiedDate":"2017-09-21"},{"lineNumber":206,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-21"},{"lineNumber":207,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"OneStatementPerLine\"/\u003e","lastModifiedDate":"2017-09-17"},{"lineNumber":208,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-17"},{"lineNumber":209,"author":{"gitId":"-"},"content":"    \u003c!-- Checks that long constants are defined with an upper ell.--\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":210,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"UpperEll\" /\u003e","lastModifiedDate":"2018-01-25"},{"lineNumber":211,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":212,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"FallThrough\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":213,"author":{"gitId":"-"},"content":"      \u003c!-- Warn about falling through to the next case statement.  Similar to","lastModifiedDate":"2016-08-08"},{"lineNumber":214,"author":{"gitId":"-"},"content":"      javac -Xlint:fallthrough, but the check is suppressed if a single-line comment","lastModifiedDate":"2016-08-08"},{"lineNumber":215,"author":{"gitId":"-"},"content":"      on the last non-blank line preceding the fallen-into case contains \u0027fall through\u0027 (or","lastModifiedDate":"2016-08-08"},{"lineNumber":216,"author":{"gitId":"-"},"content":"      some other variants which we don\u0027t publicized to promote consistency).","lastModifiedDate":"2016-08-08"},{"lineNumber":217,"author":{"gitId":"-"},"content":"      --\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":218,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"reliefPattern\"","lastModifiedDate":"2016-08-08"},{"lineNumber":219,"author":{"gitId":"-"},"content":"       value\u003d\"fall through|Fall through|fallthru|Fallthru|falls through|Falls through|fallthrough|Fallthrough|No break|NO break|no break|continue on\"/\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":220,"author":{"gitId":"-"},"content":"    \u003c/module\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":221,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":222,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"MissingSwitchDefault\"/\u003e","lastModifiedDate":"2017-04-07"},{"lineNumber":223,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":224,"author":{"gitId":"-"},"content":"    \u003c!-- Checks that Class variables should never be declared public. --\u003e","lastModifiedDate":"2017-04-13"},{"lineNumber":225,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"VisibilityModifier\"\u003e","lastModifiedDate":"2017-04-13"},{"lineNumber":226,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"protectedAllowed\" value\u003d\"true\"/\u003e","lastModifiedDate":"2017-04-13"},{"lineNumber":227,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"allowPublicFinalFields\" value\u003d\"true\"/\u003e","lastModifiedDate":"2017-04-13"},{"lineNumber":228,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"ignoreAnnotationCanonicalNames\" value\u003d\"RegisterExtension, TempDir\"/\u003e","lastModifiedDate":"2019-02-24"},{"lineNumber":229,"author":{"gitId":"-"},"content":"    \u003c/module\u003e","lastModifiedDate":"2017-04-13"},{"lineNumber":230,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-13"},{"lineNumber":231,"author":{"gitId":"-"},"content":"    \u003c!--","lastModifiedDate":"2016-08-08"},{"lineNumber":232,"author":{"gitId":"-"},"content":"    ORDER CHECKS","lastModifiedDate":"2017-01-16"},{"lineNumber":233,"author":{"gitId":"-"},"content":"    --\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":234,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":235,"author":{"gitId":"-"},"content":"    \u003c!-- Checks that the order of at-clauses follows the tagOrder default property value order.","lastModifiedDate":"2017-04-07"},{"lineNumber":236,"author":{"gitId":"-"},"content":"         @author, @version, @param, @return, @throws, @exception, @see, @since, @serial, @serialField, @serialData, @deprecated","lastModifiedDate":"2017-04-07"},{"lineNumber":237,"author":{"gitId":"-"},"content":"    --\u003e","lastModifiedDate":"2017-04-07"},{"lineNumber":238,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"AtclauseOrder\"/\u003e","lastModifiedDate":"2017-04-07"},{"lineNumber":239,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-07"},{"lineNumber":240,"author":{"gitId":"-"},"content":"    \u003c!-- Checks if the Class and Interface declarations is organized in this order","lastModifiedDate":"2017-04-01"},{"lineNumber":241,"author":{"gitId":"-"},"content":"      1. Class (static) variables. Order: public, protected, package level (no access modifier), private.","lastModifiedDate":"2017-04-01"},{"lineNumber":242,"author":{"gitId":"-"},"content":"      2. Instance variables. Order: public, protected, package level (no access modifier), private.","lastModifiedDate":"2017-04-01"},{"lineNumber":243,"author":{"gitId":"-"},"content":"      3. Constructors","lastModifiedDate":"2017-04-01"},{"lineNumber":244,"author":{"gitId":"-"},"content":"      4. Methods","lastModifiedDate":"2017-04-01"},{"lineNumber":245,"author":{"gitId":"-"},"content":"    --\u003e","lastModifiedDate":"2017-04-01"},{"lineNumber":246,"author":{"gitId":"-"},"content":"    \u003cmodule name \u003d\"DeclarationOrder\"/\u003e","lastModifiedDate":"2017-04-01"},{"lineNumber":247,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":248,"author":{"gitId":"-"},"content":"    \u003c!-- Checks that default is after all cases in a switch statement --\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":249,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"DefaultComesLast\"/\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":250,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-29"},{"lineNumber":251,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"ModifierOrder\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":252,"author":{"gitId":"-"},"content":"      \u003c!-- Warn if modifier order is inconsistent with JLS3 8.1.1, 8.3.1, and","lastModifiedDate":"2016-08-08"},{"lineNumber":253,"author":{"gitId":"-"},"content":"           8.4.3.  The prescribed order is:","lastModifiedDate":"2016-08-08"},{"lineNumber":254,"author":{"gitId":"-"},"content":"           public, protected, private, abstract, static, final, transient, volatile,","lastModifiedDate":"2016-08-08"},{"lineNumber":255,"author":{"gitId":"-"},"content":"           synchronized, native, strictfp","lastModifiedDate":"2016-08-08"},{"lineNumber":256,"author":{"gitId":"-"},"content":"        --\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":257,"author":{"gitId":"-"},"content":"    \u003c/module\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":258,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":259,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"OverloadMethodsDeclarationOrder\"/\u003e","lastModifiedDate":"2017-01-16"},{"lineNumber":260,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":261,"author":{"gitId":"-"},"content":"    \u003c!--","lastModifiedDate":"2016-08-08"},{"lineNumber":262,"author":{"gitId":"-"},"content":"    WHITESPACE CHECKS","lastModifiedDate":"2016-08-08"},{"lineNumber":263,"author":{"gitId":"-"},"content":"    --\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":264,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":265,"author":{"gitId":"-"},"content":"    \u003c!-- Checks that comments are indented relative to their position in the code --\u003e","lastModifiedDate":"2017-04-03"},{"lineNumber":266,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"CommentsIndentation\"/\u003e","lastModifiedDate":"2017-04-03"},{"lineNumber":267,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-03"},{"lineNumber":268,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"WhitespaceAround\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":269,"author":{"gitId":"-"},"content":"      \u003c!-- Checks that various tokens are surrounded by whitespace.","lastModifiedDate":"2016-08-08"},{"lineNumber":270,"author":{"gitId":"-"},"content":"           This includes most binary operators and keywords followed","lastModifiedDate":"2016-08-08"},{"lineNumber":271,"author":{"gitId":"-"},"content":"           by regular or curly braces.","lastModifiedDate":"2016-08-08"},{"lineNumber":272,"author":{"gitId":"-"},"content":"      --\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":273,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"tokens\" value\u003d\"ASSIGN, BAND, BAND_ASSIGN, BOR,","lastModifiedDate":"2016-08-08"},{"lineNumber":274,"author":{"gitId":"-"},"content":"        BOR_ASSIGN, BSR, BSR_ASSIGN, BXOR, BXOR_ASSIGN, COLON, DIV, DIV_ASSIGN,","lastModifiedDate":"2016-08-08"},{"lineNumber":275,"author":{"gitId":"-"},"content":"        EQUAL, GE, GT, LAND, LCURLY, LE, LITERAL_CATCH, LITERAL_DO, LITERAL_ELSE,","lastModifiedDate":"2016-12-10"},{"lineNumber":276,"author":{"gitId":"-"},"content":"        LITERAL_FINALLY, LITERAL_FOR, LITERAL_IF, LITERAL_RETURN,","lastModifiedDate":"2016-08-08"},{"lineNumber":277,"author":{"gitId":"-"},"content":"        LITERAL_SYNCHRONIZED, LITERAL_TRY, LITERAL_WHILE, LOR, LT, MINUS,","lastModifiedDate":"2016-08-08"},{"lineNumber":278,"author":{"gitId":"-"},"content":"        MINUS_ASSIGN, MOD, MOD_ASSIGN, NOT_EQUAL, PLUS, PLUS_ASSIGN, QUESTION,","lastModifiedDate":"2016-08-08"},{"lineNumber":279,"author":{"gitId":"-"},"content":"        RCURLY, SL, SLIST, SL_ASSIGN, SR_ASSIGN, STAR, STAR_ASSIGN\"/\u003e","lastModifiedDate":"2016-12-10"},{"lineNumber":280,"author":{"gitId":"-"},"content":"      \u003c!-- Allow empty constructors e.g. MyClass() {} --\u003e","lastModifiedDate":"2016-12-10"},{"lineNumber":281,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"allowEmptyConstructors\" value\u003d\"true\" /\u003e","lastModifiedDate":"2016-12-10"},{"lineNumber":282,"author":{"gitId":"-"},"content":"      \u003c!-- Allow empty methods e.g. void func() {} --\u003e","lastModifiedDate":"2016-12-10"},{"lineNumber":283,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"allowEmptyMethods\" value\u003d\"true\" /\u003e","lastModifiedDate":"2016-12-10"},{"lineNumber":284,"author":{"gitId":"-"},"content":"      \u003c!-- Allow empty types e.g. class Foo {}, enum Foo {} --\u003e","lastModifiedDate":"2016-12-10"},{"lineNumber":285,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"allowEmptyTypes\" value\u003d\"true\" /\u003e","lastModifiedDate":"2016-12-10"},{"lineNumber":286,"author":{"gitId":"-"},"content":"      \u003c!-- Allow empty loops e.g. for (int i \u003d 1; i \u003e 1; i++) {} --\u003e","lastModifiedDate":"2016-12-10"},{"lineNumber":287,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"allowEmptyLoops\" value\u003d\"true\" /\u003e","lastModifiedDate":"2016-12-10"},{"lineNumber":288,"author":{"gitId":"-"},"content":"      \u003c!-- Allow empty lambdas e.g. () -\u003e {} --\u003e","lastModifiedDate":"2016-12-10"},{"lineNumber":289,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"allowEmptyLambdas\" value\u003d\"true\" /\u003e","lastModifiedDate":"2016-12-10"},{"lineNumber":290,"author":{"gitId":"-"},"content":"    \u003c/module\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":291,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":292,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"WhitespaceAfter\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":293,"author":{"gitId":"-"},"content":"      \u003c!-- Checks that commas, semicolons and typecasts are followed by whitespace. --\u003e","lastModifiedDate":"2016-10-12"},{"lineNumber":294,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"tokens\" value\u003d\"COMMA, SEMI, TYPECAST\"/\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":295,"author":{"gitId":"-"},"content":"    \u003c/module\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":296,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":297,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"NoWhitespaceAfter\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":298,"author":{"gitId":"-"},"content":"      \u003c!-- Checks that there is no whitespace after various unary operators. Linebreaks are allowed. --\u003e","lastModifiedDate":"2016-10-12"},{"lineNumber":299,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"tokens\" value\u003d\"BNOT, DEC, DOT, INC, LNOT, UNARY_MINUS,","lastModifiedDate":"2016-08-08"},{"lineNumber":300,"author":{"gitId":"-"},"content":"        UNARY_PLUS\"/\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":301,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"allowLineBreaks\" value\u003d\"true\"/\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":302,"author":{"gitId":"-"},"content":"    \u003c/module\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":303,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":304,"author":{"gitId":"-"},"content":"    \u003c!-- No trailing whitespace --\u003e","lastModifiedDate":"2016-12-08"},{"lineNumber":305,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"Regexp\"\u003e","lastModifiedDate":"2016-12-08"},{"lineNumber":306,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"format\" value\u003d\"[ \\t]+$\"/\u003e","lastModifiedDate":"2016-12-08"},{"lineNumber":307,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"illegalPattern\" value\u003d\"true\"/\u003e","lastModifiedDate":"2016-12-08"},{"lineNumber":308,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"message\" value\u003d\"Trailing whitespace\"/\u003e","lastModifiedDate":"2016-12-08"},{"lineNumber":309,"author":{"gitId":"-"},"content":"    \u003c/module\u003e","lastModifiedDate":"2016-12-08"},{"lineNumber":310,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-08"},{"lineNumber":311,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"OperatorWrap\"\u003e","lastModifiedDate":"2017-05-22"},{"lineNumber":312,"author":{"gitId":"-"},"content":"      \u003c!-- Checks that the non-assignment type operator is at the next line in a line wrap.","lastModifiedDate":"2017-05-22"},{"lineNumber":313,"author":{"gitId":"-"},"content":"           This includes \"?\", \":\", \"\u003d\u003d\", \"!\u003d\", \"/\", \"+\", \"-\", \"*\", \"%\", \"\u003e\u003e\", \"\u003e\u003e\u003e\",","lastModifiedDate":"2017-05-22"},{"lineNumber":314,"author":{"gitId":"-"},"content":"           \"\u003e\u003d\", \"\u003e\", \"\u003c\u003c\", \"\u003c\u003d\", \"\u003c\", \"^\", \"|\", \"||\", \"\u0026\", \"\u0026\u0026\", \"instanceof\",","lastModifiedDate":"2017-05-22"},{"lineNumber":315,"author":{"gitId":"-"},"content":"           \"\u0026\" when used in a generic upper or lower bounds constraints,","lastModifiedDate":"2017-05-22"},{"lineNumber":316,"author":{"gitId":"-"},"content":"             e.g. \u003cT extends Foo \u0026 Bar\u003e","lastModifiedDate":"2017-05-22"},{"lineNumber":317,"author":{"gitId":"-"},"content":"           \"::\" when used as a reference to a method or constructor without arguments.","lastModifiedDate":"2017-05-22"},{"lineNumber":318,"author":{"gitId":"-"},"content":"             e.g. String::compareToIgnoreCase","lastModifiedDate":"2017-05-22"},{"lineNumber":319,"author":{"gitId":"-"},"content":"      --\u003e","lastModifiedDate":"2017-05-22"},{"lineNumber":320,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"tokens\" value\u003d\"QUESTION, COLON, EQUAL, NOT_EQUAL, DIV, PLUS, MINUS, STAR, MOD, SR, BSR,","lastModifiedDate":"2017-05-22"},{"lineNumber":321,"author":{"gitId":"-"},"content":"        GE, GT, SL, LE, LT, BXOR, BOR, LOR, BAND, LAND, LITERAL_INSTANCEOF, TYPE_EXTENSION_AND, METHOD_REF\"/\u003e","lastModifiedDate":"2017-05-22"},{"lineNumber":322,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"option\" value\u003d\"nl\"/\u003e","lastModifiedDate":"2017-05-22"},{"lineNumber":323,"author":{"gitId":"-"},"content":"    \u003c/module\u003e","lastModifiedDate":"2017-05-22"},{"lineNumber":324,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"OperatorWrap\"\u003e","lastModifiedDate":"2017-05-22"},{"lineNumber":325,"author":{"gitId":"-"},"content":"      \u003c!-- Checks that the assignment type operator is at the previous end of line in a line wrap.","lastModifiedDate":"2017-05-22"},{"lineNumber":326,"author":{"gitId":"-"},"content":"           This includes \"\u003d\", \"/\u003d\", \"+\u003d\", \"-\u003d\", \"*\u003d\", \"%\u003d\", \"\u003e\u003e\u003d\", \"\u003e\u003e\u003e\u003d\", \"\u003c\u003c\u003d\", \"^\u003d\", \"\u0026\u003d\".","lastModifiedDate":"2017-05-22"},{"lineNumber":327,"author":{"gitId":"-"},"content":"      --\u003e","lastModifiedDate":"2017-05-22"},{"lineNumber":328,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"tokens\" value\u003d\"ASSIGN, DIV_ASSIGN, PLUS_ASSIGN, MINUS_ASSIGN, STAR_ASSIGN, MOD_ASSIGN,","lastModifiedDate":"2017-05-22"},{"lineNumber":329,"author":{"gitId":"-"},"content":"        SR_ASSIGN, BSR_ASSIGN, SL_ASSIGN, BXOR_ASSIGN, BOR_ASSIGN, BAND_ASSIGN\"/\u003e","lastModifiedDate":"2017-05-22"},{"lineNumber":330,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"option\" value\u003d\"eol\"/\u003e","lastModifiedDate":"2017-05-22"},{"lineNumber":331,"author":{"gitId":"-"},"content":"    \u003c/module\u003e","lastModifiedDate":"2017-05-22"},{"lineNumber":332,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":333,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"SeparatorWrap\"\u003e","lastModifiedDate":"2017-04-14"},{"lineNumber":334,"author":{"gitId":"-"},"content":"      \u003c!-- Checks that the \".\", \"@\" is at the next line in a line wrap. --\u003e","lastModifiedDate":"2017-04-14"},{"lineNumber":335,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"tokens\" value\u003d\"DOT, AT\"/\u003e","lastModifiedDate":"2017-04-14"},{"lineNumber":336,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"option\" value\u003d\"nl\"/\u003e","lastModifiedDate":"2017-04-14"},{"lineNumber":337,"author":{"gitId":"-"},"content":"    \u003c/module\u003e","lastModifiedDate":"2017-04-14"},{"lineNumber":338,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"SeparatorWrap\"\u003e","lastModifiedDate":"2017-04-14"},{"lineNumber":339,"author":{"gitId":"-"},"content":"      \u003c!-- Checks that the \",\", \"]\", \"[\", \"...\", \";\", \"(\" is at the previous end of line in a line wrap. --\u003e","lastModifiedDate":"2017-04-14"},{"lineNumber":340,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"tokens\" value\u003d\"COMMA, RBRACK, ARRAY_DECLARATOR, ELLIPSIS, SEMI, LPAREN\"/\u003e","lastModifiedDate":"2017-04-14"},{"lineNumber":341,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"option\" value\u003d\"eol\"/\u003e","lastModifiedDate":"2017-04-14"},{"lineNumber":342,"author":{"gitId":"-"},"content":"    \u003c/module\u003e","lastModifiedDate":"2017-04-14"},{"lineNumber":343,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-14"},{"lineNumber":344,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"Indentation\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":345,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"caseIndent\" value\u003d\"0\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":346,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"throwsIndent\" value\u003d\"8\" /\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":347,"author":{"gitId":"-"},"content":"    \u003c/module\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":348,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":349,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"NoWhitespaceBefore\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":350,"author":{"gitId":"-"},"content":"      \u003c!-- Checks that there is no whitespace before various unary operators. Linebreaks are allowed. --\u003e","lastModifiedDate":"2016-10-12"},{"lineNumber":351,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"tokens\" value\u003d\"SEMI, DOT, POST_DEC, POST_INC\"/\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":352,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"allowLineBreaks\" value\u003d\"true\"/\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":353,"author":{"gitId":"-"},"content":"    \u003c/module\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":354,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":355,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"NoWhitespaceBeforeCaseDefaultColon\"/\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":356,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-29"},{"lineNumber":357,"author":{"gitId":"-"},"content":"    \u003c!-- Checks that there is no whitespace between method/constructor name and open parenthesis. --\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":358,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"MethodParamPad\"/\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":359,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-29"},{"lineNumber":360,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"ParenPad\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":361,"author":{"gitId":"-"},"content":"      \u003c!-- Checks that there is no whitespace before close parenthesis or after open parenthesis. --\u003e","lastModifiedDate":"2016-10-12"},{"lineNumber":362,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"severity\" value\u003d\"warning\"/\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":363,"author":{"gitId":"-"},"content":"    \u003c/module\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":364,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":365,"author":{"gitId":"-"},"content":"    \u003c!-- Checks that non-whitespace characters are separated by no more than one whitespace character.","lastModifiedDate":"2018-08-15"},{"lineNumber":366,"author":{"gitId":"-"},"content":"         a \u003d 1; // Allowed","lastModifiedDate":"2018-08-15"},{"lineNumber":367,"author":{"gitId":"-"},"content":"         a  \u003d 1; // Not allowed (more than one space before \u003d)","lastModifiedDate":"2018-08-15"},{"lineNumber":368,"author":{"gitId":"-"},"content":"    --\u003e","lastModifiedDate":"2018-08-15"},{"lineNumber":369,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"SingleSpaceSeparator\"\u003e","lastModifiedDate":"2018-08-15"},{"lineNumber":370,"author":{"gitId":"-"},"content":"      \u003c!-- Validate whitespace surrounding comments as well.","lastModifiedDate":"2018-08-15"},{"lineNumber":371,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-15"},{"lineNumber":372,"author":{"gitId":"-"},"content":"           a \u003d 1; // Allowed (single space before start of comment)","lastModifiedDate":"2018-08-15"},{"lineNumber":373,"author":{"gitId":"-"},"content":"           a \u003d 1; /* Allowed (single space before start of comment) */","lastModifiedDate":"2018-08-15"},{"lineNumber":374,"author":{"gitId":"-"},"content":"           /* Allowed (single space after end of comment) */ a \u003d 1;","lastModifiedDate":"2018-08-15"},{"lineNumber":375,"author":{"gitId":"-"},"content":"           a \u003d 1;  // Not allowed (more than one space before start of comment)","lastModifiedDate":"2018-08-15"},{"lineNumber":376,"author":{"gitId":"-"},"content":"           a \u003d 1;  /* Not allowed (more than one space before start of comment) */","lastModifiedDate":"2018-08-15"},{"lineNumber":377,"author":{"gitId":"-"},"content":"           /* Not allowed (more than one space after end of comment) */  a \u003d 1;","lastModifiedDate":"2018-08-15"},{"lineNumber":378,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-15"},{"lineNumber":379,"author":{"gitId":"-"},"content":"           This doesn\u0027t validate whitespace within comments so a comment /* like  this */ is allowed.","lastModifiedDate":"2018-08-15"},{"lineNumber":380,"author":{"gitId":"-"},"content":"      --\u003e","lastModifiedDate":"2018-08-15"},{"lineNumber":381,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"validateComments\" value\u003d\"true\"/\u003e","lastModifiedDate":"2018-08-15"},{"lineNumber":382,"author":{"gitId":"-"},"content":"    \u003c/module\u003e","lastModifiedDate":"2018-08-15"},{"lineNumber":383,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-15"},{"lineNumber":384,"author":{"gitId":"-"},"content":"    \u003c!--","lastModifiedDate":"2017-08-20"},{"lineNumber":385,"author":{"gitId":"-"},"content":"    JAVADOC CHECKS","lastModifiedDate":"2017-08-20"},{"lineNumber":386,"author":{"gitId":"-"},"content":"    --\u003e","lastModifiedDate":"2017-08-20"},{"lineNumber":387,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-20"},{"lineNumber":388,"author":{"gitId":"-"},"content":"    \u003c!-- Checks that all block-tags are ordered correctly. --\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":389,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"AtclauseOrder\"/\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":390,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-29"},{"lineNumber":391,"author":{"gitId":"-"},"content":"    \u003c!-- Checks that Javadoc block tags appear only at the beginning of the line. --\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":392,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"JavadocBlockTagLocation\"/\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":393,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-29"},{"lineNumber":394,"author":{"gitId":"-"},"content":"    \u003c!-- Checks that all Javadoc comments start from the second line. --\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":395,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"JavadocContentLocationCheck\" /\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":396,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-29"},{"lineNumber":397,"author":{"gitId":"-"},"content":"    \u003c!-- Checks that each line in Javadoc has leading asterisks. --\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":398,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"JavadocMissingLeadingAsterisk\"/\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":399,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-29"},{"lineNumber":400,"author":{"gitId":"-"},"content":"    \u003c!-- Checks that each non-empty line in Javadoc has whitespace after leading asterisk. --\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":401,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"JavadocMissingWhitespaceAfterAsterisk\"/\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":402,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-29"},{"lineNumber":403,"author":{"gitId":"-"},"content":"    \u003c!-- Checks that for block tags, indentation of continuation lines is at least 4 spaces. --\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":404,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"JavadocTagContinuationIndentation\"/\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":405,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-29"},{"lineNumber":406,"author":{"gitId":"-"},"content":"    \u003c!-- Checks the Javadoc\u0027s format for every class, enumeration and interface. --\u003e","lastModifiedDate":"2022-05-29"},{"lineNumber":407,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"JavadocType\"\u003e","lastModifiedDate":"2017-08-20"},{"lineNumber":408,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"allowMissingParamTags\" value\u003d\"true\"/\u003e","lastModifiedDate":"2017-08-20"},{"lineNumber":409,"author":{"gitId":"-"},"content":"    \u003c/module\u003e","lastModifiedDate":"2017-08-20"},{"lineNumber":410,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-20"},{"lineNumber":411,"author":{"gitId":"-"},"content":"    \u003c!-- Checks the Javadoc\u0027s format for every public method (excluding getters, setters and constructors). --\u003e","lastModifiedDate":"2022-05-29"},{"lineNumber":412,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"JavadocMethod\"\u003e","lastModifiedDate":"2017-08-20"},{"lineNumber":413,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"allowedAnnotations\" value\u003d\"Override, Test, BeforeAll, BeforeEach, AfterAll, AfterEach, Subscribe\"/\u003e","lastModifiedDate":"2019-02-24"},{"lineNumber":414,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"accessModifiers\" value\u003d\"public\"/\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":415,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"validateThrows\" value\u003d\"false\"/\u003e","lastModifiedDate":"2020-05-27"},{"lineNumber":416,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"allowMissingParamTags\" value\u003d\"true\"/\u003e","lastModifiedDate":"2017-08-20"},{"lineNumber":417,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"allowMissingReturnTag\" value\u003d\"true\"/\u003e","lastModifiedDate":"2017-08-20"},{"lineNumber":418,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"tokens\" value\u003d\"METHOD_DEF, ANNOTATION_FIELD_DEF\"/\u003e","lastModifiedDate":"2017-08-20"},{"lineNumber":419,"author":{"gitId":"-"},"content":"    \u003c/module\u003e","lastModifiedDate":"2017-08-20"},{"lineNumber":420,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-27"},{"lineNumber":421,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"InvalidJavadocPosition\"/\u003e","lastModifiedDate":"2020-05-27"},{"lineNumber":422,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-27"},{"lineNumber":423,"author":{"gitId":"-"},"content":"    \u003c!-- Checks that every public method (excluding getters, setters and constructors) has a header comment. --\u003e","lastModifiedDate":"2022-05-29"},{"lineNumber":424,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"MissingJavadocMethodCheck\"\u003e","lastModifiedDate":"2020-05-27"},{"lineNumber":425,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"minLineCount\" value\u003d\"1\"/\u003e","lastModifiedDate":"2020-05-27"},{"lineNumber":426,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"allowMissingPropertyJavadoc\" value\u003d\"true\"/\u003e","lastModifiedDate":"2017-08-20"},{"lineNumber":427,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"ignoreMethodNamesRegex\" value\u003d\"(set.*|get.*|main)\"/\u003e","lastModifiedDate":"2023-07-10"},{"lineNumber":428,"author":{"gitId":"-"},"content":"    \u003c/module\u003e","lastModifiedDate":"2017-08-20"},{"lineNumber":429,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-20"},{"lineNumber":430,"author":{"gitId":"-"},"content":"    \u003c!-- Checks that every public class, enumeration and interface has a header comment. --\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":431,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"MissingJavadocType\"/\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":432,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-29"},{"lineNumber":433,"author":{"gitId":"rertyy"},"content":"      \u003c!-- Other Javadoc checks --\u003e","lastModifiedDate":"2024-03-20"},{"lineNumber":434,"author":{"gitId":"rertyy"},"content":"      \u003cmodule name\u003d\"JavadocStyleCheck\"/\u003e","lastModifiedDate":"2024-03-20"},{"lineNumber":435,"author":{"gitId":"rertyy"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":436,"author":{"gitId":"-"},"content":"  \u003c/module\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":437,"author":{"gitId":"-"},"content":"\u003c/module\u003e","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"rertyy":3,"-":434}},{"path":"docs/AboutUs.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2024-04-14"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2024-04-14"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: About Us","lastModifiedDate":"2024-04-14"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2024-04-14"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":6,"author":{"gitId":"shavonneg"},"content":"# About Us","lastModifiedDate":"2024-04-14"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":8,"author":{"gitId":"rertyy"},"content":"Welcome to BookKeeper, your trusted companion in clientele management. We understand the","lastModifiedDate":"2024-03-14"},{"lineNumber":9,"author":{"gitId":"rertyy"},"content":"challenges faced by entrepreneurs like you. **Passionate** about sharing beautiful flowers.","lastModifiedDate":"2024-03-14"},{"lineNumber":10,"author":{"gitId":"rertyy"},"content":"BookKeeper is here to simplify your workflow, empower your business, and help you thrive, so you can spend more time","lastModifiedDate":"2024-03-14"},{"lineNumber":11,"author":{"gitId":"rertyy"},"content":"sharing your love for flowers.","lastModifiedDate":"2024-03-14"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"kailinteoo"},"content":"## Product Name: BookKeeper","lastModifiedDate":"2024-03-06"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"kailinteoo"},"content":"## Target Users","lastModifiedDate":"2024-03-06"},{"lineNumber":16,"author":{"gitId":"rertyy"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":17,"author":{"gitId":"rertyy"},"content":"Our target users are florists in the floral industry who are looking for efficient ways to manage their","lastModifiedDate":"2024-03-14"},{"lineNumber":18,"author":{"gitId":"rertyy"},"content":"customer lists and streamline their customer management processes. These individuals are constrained by time due to","lastModifiedDate":"2024-03-14"},{"lineNumber":19,"author":{"gitId":"rertyy"},"content":"their perishable flowers. With limited resources and manpower, it is essential for them to optimize their workflows and","lastModifiedDate":"2024-03-14"},{"lineNumber":20,"author":{"gitId":"rertyy"},"content":"maximize productivity.","lastModifiedDate":"2024-03-14"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-06-17"},{"lineNumber":22,"author":{"gitId":"kailinteoo"},"content":"## Purpose","lastModifiedDate":"2024-03-06"},{"lineNumber":23,"author":{"gitId":"rertyy"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":24,"author":{"gitId":"kailinteoo"},"content":"In the bustling world of a small business, time is precious. BookKeeper aims to provide a seamless solution for managing","lastModifiedDate":"2024-03-06"},{"lineNumber":25,"author":{"gitId":"rertyy"},"content":"customer relationships, allowing you to focus on what matters most - selling flowers to others who love them just as","lastModifiedDate":"2024-03-14"},{"lineNumber":26,"author":{"gitId":"rertyy"},"content":"much as you. Our platform offers a user-friendly interface and powerful features to streamline your workflow, saving","lastModifiedDate":"2024-03-14"},{"lineNumber":27,"author":{"gitId":"rertyy"},"content":"you time and effort.","lastModifiedDate":"2024-03-14"},{"lineNumber":28,"author":{"gitId":"kailinteoo"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":29,"author":{"gitId":"kailinteoo"},"content":"## Unique Selling Point","lastModifiedDate":"2024-03-06"},{"lineNumber":30,"author":{"gitId":"rertyy"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":31,"author":{"gitId":"kailinteoo"},"content":"### Centralized Platform","lastModifiedDate":"2024-03-06"},{"lineNumber":32,"author":{"gitId":"rertyy"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":33,"author":{"gitId":"kailinteoo"},"content":"Say goodbye to scattered customer lists and spreadsheets. BookKeeper offers a centralized platform to store and search","lastModifiedDate":"2024-03-06"},{"lineNumber":34,"author":{"gitId":"kailinteoo"},"content":"for clients, keeping all your important information in one place.","lastModifiedDate":"2024-03-06"},{"lineNumber":35,"author":{"gitId":"kailinteoo"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":36,"author":{"gitId":"kailinteoo"},"content":"### Efficiency","lastModifiedDate":"2024-03-06"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":38,"author":{"gitId":"kailinteoo"},"content":"With a command-line interface, our application is faster and more efficient than traditional methods like CRMs or","lastModifiedDate":"2024-03-06"},{"lineNumber":39,"author":{"gitId":"kailinteoo"},"content":"Excel sheets. Spend less time navigating complex menus and more time serving your customers.","lastModifiedDate":"2024-03-06"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":41,"author":{"gitId":"kailinteoo"},"content":"### Tailored for Crochet Businesses","lastModifiedDate":"2024-03-06"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":43,"author":{"gitId":"rertyy"},"content":"We understand the unique needs of florists, which is why our platform offers customizable fields, customizable","lastModifiedDate":"2024-03-14"},{"lineNumber":44,"author":{"gitId":"kailinteoo"},"content":"tags, and integration with e-commerce platforms.","lastModifiedDate":"2024-03-06"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":46,"author":{"gitId":"kailinteoo"},"content":"### Cost-effective","lastModifiedDate":"2024-03-06"},{"lineNumber":47,"author":{"gitId":"rertyy"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":48,"author":{"gitId":"rertyy"},"content":"BookKeeper is designed to be cost-effective and easy to use, perfect for florists with limited time and resources.","lastModifiedDate":"2024-03-14"},{"lineNumber":49,"author":{"gitId":"rertyy"},"content":"Maximize productivity without breaking the bank.","lastModifiedDate":"2024-03-14"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"kailinteoo"},"content":"## Value Proposition","lastModifiedDate":"2024-03-06"},{"lineNumber":52,"author":{"gitId":"rertyy"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":53,"author":{"gitId":"kailinteoo"},"content":"For small business owners launching services, organizing customer lists can be challenging. BookKeeper offers a","lastModifiedDate":"2024-04-14"},{"lineNumber":54,"author":{"gitId":"kailinteoo"},"content":"centralized platform to store and search for clients, streamlining customer management. With a command-line interface,","lastModifiedDate":"2024-03-06"},{"lineNumber":55,"author":{"gitId":"kailinteoo"},"content":"our application is faster and more efficient than inputting data into other systems like CRMs or Microsoft Excel.","lastModifiedDate":"2024-03-06"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"kailinteoo"},"content":"## Team Information","lastModifiedDate":"2024-03-06"},{"lineNumber":58,"author":{"gitId":"kailinteoo"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":59,"author":{"gitId":"kailinteoo"},"content":"We are a team based in the [School of Computing, National University of Singapore](http://www.comp.nus.edu.sg).","lastModifiedDate":"2024-03-06"},{"lineNumber":60,"author":{"gitId":"kailinteoo"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":61,"author":{"gitId":"kailinteoo"},"content":"You can reach us at the email  ","lastModifiedDate":"2024-03-06"},{"lineNumber":62,"author":{"gitId":"kailinteoo"},"content":"`jaspertan@u.nus.edu` `e0967851@u.nus.edu` `ian.tung@u.nus.edu` `e0959354@u.nus.edu`","lastModifiedDate":"2024-03-06"},{"lineNumber":63,"author":{"gitId":"kailinteoo"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":64,"author":{"gitId":"kailinteoo"},"content":"## Project team","lastModifiedDate":"2024-03-06"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":66,"author":{"gitId":"kailinteoo"},"content":"### Jasper Tan Zu Xiang","lastModifiedDate":"2024-03-06"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":68,"author":{"gitId":"kailinteoo"},"content":"\u003cimg src\u003d\"images/jaspertzx.png\" width\u003d\"200px\" height\u003d\"225px\"\u003e","lastModifiedDate":"2024-03-07"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"kailinteoo"},"content":"[[github](https://github.com/Jaspertzx)]","lastModifiedDate":"2024-03-06"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"kailinteoo"},"content":"* Role: Front-End Developer","lastModifiedDate":"2024-03-06"},{"lineNumber":73,"author":{"gitId":"kailinteoo"},"content":"* Responsibilities: Specialize in creating the user interface and user experience of the BookKeeper application. Ensure","lastModifiedDate":"2024-03-06"},{"lineNumber":74,"author":{"gitId":"kailinteoo"},"content":"  that the application is visually appealing, responsive, and easy to navigate for users.","lastModifiedDate":"2024-03-06"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"kailinteoo"},"content":"### Goh Ying Xuan, Shavonne","lastModifiedDate":"2024-03-06"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"kailinteoo"},"content":"\u003cimg src\u003d\"images/shavonneg.png\" width\u003d\"200px\" height\u003d\"225px\"\u003e","lastModifiedDate":"2024-03-06"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"kailinteoo"},"content":"[[github](http://github.com/shavonneg)]","lastModifiedDate":"2024-03-06"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"kailinteoo"},"content":"* Role: UI/UX Designer","lastModifiedDate":"2024-03-06"},{"lineNumber":83,"author":{"gitId":"kailinteoo"},"content":"* Responsibilities: Creating a seamless and intuitive user experience for the BookKeeper application. Conduct user","lastModifiedDate":"2024-03-06"},{"lineNumber":84,"author":{"gitId":"kailinteoo"},"content":"  research, create wireframes and prototypes, and design user interfaces that are visually appealing and easy to use.","lastModifiedDate":"2024-03-06"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"kailinteoo"},"content":"### Tung Zhi Yong, Ian","lastModifiedDate":"2024-03-06"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"kailinteoo"},"content":"\u003cimg src\u003d\"images/rertyy.png\" width\u003d\"200px\" height\u003d\"225px\"\u003e","lastModifiedDate":"2024-03-06"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"kailinteoo"},"content":"[[github](http://github.com/rertyy)]","lastModifiedDate":"2024-03-06"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"rertyy"},"content":"* Role: Back-End Developer","lastModifiedDate":"2024-03-14"},{"lineNumber":93,"author":{"gitId":"rertyy"},"content":"* Responsibilities: Specialise in handling the logic and data behind the scenes of the BookKeeper application. From","lastModifiedDate":"2024-03-14"},{"lineNumber":94,"author":{"gitId":"rertyy"},"content":"  interfaces.","lastModifiedDate":"2024-03-14"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"kailinteoo"},"content":"### Kailin Teo","lastModifiedDate":"2024-03-06"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":98,"author":{"gitId":"kailinteoo"},"content":"\u003cimg src\u003d\"images/kailinteoo.png\" width\u003d\"200px\" height\u003d\"225px\"\u003e","lastModifiedDate":"2024-03-06"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":100,"author":{"gitId":"kailinteoo"},"content":"[[github](http://github.com/kailinteoo)]","lastModifiedDate":"2024-03-06"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"kailinteoo"},"content":"* Role: Back-End Developer","lastModifiedDate":"2024-03-06"},{"lineNumber":103,"author":{"gitId":"kailinteoo"},"content":"* Responsibilities: Focus on building the server-side components of the BookKeeper application. Handle tasks such as","lastModifiedDate":"2024-03-06"},{"lineNumber":104,"author":{"gitId":"rertyy"},"content":"  implementing business logic, managing the local storage, and ensuring the security and scalability of the application. ","lastModifiedDate":"2024-03-14"}],"authorContributionMap":{"kailinteoo":48,"shavonneg":1,"rertyy":24,"-":31}},{"path":"docs/DeveloperGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: Developer Guide","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"rertyy"},"content":"","lastModifiedDate":"2024-03-02"},{"lineNumber":6,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"  {:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":11,"author":{"gitId":"-"},"content":"## **Acknowledgements**","lastModifiedDate":"2021-07-30"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":13,"author":{"gitId":"rertyy"},"content":"* [AB3 developer guide](https://nus-cs2103-ay2324s2.github.io/tp/DeveloperGuide.html) for the initial template","lastModifiedDate":"2024-04-15"},{"lineNumber":14,"author":{"gitId":"rertyy"},"content":"  and structure of this document.","lastModifiedDate":"2024-04-15"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":16,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-07-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"## **Setting up, getting started**","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"Refer to the guide [_Setting up and getting started_](SettingUp.md).","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"## **Design**","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"rertyy"},"content":":bulb: **Tip:** The `.puml` files used to create diagrams in this document `docs/diagrams` folder. Refer to the [","lastModifiedDate":"2024-03-02"},{"lineNumber":29,"author":{"gitId":"rertyy"},"content":"_PlantUML Tutorial_ at se-edu/guides](https://se-education.org/guides/tutorials/plantUml.html) to learn how to create","lastModifiedDate":"2024-03-02"},{"lineNumber":30,"author":{"gitId":"rertyy"},"content":"and edit diagrams.","lastModifiedDate":"2024-03-02"},{"lineNumber":31,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"### Architecture","lastModifiedDate":"2021-07-31"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ArchitectureDiagram.png\" width\u003d\"280\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"The ***Architecture Diagram*** given above explains the high-level design of the App.","lastModifiedDate":"2021-07-31"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"Given below is a quick overview of main components and how they interact with each other.","lastModifiedDate":"2021-07-31"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":41,"author":{"gitId":"-"},"content":"**Main components of the architecture**","lastModifiedDate":"2021-07-31"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"rertyy"},"content":"**`Main`** (consisting of","lastModifiedDate":"2024-03-02"},{"lineNumber":44,"author":{"gitId":"Jaspertzx"},"content":"classes [`Main`](https://github.com/AY2324S2-CS2103T-T09-2/tp/blob/master/src/main/java/seedu/address/Main.java)","lastModifiedDate":"2024-04-13"},{"lineNumber":45,"author":{"gitId":"Jaspertzx"},"content":"and [`MainApp`](https://github.com/AY2324S2-CS2103T-T09-2/tp/blob/master/src/main/java/seedu/address/MainApp.java)) is","lastModifiedDate":"2024-04-13"},{"lineNumber":46,"author":{"gitId":"rertyy"},"content":"in charge of the app launch and shut down.","lastModifiedDate":"2024-03-02"},{"lineNumber":47,"author":{"gitId":"rertyy"},"content":"","lastModifiedDate":"2024-03-02"},{"lineNumber":48,"author":{"gitId":"-"},"content":"* At app launch, it initializes the other components in the correct sequence, and connects them up with each other.","lastModifiedDate":"2023-09-03"},{"lineNumber":49,"author":{"gitId":"-"},"content":"* At shut down, it shuts down the other components and invokes cleanup methods where necessary.","lastModifiedDate":"2023-09-03"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"The bulk of the app\u0027s work is done by the following four components:","lastModifiedDate":"2023-09-03"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"* [**`UI`**](#ui-component): The UI of the App.","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"* [**`Logic`**](#logic-component): The command executor.","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"* [**`Model`**](#model-component): Holds the data of the App in memory.","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"* [**`Storage`**](#storage-component): Reads data from, and writes data to, the hard disk.","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"[**`Commons`**](#common-classes) represents a collection of classes used by multiple other components.","lastModifiedDate":"2023-09-03"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"**How the architecture components interact with each other**","lastModifiedDate":"2020-05-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":62,"author":{"gitId":"rertyy"},"content":"The *Sequence Diagram* below shows how the components interact with each other for the scenario where the user issues","lastModifiedDate":"2024-03-02"},{"lineNumber":63,"author":{"gitId":"rertyy"},"content":"the command `delete 1`.","lastModifiedDate":"2024-03-02"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ArchitectureSequenceDiagram.png\" width\u003d\"574\" /\u003e","lastModifiedDate":"2020-06-07"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"Each of the four main components (also shown in the diagram above),","lastModifiedDate":"2021-07-31"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":69,"author":{"gitId":"-"},"content":"* defines its *API* in an `interface` with the same name as the Component.","lastModifiedDate":"2021-07-31"},{"lineNumber":70,"author":{"gitId":"rertyy"},"content":"* implements its functionality using a concrete `{Component Name}Manager` class (which follows the corresponding","lastModifiedDate":"2024-03-02"},{"lineNumber":71,"author":{"gitId":"rertyy"},"content":"  API `interface` mentioned in the previous point).","lastModifiedDate":"2024-03-26"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":73,"author":{"gitId":"rertyy"},"content":"For example, the `Logic` component defines its API in the `Logic.java` interface and implements its functionality using","lastModifiedDate":"2024-03-02"},{"lineNumber":74,"author":{"gitId":"rertyy"},"content":"the `LogicManager.java` class which follows the `Logic` interface. Other components interact with a given component","lastModifiedDate":"2024-03-02"},{"lineNumber":75,"author":{"gitId":"rertyy"},"content":"through its interface rather than the concrete class (reason: to prevent outside component\u0027s being coupled to the","lastModifiedDate":"2024-03-02"},{"lineNumber":76,"author":{"gitId":"rertyy"},"content":"implementation of a component), as illustrated in the (partial) class diagram below.","lastModifiedDate":"2024-03-02"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":78,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ComponentManagers.png\" width\u003d\"300\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":80,"author":{"gitId":"-"},"content":"The sections below give more details of each component.","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"### UI component","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"rertyy"},"content":"The **API** of this component is specified","lastModifiedDate":"2024-03-02"},{"lineNumber":85,"author":{"gitId":"Jaspertzx"},"content":"in [`Ui.java`](https://github.com/AY2324S2-CS2103T-T09-2/tp/blob/master/src/main/java/seedu/address/ui/Ui.java)","lastModifiedDate":"2024-04-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"![Structure of the UI Component](images/UiClassDiagram.png)","lastModifiedDate":"2021-07-31"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"rertyy"},"content":"The UI consists of a `MainWindow` that is made up of parts","lastModifiedDate":"2024-03-02"},{"lineNumber":90,"author":{"gitId":"Jaspertzx"},"content":"e.g.`CommandBox`, `ResultDisplay`, `ClientListPanel`, `StatusBarFooter` etc. All these, including the `MainWindow`,","lastModifiedDate":"2024-04-13"},{"lineNumber":91,"author":{"gitId":"rertyy"},"content":"inherit from the abstract `UiPart` class which captures the commonalities between classes that represent parts of the","lastModifiedDate":"2024-03-02"},{"lineNumber":92,"author":{"gitId":"rertyy"},"content":"visible GUI.","lastModifiedDate":"2024-03-02"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"rertyy"},"content":"The `UI` component uses the JavaFx UI framework. The layout of these UI parts are defined in matching `.fxml` files that","lastModifiedDate":"2024-03-02"},{"lineNumber":95,"author":{"gitId":"rertyy"},"content":"are in the `src/main/resources/view` folder. For example, the layout of","lastModifiedDate":"2024-03-02"},{"lineNumber":96,"author":{"gitId":"Jaspertzx"},"content":"the [`MainWindow`](https://github.com/AY2324S2-CS2103T-T09-2/tp/blob/master/src/main/java/seedu/address/ui/MainWindow.java)","lastModifiedDate":"2024-04-13"},{"lineNumber":97,"author":{"gitId":"rertyy"},"content":"is specified","lastModifiedDate":"2024-03-02"},{"lineNumber":98,"author":{"gitId":"Jaspertzx"},"content":"in [`MainWindow.fxml`](https://github.com/AY2324S2-CS2103T-T09-2/tp/blob/master/src/main/resources/view/MainWindow.fxml)","lastModifiedDate":"2024-04-13"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"The `UI` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"* executes user commands using the `Logic` component.","lastModifiedDate":"2021-07-31"},{"lineNumber":103,"author":{"gitId":"-"},"content":"* listens for changes to `Model` data so that the UI can be updated with the modified data.","lastModifiedDate":"2021-07-31"},{"lineNumber":104,"author":{"gitId":"-"},"content":"* keeps a reference to the `Logic` component, because the `UI` relies on the `Logic` to execute commands.","lastModifiedDate":"2021-07-31"},{"lineNumber":105,"author":{"gitId":"Jaspertzx"},"content":"* depends on some classes in the `Model` component, as it displays `Client` object residing in the `Model`.","lastModifiedDate":"2024-04-13"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"### Logic component","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":109,"author":{"gitId":"rertyy"},"content":"**API","lastModifiedDate":"2024-03-02"},{"lineNumber":110,"author":{"gitId":"Jaspertzx"},"content":"** : [`Logic.java`](https://github.com/AY2324S2-CS2103T-T09-2/tp/blob/master/src/main/java/seedu/address/logic/Logic.java)","lastModifiedDate":"2024-04-13"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":"Here\u0027s a (partial) class diagram of the `Logic` component:","lastModifiedDate":"2021-07-31"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":114,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/LogicClassDiagram.png\" width\u003d\"550\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":116,"author":{"gitId":"rertyy"},"content":"The sequence diagram below illustrates the interactions within the `Logic` component, taking `execute(\"delete 1\")` API","lastModifiedDate":"2024-03-02"},{"lineNumber":117,"author":{"gitId":"rertyy"},"content":"call as an example.","lastModifiedDate":"2024-03-02"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"![Interactions Inside the Logic Component for the `delete 1` Command](images/DeleteSequenceDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The lifeline for `DeleteCommandParser` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline continues till the end of diagram.","lastModifiedDate":"2024-02-09"},{"lineNumber":122,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"How the `Logic` component works:","lastModifiedDate":"2024-04-14"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":126,"author":{"gitId":"Jaspertzx"},"content":"1. When `Logic` is invoked to execute a command, it delegates the command to an `BookKeeperParser` object. This object","lastModifiedDate":"2024-04-14"},{"lineNumber":127,"author":{"gitId":"Jaspertzx"},"content":"   then","lastModifiedDate":"2024-04-14"},{"lineNumber":128,"author":{"gitId":"Jaspertzx"},"content":"   creates a parser corresponding to the command type (e.g., `DeleteCommandParser`) and utilizes it to interpret the","lastModifiedDate":"2024-04-14"},{"lineNumber":129,"author":{"gitId":"rertyy"},"content":"   command.","lastModifiedDate":"2024-03-26"},{"lineNumber":130,"author":{"gitId":"Jaspertzx"},"content":"2. This process generates a `Command` object (to be more specific, an instance of one of its subclasses, e.g.,","lastModifiedDate":"2024-04-14"},{"lineNumber":131,"author":{"gitId":"Jaspertzx"},"content":"   DeleteCommand) which is then executed by the `LogicManager`.","lastModifiedDate":"2024-04-14"},{"lineNumber":132,"author":{"gitId":"Jaspertzx"},"content":"3. During execution, the command can interact with the `Model` (e.g., to delete a `Client` or manage `Order`","lastModifiedDate":"2024-04-14"},{"lineNumber":133,"author":{"gitId":"Jaspertzx"},"content":"   details).\u003cbr\u003e","lastModifiedDate":"2024-04-14"},{"lineNumber":134,"author":{"gitId":"Jaspertzx"},"content":"   While this interaction is depicted as a singular step in the above diagram for the sake of simplicity, the actual","lastModifiedDate":"2024-03-26"},{"lineNumber":135,"author":{"gitId":"Jaspertzx"},"content":"   implementation may involve multiple interactions (between the command object and the `Model`) to accomplish the","lastModifiedDate":"2024-04-14"},{"lineNumber":136,"author":{"gitId":"rertyy"},"content":"   intended task.","lastModifiedDate":"2024-03-26"},{"lineNumber":137,"author":{"gitId":"Jaspertzx"},"content":"4. The outcome of the command\u0027s execution is encapsulated within a `CommandResult` object, which is then returned from","lastModifiedDate":"2024-04-14"},{"lineNumber":138,"author":{"gitId":"Jaspertzx"},"content":"   `Logic`. Additional classes in `Logic` (not shown in the class diagram above) that are utilized for parsing a user","lastModifiedDate":"2024-04-14"},{"lineNumber":139,"author":{"gitId":"rertyy"},"content":"   command:","lastModifiedDate":"2024-03-26"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":141,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ParserClasses.png\" width\u003d\"600\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":143,"author":{"gitId":"-"},"content":"### Model component","lastModifiedDate":"2021-07-31"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-02"},{"lineNumber":145,"author":{"gitId":"rertyy"},"content":"**API","lastModifiedDate":"2024-03-02"},{"lineNumber":146,"author":{"gitId":"Jaspertzx"},"content":"** : [`Model.java`](https://github.com/AY2324S2-CS2103T-T09-2/tp/blob/master/src/main/java/seedu/address/model/Model.java)","lastModifiedDate":"2024-04-13"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":148,"author":{"gitId":"rertyy"},"content":"\u003cimg src\u003d\"images/ModelClassDiagram.png\" width\u003d\"682\" /\u003e","lastModifiedDate":"2024-03-18"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"The `Model` component,","lastModifiedDate":"2021-07-31"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"kailinteoo"},"content":"* stores bookkeeper data i.e., all `Client` objects (which are contained in a `UniqueClientList` object).","lastModifiedDate":"2024-04-14"},{"lineNumber":154,"author":{"gitId":"Jaspertzx"},"content":"* stores the currently \u0027selected\u0027 `Client` objects (e.g., results of a search query) as a separate _filtered_ list which","lastModifiedDate":"2024-04-13"},{"lineNumber":155,"author":{"gitId":"Jaspertzx"},"content":"  is exposed to outsiders as an unmodifiable `ObservableList\u003cClient\u003e` that can be \u0027observed\u0027 e.g. the UI can be bound to","lastModifiedDate":"2024-04-13"},{"lineNumber":156,"author":{"gitId":"rertyy"},"content":"  this list so that the UI automatically updates when the data in the list change.","lastModifiedDate":"2024-03-02"},{"lineNumber":157,"author":{"gitId":"rertyy"},"content":"* stores the currently \u0027selected\u0027 `Order` objects (e.g., results of a search query) as a separate _filtered_ list which","lastModifiedDate":"2024-03-18"},{"lineNumber":158,"author":{"gitId":"rertyy"},"content":"  is exposed to outsiders as an unmodifiable `ObservableList\u003cOrder\u003e` that can be \u0027observed\u0027 e.g. the UI can be bound to","lastModifiedDate":"2024-03-18"},{"lineNumber":159,"author":{"gitId":"rertyy"},"content":"  this list so that the UI automatically updates when the data in the list change.","lastModifiedDate":"2024-03-18"},{"lineNumber":160,"author":{"gitId":"rertyy"},"content":"* stores a `UserPref` object that represents the user’s preferences. This is exposed to the outside as","lastModifiedDate":"2024-03-02"},{"lineNumber":161,"author":{"gitId":"rertyy"},"content":"  a `ReadOnlyUserPref` objects.","lastModifiedDate":"2024-03-02"},{"lineNumber":162,"author":{"gitId":"rertyy"},"content":"* does not depend on any of the other three components (as the `Model` represents data entities of the domain, they","lastModifiedDate":"2024-03-02"},{"lineNumber":163,"author":{"gitId":"rertyy"},"content":"  should make sense on their own without depending on other components)","lastModifiedDate":"2024-03-02"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":165,"author":{"gitId":"Jaspertzx"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** An alternative (arguably, a more OOP) model is given below. It has a `Tag` list in the `BookKeeper`, which `Client` references. This allows `BookKeeper` to only require one `Tag` object per unique tag, instead of each `Client` needing their own `Tag` objects.\u003cbr\u003e","lastModifiedDate":"2024-04-13"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":167,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/BetterModelClassDiagram.png\" width\u003d\"450\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":171,"author":{"gitId":"-"},"content":"### Storage component","lastModifiedDate":"2020-05-23"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":173,"author":{"gitId":"rertyy"},"content":"**API","lastModifiedDate":"2024-03-02"},{"lineNumber":174,"author":{"gitId":"Jaspertzx"},"content":"** : [`Storage.java`](https://github.com/AY2324S2-CS2103T-T09-2/tp/blob/master/src/main/java/seedu/address/storage/Storage.java)","lastModifiedDate":"2024-04-13"},{"lineNumber":175,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":176,"author":{"gitId":"kailinteoo"},"content":"Below is an updated UML class diagram illustrating the relationships and interactions among the various storage-related","lastModifiedDate":"2024-03-26"},{"lineNumber":177,"author":{"gitId":"kailinteoo"},"content":"classes:","lastModifiedDate":"2024-03-26"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":179,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/StorageClassDiagram.png\" width\u003d\"550\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":181,"author":{"gitId":"kailinteoo"},"content":"The `Storage` component of our application is responsible for handling the reading and writing of data to and from","lastModifiedDate":"2024-03-26"},{"lineNumber":182,"author":{"gitId":"kailinteoo"},"content":"external storage sources.","lastModifiedDate":"2024-03-26"},{"lineNumber":183,"author":{"gitId":"Jaspertzx"},"content":"This includes functionalities such as saving and retrieving bookkeeper data and user preferences.","lastModifiedDate":"2024-04-13"},{"lineNumber":184,"author":{"gitId":"kailinteoo"},"content":"In this section, we will delve into the recent enhancements made to the `Storage` component, focusing on the","lastModifiedDate":"2024-03-26"},{"lineNumber":185,"author":{"gitId":"kailinteoo"},"content":"implementation of storing clients and order details.","lastModifiedDate":"2024-03-26"},{"lineNumber":186,"author":{"gitId":"kailinteoo"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":187,"author":{"gitId":"kailinteoo"},"content":"In this enhancement, the `Storage` component has been extended to support the storage and retrieval of both client and","lastModifiedDate":"2024-03-26"},{"lineNumber":188,"author":{"gitId":"kailinteoo"},"content":"order details.","lastModifiedDate":"2024-03-26"},{"lineNumber":189,"author":{"gitId":"kailinteoo"},"content":"Previously, the `Storage` component was primarily designed to handle bookkeeper data and user preferences. However,","lastModifiedDate":"2024-04-14"},{"lineNumber":190,"author":{"gitId":"kailinteoo"},"content":"with the growing requirements of our application, it becomes necessary to accommodate the storage of clients and orders.","lastModifiedDate":"2024-03-26"},{"lineNumber":191,"author":{"gitId":"kailinteoo"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":192,"author":{"gitId":"kailinteoo"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2024-03-26"},{"lineNumber":193,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":194,"author":{"gitId":"-"},"content":"### Common classes","lastModifiedDate":"2020-05-23"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":196,"author":{"gitId":"Jaspertzx"},"content":"Classes used by multiple components are in the `seedu.address.commons` package.","lastModifiedDate":"2024-04-14"},{"lineNumber":197,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":198,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":199,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":200,"author":{"gitId":"-"},"content":"## **Implementation**","lastModifiedDate":"2020-05-23"},{"lineNumber":201,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":202,"author":{"gitId":"-"},"content":"This section describes some noteworthy details on how certain features are implemented.","lastModifiedDate":"2020-05-23"},{"lineNumber":203,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":204,"author":{"gitId":"Jaspertzx"},"content":"### Adding the Order methods","lastModifiedDate":"2024-04-14"},{"lineNumber":205,"author":{"gitId":"Jaspertzx"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":206,"author":{"gitId":"rertyy"},"content":"#### Command and CommandParser Implementations","lastModifiedDate":"2024-04-15"},{"lineNumber":207,"author":{"gitId":"Jaspertzx"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":208,"author":{"gitId":"Jaspertzx"},"content":"To implement the new Order Logic, a new package has to be created within the commands and parser packages to cater to","lastModifiedDate":"2024-04-14"},{"lineNumber":209,"author":{"gitId":"Jaspertzx"},"content":"the order implementations. The key changes would be:","lastModifiedDate":"2024-04-14"},{"lineNumber":210,"author":{"gitId":"Jaspertzx"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":211,"author":{"gitId":"Jaspertzx"},"content":"- Creation of new classes:","lastModifiedDate":"2024-04-14"},{"lineNumber":212,"author":{"gitId":"Jaspertzx"},"content":"    - Created a `AddOrderCommand` class to cater to order creation inputs by the user. This will get the","lastModifiedDate":"2024-04-15"},{"lineNumber":213,"author":{"gitId":"rertyy"},"content":"      referenced `Client` by their index in the `ObservableList` and check if the `Client` index is valid.","lastModifiedDate":"2024-04-15"},{"lineNumber":214,"author":{"gitId":"rertyy"},"content":"      Afterwards, it will create \u0026 append the `Order` object into the `Client` object\u0027s respective orders list.","lastModifiedDate":"2024-04-15"},{"lineNumber":215,"author":{"gitId":"rertyy"},"content":"      Upon execution of this command, it will return the `CommandResult` on for the output box to indicate if it was a","lastModifiedDate":"2024-04-15"},{"lineNumber":216,"author":{"gitId":"rertyy"},"content":"      successful command or not.","lastModifiedDate":"2024-04-15"},{"lineNumber":217,"author":{"gitId":"Jaspertzx"},"content":"    - Created a `DeleteOrderCommand` class to cater to delete orders by their index in their `ObservableList` class.","lastModifiedDate":"2024-04-14"},{"lineNumber":218,"author":{"gitId":"Jaspertzx"},"content":"      This will allow the users to delete by index instead of the UUID. The `DeleteOrderCommand` first checks","lastModifiedDate":"2024-04-14"},{"lineNumber":219,"author":{"gitId":"rertyy"},"content":"      the `ObservableList` by index to determine if the `Order` index is valid, then checks which `Client` the `Order`","lastModifiedDate":"2024-04-15"},{"lineNumber":220,"author":{"gitId":"rertyy"},"content":"      object belongs to. This allows the modification of both `Client`s and `Order`s at the same time.","lastModifiedDate":"2024-04-15"},{"lineNumber":221,"author":{"gitId":"rertyy"},"content":"      Upon execution of this command, it will return the `CommandResult` on for the output box to indicate if it was a","lastModifiedDate":"2024-04-15"},{"lineNumber":222,"author":{"gitId":"rertyy"},"content":"      successful command or not.","lastModifiedDate":"2024-04-15"},{"lineNumber":223,"author":{"gitId":"rertyy"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":224,"author":{"gitId":"rertyy"},"content":"    - Created a `EditOrderCommand` class to cater to allow editing Orders by the user. It will first search the `Order`","lastModifiedDate":"2024-04-15"},{"lineNumber":225,"author":{"gitId":"rertyy"},"content":"      objects in the `ObservableList` to ensure that the index is valid, before finding the `Client` object that","lastModifiedDate":"2024-04-15"},{"lineNumber":226,"author":{"gitId":"rertyy"},"content":"      the `Order` object belongs to.","lastModifiedDate":"2024-04-15"},{"lineNumber":227,"author":{"gitId":"rertyy"},"content":"      Afterwards, the `Order` object is edited, and will be replaced in the `Client` object\u0027s orders list to update the","lastModifiedDate":"2024-04-15"},{"lineNumber":228,"author":{"gitId":"rertyy"},"content":"      details. This will be encapsulated and returned in a `Command` object that will be executed in the main logic.","lastModifiedDate":"2024-04-15"},{"lineNumber":229,"author":{"gitId":"Jaspertzx"},"content":"- Creation of new parser classes:","lastModifiedDate":"2024-04-14"},{"lineNumber":230,"author":{"gitId":"Jaspertzx"},"content":"    - Creating a `AddOrderCommandParser` class to create the respective `Command` object by parsing the user input. This","lastModifiedDate":"2024-04-14"},{"lineNumber":231,"author":{"gitId":"rertyy"},"content":"      flow is as intended, and will allow us to get index of the `Client` object in the `ObservableList` and get the","lastModifiedDate":"2024-04-15"},{"lineNumber":232,"author":{"gitId":"rertyy"},"content":"      required parameters typed by the user by parsing it with","lastModifiedDate":"2024-04-15"},{"lineNumber":233,"author":{"gitId":"rertyy"},"content":"      the `Prefix` objects in `CliSyntax` class.","lastModifiedDate":"2024-04-15"},{"lineNumber":234,"author":{"gitId":"rertyy"},"content":"      For this command, the prefixes used would be `d/` for description, `c/` for price and `by/` for the deadline.","lastModifiedDate":"2024-04-15"},{"lineNumber":235,"author":{"gitId":"rertyy"},"content":"      The respective `AddOrderCommand` will be created to be executed by the `LogicManager`.","lastModifiedDate":"2024-04-15"},{"lineNumber":236,"author":{"gitId":"Jaspertzx"},"content":"    - Creating a `DeleteOrderCommandParser` class to create the respective `Command` object by parsing the user input.","lastModifiedDate":"2024-04-14"},{"lineNumber":237,"author":{"gitId":"Jaspertzx"},"content":"      This flow is as intended, and will allow us to get index of the Order object in the `ObservableList`.","lastModifiedDate":"2024-04-14"},{"lineNumber":238,"author":{"gitId":"rertyy"},"content":"      This will create the respective `DeleteOrderCommand` to be executed by the `LogicManager`.","lastModifiedDate":"2024-04-15"},{"lineNumber":239,"author":{"gitId":"Jaspertzx"},"content":"    - Creating a `EditOrderCommandParser` class to create the respective `Command` object by parsing the user input.","lastModifiedDate":"2024-04-14"},{"lineNumber":240,"author":{"gitId":"rertyy"},"content":"      This flow is as intended, and will allow us to get index of the Order object in the `ObservableList` and get the","lastModifiedDate":"2024-04-15"},{"lineNumber":241,"author":{"gitId":"rertyy"},"content":"      required parameters typed by the user by parsing it with","lastModifiedDate":"2024-04-15"},{"lineNumber":242,"author":{"gitId":"rertyy"},"content":"      the `Prefix` objects in `CliSyntax` class. For this command, the prefixes used would be `d/` for description, `c/`","lastModifiedDate":"2024-04-15"},{"lineNumber":243,"author":{"gitId":"rertyy"},"content":"      for price and `by/` for the deadline.","lastModifiedDate":"2024-04-15"},{"lineNumber":244,"author":{"gitId":"rertyy"},"content":"      These prefixes are optional, and not including them will use the current `Order` object details.","lastModifiedDate":"2024-04-15"},{"lineNumber":245,"author":{"gitId":"rertyy"},"content":"      At the end this will create the respective `EditOrderCommand` to be executed by the `LogicManager`.","lastModifiedDate":"2024-04-15"},{"lineNumber":246,"author":{"gitId":"Jaspertzx"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":247,"author":{"gitId":"Jaspertzx"},"content":"- Update `Model` and `ModelManager` to provide methods to support the new classes. such as creating the","lastModifiedDate":"2024-04-14"},{"lineNumber":248,"author":{"gitId":"rertyy"},"content":"  new `ObservableList` object for `Order` objects to","lastModifiedDate":"2024-04-15"},{"lineNumber":249,"author":{"gitId":"Jaspertzx"},"content":"  update the JavaFX element in the UI.","lastModifiedDate":"2024-04-14"},{"lineNumber":250,"author":{"gitId":"Jaspertzx"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":251,"author":{"gitId":"Jaspertzx"},"content":"#### Why is it implemented this way:","lastModifiedDate":"2024-04-14"},{"lineNumber":252,"author":{"gitId":"Jaspertzx"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":253,"author":{"gitId":"Jaspertzx"},"content":"It was done in this manner to adhere to the following design principles:","lastModifiedDate":"2024-04-14"},{"lineNumber":254,"author":{"gitId":"Jaspertzx"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":255,"author":{"gitId":"Jaspertzx"},"content":"- Separation of Concerns: By delegating specific responsibilities to specialized classes (like `BookKeeperParser`,","lastModifiedDate":"2024-04-14"},{"lineNumber":256,"author":{"gitId":"Jaspertzx"},"content":"  `AddOrderCommandParser`, etc.), the design adheres to the principle of separation of concerns. This means each part of","lastModifiedDate":"2024-04-14"},{"lineNumber":257,"author":{"gitId":"Jaspertzx"},"content":"  the system has a clear responsibility, reducing complexity and making the codebase easier to understand and maintain.","lastModifiedDate":"2024-04-14"},{"lineNumber":258,"author":{"gitId":"Jaspertzx"},"content":"- Provide Extensibility: With a modular structure, adding new functionality (like future order implementations)","lastModifiedDate":"2024-04-14"},{"lineNumber":259,"author":{"gitId":"Jaspertzx"},"content":"  involves creating new classes and modifying existing ones minimally. This approach makes the system more extensible,","lastModifiedDate":"2024-04-14"},{"lineNumber":260,"author":{"gitId":"Jaspertzx"},"content":"  as seen with the introduction of new parser and command classes for handling orders.","lastModifiedDate":"2024-04-14"},{"lineNumber":261,"author":{"gitId":"Jaspertzx"},"content":"- Enhances Frontend Integration:  By redefining how the `ObservableList` is managed within the `ModelManager` for","lastModifiedDate":"2024-04-14"},{"lineNumber":262,"author":{"gitId":"Jaspertzx"},"content":"  Orders, we enhance our capability to directly manipulate the `OrderList` view in JavaFX. This adjustment in the","lastModifiedDate":"2024-04-14"},{"lineNumber":263,"author":{"gitId":"Jaspertzx"},"content":"  ModelManager class creates a seamless and responsive interaction between the backend data structures and the frontend","lastModifiedDate":"2024-04-14"},{"lineNumber":264,"author":{"gitId":"Jaspertzx"},"content":"  user interface.","lastModifiedDate":"2024-04-14"},{"lineNumber":265,"author":{"gitId":"Jaspertzx"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":266,"author":{"gitId":"Jaspertzx"},"content":"By doing so, am able to emphasize on the clear separation of duties among components and allowing flexibility to add","lastModifiedDate":"2024-04-14"},{"lineNumber":267,"author":{"gitId":"Jaspertzx"},"content":"new features with minimal disruption This strategy not only facilitates easier maintenance and scalability but also","lastModifiedDate":"2024-04-14"},{"lineNumber":268,"author":{"gitId":"Jaspertzx"},"content":"enhances our future ability to develop and create requirements or changes in functionality without affecting much of the","lastModifiedDate":"2024-04-14"},{"lineNumber":269,"author":{"gitId":"Jaspertzx"},"content":"codebase.","lastModifiedDate":"2024-04-14"},{"lineNumber":270,"author":{"gitId":"Jaspertzx"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":271,"author":{"gitId":"Jaspertzx"},"content":"How the parsing works:","lastModifiedDate":"2024-04-14"},{"lineNumber":272,"author":{"gitId":"Jaspertzx"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":273,"author":{"gitId":"Jaspertzx"},"content":"* When called upon to parse a user command, the `BookKeeperParser` class creates an `XYZCommandParser` (`XYZ` is a","lastModifiedDate":"2024-04-14"},{"lineNumber":274,"author":{"gitId":"Jaspertzx"},"content":"  placeholder for the specific command name e.g., `AddCommandParser`) which uses the other classes shown above to parse","lastModifiedDate":"2024-04-14"},{"lineNumber":275,"author":{"gitId":"Jaspertzx"},"content":"  the user command and create a `XYZCommand` object (e.g., `AddCommand`) which the `BookKeeperParser` returns back as","lastModifiedDate":"2024-04-14"},{"lineNumber":276,"author":{"gitId":"Jaspertzx"},"content":"  a `Command` object.","lastModifiedDate":"2024-04-14"},{"lineNumber":277,"author":{"gitId":"Jaspertzx"},"content":"* All `XYZCommandParser` classes (e.g., `AddCommandParser`, `DeleteCommandParser`, ...) inherit from the `Parser`","lastModifiedDate":"2024-04-14"},{"lineNumber":278,"author":{"gitId":"Jaspertzx"},"content":"  interface so that they can be treated similarly where possible e.g, during testing.","lastModifiedDate":"2024-04-14"},{"lineNumber":279,"author":{"gitId":"Jaspertzx"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":280,"author":{"gitId":"rertyy"},"content":"#### Storage Implementations","lastModifiedDate":"2024-04-15"},{"lineNumber":281,"author":{"gitId":"rertyy"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":282,"author":{"gitId":"kailinteoo"},"content":"To implement this feature, several modifications were made across different classes within the `Storage` package. The","lastModifiedDate":"2024-04-15"},{"lineNumber":283,"author":{"gitId":"kailinteoo"},"content":"key changes include:","lastModifiedDate":"2024-04-15"},{"lineNumber":284,"author":{"gitId":"kailinteoo"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":285,"author":{"gitId":"kailinteoo"},"content":"1. New Classes: The introduction of `JsonAdaptedClient` and `JsonAdaptedOrder` classes to facilitate the conversion","lastModifiedDate":"2024-04-15"},{"lineNumber":286,"author":{"gitId":"kailinteoo"},"content":"   between JSON format and the corresponding model objects (`Client` and `Order`).","lastModifiedDate":"2024-04-15"},{"lineNumber":287,"author":{"gitId":"kailinteoo"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":288,"author":{"gitId":"kailinteoo"},"content":"2. Updated Interfaces: The `BookKeeperStorage` interface was extended to included methods for reading and writing","lastModifiedDate":"2024-04-15"},{"lineNumber":289,"author":{"gitId":"kailinteoo"},"content":"   orders. Similarly, the `Storage` interface, which serves as an umbrella for all storage-related functionalities,","lastModifiedDate":"2024-04-15"},{"lineNumber":290,"author":{"gitId":"kailinteoo"},"content":"   was update to incorporate these changes.","lastModifiedDate":"2024-04-15"},{"lineNumber":291,"author":{"gitId":"kailinteoo"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":292,"author":{"gitId":"kailinteoo"},"content":"3. Storage Manager: The `StorageManager` class, which orchestrates the storage operations, was modified to delegate the","lastModifiedDate":"2024-04-15"},{"lineNumber":293,"author":{"gitId":"kailinteoo"},"content":"   handling of client and order data to the appropriate storage classes.","lastModifiedDate":"2024-04-15"},{"lineNumber":294,"author":{"gitId":"kailinteoo"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":295,"author":{"gitId":"kailinteoo"},"content":"4. Unit Tests: Unit tests were added or updated to ensure the correctness and robustness of the new functionalities.","lastModifiedDate":"2024-04-15"},{"lineNumber":296,"author":{"gitId":"kailinteoo"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":297,"author":{"gitId":"kailinteoo"},"content":"#### Why it is implemented that way:","lastModifiedDate":"2024-04-15"},{"lineNumber":298,"author":{"gitId":"kailinteoo"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":299,"author":{"gitId":"kailinteoo"},"content":"With the implementation of storing clients and orders details, the `Storage` component of our application has been","lastModifiedDate":"2024-04-15"},{"lineNumber":300,"author":{"gitId":"kailinteoo"},"content":"enhanced to better meet the evolving needs of our users. These changes not only improve the functionality of our","lastModifiedDate":"2024-04-15"},{"lineNumber":301,"author":{"gitId":"kailinteoo"},"content":"application but also lay the groundwork for future enhancements and features.","lastModifiedDate":"2024-04-15"},{"lineNumber":302,"author":{"gitId":"kailinteoo"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":303,"author":{"gitId":"kailinteoo"},"content":"Future plans may involve further optimizing the storage mechanisms, exploring alternative storage formats, or","lastModifiedDate":"2024-04-15"},{"lineNumber":304,"author":{"gitId":"kailinteoo"},"content":"integrating additional data validation checks to ensure data integrity. Overall, the recent enhancements to","lastModifiedDate":"2024-04-15"},{"lineNumber":305,"author":{"gitId":"kailinteoo"},"content":"the `Storage` component","lastModifiedDate":"2024-04-15"},{"lineNumber":306,"author":{"gitId":"kailinteoo"},"content":"mark a significant step forward in enhancing the robustness and flexibility of our application.","lastModifiedDate":"2024-04-15"},{"lineNumber":307,"author":{"gitId":"kailinteoo"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":308,"author":{"gitId":"-"},"content":"### \\[Proposed\\] Undo/redo feature","lastModifiedDate":"2020-06-07"},{"lineNumber":309,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":310,"author":{"gitId":"-"},"content":"#### Proposed Implementation","lastModifiedDate":"2020-05-23"},{"lineNumber":311,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":312,"author":{"gitId":"Jaspertzx"},"content":"The proposed undo/redo mechanism is facilitated by `VersionedBookKeeper`. It extends `BookKeeper` with an undo/redo","lastModifiedDate":"2024-04-14"},{"lineNumber":313,"author":{"gitId":"rertyy"},"content":"history, stored internally as an `addressBookStateList` and `currentStatePointer`. Additionally, it implements the","lastModifiedDate":"2024-03-02"},{"lineNumber":314,"author":{"gitId":"rertyy"},"content":"following operations:","lastModifiedDate":"2024-03-02"},{"lineNumber":315,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":316,"author":{"gitId":"Jaspertzx"},"content":"* `VersionedBookKeeper#commit()`— Saves the current bookkeeper state in its history.","lastModifiedDate":"2024-04-14"},{"lineNumber":317,"author":{"gitId":"Jaspertzx"},"content":"* `VersionedBookKeeper#undo()`— Restores the previous bookkeeper state from its history.","lastModifiedDate":"2024-04-14"},{"lineNumber":318,"author":{"gitId":"Jaspertzx"},"content":"* `VersionedBookKeeper#redo()`— Restores a previously undone bookkeeper state from its history.","lastModifiedDate":"2024-04-14"},{"lineNumber":319,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":320,"author":{"gitId":"Jaspertzx"},"content":"These operations are exposed in the `Model` interface as `Model#commitBookKeeper()`, `Model#undoBookKeeper()`","lastModifiedDate":"2024-04-14"},{"lineNumber":321,"author":{"gitId":"Jaspertzx"},"content":"and `Model#redoBookKeeper()` respectively.","lastModifiedDate":"2024-04-14"},{"lineNumber":322,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":323,"author":{"gitId":"-"},"content":"Given below is an example usage scenario and how the undo/redo mechanism behaves at each step.","lastModifiedDate":"2020-05-23"},{"lineNumber":324,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":325,"author":{"gitId":"Jaspertzx"},"content":"Step 1. The user launches the application for the first time. The `VersionedBookKeeper` will be initialized with the","lastModifiedDate":"2024-04-14"},{"lineNumber":326,"author":{"gitId":"kailinteoo"},"content":"initial bookkeeper state, and the `currentStatePointer` pointing to that single bookkeeper state.","lastModifiedDate":"2024-04-14"},{"lineNumber":327,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":328,"author":{"gitId":"-"},"content":"![UndoRedoState0](images/UndoRedoState0.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":329,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":330,"author":{"gitId":"Jaspertzx"},"content":"Step 2. The user executes `delete 5` command to delete the 5th client in bookkeeper. The `delete` command","lastModifiedDate":"2024-04-14"},{"lineNumber":331,"author":{"gitId":"Jaspertzx"},"content":"calls `Model#commitBookKeeper()`, causing the modified state of bookkeeper after the `delete 5` command executes","lastModifiedDate":"2024-04-14"},{"lineNumber":332,"author":{"gitId":"kailinteoo"},"content":"to be saved in the `addressBookStateList`, and the `currentStatePointer` is shifted to the newly inserted bookkeeper","lastModifiedDate":"2024-04-14"},{"lineNumber":333,"author":{"gitId":"rertyy"},"content":"state.","lastModifiedDate":"2024-03-02"},{"lineNumber":334,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":335,"author":{"gitId":"-"},"content":"![UndoRedoState1](images/UndoRedoState1.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":336,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":337,"author":{"gitId":"Jaspertzx"},"content":"Step 3. The user executes `add n/David …​` to add a new client. The `add` command also","lastModifiedDate":"2024-04-14"},{"lineNumber":338,"author":{"gitId":"Jaspertzx"},"content":"calls `Model#commitBookKeeper()`, causing another modified bookkeeper state to be saved into","lastModifiedDate":"2024-04-14"},{"lineNumber":339,"author":{"gitId":"rertyy"},"content":"the `addressBookStateList`.","lastModifiedDate":"2024-03-02"},{"lineNumber":340,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":341,"author":{"gitId":"-"},"content":"![UndoRedoState2](images/UndoRedoState2.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":342,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":343,"author":{"gitId":"Jaspertzx"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If a command fails its execution, it will not call `Model#commitBookKeeper()`, so bookkeeper state will not be saved into the `addressBookStateList`.","lastModifiedDate":"2024-04-14"},{"lineNumber":344,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":345,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":346,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":347,"author":{"gitId":"Jaspertzx"},"content":"Step 4. The user now decides that adding the client was a mistake, and decides to undo that action by executing","lastModifiedDate":"2024-04-14"},{"lineNumber":348,"author":{"gitId":"Jaspertzx"},"content":"the `undo` command. The `undo` command will call `Model#undoBookKeeper()`, which will shift the `currentStatePointer`","lastModifiedDate":"2024-04-14"},{"lineNumber":349,"author":{"gitId":"kailinteoo"},"content":"once to the left, pointing it to the previous bookkeeper state, and restores bookkeeper to that state.","lastModifiedDate":"2024-04-14"},{"lineNumber":350,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":351,"author":{"gitId":"-"},"content":"![UndoRedoState3](images/UndoRedoState3.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":352,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":353,"author":{"gitId":"Jaspertzx"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If the `currentStatePointer` is at index 0, pointing to the initial BookKeeper state, then there are no previous BookKeeper states to restore. The `undo` command uses `Model#canUndoBookKeeper()` to check if this is the case. If so, it will return an error to the user rather","lastModifiedDate":"2024-04-14"},{"lineNumber":354,"author":{"gitId":"-"},"content":"than attempting to perform the undo.","lastModifiedDate":"2020-05-23"},{"lineNumber":355,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":356,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":357,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":358,"author":{"gitId":"-"},"content":"The following sequence diagram shows how an undo operation goes through the `Logic` component:","lastModifiedDate":"2024-02-09"},{"lineNumber":359,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":360,"author":{"gitId":"-"},"content":"![UndoSequenceDiagram](images/UndoSequenceDiagram-Logic.png)","lastModifiedDate":"2024-02-09"},{"lineNumber":361,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":362,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The lifeline for `UndoCommand` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2020-05-23"},{"lineNumber":363,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":364,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":365,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":366,"author":{"gitId":"-"},"content":"Similarly, how an undo operation goes through the `Model` component is shown below:","lastModifiedDate":"2024-02-09"},{"lineNumber":367,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":368,"author":{"gitId":"-"},"content":"![UndoSequenceDiagram](images/UndoSequenceDiagram-Model.png)","lastModifiedDate":"2024-02-09"},{"lineNumber":369,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":370,"author":{"gitId":"Jaspertzx"},"content":"The `redo` command does the opposite — it calls `Model#redoBookKeeper()`, which shifts the `currentStatePointer` once","lastModifiedDate":"2024-04-14"},{"lineNumber":371,"author":{"gitId":"kailinteoo"},"content":"to the right, pointing to the previously undone state, and restores bookkeeper to that state.","lastModifiedDate":"2024-04-14"},{"lineNumber":372,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":373,"author":{"gitId":"Jaspertzx"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If the `currentStatePointer` is at index `addressBookStateList.size() - 1`, pointing to the latest bookkeeper state, then there are no undone BookKeeper states to restore. The `redo` command uses `Model#canRedoBookKeeper()` to check if this is the case. If so, it will return an error to the user rather than attempting to perform the redo.","lastModifiedDate":"2024-04-14"},{"lineNumber":374,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":375,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":376,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":377,"author":{"gitId":"kailinteoo"},"content":"Step 5. The user then decides to execute the command `list`. Commands that do not modify bookkeeper, such","lastModifiedDate":"2024-04-14"},{"lineNumber":378,"author":{"gitId":"Jaspertzx"},"content":"as `list`, will usually not call `Model#commitBookKeeper()`, `Model#undoBookKeeper()` or `Model#redoBookKeeper()`.","lastModifiedDate":"2024-04-14"},{"lineNumber":379,"author":{"gitId":"rertyy"},"content":"Thus, the `addressBookStateList` remains unchanged.","lastModifiedDate":"2024-03-02"},{"lineNumber":380,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":381,"author":{"gitId":"-"},"content":"![UndoRedoState4](images/UndoRedoState4.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":382,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":383,"author":{"gitId":"Jaspertzx"},"content":"Step 6. The user executes `clear`, which calls `Model#commitBookKeeper()`. Since the `currentStatePointer` is not","lastModifiedDate":"2024-04-14"},{"lineNumber":384,"author":{"gitId":"kailinteoo"},"content":"pointing at the end of the `addressBookStateList`, all bookkeeper states after the `currentStatePointer` will be","lastModifiedDate":"2024-04-14"},{"lineNumber":385,"author":{"gitId":"rertyy"},"content":"purged. Reason: It no longer makes sense to redo the `add n/David …​` command. This is the behavior that most modern","lastModifiedDate":"2024-03-02"},{"lineNumber":386,"author":{"gitId":"rertyy"},"content":"desktop applications follow.","lastModifiedDate":"2024-03-02"},{"lineNumber":387,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":388,"author":{"gitId":"-"},"content":"![UndoRedoState5](images/UndoRedoState5.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":389,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":390,"author":{"gitId":"-"},"content":"The following activity diagram summarizes what happens when a user executes a new command:","lastModifiedDate":"2020-05-23"},{"lineNumber":391,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":392,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/CommitActivityDiagram.png\" width\u003d\"250\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":393,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":394,"author":{"gitId":"-"},"content":"#### Design considerations:","lastModifiedDate":"2021-07-31"},{"lineNumber":395,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":396,"author":{"gitId":"-"},"content":"**Aspect: How undo \u0026 redo executes:**","lastModifiedDate":"2021-07-31"},{"lineNumber":397,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":398,"author":{"gitId":"kailinteoo"},"content":"* **Alternative 1 (current choice):** Saves the entire bookkeeper.","lastModifiedDate":"2024-04-14"},{"lineNumber":399,"author":{"gitId":"-"},"content":"    * Pros: Easy to implement.","lastModifiedDate":"2020-05-23"},{"lineNumber":400,"author":{"gitId":"-"},"content":"    * Cons: May have performance issues in terms of memory usage.","lastModifiedDate":"2020-05-23"},{"lineNumber":401,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":402,"author":{"gitId":"-"},"content":"* **Alternative 2:** Individual command knows how to undo/redo by","lastModifiedDate":"2020-05-23"},{"lineNumber":403,"author":{"gitId":"-"},"content":"  itself.","lastModifiedDate":"2020-05-23"},{"lineNumber":404,"author":{"gitId":"Jaspertzx"},"content":"    * Pros: Will use less memory (e.g. for `delete`, just save the client being deleted).","lastModifiedDate":"2024-04-14"},{"lineNumber":405,"author":{"gitId":"-"},"content":"    * Cons: We must ensure that the implementation of each individual command are correct.","lastModifiedDate":"2020-05-23"},{"lineNumber":406,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":407,"author":{"gitId":"-"},"content":"_{more aspects and alternatives to be added}_","lastModifiedDate":"2020-05-23"},{"lineNumber":408,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":409,"author":{"gitId":"shavonneg"},"content":"### View Orders feature","lastModifiedDate":"2024-03-26"},{"lineNumber":410,"author":{"gitId":"shavonneg"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":411,"author":{"gitId":"shavonneg"},"content":"#### Proposed Implementation","lastModifiedDate":"2024-03-26"},{"lineNumber":412,"author":{"gitId":"shavonneg"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":413,"author":{"gitId":"shavonneg"},"content":"The proposed View Orders mechanism is facilitated by `ViewOrdersCommand`. It extends `Command` and implements the","lastModifiedDate":"2024-03-26"},{"lineNumber":414,"author":{"gitId":"shavonneg"},"content":"displaying of all orders that belong to a client.","lastModifiedDate":"2024-03-26"},{"lineNumber":415,"author":{"gitId":"shavonneg"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":416,"author":{"gitId":"Jaspertzx"},"content":"These operations are exposed in the `BookKeeperParser` class as `BookKeeperParser#parseCommand()`.","lastModifiedDate":"2024-04-14"},{"lineNumber":417,"author":{"gitId":"shavonneg"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":418,"author":{"gitId":"shavonneg"},"content":"Given below is an example usage scenario and how the view orders mechanism behaves at each step.","lastModifiedDate":"2024-03-26"},{"lineNumber":419,"author":{"gitId":"shavonneg"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":420,"author":{"gitId":"Jaspertzx"},"content":"Step 1. The user launches the application for the first time. The `VersionedBookKeeper` will be initialized with the","lastModifiedDate":"2024-04-14"},{"lineNumber":421,"author":{"gitId":"kailinteoo"},"content":"initial bookkeeper state, and the `currentStatePointer` pointing to that single bookkeeper state.","lastModifiedDate":"2024-04-14"},{"lineNumber":422,"author":{"gitId":"shavonneg"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":423,"author":{"gitId":"shavonneg"},"content":"Step 2. The user executes `viewOrders` command to view all the orders that they have in BookKeeper. The `viewOrders`","lastModifiedDate":"2024-03-26"},{"lineNumber":424,"author":{"gitId":"kailinteoo"},"content":"command calls `Model#updateFilteredOrderList()`, causing bookkeeper to show the list of orders","lastModifiedDate":"2024-04-14"},{"lineNumber":425,"author":{"gitId":"shavonneg"},"content":"that are tracked in the storage of the application. The `viewOrders` command then returns a new `CommandResult`, which","lastModifiedDate":"2024-03-26"},{"lineNumber":426,"author":{"gitId":"shavonneg"},"content":"displays the `MESSAGE_SUCCESS` message, which is \"Here are all your orders: \".","lastModifiedDate":"2024-03-26"},{"lineNumber":427,"author":{"gitId":"shavonneg"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":428,"author":{"gitId":"shavonneg"},"content":"#### Design considerations:","lastModifiedDate":"2024-03-26"},{"lineNumber":429,"author":{"gitId":"shavonneg"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":430,"author":{"gitId":"shavonneg"},"content":"**Aspect: How view command executes:**","lastModifiedDate":"2024-03-26"},{"lineNumber":431,"author":{"gitId":"shavonneg"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":432,"author":{"gitId":"shavonneg"},"content":"* **Alternative 1 (current choice):** Retrieves and displays all client orders from the filtered order list.","lastModifiedDate":"2024-03-26"},{"lineNumber":433,"author":{"gitId":"shavonneg"},"content":"    * Pros: Simple and straightforward implementation.","lastModifiedDate":"2024-03-26"},{"lineNumber":434,"author":{"gitId":"shavonneg"},"content":"    * Cons: May result in a slower performance and higher memory usage if the filtered order list is large.","lastModifiedDate":"2024-03-26"},{"lineNumber":435,"author":{"gitId":"shavonneg"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":436,"author":{"gitId":"shavonneg"},"content":"* **Alternative 2:** Implement system for displaying orders and only load a subset of orders at a time.","lastModifiedDate":"2024-03-26"},{"lineNumber":437,"author":{"gitId":"shavonneg"},"content":"    * Pros: Will use less memory (e.g. can use cache mechanisms to store recently accessed orders in memory).","lastModifiedDate":"2024-03-26"},{"lineNumber":438,"author":{"gitId":"shavonneg"},"content":"    * Cons: More complex implementation of storage and memory access.","lastModifiedDate":"2024-03-26"},{"lineNumber":439,"author":{"gitId":"shavonneg"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":440,"author":{"gitId":"shavonneg"},"content":"**Why is it implemented that way**","lastModifiedDate":"2024-03-26"},{"lineNumber":441,"author":{"gitId":"rertyy"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":442,"author":{"gitId":"shavonneg"},"content":"* This approach is chosen for its simplicity. By utilising the filtered order list maintained by the model, the","lastModifiedDate":"2024-03-26"},{"lineNumber":443,"author":{"gitId":"shavonneg"},"content":"  `viewOrders` command provides a straightforward way to display all orders to the user. It also makes it easier to","lastModifiedDate":"2024-03-26"},{"lineNumber":444,"author":{"gitId":"shavonneg"},"content":"  maintain.","lastModifiedDate":"2024-03-26"},{"lineNumber":445,"author":{"gitId":"shavonneg"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":446,"author":{"gitId":"-"},"content":"### \\[Proposed\\] Data archiving","lastModifiedDate":"2020-05-23"},{"lineNumber":447,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":448,"author":{"gitId":"-"},"content":"_{Explain here how the data archiving feature will be implemented}_","lastModifiedDate":"2020-05-23"},{"lineNumber":449,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":450,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":451,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":452,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":453,"author":{"gitId":"-"},"content":"## **Documentation, logging, testing, configuration, dev-ops**","lastModifiedDate":"2020-06-07"},{"lineNumber":454,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":455,"author":{"gitId":"-"},"content":"* [Documentation guide](Documentation.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":456,"author":{"gitId":"-"},"content":"* [Testing guide](Testing.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":457,"author":{"gitId":"-"},"content":"* [Logging guide](Logging.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":458,"author":{"gitId":"-"},"content":"* [Configuration guide](Configuration.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":459,"author":{"gitId":"-"},"content":"* [DevOps guide](DevOps.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":460,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":461,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":462,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":463,"author":{"gitId":"-"},"content":"## **Appendix: Requirements**","lastModifiedDate":"2020-05-23"},{"lineNumber":464,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":465,"author":{"gitId":"-"},"content":"### Product scope","lastModifiedDate":"2020-05-23"},{"lineNumber":466,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":467,"author":{"gitId":"-"},"content":"**Target user profile**:","lastModifiedDate":"2020-05-23"},{"lineNumber":468,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":469,"author":{"gitId":"Jaspertzx"},"content":"* Florists business owners or freelance hobbyist in the floral industry.","lastModifiedDate":"2024-04-13"},{"lineNumber":470,"author":{"gitId":"Jaspertzx"},"content":"* Prefers efficient ways to manage their clients and their information.","lastModifiedDate":"2024-04-13"},{"lineNumber":471,"author":{"gitId":"Jaspertzx"},"content":"* Prefers an efficient way to keep track of client\u0027s orders.","lastModifiedDate":"2024-04-13"},{"lineNumber":472,"author":{"gitId":"kailinteoo"},"content":"* Values productivity and time-saving solutions.","lastModifiedDate":"2024-03-08"},{"lineNumber":473,"author":{"gitId":"kailinteoo"},"content":"","lastModifiedDate":"2024-03-08"},{"lineNumber":474,"author":{"gitId":"kailinteoo"},"content":"**User Needs and Preferences**:","lastModifiedDate":"2024-03-08"},{"lineNumber":475,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-08"},{"lineNumber":476,"author":{"gitId":"kailinteoo"},"content":"* Efficient Customer Management:","lastModifiedDate":"2024-03-08"},{"lineNumber":477,"author":{"gitId":"kailinteoo"},"content":"    * Can organize and manage customer lists effectively.","lastModifiedDate":"2024-03-08"},{"lineNumber":478,"author":{"gitId":"kailinteoo"},"content":"    * Prefers streamlined processes for handling customer information.","lastModifiedDate":"2024-03-08"},{"lineNumber":479,"author":{"gitId":"kailinteoo"},"content":"    * Values tools that optimize workflows and save time.","lastModifiedDate":"2024-03-08"},{"lineNumber":480,"author":{"gitId":"Jaspertzx"},"content":"* Organised Orders","lastModifiedDate":"2024-03-14"},{"lineNumber":481,"author":{"gitId":"Jaspertzx"},"content":"    * Prefers to organize orders and sort them via due date.","lastModifiedDate":"2024-03-14"},{"lineNumber":482,"author":{"gitId":"Jaspertzx"},"content":"    * Helps to keep track of customer\u0027s delivery deadlines.","lastModifiedDate":"2024-03-14"},{"lineNumber":483,"author":{"gitId":"Jaspertzx"},"content":"* Persistent Data Storage:","lastModifiedDate":"2024-03-14"},{"lineNumber":484,"author":{"gitId":"Jaspertzx"},"content":"    * Prefers application that stores data across local sessions.","lastModifiedDate":"2024-04-13"},{"lineNumber":485,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-08"},{"lineNumber":486,"author":{"gitId":"kailinteoo"},"content":"**Value proposition**:","lastModifiedDate":"2024-03-08"},{"lineNumber":487,"author":{"gitId":"rertyy"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":488,"author":{"gitId":"Jaspertzx"},"content":"* Manage contacts faster than a typical mouse/GUI driven app.","lastModifiedDate":"2024-03-14"},{"lineNumber":489,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":490,"author":{"gitId":"-"},"content":"### User stories","lastModifiedDate":"2020-06-07"},{"lineNumber":491,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":492,"author":{"gitId":"-"},"content":"Priorities: High (must have) - `* * *`, Medium (nice to have) - `* *`, Low (unlikely to have) - `*`","lastModifiedDate":"2020-05-23"},{"lineNumber":493,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":494,"author":{"gitId":"Jaspertzx"},"content":"| Priority | As a …  | I want to …                                                              | So that I can…                                                                                                |","lastModifiedDate":"2024-03-05"},{"lineNumber":495,"author":{"gitId":"rertyy"},"content":"|----------|---------|--------------------------------------------------------------------------|---------------------------------------------------------------------------------------------------------------|","lastModifiedDate":"2024-03-18"},{"lineNumber":496,"author":{"gitId":"kailinteoo"},"content":"| `* * *`  | Florist | easily add new clients to my bookkeeper                                  | keep track of all my clients\u0027 information in one place.                                                       |","lastModifiedDate":"2024-04-14"},{"lineNumber":497,"author":{"gitId":"shavonneg"},"content":"| `* * *`  | Florist | have a search function                                                   | quickly find specific customers when I need to reference their details.                                       |","lastModifiedDate":"2024-03-14"},{"lineNumber":498,"author":{"gitId":"shavonneg"},"content":"| `* * *`  | Florist | be accessible via a command-line interface                               | efficiently manage my customer list without navigating through complex menus.                                 |","lastModifiedDate":"2024-03-14"},{"lineNumber":499,"author":{"gitId":"shavonneg"},"content":"| `* * *`  | Florist | have customizable fields                                                 | record specific details about each customer, such as their favorite colors or special requests.               |","lastModifiedDate":"2024-03-14"},{"lineNumber":500,"author":{"gitId":"shavonneg"},"content":"| `* * *`  | Florist | be cost-effective and easy to use                                        | maximize productivity without investing in expensive CRM systems.                                             |","lastModifiedDate":"2024-03-14"},{"lineNumber":501,"author":{"gitId":"Jaspertzx"},"content":"| `* * *`  | Florist | be able to create orders for my clients                                  | record all of my clients\u0027 orders and take note of their respective deadlines.                                 |","lastModifiedDate":"2024-04-13"},{"lineNumber":502,"author":{"gitId":"Jaspertzx"},"content":"| `* *`    | Florist | have secure access controls and permissions settings                     | restrict sensitive information and ensure data privacy compliance.                                            |","lastModifiedDate":"2024-04-13"},{"lineNumber":503,"author":{"gitId":"Jaspertzx"},"content":"| `* *`    | Florist | categorize my client                                                     | tailor my marketing efforts accordingly based on factors like their preferred flowers or past purchases.      |","lastModifiedDate":"2024-04-13"},{"lineNumber":504,"author":{"gitId":"shavonneg"},"content":"| `* *`    | Florist | generate reports on customer activity                                    | analyze trends and make informed business decisions based on order history and frequency of purchases.        |","lastModifiedDate":"2024-03-14"},{"lineNumber":505,"author":{"gitId":"shavonneg"},"content":"| `* *`    | Florist | have a reminder feature                                                  | stay organized and follow up with customers on important dates, such as birthdays or anniversaries.           |","lastModifiedDate":"2024-03-14"},{"lineNumber":506,"author":{"gitId":"shavonneg"},"content":"| `* *`    | Florist | have customizable templates for invoices and receipts                    | easily generate and send professional-looking documents to my customers.                                      |","lastModifiedDate":"2024-03-14"},{"lineNumber":507,"author":{"gitId":"Jaspertzx"},"content":"| `* *`    | Florist | have a notes section for each client                                     | record specific preferences and requirements for their projects.                                              |","lastModifiedDate":"2024-04-13"},{"lineNumber":508,"author":{"gitId":"shavonneg"},"content":"| `* *`    | Florist | integrate with accounting software                                       | easily track expenses related to each customer and maintain accurate financial records.                       |","lastModifiedDate":"2024-03-14"},{"lineNumber":509,"author":{"gitId":"shavonneg"},"content":"| `*`      | Florist | have a mobile-friendly interface                                         | easily access customer information on the go and process orders efficiently.                                  |","lastModifiedDate":"2024-03-14"},{"lineNumber":510,"author":{"gitId":"shavonneg"},"content":"| `*`      | Florist | integrate with my email client                                           | send personalized messages and promotions to my customers directly from the platform.                         |","lastModifiedDate":"2024-03-14"},{"lineNumber":511,"author":{"gitId":"shavonneg"},"content":"| `*`      | Florist | integrate with e-commerce platforms                                      | automatically sync customer data and manage orders efficiently when participating in online marketplaces.     |","lastModifiedDate":"2024-03-14"},{"lineNumber":512,"author":{"gitId":"Jaspertzx"},"content":"| `*`      | Florist | track communication history with clients                                 | provide personalized and timely customer service including emails and phone calls.                            |","lastModifiedDate":"2024-04-13"},{"lineNumber":513,"author":{"gitId":"shavonneg"},"content":"| `*`      | Florist | support multiple user accounts with shared access                        | my team members can collaborate on managing customer relationships.                                           |","lastModifiedDate":"2024-03-14"},{"lineNumber":514,"author":{"gitId":"shavonneg"},"content":"| `*`      | Florist | have a scheduling feature                                                | manage registrations and communicate updates with attendees seamlessly.                                       |","lastModifiedDate":"2024-03-14"},{"lineNumber":515,"author":{"gitId":"shavonneg"},"content":"| `*`      | Florist | have a feature for scanning and capturing customer contact information   | grow my mailing list and follow up with potential leads quickly.                                              |","lastModifiedDate":"2024-03-14"},{"lineNumber":516,"author":{"gitId":"shavonneg"},"content":"| `*`      | Florist | integrate with social media platforms                                    | easily connect with customers and engage with them through various channels.                                  |","lastModifiedDate":"2024-03-14"},{"lineNumber":517,"author":{"gitId":"shavonneg"},"content":"| `*`      | Florist | provide insights into customer demographics and preferences              | tailor my product offerings and marketing campaigns to target specific audiences effectively.                 |","lastModifiedDate":"2024-03-14"},{"lineNumber":518,"author":{"gitId":"shavonneg"},"content":"| `*`      | Florist | provide analytics and insights on customer behavior                      | continuously improve my products and services to meet customer needs based on purchase patterns and feedback. |","lastModifiedDate":"2024-03-14"},{"lineNumber":519,"author":{"gitId":"shavonneg"},"content":"| `*`      | Florist | provide insights into customer satisfaction through feedback and reviews | address any concerns and improve the overall customer experience.                                             |","lastModifiedDate":"2024-03-14"},{"lineNumber":520,"author":{"gitId":"shavonneg"},"content":"| `*`      | Florist | offer customizable tags or labels for customers                          | segment my audience and target specific groups with tailored marketing campaigns.                             |","lastModifiedDate":"2024-03-14"},{"lineNumber":521,"author":{"gitId":"shavonneg"},"content":"| `*`      | Florist | have a good out of the box experience                                    | immediately use the application without needing to configure it for my own needs.                             |","lastModifiedDate":"2024-03-14"},{"lineNumber":522,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":523,"author":{"gitId":"-"},"content":"### Use cases","lastModifiedDate":"2020-06-07"},{"lineNumber":524,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":525,"author":{"gitId":"Jaspertzx"},"content":"(For all use cases below, the **System** is the `BookKeeper` and the **Actor** is the `user`, unless specified","lastModifiedDate":"2024-04-13"},{"lineNumber":526,"author":{"gitId":"rertyy"},"content":"otherwise)","lastModifiedDate":"2024-03-02"},{"lineNumber":527,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":528,"author":{"gitId":"Jaspertzx"},"content":"**Use case: Delete a Client**","lastModifiedDate":"2024-04-13"},{"lineNumber":529,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":530,"author":{"gitId":"-"},"content":"**MSS**","lastModifiedDate":"2020-05-23"},{"lineNumber":531,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":532,"author":{"gitId":"Jaspertzx"},"content":"1. User requests to list clients.","lastModifiedDate":"2024-04-13"},{"lineNumber":533,"author":{"gitId":"Jaspertzx"},"content":"2. BookKeeper shows a list of clients.","lastModifiedDate":"2024-04-13"},{"lineNumber":534,"author":{"gitId":"Jaspertzx"},"content":"3. User requests to delete a specific client in the list.","lastModifiedDate":"2024-04-13"},{"lineNumber":535,"author":{"gitId":"Jaspertzx"},"content":"4. BookKeeper deletes the client.","lastModifiedDate":"2024-04-13"},{"lineNumber":536,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":537,"author":{"gitId":"-"},"content":"   Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":538,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":539,"author":{"gitId":"-"},"content":"**Extensions**","lastModifiedDate":"2020-05-23"},{"lineNumber":540,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":541,"author":{"gitId":"-"},"content":"* 2a. The list is empty.","lastModifiedDate":"2020-05-23"},{"lineNumber":542,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":543,"author":{"gitId":"-"},"content":"  Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":544,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":545,"author":{"gitId":"-"},"content":"* 3a. The given index is invalid.","lastModifiedDate":"2020-05-23"},{"lineNumber":546,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":547,"author":{"gitId":"Jaspertzx"},"content":"    * 3a1. BookKeeper shows an error message.","lastModifiedDate":"2024-04-13"},{"lineNumber":548,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":549,"author":{"gitId":"-"},"content":"      Use case resumes at step 2.","lastModifiedDate":"2020-05-23"},{"lineNumber":550,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":551,"author":{"gitId":"Jaspertzx"},"content":"**Use case: Add a client**","lastModifiedDate":"2024-04-13"},{"lineNumber":552,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-02"},{"lineNumber":553,"author":{"gitId":"rertyy"},"content":"**MSS**","lastModifiedDate":"2024-03-02"},{"lineNumber":554,"author":{"gitId":"rertyy"},"content":"","lastModifiedDate":"2024-03-02"},{"lineNumber":555,"author":{"gitId":"Jaspertzx"},"content":"1. User requests to add a client.","lastModifiedDate":"2024-04-13"},{"lineNumber":556,"author":{"gitId":"Jaspertzx"},"content":"2. BookKeeper adds a client.","lastModifiedDate":"2024-04-13"},{"lineNumber":557,"author":{"gitId":"Jaspertzx"},"content":"3. BookKeeper shows the added client.","lastModifiedDate":"2024-04-13"},{"lineNumber":558,"author":{"gitId":"rertyy"},"content":"","lastModifiedDate":"2024-03-02"},{"lineNumber":559,"author":{"gitId":"rertyy"},"content":"   Use case ends.","lastModifiedDate":"2024-03-02"},{"lineNumber":560,"author":{"gitId":"rertyy"},"content":"","lastModifiedDate":"2024-03-02"},{"lineNumber":561,"author":{"gitId":"rertyy"},"content":"**Extensions**","lastModifiedDate":"2024-03-02"},{"lineNumber":562,"author":{"gitId":"rertyy"},"content":"","lastModifiedDate":"2024-03-02"},{"lineNumber":563,"author":{"gitId":"Jaspertzx"},"content":"* 2a. The client already exists.","lastModifiedDate":"2024-04-13"},{"lineNumber":564,"author":{"gitId":"rertyy"},"content":"","lastModifiedDate":"2024-03-02"},{"lineNumber":565,"author":{"gitId":"Jaspertzx"},"content":"    * 2a1. BookKeeper shows an error message.","lastModifiedDate":"2024-04-13"},{"lineNumber":566,"author":{"gitId":"rertyy"},"content":"","lastModifiedDate":"2024-03-02"},{"lineNumber":567,"author":{"gitId":"rertyy"},"content":"      Use case resumes at step 1.","lastModifiedDate":"2024-03-02"},{"lineNumber":568,"author":{"gitId":"rertyy"},"content":"","lastModifiedDate":"2024-03-02"},{"lineNumber":569,"author":{"gitId":"Jaspertzx"},"content":"* 2b. The client details are invalid.","lastModifiedDate":"2024-04-13"},{"lineNumber":570,"author":{"gitId":"rertyy"},"content":"","lastModifiedDate":"2024-03-02"},{"lineNumber":571,"author":{"gitId":"Jaspertzx"},"content":"    * 2b1. Bookkeeper shows an error message.","lastModifiedDate":"2024-04-13"},{"lineNumber":572,"author":{"gitId":"rertyy"},"content":"","lastModifiedDate":"2024-03-02"},{"lineNumber":573,"author":{"gitId":"rertyy"},"content":"      Use case resumes at step 1.","lastModifiedDate":"2024-03-02"},{"lineNumber":574,"author":{"gitId":"rertyy"},"content":"","lastModifiedDate":"2024-03-02"},{"lineNumber":575,"author":{"gitId":"Jaspertzx"},"content":"**Use case: Edit a client**","lastModifiedDate":"2024-04-13"},{"lineNumber":576,"author":{"gitId":"rertyy"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":577,"author":{"gitId":"rertyy"},"content":"**MSS**","lastModifiedDate":"2024-03-07"},{"lineNumber":578,"author":{"gitId":"rertyy"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":579,"author":{"gitId":"Jaspertzx"},"content":"1. User requests to edit a client.","lastModifiedDate":"2024-04-13"},{"lineNumber":580,"author":{"gitId":"Jaspertzx"},"content":"2. BookKeeper shows the client to be edited.","lastModifiedDate":"2024-04-13"},{"lineNumber":581,"author":{"gitId":"Jaspertzx"},"content":"3. User edits the client.","lastModifiedDate":"2024-04-13"},{"lineNumber":582,"author":{"gitId":"Jaspertzx"},"content":"4. BookKeeper shows the edited client.","lastModifiedDate":"2024-04-13"},{"lineNumber":583,"author":{"gitId":"rertyy"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":584,"author":{"gitId":"rertyy"},"content":"   Use case ends.","lastModifiedDate":"2024-03-07"},{"lineNumber":585,"author":{"gitId":"rertyy"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":586,"author":{"gitId":"rertyy"},"content":"**Extensions**","lastModifiedDate":"2024-03-07"},{"lineNumber":587,"author":{"gitId":"rertyy"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":588,"author":{"gitId":"Jaspertzx"},"content":"* 2a. The client does not exist.","lastModifiedDate":"2024-04-13"},{"lineNumber":589,"author":{"gitId":"rertyy"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":590,"author":{"gitId":"Jaspertzx"},"content":"    * 2a1. BookKeeper shows an error message.","lastModifiedDate":"2024-04-13"},{"lineNumber":591,"author":{"gitId":"Jaspertzx"},"content":"    * 2a2. BookKeeper shows a list of clients with similar names.","lastModifiedDate":"2024-04-13"},{"lineNumber":592,"author":{"gitId":"rertyy"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":593,"author":{"gitId":"rertyy"},"content":"      Use case resumes at step 1.","lastModifiedDate":"2024-03-07"},{"lineNumber":594,"author":{"gitId":"Jaspertzx"},"content":"* 3a. The client details are invalid.","lastModifiedDate":"2024-04-13"},{"lineNumber":595,"author":{"gitId":"rertyy"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":596,"author":{"gitId":"Jaspertzx"},"content":"    * 3a1. BookKeeper shows an error message.","lastModifiedDate":"2024-04-13"},{"lineNumber":597,"author":{"gitId":"rertyy"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":598,"author":{"gitId":"rertyy"},"content":"      Use case resumes at step 2.","lastModifiedDate":"2024-03-07"},{"lineNumber":599,"author":{"gitId":"Jaspertzx"},"content":"* 3b. The client details are unchanged.","lastModifiedDate":"2024-04-13"},{"lineNumber":600,"author":{"gitId":"rertyy"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":601,"author":{"gitId":"Jaspertzx"},"content":"    * 3b1. BookKeeper shows a message indicating no changes are made.","lastModifiedDate":"2024-04-13"},{"lineNumber":602,"author":{"gitId":"rertyy"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":603,"author":{"gitId":"rertyy"},"content":"      Use case resumes at step 2.","lastModifiedDate":"2024-03-07"},{"lineNumber":604,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":605,"author":{"gitId":"Jaspertzx"},"content":"**Use case: Find a client**","lastModifiedDate":"2024-04-13"},{"lineNumber":606,"author":{"gitId":"rertyy"},"content":"","lastModifiedDate":"2024-03-02"},{"lineNumber":607,"author":{"gitId":"rertyy"},"content":"**MSS**","lastModifiedDate":"2024-03-02"},{"lineNumber":608,"author":{"gitId":"rertyy"},"content":"","lastModifiedDate":"2024-03-02"},{"lineNumber":609,"author":{"gitId":"Jaspertzx"},"content":"1. User requests to find a client by name.","lastModifiedDate":"2024-04-13"},{"lineNumber":610,"author":{"gitId":"Jaspertzx"},"content":"2. BookKeeper shows a list of clients whose names contain the given keyword.","lastModifiedDate":"2024-04-13"},{"lineNumber":611,"author":{"gitId":"rertyy"},"content":"","lastModifiedDate":"2024-03-02"},{"lineNumber":612,"author":{"gitId":"rertyy"},"content":"   Use case ends.","lastModifiedDate":"2024-03-02"},{"lineNumber":613,"author":{"gitId":"rertyy"},"content":"","lastModifiedDate":"2024-03-02"},{"lineNumber":614,"author":{"gitId":"rertyy"},"content":"**Extensions**","lastModifiedDate":"2024-03-02"},{"lineNumber":615,"author":{"gitId":"rertyy"},"content":"","lastModifiedDate":"2024-03-02"},{"lineNumber":616,"author":{"gitId":"Jaspertzx"},"content":"* 2a. No client is found.","lastModifiedDate":"2024-04-13"},{"lineNumber":617,"author":{"gitId":"rertyy"},"content":"","lastModifiedDate":"2024-03-02"},{"lineNumber":618,"author":{"gitId":"Jaspertzx"},"content":"    * 2a1. BookKeeper shows a message indicating no client is found.","lastModifiedDate":"2024-04-13"},{"lineNumber":619,"author":{"gitId":"Jaspertzx"},"content":"    * 2a2. BookKeeper shows the list of clients with similar names.","lastModifiedDate":"2024-04-13"},{"lineNumber":620,"author":{"gitId":"rertyy"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":621,"author":{"gitId":"rertyy"},"content":"  Use case ends.","lastModifiedDate":"2024-03-07"},{"lineNumber":622,"author":{"gitId":"rertyy"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":623,"author":{"gitId":"rertyy"},"content":"**Use case: Sort by order**","lastModifiedDate":"2024-03-07"},{"lineNumber":624,"author":{"gitId":"rertyy"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":625,"author":{"gitId":"rertyy"},"content":"**MSS**","lastModifiedDate":"2024-03-07"},{"lineNumber":626,"author":{"gitId":"rertyy"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":627,"author":{"gitId":"rertyy"},"content":"1. User requests to sort by order.","lastModifiedDate":"2024-03-07"},{"lineNumber":628,"author":{"gitId":"Jaspertzx"},"content":"2. BookKeeper shows a list of clients sorted by the given order.","lastModifiedDate":"2024-04-13"},{"lineNumber":629,"author":{"gitId":"rertyy"},"content":"","lastModifiedDate":"2024-03-02"},{"lineNumber":630,"author":{"gitId":"rertyy"},"content":"   Use case ends.","lastModifiedDate":"2024-03-02"},{"lineNumber":631,"author":{"gitId":"rertyy"},"content":"","lastModifiedDate":"2024-03-02"},{"lineNumber":632,"author":{"gitId":"rertyy"},"content":"**Use case: Show help**","lastModifiedDate":"2024-03-02"},{"lineNumber":633,"author":{"gitId":"rertyy"},"content":"","lastModifiedDate":"2024-03-02"},{"lineNumber":634,"author":{"gitId":"rertyy"},"content":"**MSS**","lastModifiedDate":"2024-03-02"},{"lineNumber":635,"author":{"gitId":"rertyy"},"content":"","lastModifiedDate":"2024-03-02"},{"lineNumber":636,"author":{"gitId":"rertyy"},"content":"1. User requests to show help.","lastModifiedDate":"2024-03-07"},{"lineNumber":637,"author":{"gitId":"Jaspertzx"},"content":"2. BookKeeper shows a help page.","lastModifiedDate":"2024-04-13"},{"lineNumber":638,"author":{"gitId":"rertyy"},"content":"","lastModifiedDate":"2024-03-02"},{"lineNumber":639,"author":{"gitId":"rertyy"},"content":"   Use case ends.","lastModifiedDate":"2024-03-02"},{"lineNumber":640,"author":{"gitId":"rertyy"},"content":"","lastModifiedDate":"2024-03-02"},{"lineNumber":641,"author":{"gitId":"rertyy"},"content":"**Use case: Clear all entries**","lastModifiedDate":"2024-03-02"},{"lineNumber":642,"author":{"gitId":"rertyy"},"content":"","lastModifiedDate":"2024-03-02"},{"lineNumber":643,"author":{"gitId":"rertyy"},"content":"**MSS**","lastModifiedDate":"2024-03-02"},{"lineNumber":644,"author":{"gitId":"rertyy"},"content":"","lastModifiedDate":"2024-03-02"},{"lineNumber":645,"author":{"gitId":"rertyy"},"content":"1. User requests to clear all entries.","lastModifiedDate":"2024-03-07"},{"lineNumber":646,"author":{"gitId":"Jaspertzx"},"content":"2. BookKeeper clears all entries.","lastModifiedDate":"2024-04-13"},{"lineNumber":647,"author":{"gitId":"rertyy"},"content":"","lastModifiedDate":"2024-03-02"},{"lineNumber":648,"author":{"gitId":"rertyy"},"content":"   Use case ends.","lastModifiedDate":"2024-03-02"},{"lineNumber":649,"author":{"gitId":"rertyy"},"content":"","lastModifiedDate":"2024-03-02"},{"lineNumber":650,"author":{"gitId":"rertyy"},"content":"**Use case: Exit the program**","lastModifiedDate":"2024-03-02"},{"lineNumber":651,"author":{"gitId":"rertyy"},"content":"","lastModifiedDate":"2024-03-02"},{"lineNumber":652,"author":{"gitId":"rertyy"},"content":"**MSS**","lastModifiedDate":"2024-03-02"},{"lineNumber":653,"author":{"gitId":"rertyy"},"content":"","lastModifiedDate":"2024-03-02"},{"lineNumber":654,"author":{"gitId":"rertyy"},"content":"1. User requests to exit the program.","lastModifiedDate":"2024-03-07"},{"lineNumber":655,"author":{"gitId":"Jaspertzx"},"content":"2. BookKeeper exits.","lastModifiedDate":"2024-04-13"},{"lineNumber":656,"author":{"gitId":"rertyy"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":657,"author":{"gitId":"rertyy"},"content":"   Use case ends.","lastModifiedDate":"2024-03-07"},{"lineNumber":658,"author":{"gitId":"rertyy"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":659,"author":{"gitId":"rertyy"},"content":"**Use case: Add order**","lastModifiedDate":"2024-03-07"},{"lineNumber":660,"author":{"gitId":"rertyy"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":661,"author":{"gitId":"rertyy"},"content":"**MSS**","lastModifiedDate":"2024-03-07"},{"lineNumber":662,"author":{"gitId":"rertyy"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":663,"author":{"gitId":"rertyy"},"content":"1. User requests to add an order.","lastModifiedDate":"2024-03-07"},{"lineNumber":664,"author":{"gitId":"Jaspertzx"},"content":"2. BookKeeper adds an order.","lastModifiedDate":"2024-04-13"},{"lineNumber":665,"author":{"gitId":"rertyy"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":666,"author":{"gitId":"rertyy"},"content":"   Use case ends.","lastModifiedDate":"2024-03-07"},{"lineNumber":667,"author":{"gitId":"rertyy"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":668,"author":{"gitId":"rertyy"},"content":"**Extensions**","lastModifiedDate":"2024-03-07"},{"lineNumber":669,"author":{"gitId":"rertyy"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":670,"author":{"gitId":"rertyy"},"content":"* 2a. The order already exists.","lastModifiedDate":"2024-03-07"},{"lineNumber":671,"author":{"gitId":"rertyy"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":672,"author":{"gitId":"Jaspertzx"},"content":"    * 2a1. BookKeeper shows an error message.","lastModifiedDate":"2024-04-13"},{"lineNumber":673,"author":{"gitId":"rertyy"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":674,"author":{"gitId":"rertyy"},"content":"      Use case resumes at step 1.","lastModifiedDate":"2024-03-07"},{"lineNumber":675,"author":{"gitId":"rertyy"},"content":"* 2b. The order details are invalid.","lastModifiedDate":"2024-03-07"},{"lineNumber":676,"author":{"gitId":"rertyy"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":677,"author":{"gitId":"Jaspertzx"},"content":"    * 2b1. BookKeeper shows an error message.","lastModifiedDate":"2024-04-13"},{"lineNumber":678,"author":{"gitId":"rertyy"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":679,"author":{"gitId":"rertyy"},"content":"      Use case resumes at step 1.","lastModifiedDate":"2024-03-07"},{"lineNumber":680,"author":{"gitId":"rertyy"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":681,"author":{"gitId":"rertyy"},"content":"**Use case: Edit order**","lastModifiedDate":"2024-03-07"},{"lineNumber":682,"author":{"gitId":"rertyy"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":683,"author":{"gitId":"rertyy"},"content":"**MSS**","lastModifiedDate":"2024-03-07"},{"lineNumber":684,"author":{"gitId":"rertyy"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":685,"author":{"gitId":"rertyy"},"content":"1. User requests to edit an order.","lastModifiedDate":"2024-03-07"},{"lineNumber":686,"author":{"gitId":"Jaspertzx"},"content":"2. BookKeeper shows the order to be edited.","lastModifiedDate":"2024-04-13"},{"lineNumber":687,"author":{"gitId":"rertyy"},"content":"3. User edits the order.","lastModifiedDate":"2024-03-07"},{"lineNumber":688,"author":{"gitId":"Jaspertzx"},"content":"4. BookKeeper shows the edited order.","lastModifiedDate":"2024-04-13"},{"lineNumber":689,"author":{"gitId":"rertyy"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":690,"author":{"gitId":"rertyy"},"content":"   Use case ends.","lastModifiedDate":"2024-03-07"},{"lineNumber":691,"author":{"gitId":"rertyy"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":692,"author":{"gitId":"rertyy"},"content":"**Extensions**","lastModifiedDate":"2024-03-07"},{"lineNumber":693,"author":{"gitId":"rertyy"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":694,"author":{"gitId":"rertyy"},"content":"* 2a. The order does not exist.","lastModifiedDate":"2024-03-07"},{"lineNumber":695,"author":{"gitId":"rertyy"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":696,"author":{"gitId":"Jaspertzx"},"content":"    * 2a1. BookKeeper shows an error message.","lastModifiedDate":"2024-04-13"},{"lineNumber":697,"author":{"gitId":"rertyy"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":698,"author":{"gitId":"rertyy"},"content":"      Use case resumes at step 1.","lastModifiedDate":"2024-03-07"},{"lineNumber":699,"author":{"gitId":"rertyy"},"content":"* 3a. The order details are invalid.","lastModifiedDate":"2024-03-07"},{"lineNumber":700,"author":{"gitId":"rertyy"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":701,"author":{"gitId":"Jaspertzx"},"content":"    * 3a1. BookKeeper shows an error message.","lastModifiedDate":"2024-04-13"},{"lineNumber":702,"author":{"gitId":"rertyy"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":703,"author":{"gitId":"rertyy"},"content":"      Use case resumes at step 2.","lastModifiedDate":"2024-03-07"},{"lineNumber":704,"author":{"gitId":"rertyy"},"content":"* 3b. The order details are unchanged.","lastModifiedDate":"2024-03-07"},{"lineNumber":705,"author":{"gitId":"rertyy"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":706,"author":{"gitId":"Jaspertzx"},"content":"    * 3b1. BookKeeper shows a message indicating no changes are made.","lastModifiedDate":"2024-04-13"},{"lineNumber":707,"author":{"gitId":"rertyy"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":708,"author":{"gitId":"rertyy"},"content":"      Use case resumes at step 2.","lastModifiedDate":"2024-03-07"},{"lineNumber":709,"author":{"gitId":"rertyy"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":710,"author":{"gitId":"rertyy"},"content":"**Use case: Delete order**","lastModifiedDate":"2024-03-07"},{"lineNumber":711,"author":{"gitId":"rertyy"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":712,"author":{"gitId":"rertyy"},"content":"**MSS**","lastModifiedDate":"2024-03-07"},{"lineNumber":713,"author":{"gitId":"rertyy"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":714,"author":{"gitId":"rertyy"},"content":"1. User requests to delete an order.","lastModifiedDate":"2024-03-07"},{"lineNumber":715,"author":{"gitId":"Jaspertzx"},"content":"2. BookKeeper deletes the order.","lastModifiedDate":"2024-04-13"},{"lineNumber":716,"author":{"gitId":"rertyy"},"content":"","lastModifiedDate":"2024-03-02"},{"lineNumber":717,"author":{"gitId":"rertyy"},"content":"   Use case ends.","lastModifiedDate":"2024-03-02"},{"lineNumber":718,"author":{"gitId":"rertyy"},"content":"","lastModifiedDate":"2024-03-02"},{"lineNumber":719,"author":{"gitId":"rertyy"},"content":"**Extensions**","lastModifiedDate":"2024-03-02"},{"lineNumber":720,"author":{"gitId":"rertyy"},"content":"","lastModifiedDate":"2024-03-02"},{"lineNumber":721,"author":{"gitId":"rertyy"},"content":"* 2a. The order does not exist.","lastModifiedDate":"2024-03-07"},{"lineNumber":722,"author":{"gitId":"rertyy"},"content":"","lastModifiedDate":"2024-03-02"},{"lineNumber":723,"author":{"gitId":"Jaspertzx"},"content":"    * 2a1. BookKeeper shows an error message.","lastModifiedDate":"2024-04-13"},{"lineNumber":724,"author":{"gitId":"rertyy"},"content":"","lastModifiedDate":"2024-03-02"},{"lineNumber":725,"author":{"gitId":"rertyy"},"content":"      Use case resumes at step 1.","lastModifiedDate":"2024-03-02"},{"lineNumber":726,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":727,"author":{"gitId":"-"},"content":"### Non-Functional Requirements","lastModifiedDate":"2020-05-23"},{"lineNumber":728,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":729,"author":{"gitId":"-"},"content":"1. Should work on any _mainstream OS_ as long as it has Java `11` or above installed.","lastModifiedDate":"2020-05-23"},{"lineNumber":730,"author":{"gitId":"kailinteoo"},"content":"2. Should be able to hold up to 1000 clients\u0027 information without a noticeable sluggishness in performance for typical","lastModifiedDate":"2024-04-14"},{"lineNumber":731,"author":{"gitId":"kailinteoo"},"content":"   usage.","lastModifiedDate":"2024-04-14"},{"lineNumber":732,"author":{"gitId":"rertyy"},"content":"3. A user with above average typing speed for regular English text (i.e. not code, not system admin commands) should be","lastModifiedDate":"2024-03-18"},{"lineNumber":733,"author":{"gitId":"rertyy"},"content":"   able to accomplish most of the tasks faster using commands than using the mouse.","lastModifiedDate":"2024-03-18"},{"lineNumber":734,"author":{"gitId":"rertyy"},"content":"4. Should provide clear and informative error messages to users in case of unexpected errors. Additionally, detailed","lastModifiedDate":"2024-03-18"},{"lineNumber":735,"author":{"gitId":"rertyy"},"content":"   logs should be maintained for system administrators to troubleshoot issues effectively.","lastModifiedDate":"2024-03-18"},{"lineNumber":736,"author":{"gitId":"rertyy"},"content":"5. Application architecture should be scalable to accommodate future growth in terms of users and data volume, without","lastModifiedDate":"2024-03-18"},{"lineNumber":737,"author":{"gitId":"rertyy"},"content":"   compromising performance.","lastModifiedDate":"2024-03-18"},{"lineNumber":738,"author":{"gitId":"rertyy"},"content":"6. Automated backups of critical data should be performed, and there should be a documented and tested procedure for","lastModifiedDate":"2024-03-18"},{"lineNumber":739,"author":{"gitId":"rertyy"},"content":"   data recovery in case of system failures or data loss.","lastModifiedDate":"2024-03-18"},{"lineNumber":740,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":741,"author":{"gitId":"-"},"content":"### Glossary","lastModifiedDate":"2020-05-23"},{"lineNumber":742,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":743,"author":{"gitId":"-"},"content":"* **Mainstream OS**: Windows, Linux, Unix, MacOS","lastModifiedDate":"2024-02-09"},{"lineNumber":744,"author":{"gitId":"-"},"content":"* **Private contact detail**: A contact detail that is not meant to be shared with others","lastModifiedDate":"2020-05-23"},{"lineNumber":745,"author":{"gitId":"shavonneg"},"content":"* **Application architecture**: Describes the patterns and techniques used to design and build an application","lastModifiedDate":"2024-03-05"},{"lineNumber":746,"author":{"gitId":"rertyy"},"content":"* **System administrators**: Professionals responsible for managing, configuring, and ensuring the proper operation of","lastModifiedDate":"2024-03-18"},{"lineNumber":747,"author":{"gitId":"rertyy"},"content":"  computer systems and servers","lastModifiedDate":"2024-03-18"},{"lineNumber":748,"author":{"gitId":"rertyy"},"content":"* **Detailed logs**: Records that track events, operations, errors, and other significant activities that occur within a","lastModifiedDate":"2024-03-18"},{"lineNumber":749,"author":{"gitId":"rertyy"},"content":"  software system or application.","lastModifiedDate":"2024-03-18"},{"lineNumber":750,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":751,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":752,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":753,"author":{"gitId":"-"},"content":"## **Appendix: Instructions for manual testing**","lastModifiedDate":"2020-05-23"},{"lineNumber":754,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":755,"author":{"gitId":"-"},"content":"Given below are instructions to test the app manually.","lastModifiedDate":"2020-05-23"},{"lineNumber":756,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":757,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** These instructions only provide a starting point for testers to work on;","lastModifiedDate":"2020-05-23"},{"lineNumber":758,"author":{"gitId":"-"},"content":"testers are expected to do more *exploratory* testing.","lastModifiedDate":"2020-05-23"},{"lineNumber":759,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":760,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":761,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":762,"author":{"gitId":"-"},"content":"### Launch and shutdown","lastModifiedDate":"2020-05-23"},{"lineNumber":763,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":764,"author":{"gitId":"-"},"content":"1. Initial launch","lastModifiedDate":"2020-05-23"},{"lineNumber":765,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":766,"author":{"gitId":"-"},"content":"    1. Download the jar file and copy into an empty folder","lastModifiedDate":"2020-05-23"},{"lineNumber":767,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":768,"author":{"gitId":"rertyy"},"content":"    1. Double-click the jar file Expected: Shows the GUI with a set of sample contacts. The window size may not be","lastModifiedDate":"2024-03-02"},{"lineNumber":769,"author":{"gitId":"rertyy"},"content":"       optimum.","lastModifiedDate":"2024-03-02"},{"lineNumber":770,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":771,"author":{"gitId":"-"},"content":"1. Saving window preferences","lastModifiedDate":"2020-05-23"},{"lineNumber":772,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":773,"author":{"gitId":"-"},"content":"    1. Resize the window to an optimum size. Move the window to a different location. Close the window.","lastModifiedDate":"2020-05-23"},{"lineNumber":774,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":775,"author":{"gitId":"-"},"content":"    1. Re-launch the app by double-clicking the jar file.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":776,"author":{"gitId":"-"},"content":"       Expected: The most recent window size and location is retained.","lastModifiedDate":"2020-05-23"},{"lineNumber":777,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":778,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"},{"lineNumber":779,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":780,"author":{"gitId":"Jaspertzx"},"content":"### Deleting a Client","lastModifiedDate":"2024-04-13"},{"lineNumber":781,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":782,"author":{"gitId":"Jaspertzx"},"content":"1. Deleting a client while all clients are being shown","lastModifiedDate":"2024-04-13"},{"lineNumber":783,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":784,"author":{"gitId":"Jaspertzx"},"content":"    1. Prerequisites: List all clients using the `list` command. Multiple clients in the list.","lastModifiedDate":"2024-04-13"},{"lineNumber":785,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":786,"author":{"gitId":"-"},"content":"    1. Test case: `delete 1`\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":787,"author":{"gitId":"rertyy"},"content":"       Expected: First contact is deleted from the list. Details of the deleted contact shown in the status message.","lastModifiedDate":"2024-03-02"},{"lineNumber":788,"author":{"gitId":"rertyy"},"content":"       Timestamp in the status bar is updated.","lastModifiedDate":"2024-03-02"},{"lineNumber":789,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":790,"author":{"gitId":"-"},"content":"    1. Test case: `delete 0`\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":791,"author":{"gitId":"Jaspertzx"},"content":"       Expected: No client is deleted. Error details shown in the status message. Status bar remains the same.","lastModifiedDate":"2024-04-13"},{"lineNumber":792,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":793,"author":{"gitId":"-"},"content":"    1. Other incorrect delete commands to try: `delete`, `delete x`, `...` (where x is larger than the list size)\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":794,"author":{"gitId":"-"},"content":"       Expected: Similar to previous.","lastModifiedDate":"2020-05-23"},{"lineNumber":795,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":796,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"},{"lineNumber":797,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":798,"author":{"gitId":"-"},"content":"### Saving data","lastModifiedDate":"2020-05-23"},{"lineNumber":799,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":800,"author":{"gitId":"-"},"content":"1. Dealing with missing/corrupted data files","lastModifiedDate":"2020-05-23"},{"lineNumber":801,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":802,"author":{"gitId":"-"},"content":"    1. _{explain how to simulate a missing/corrupted file, and the expected behavior}_","lastModifiedDate":"2020-05-23"},{"lineNumber":803,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":804,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"kailinteoo":60,"shavonneg":53,"rertyy":231,"Jaspertzx":162,"-":298}},{"path":"docs/SettingUp.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: Setting up and getting started","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"## Setting up the project in your computer","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-warning\"\u003e:exclamation: **Caution:**","lastModifiedDate":"2020-06-07"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"Follow the steps in the following guide precisely. Things will not work out if you deviate in some steps.","lastModifiedDate":"2020-06-07"},{"lineNumber":17,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"First, **fork** this repo, and **clone** the fork into your computer.","lastModifiedDate":"2020-06-07"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-06-07"},{"lineNumber":21,"author":{"gitId":"-"},"content":"If you plan to use Intellij IDEA (highly recommended):","lastModifiedDate":"2020-06-07"},{"lineNumber":22,"author":{"gitId":"-"},"content":"1. **Configure the JDK**: Follow the guide [_[se-edu/guides] IDEA: Configuring the JDK_](https://se-education.org/guides/tutorials/intellijJdk.html) to to ensure Intellij is configured to use **JDK 11**.","lastModifiedDate":"2020-06-07"},{"lineNumber":23,"author":{"gitId":"-"},"content":"1. **Import the project as a Gradle project**: Follow the guide [_[se-edu/guides] IDEA: Importing a Gradle project_](https://se-education.org/guides/tutorials/intellijImportGradleProject.html) to import the project into IDEA.\u003cbr\u003e","lastModifiedDate":"2020-06-07"},{"lineNumber":24,"author":{"gitId":"-"},"content":"  :exclamation: Note: Importing a Gradle project is slightly different from importing a normal Java project.","lastModifiedDate":"2020-06-07"},{"lineNumber":25,"author":{"gitId":"-"},"content":"1. **Verify the setup**:","lastModifiedDate":"2020-06-07"},{"lineNumber":26,"author":{"gitId":"-"},"content":"   1. Run the `seedu.address.Main` and try a few commands.","lastModifiedDate":"2020-06-07"},{"lineNumber":27,"author":{"gitId":"-"},"content":"   1. [Run the tests](Testing.md) to ensure they all pass.","lastModifiedDate":"2020-06-07"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-06-07"},{"lineNumber":29,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"## Before writing code","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"1. **Configure the coding style**","lastModifiedDate":"2020-06-07"},{"lineNumber":34,"author":{"gitId":"-"},"content":"   ","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"   If using IDEA, follow the guide [_[se-edu/guides] IDEA: Configuring the code style_](https://se-education.org/guides/tutorials/intellijCodeStyle.html) to set up IDEA\u0027s coding style to match ours.","lastModifiedDate":"2020-09-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"   \u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e:bulb: **Tip:**","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"   Optionally, you can follow the guide [_[se-edu/guides] Using Checkstyle_](https://se-education.org/guides/tutorials/checkstyle.html) to find how to use the CheckStyle within IDEA e.g., to report problems _as_ you write code.","lastModifiedDate":"2020-06-07"},{"lineNumber":40,"author":{"gitId":"-"},"content":"   \u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"1. **Set up CI**","lastModifiedDate":"2020-06-07"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"   This project comes with a GitHub Actions config files (in `.github/workflows` folder). When GitHub detects those files, it will run the CI for your project automatically at each push to the `master` branch or to any PR. No set up required.","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"1. **Learn the design**","lastModifiedDate":"2020-06-07"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"Jaspertzx"},"content":"   When you are ready to start coding, we recommend that you get some sense of the overall design by reading about [BookKeeper’s architecture](DeveloperGuide.md#architecture).","lastModifiedDate":"2024-04-14"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"1. **Do the tutorials**","lastModifiedDate":"2020-06-07"},{"lineNumber":51,"author":{"gitId":"-"},"content":"   These tutorials will help you get acquainted with the codebase.","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"   * [Tracing code](tutorials/TracingCode.md)","lastModifiedDate":"2020-07-29"},{"lineNumber":54,"author":{"gitId":"-"},"content":"   * [Adding a new command](tutorials/AddRemark.md)","lastModifiedDate":"2020-07-29"},{"lineNumber":55,"author":{"gitId":"-"},"content":"   * [Removing fields](tutorials/RemovingFields.md)","lastModifiedDate":"2021-08-01"}],"authorContributionMap":{"Jaspertzx":1,"-":54}},{"path":"docs/UserGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: User Guide","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"shavonneg"},"content":"## Table of Contents","lastModifiedDate":"2024-04-04"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":8,"author":{"gitId":"kailinteoo"},"content":"[1. Introduction](#1-introduction)","lastModifiedDate":"2024-04-14"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":10,"author":{"gitId":"kailinteoo"},"content":"* [1.1. Introducing BookKeeper](#11-introducing-bookkeeper)","lastModifiedDate":"2024-04-14"},{"lineNumber":11,"author":{"gitId":"kailinteoo"},"content":"* [1.2. What\u0027s New in BookKeeper release v1.4](#12-whats-new-in-bookkeeper-release-v14)","lastModifiedDate":"2024-04-14"},{"lineNumber":12,"author":{"gitId":"kailinteoo"},"content":"* [1.3. Product Description](#13-product-description)","lastModifiedDate":"2024-04-14"},{"lineNumber":13,"author":{"gitId":"kailinteoo"},"content":"* [1.4. Unique Selling Points](#14-unique-selling-points)","lastModifiedDate":"2024-04-14"},{"lineNumber":14,"author":{"gitId":"kailinteoo"},"content":"    * [1.4.1. Centralised Platform](#141-centralised-platform)","lastModifiedDate":"2024-04-14"},{"lineNumber":15,"author":{"gitId":"kailinteoo"},"content":"    * [1.4.2. Efficiency](#142-efficiency)","lastModifiedDate":"2024-04-14"},{"lineNumber":16,"author":{"gitId":"kailinteoo"},"content":"    * [1.4.3. Tailored for Florist Businesses](#143-tailored-for-florist-businesses)","lastModifiedDate":"2024-04-14"},{"lineNumber":17,"author":{"gitId":"kailinteoo"},"content":"    * [1.4.4. Cost-Effective](#144-cost-effective)","lastModifiedDate":"2024-04-14"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":19,"author":{"gitId":"kailinteoo"},"content":"[2. Target Audience with assumptions](#2-target-audience-with-assumptions)","lastModifiedDate":"2024-04-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":21,"author":{"gitId":"kailinteoo"},"content":"* [2.1. Target Audience](#21-target-audience)","lastModifiedDate":"2024-04-14"},{"lineNumber":22,"author":{"gitId":"kailinteoo"},"content":"* [2.2. Assumptions](#22-assumptions)","lastModifiedDate":"2024-04-14"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":24,"author":{"gitId":"kailinteoo"},"content":"[3. Quick start](#3-quick-start)","lastModifiedDate":"2024-04-14"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":26,"author":{"gitId":"kailinteoo"},"content":"[4. Commands](#4-commands)","lastModifiedDate":"2024-04-14"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":28,"author":{"gitId":"kailinteoo"},"content":"* [4.1 Command summary](#41-command-summary)","lastModifiedDate":"2024-04-14"},{"lineNumber":29,"author":{"gitId":"kailinteoo"},"content":"    * [4.1.1 Client](#411-client)","lastModifiedDate":"2024-04-14"},{"lineNumber":30,"author":{"gitId":"kailinteoo"},"content":"    * [4.1.2 Order](#412-order)","lastModifiedDate":"2024-04-14"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":32,"author":{"gitId":"kailinteoo"},"content":"[5. Main Features](#5-main-features)","lastModifiedDate":"2024-04-14"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":34,"author":{"gitId":"kailinteoo"},"content":"* [5.1. Help](#51-viewing-help--help)","lastModifiedDate":"2024-04-14"},{"lineNumber":35,"author":{"gitId":"kailinteoo"},"content":"* [5.2. Clear all entries](#52-clearing-all-entries--clear)","lastModifiedDate":"2024-04-14"},{"lineNumber":36,"author":{"gitId":"kailinteoo"},"content":"* [5.3. Exit the program](#53-exiting-the-program--exit)","lastModifiedDate":"2024-04-14"},{"lineNumber":37,"author":{"gitId":"kailinteoo"},"content":"* [5.4. Add a client](#54-adding-a-client-add)","lastModifiedDate":"2024-04-14"},{"lineNumber":38,"author":{"gitId":"kailinteoo"},"content":"* [5.5. Edit a client](#55-editing-a-client--edit)","lastModifiedDate":"2024-04-14"},{"lineNumber":39,"author":{"gitId":"kailinteoo"},"content":"* [5.6. Delete a client](#56-deleting-a-client--delete)","lastModifiedDate":"2024-04-14"},{"lineNumber":40,"author":{"gitId":"kailinteoo"},"content":"* [5.7. List all clients](#57-listing-all-clients--list)","lastModifiedDate":"2024-04-14"},{"lineNumber":41,"author":{"gitId":"kailinteoo"},"content":"* [5.8. Find clients by name](#58-locating-clients-by-name-find)","lastModifiedDate":"2024-04-14"},{"lineNumber":42,"author":{"gitId":"kailinteoo"},"content":"* [5.9. Add an order](#59-adding-an-order-order)","lastModifiedDate":"2024-04-14"},{"lineNumber":43,"author":{"gitId":"kailinteoo"},"content":"* [5.10. Delete an order](#510-deleting-an-order-deleteorder)","lastModifiedDate":"2024-04-14"},{"lineNumber":44,"author":{"gitId":"kailinteoo"},"content":"* [5.11. Edit an order](#511-editing-an-order--editorder)","lastModifiedDate":"2024-04-14"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":46,"author":{"gitId":"shavonneg"},"content":"[6. Known issues](#6-known-issues)","lastModifiedDate":"2024-04-14"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":48,"author":{"gitId":"shavonneg"},"content":"[Appendix A: Technical Glossary](#appendix-a-technical-glossary)","lastModifiedDate":"2024-04-14"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":50,"author":{"gitId":"shavonneg"},"content":"[Appendix B: FAQ](#appendix-b-faq)","lastModifiedDate":"2024-04-14"},{"lineNumber":51,"author":{"gitId":"shavonneg"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":52,"author":{"gitId":"shavonneg"},"content":"[Appendix C: Planned Features](#appendix-c-planned-features)","lastModifiedDate":"2024-04-14"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-07"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"kailinteoo"},"content":"## 1. Introduction","lastModifiedDate":"2024-04-14"},{"lineNumber":59,"author":{"gitId":"kailinteoo"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":60,"author":{"gitId":"kailinteoo"},"content":"### 1.1. Introducing BookKeeper","lastModifiedDate":"2024-04-14"},{"lineNumber":61,"author":{"gitId":"shavonneg"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":62,"author":{"gitId":"kailinteoo"},"content":"Welcome to BookKeeper — the user-friendly desktop app designed specifically for you, an aspiring florist ready to take","lastModifiedDate":"2024-04-14"},{"lineNumber":63,"author":{"gitId":"kailinteoo"},"content":"on the fast-paced world of the floristry business. You’ve decided on selling flower bouquets, and are looking for cheap","lastModifiedDate":"2024-04-14"},{"lineNumber":64,"author":{"gitId":"kailinteoo"},"content":"and efficient ways to bring your business to the next level.","lastModifiedDate":"2024-04-14"},{"lineNumber":65,"author":{"gitId":"shavonneg"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":66,"author":{"gitId":"kailinteoo"},"content":"BookKeeper helps you manage your clients and orders. We have designed this application with your needs in mind, and we","lastModifiedDate":"2024-04-14"},{"lineNumber":67,"author":{"gitId":"kailinteoo"},"content":"hope to make managing your business a breeze.","lastModifiedDate":"2024-04-14"},{"lineNumber":68,"author":{"gitId":"kailinteoo"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":69,"author":{"gitId":"kailinteoo"},"content":"Our user guide will be your go-to resource to master Bookkeeper\u0027s different features. Inside, you will find detailed","lastModifiedDate":"2024-04-14"},{"lineNumber":70,"author":{"gitId":"kailinteoo"},"content":"explanations of our different features. Whether you are a greenhorn or an experienced practitioner, our guide has you","lastModifiedDate":"2024-04-14"},{"lineNumber":71,"author":{"gitId":"kailinteoo"},"content":"covered.","lastModifiedDate":"2024-04-14"},{"lineNumber":72,"author":{"gitId":"kailinteoo"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":73,"author":{"gitId":"kailinteoo"},"content":"This guide is broken down into 5 main sections,","lastModifiedDate":"2024-04-14"},{"lineNumber":74,"author":{"gitId":"kailinteoo"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":75,"author":{"gitId":"kailinteoo"},"content":"* Introduction (this)","lastModifiedDate":"2024-04-14"},{"lineNumber":76,"author":{"gitId":"kailinteoo"},"content":"* Quick Start","lastModifiedDate":"2024-04-14"},{"lineNumber":77,"author":{"gitId":"kailinteoo"},"content":"* Command Details","lastModifiedDate":"2024-04-14"},{"lineNumber":78,"author":{"gitId":"kailinteoo"},"content":"* Command Cheat Sheet","lastModifiedDate":"2024-04-14"},{"lineNumber":79,"author":{"gitId":"kailinteoo"},"content":"* FAQ and Glossary","lastModifiedDate":"2024-04-14"},{"lineNumber":80,"author":{"gitId":"kailinteoo"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":81,"author":{"gitId":"kailinteoo"},"content":"Got questions? Check out the Frequently Asked Questions (FAQ) for quick answers to the common queries we receive.","lastModifiedDate":"2024-04-14"},{"lineNumber":82,"author":{"gitId":"kailinteoo"},"content":"Thank you for choosing BookKeeper! Without further ado, let us jump right into the guide.","lastModifiedDate":"2024-04-14"},{"lineNumber":83,"author":{"gitId":"kailinteoo"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":84,"author":{"gitId":"kailinteoo"},"content":"### 1.2. What\u0027s New in BookKeeper release v1.4","lastModifiedDate":"2024-04-14"},{"lineNumber":85,"author":{"gitId":"kailinteoo"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":86,"author":{"gitId":"kailinteoo"},"content":"BookKeeper v1.4 contains the following new features and improvements.","lastModifiedDate":"2024-04-02"},{"lineNumber":87,"author":{"gitId":"kailinteoo"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":88,"author":{"gitId":"kailinteoo"},"content":"* Order management enhancements","lastModifiedDate":"2024-04-02"},{"lineNumber":89,"author":{"gitId":"kailinteoo"},"content":"    * Improved functionalities for efficient order management, with features like add, delete and edit orders.","lastModifiedDate":"2024-04-14"},{"lineNumber":90,"author":{"gitId":"rertyy"},"content":"* Link Client to Orders","lastModifiedDate":"2024-04-14"},{"lineNumber":91,"author":{"gitId":"kailinteoo"},"content":"    * Seamlessly links clients to their respective orders for comprehensive tracking and management","lastModifiedDate":"2024-04-02"},{"lineNumber":92,"author":{"gitId":"kailinteoo"},"content":"* Provides bug fixes","lastModifiedDate":"2024-04-02"},{"lineNumber":93,"author":{"gitId":"kailinteoo"},"content":"    * Fixed minor bugs to ensure the smooth operation of the application","lastModifiedDate":"2024-04-02"},{"lineNumber":94,"author":{"gitId":"kailinteoo"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":95,"author":{"gitId":"kailinteoo"},"content":"### 1.3. Product Description","lastModifiedDate":"2024-04-14"},{"lineNumber":96,"author":{"gitId":"kailinteoo"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":97,"author":{"gitId":"kailinteoo"},"content":"BookKeeper is like an address book, providing a working platform that can effectively manage user information","lastModifiedDate":"2024-04-02"},{"lineNumber":98,"author":{"gitId":"kailinteoo"},"content":"and orders. This efficiently manages customer relationships as it maximises user productivity.","lastModifiedDate":"2024-04-02"},{"lineNumber":99,"author":{"gitId":"kailinteoo"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":100,"author":{"gitId":"kailinteoo"},"content":"### 1.4. Unique Selling Points","lastModifiedDate":"2024-04-14"},{"lineNumber":101,"author":{"gitId":"kailinteoo"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":102,"author":{"gitId":"kailinteoo"},"content":"#### 1.4.1. Centralised Platform","lastModifiedDate":"2024-04-14"},{"lineNumber":103,"author":{"gitId":"kailinteoo"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":104,"author":{"gitId":"kailinteoo"},"content":"BookKeeper offers a centralised platform where you can effortlessly store and search for client information,","lastModifiedDate":"2024-04-02"},{"lineNumber":105,"author":{"gitId":"kailinteoo"},"content":"keeping all your vital data organised and accessible at your fingertips.","lastModifiedDate":"2024-04-02"},{"lineNumber":106,"author":{"gitId":"kailinteoo"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":107,"author":{"gitId":"kailinteoo"},"content":"#### 1.4.2. Efficiency","lastModifiedDate":"2024-04-14"},{"lineNumber":108,"author":{"gitId":"kailinteoo"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":109,"author":{"gitId":"kailinteoo"},"content":"With its intuitive command-line interface, BookKeeper is faster and more efficient than traditional methods","lastModifiedDate":"2024-04-02"},{"lineNumber":110,"author":{"gitId":"kailinteoo"},"content":"like CRMs or Excel sheets. Spend less time navigating complex menus and more time serving your customer’s needs.","lastModifiedDate":"2024-04-02"},{"lineNumber":111,"author":{"gitId":"kailinteoo"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":112,"author":{"gitId":"kailinteoo"},"content":"#### 1.4.3. Tailored for Florist Businesses","lastModifiedDate":"2024-04-14"},{"lineNumber":113,"author":{"gitId":"kailinteoo"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":114,"author":{"gitId":"kailinteoo"},"content":"We understand the unique needs of florists, which is why BookKeeper comes equipped with customizable fields, tags,","lastModifiedDate":"2024-04-02"},{"lineNumber":115,"author":{"gitId":"kailinteoo"},"content":"and seamless integration with e-commerce platforms.","lastModifiedDate":"2024-04-02"},{"lineNumber":116,"author":{"gitId":"kailinteoo"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":117,"author":{"gitId":"kailinteoo"},"content":"#### 1.4.4. Cost-Effective","lastModifiedDate":"2024-04-14"},{"lineNumber":118,"author":{"gitId":"kailinteoo"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":119,"author":{"gitId":"kailinteoo"},"content":"Designed with small businesses in mind, BookKeeper is not only powerful but also cost-effective.","lastModifiedDate":"2024-04-02"},{"lineNumber":120,"author":{"gitId":"kailinteoo"},"content":"Say goodbye to expensive software solutions that drain your resources.","lastModifiedDate":"2024-04-02"},{"lineNumber":121,"author":{"gitId":"kailinteoo"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":122,"author":{"gitId":"kailinteoo"},"content":"## 2. Target Audience with assumptions","lastModifiedDate":"2024-04-14"},{"lineNumber":123,"author":{"gitId":"kailinteoo"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":124,"author":{"gitId":"kailinteoo"},"content":"### 2.1. Target Audience","lastModifiedDate":"2024-04-14"},{"lineNumber":125,"author":{"gitId":"kailinteoo"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":126,"author":{"gitId":"kailinteoo"},"content":"BookKeeper is specifically designed for small florist businesses, catering to the unique needs and challenges they face","lastModifiedDate":"2024-04-02"},{"lineNumber":127,"author":{"gitId":"kailinteoo"},"content":"in managing client relationships and orders. Our target audience includes small florist shops, independent floral","lastModifiedDate":"2024-04-02"},{"lineNumber":128,"author":{"gitId":"kailinteoo"},"content":"designers, and boutique flower businesses.","lastModifiedDate":"2024-04-02"},{"lineNumber":129,"author":{"gitId":"kailinteoo"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":130,"author":{"gitId":"kailinteoo"},"content":"### 2.2. Assumptions","lastModifiedDate":"2024-04-14"},{"lineNumber":131,"author":{"gitId":"kailinteoo"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":132,"author":{"gitId":"kailinteoo"},"content":"1. Our application is made with the assumption that users are members of the florist industry and will understand the","lastModifiedDate":"2024-04-02"},{"lineNumber":133,"author":{"gitId":"kailinteoo"},"content":"   needs as well as the terminology used by florists. They can either be business owners, managers, or employees and","lastModifiedDate":"2024-04-02"},{"lineNumber":134,"author":{"gitId":"kailinteoo"},"content":"   are looking for a tailored solution to streamline their operations.","lastModifiedDate":"2024-04-02"},{"lineNumber":135,"author":{"gitId":"kailinteoo"},"content":"2. Users are presumed to have a basic understanding of computer operations and software usage. This can help them to","lastModifiedDate":"2024-04-02"},{"lineNumber":136,"author":{"gitId":"kailinteoo"},"content":"   navigate easily through the application and follow the instructions to download and use BookKeeper,","lastModifiedDate":"2024-04-02"},{"lineNumber":137,"author":{"gitId":"kailinteoo"},"content":"   as provided in this guide.","lastModifiedDate":"2024-04-02"},{"lineNumber":138,"author":{"gitId":"kailinteoo"},"content":"3. While prior experience with customer relationship management (CRM) systems and command line interfaces (CLIs) can","lastModifiedDate":"2024-04-02"},{"lineNumber":139,"author":{"gitId":"kailinteoo"},"content":"   help users to familiarise themselves with BookKeeper fast, BookKeeper is also entry-level-friendly so that we can","lastModifiedDate":"2024-04-02"},{"lineNumber":140,"author":{"gitId":"kailinteoo"},"content":"   accommodate users of all levels of technical expertise.","lastModifiedDate":"2024-04-02"},{"lineNumber":141,"author":{"gitId":"kailinteoo"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":142,"author":{"gitId":"kailinteoo"},"content":"## 3. Quick start","lastModifiedDate":"2024-04-14"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":144,"author":{"gitId":"Jaspertzx"},"content":"1. Ensure you have Java `11` and above installed in your system.","lastModifiedDate":"2024-04-10"},{"lineNumber":145,"author":{"gitId":"Jaspertzx"},"content":"    * You may check if you have Java installed by opening your command prompt or terminal, and type:  ","lastModifiedDate":"2024-04-10"},{"lineNumber":146,"author":{"gitId":"Jaspertzx"},"content":"      `java --version`","lastModifiedDate":"2024-04-10"},{"lineNumber":147,"author":{"gitId":"Jaspertzx"},"content":"        * If Java is installed, you should ensure that it is currently running on version \"11.x.xx\".","lastModifiedDate":"2024-04-10"},{"lineNumber":148,"author":{"gitId":"Jaspertzx"},"content":"        * ![img_2.png](images/JavaVersionScreenshot.png)","lastModifiedDate":"2024-04-10"},{"lineNumber":149,"author":{"gitId":"Jaspertzx"},"content":"            * If you encounter an error, or if your version does not match our specified requirements, you may visit the","lastModifiedDate":"2024-04-10"},{"lineNumber":150,"author":{"gitId":"Jaspertzx"},"content":"              [Official Oracle website](https://www.oracle.com/java/technologies/javase/jdk11-archive-downloads.html) to","lastModifiedDate":"2024-04-10"},{"lineNumber":151,"author":{"gitId":"Jaspertzx"},"content":"              download the Java JDK required to run this project.","lastModifiedDate":"2024-04-10"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"Jaspertzx"},"content":"2. Download the latest `bookkeeper.jar` release from [here](https://github.com/AY2324S2-CS2103T-T09-2/tp/releases).","lastModifiedDate":"2024-04-10"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"kailinteoo"},"content":"3. Copy the file to the folder you want to use as the _home folder_ for your BookKeeper.","lastModifiedDate":"2024-04-08"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"Jaspertzx"},"content":"4. Open your terminal or command prompt in your system.","lastModifiedDate":"2024-04-10"},{"lineNumber":158,"author":{"gitId":"Jaspertzx"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":159,"author":{"gitId":"Jaspertzx"},"content":"5. `cd` into the folder you put the jar file in, and use the `java -jar bookkeeper.jar`","lastModifiedDate":"2024-04-10"},{"lineNumber":160,"author":{"gitId":"shavonneg"},"content":"   command to run the application.\u003cbr\u003e","lastModifiedDate":"2024-04-02"},{"lineNumber":161,"author":{"gitId":"-"},"content":"   A GUI similar to the below should appear in a few seconds. Note how the app contains some sample data.\u003cbr\u003e","lastModifiedDate":"2023-01-01"},{"lineNumber":162,"author":{"gitId":"-"},"content":"   ![Ui](images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":164,"author":{"gitId":"Jaspertzx"},"content":"6. Type the command in the command box and press Enter to execute it. e.g. typing **`help`** and pressing Enter will","lastModifiedDate":"2024-04-10"},{"lineNumber":165,"author":{"gitId":"shavonneg"},"content":"   open the help window.\u003cbr\u003e","lastModifiedDate":"2024-04-02"},{"lineNumber":166,"author":{"gitId":"-"},"content":"   Some example commands you can try:","lastModifiedDate":"2020-05-23"},{"lineNumber":167,"author":{"gitId":"Jaspertzx"},"content":"    * Listing all contacts:","lastModifiedDate":"2024-04-10"},{"lineNumber":168,"author":{"gitId":"Jaspertzx"},"content":"        * Command: `list`","lastModifiedDate":"2024-04-10"},{"lineNumber":169,"author":{"gitId":"Jaspertzx"},"content":"    * Adding a new Client:","lastModifiedDate":"2024-04-10"},{"lineNumber":170,"author":{"gitId":"Jaspertzx"},"content":"        * Command `add n/John Doe p/98765432 e/johnd@example.com a/John street, block 123, #01-01`","lastModifiedDate":"2024-04-10"},{"lineNumber":171,"author":{"gitId":"Jaspertzx"},"content":"        * Adds a new `client` named `John Doe` to BookKeeper.","lastModifiedDate":"2024-04-10"},{"lineNumber":172,"author":{"gitId":"Jaspertzx"},"content":"    * Adding a new Order:","lastModifiedDate":"2024-04-10"},{"lineNumber":173,"author":{"gitId":"Jaspertzx"},"content":"        * Command `order 1 d/1xRoses c/20.99 by/20-10-2030 10:00`","lastModifiedDate":"2024-04-10"},{"lineNumber":174,"author":{"gitId":"Jaspertzx"},"content":"        * Adds a new `order` for 1 Rose, at $20.99 that is to be delivered by 20-10-2030 10:00.","lastModifiedDate":"2024-04-10"},{"lineNumber":175,"author":{"gitId":"Jaspertzx"},"content":"    * Delete an existing Client.","lastModifiedDate":"2024-04-10"},{"lineNumber":176,"author":{"gitId":"Jaspertzx"},"content":"        * Command `delete 1`","lastModifiedDate":"2024-04-10"},{"lineNumber":177,"author":{"gitId":"Jaspertzx"},"content":"        * Deletes the `client` with an index of 1.","lastModifiedDate":"2024-04-10"},{"lineNumber":178,"author":{"gitId":"Jaspertzx"},"content":"    * Clear BookKeeper","lastModifiedDate":"2024-04-10"},{"lineNumber":179,"author":{"gitId":"Jaspertzx"},"content":"        * Command `clear`","lastModifiedDate":"2024-04-10"},{"lineNumber":180,"author":{"gitId":"Jaspertzx"},"content":"        * Clears all clients and orders.","lastModifiedDate":"2024-04-10"},{"lineNumber":181,"author":{"gitId":"Jaspertzx"},"content":"    * Exit","lastModifiedDate":"2024-04-10"},{"lineNumber":182,"author":{"gitId":"Jaspertzx"},"content":"        * Command `exit`","lastModifiedDate":"2024-04-10"},{"lineNumber":183,"author":{"gitId":"Jaspertzx"},"content":"        * Closes the application.","lastModifiedDate":"2024-04-10"},{"lineNumber":184,"author":{"gitId":"Jaspertzx"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":185,"author":{"gitId":"Jaspertzx"},"content":"7. Refer to the [Main Features](#6-main-features) below for details of each command.","lastModifiedDate":"2024-04-10"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":187,"author":{"gitId":"kailinteoo"},"content":"## 4. Commands","lastModifiedDate":"2024-04-14"},{"lineNumber":188,"author":{"gitId":"kailinteoo"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":189,"author":{"gitId":"kailinteoo"},"content":"### 4.1 Command summary","lastModifiedDate":"2024-04-14"},{"lineNumber":190,"author":{"gitId":"shavonneg"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":191,"author":{"gitId":"kailinteoo"},"content":"### 4.1.1 Client","lastModifiedDate":"2024-04-14"},{"lineNumber":192,"author":{"gitId":"kailinteoo"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":193,"author":{"gitId":"Jaspertzx"},"content":"| Action     | Format, Examples                                                                                                                                                  |","lastModifiedDate":"2024-04-04"},{"lineNumber":194,"author":{"gitId":"kailinteoo"},"content":"|------------|-------------------------------------------------------------------------------------------------------------------------------------------------------------------|","lastModifiedDate":"2024-04-14"},{"lineNumber":195,"author":{"gitId":"kailinteoo"},"content":"| **Add**    | `add n/NAME p/PHONE_NUMBER e/EMAIL a/ADDRESS [t/TAG]…​` \u003cbr\u003e e.g., `add n/James Ho p/22224444 e/jamesho@example.com a/123, Clementi Rd, 1234665 t/VIP t/Customer` |","lastModifiedDate":"2024-04-14"},{"lineNumber":196,"author":{"gitId":"Jaspertzx"},"content":"| **Clear**  | `clear`                                                                                                                                                           |","lastModifiedDate":"2024-04-04"},{"lineNumber":197,"author":{"gitId":"Jaspertzx"},"content":"| **Delete** | `delete INDEX`\u003cbr\u003e e.g., `delete 3`                                                                                                                               |","lastModifiedDate":"2024-04-04"},{"lineNumber":198,"author":{"gitId":"Jaspertzx"},"content":"| **Edit**   | `edit INDEX [n/NAME] [p/PHONE_NUMBER] [e/EMAIL] [a/ADDRESS] [t/TAG]…​`\u003cbr\u003e e.g.,`edit 2 n/James Lee e/jameslee@example.com`                                       |","lastModifiedDate":"2024-04-04"},{"lineNumber":199,"author":{"gitId":"Jaspertzx"},"content":"| **Find**   | `find KEYWORD [MORE_KEYWORDS]`\u003cbr\u003e e.g., `find James Jake`                                                                                                        |","lastModifiedDate":"2024-04-04"},{"lineNumber":200,"author":{"gitId":"Jaspertzx"},"content":"| **List**   | `list`                                                                                                                                                            |","lastModifiedDate":"2024-04-04"},{"lineNumber":201,"author":{"gitId":"Jaspertzx"},"content":"| **Help**   | `help`                                                                                                                                                            |","lastModifiedDate":"2024-04-04"},{"lineNumber":202,"author":{"gitId":"kailinteoo"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":203,"author":{"gitId":"kailinteoo"},"content":"### 4.1.2 Order","lastModifiedDate":"2024-04-14"},{"lineNumber":204,"author":{"gitId":"Jaspertzx"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":205,"author":{"gitId":"Jaspertzx"},"content":"| Action          | Format, Examples                                                                                                                     |","lastModifiedDate":"2024-04-04"},{"lineNumber":206,"author":{"gitId":"shavonneg"},"content":"|-----------------|--------------------------------------------------------------------------------------------------------------------------------------|","lastModifiedDate":"2024-04-04"},{"lineNumber":207,"author":{"gitId":"shavonneg"},"content":"| **order**       | `order INDEX by/DEADLINE c/PRICE d/DESCRIPTION` \u003cbr\u003e e.g., `order 3 by/23-07-2024 00:00 c/99.99 d/1xRoses`                           |","lastModifiedDate":"2024-04-04"},{"lineNumber":208,"author":{"gitId":"kailinteoo"},"content":"| **deleteOrder** | `deleteOrder INDEX` \u003cbr/\u003e e.g., `deleteOrder 3`                                                                                      |","lastModifiedDate":"2024-04-07"},{"lineNumber":209,"author":{"gitId":"shavonneg"},"content":"| **editOrder**   | `editOrder INDEX by/DEADLINE c/PRICE d/DESCRIPTION s/STATUS` \u003cbr\u003e e.g., `editOrder 1 by/23-07-2024 10:10 c/40 d/1xRoses s/COMPLETED` |","lastModifiedDate":"2024-04-04"},{"lineNumber":210,"author":{"gitId":"Jaspertzx"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":211,"author":{"gitId":"kailinteoo"},"content":"## 5. Main Features","lastModifiedDate":"2024-04-14"},{"lineNumber":212,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":213,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-info\"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":214,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":215,"author":{"gitId":"-"},"content":"**:information_source: Notes about the command format:**\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":217,"author":{"gitId":"-"},"content":"* Words in `UPPER_CASE` are the parameters to be supplied by the user.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":218,"author":{"gitId":"-"},"content":"  e.g. in `add n/NAME`, `NAME` is a parameter which can be used as `add n/John Doe`.","lastModifiedDate":"2020-05-23"},{"lineNumber":219,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":220,"author":{"gitId":"-"},"content":"* Items in square brackets are optional.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":221,"author":{"gitId":"-"},"content":"  e.g `n/NAME [t/TAG]` can be used as `n/John Doe t/friend` or as `n/John Doe`.","lastModifiedDate":"2020-05-23"},{"lineNumber":222,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":223,"author":{"gitId":"-"},"content":"* Items with `…`​ after them can be used multiple times including zero times.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":224,"author":{"gitId":"shavonneg"},"content":"  e.g. `[t/TAG]…​` can be used as ` ` (i.e. 0 times), `t/VIP`, `t/VIP t/MEMBER` etc.","lastModifiedDate":"2024-04-14"},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":226,"author":{"gitId":"-"},"content":"* Parameters can be in any order.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":227,"author":{"gitId":"-"},"content":"  e.g. if the command specifies `n/NAME p/PHONE_NUMBER`, `p/PHONE_NUMBER n/NAME` is also acceptable.","lastModifiedDate":"2020-05-23"},{"lineNumber":228,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":229,"author":{"gitId":"shavonneg"},"content":"* Names are case-sensitive.\u003cbr\u003e","lastModifiedDate":"2024-04-14"},{"lineNumber":230,"author":{"gitId":"shavonneg"},"content":"  e.g. the names `John Doe` and `John doe` are considered unique.","lastModifiedDate":"2024-04-14"},{"lineNumber":231,"author":{"gitId":"shavonneg"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":232,"author":{"gitId":"shavonneg"},"content":"* Extraneous parameters for commands that do not take in parameters (such as `help`, `list`, `exit` and `clear`) will be","lastModifiedDate":"2024-04-02"},{"lineNumber":233,"author":{"gitId":"shavonneg"},"content":"  ignored.\u003cbr\u003e","lastModifiedDate":"2024-04-02"},{"lineNumber":234,"author":{"gitId":"-"},"content":"  e.g. if the command specifies `help 123`, it will be interpreted as `help`.","lastModifiedDate":"2021-02-03"},{"lineNumber":235,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-03"},{"lineNumber":236,"author":{"gitId":"shavonneg"},"content":"* If you are using a PDF version of this document, be careful when copying and pasting commands that span multiple lines","lastModifiedDate":"2024-04-02"},{"lineNumber":237,"author":{"gitId":"shavonneg"},"content":"  as space characters surrounding line-breaks may be omitted when copied over to the application.","lastModifiedDate":"2024-04-02"},{"lineNumber":238,"author":{"gitId":"shavonneg"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":239,"author":{"gitId":"kailinteoo"},"content":"* All index inputs in commands labelled (INDEX) can omit any leading 0s. (e.g. 1, 01, 000001 are all valid index inputs","lastModifiedDate":"2024-04-14"},{"lineNumber":240,"author":{"gitId":"kailinteoo"},"content":"  for the index #000001)","lastModifiedDate":"2024-04-14"},{"lineNumber":241,"author":{"gitId":"kailinteoo"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":242,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":243,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":244,"author":{"gitId":"kailinteoo"},"content":"### 5.1. Viewing help : `help`","lastModifiedDate":"2024-04-14"},{"lineNumber":245,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":246,"author":{"gitId":"rertyy"},"content":"Shows a message explaining how to access the help page.","lastModifiedDate":"2024-04-08"},{"lineNumber":247,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":248,"author":{"gitId":"-"},"content":"![help message](images/helpMessage.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":249,"author":{"gitId":"-"},"content":"Format: `help`","lastModifiedDate":"2020-05-23"},{"lineNumber":250,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":251,"author":{"gitId":"kailinteoo"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-info\"\u003e","lastModifiedDate":"2024-04-14"},{"lineNumber":252,"author":{"gitId":"kailinteoo"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":253,"author":{"gitId":"kailinteoo"},"content":"**:information_source: Additional Notes:**\u003cbr\u003e","lastModifiedDate":"2024-04-14"},{"lineNumber":254,"author":{"gitId":"kailinteoo"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":255,"author":{"gitId":"kailinteoo"},"content":"* You can press `F1` on your keyboard to access the Help page too.","lastModifiedDate":"2024-04-14"},{"lineNumber":256,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":257,"author":{"gitId":"kailinteoo"},"content":"\u003c/div\u003e","lastModifiedDate":"2024-04-14"},{"lineNumber":258,"author":{"gitId":"kailinteoo"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":259,"author":{"gitId":"kailinteoo"},"content":"### 5.2. Clearing all entries : `clear`","lastModifiedDate":"2024-04-14"},{"lineNumber":260,"author":{"gitId":"kailinteoo"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":261,"author":{"gitId":"kailinteoo"},"content":"Clears all entries from BookKeeper. \u003cbr\u003e","lastModifiedDate":"2024-04-08"},{"lineNumber":262,"author":{"gitId":"kailinteoo"},"content":"Format: `clear` \u003cbr\u003e","lastModifiedDate":"2024-04-08"},{"lineNumber":263,"author":{"gitId":"kailinteoo"},"content":"![clear](images/clear.png)","lastModifiedDate":"2024-04-08"},{"lineNumber":264,"author":{"gitId":"kailinteoo"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":265,"author":{"gitId":"kailinteoo"},"content":"### 5.3. Exiting the program : `exit`","lastModifiedDate":"2024-04-14"},{"lineNumber":266,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":267,"author":{"gitId":"kailinteoo"},"content":"Exits the program. \u003cbr\u003e","lastModifiedDate":"2024-04-08"},{"lineNumber":268,"author":{"gitId":"kailinteoo"},"content":"Format: `exit`","lastModifiedDate":"2024-04-07"},{"lineNumber":269,"author":{"gitId":"kailinteoo"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":270,"author":{"gitId":"kailinteoo"},"content":"### 5.4. Adding a client: `add`","lastModifiedDate":"2024-04-14"},{"lineNumber":271,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":272,"author":{"gitId":"kailinteoo"},"content":"Adds a client to BookKeeper. \u003cbr\u003e","lastModifiedDate":"2024-04-08"},{"lineNumber":273,"author":{"gitId":"-"},"content":"Format: `add n/NAME p/PHONE_NUMBER e/EMAIL a/ADDRESS [t/TAG]…​`","lastModifiedDate":"2020-05-23"},{"lineNumber":274,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":275,"author":{"gitId":"kailinteoo"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-info\"\u003e","lastModifiedDate":"2024-04-09"},{"lineNumber":276,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-08"},{"lineNumber":277,"author":{"gitId":"kailinteoo"},"content":"**:information_source: Additional Notes:**\u003cbr\u003e","lastModifiedDate":"2024-04-09"},{"lineNumber":278,"author":{"gitId":"rertyy"},"content":"","lastModifiedDate":"2024-04-08"},{"lineNumber":279,"author":{"gitId":"kailinteoo"},"content":"* Name must be unique, clients with exact same name is not allowed.","lastModifiedDate":"2024-04-14"},{"lineNumber":280,"author":{"gitId":"kailinteoo"},"content":"* A client can have any number of tags (including 0).","lastModifiedDate":"2024-04-11"},{"lineNumber":281,"author":{"gitId":"kailinteoo"},"content":"* Tags do not accept whitespaces (e.g. \"VIP 2\" is not accepted, \"VIP2\" is accepted).","lastModifiedDate":"2024-04-11"},{"lineNumber":282,"author":{"gitId":"kailinteoo"},"content":"* Name and Tags only accept 0-9 and a-z (case-insensitive).","lastModifiedDate":"2024-04-11"},{"lineNumber":283,"author":{"gitId":"kailinteoo"},"content":"* Phone number must be numeric and at least 3 numbers. It must not contain spaces \" \", \"brackets ()\" or \"hyphens -\",","lastModifiedDate":"2024-04-14"},{"lineNumber":284,"author":{"gitId":"kailinteoo"},"content":"  \"plus +\" , or other symbols.","lastModifiedDate":"2024-04-14"},{"lineNumber":285,"author":{"gitId":"rertyy"},"content":"* Emails must not have consecutive special characters. E.g. \"john..doe@example.com\" is not accepted.","lastModifiedDate":"2024-04-15"},{"lineNumber":286,"author":{"gitId":"rertyy"},"content":"","lastModifiedDate":"2024-04-08"},{"lineNumber":287,"author":{"gitId":"kailinteoo"},"content":"\u003c/div\u003e","lastModifiedDate":"2024-04-08"},{"lineNumber":288,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-08"},{"lineNumber":289,"author":{"gitId":"kailinteoo"},"content":"Example:","lastModifiedDate":"2024-04-08"},{"lineNumber":290,"author":{"gitId":"kailinteoo"},"content":"`add n/Betsy Crowe e/betsycrowe@example.com a/Beauty World p/1234567 t/VIP`","lastModifiedDate":"2024-04-08"},{"lineNumber":291,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":292,"author":{"gitId":"kailinteoo"},"content":"![add client](images/addClient.png)","lastModifiedDate":"2024-04-08"},{"lineNumber":293,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":294,"author":{"gitId":"kailinteoo"},"content":"More examples:","lastModifiedDate":"2024-04-08"},{"lineNumber":295,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":296,"author":{"gitId":"-"},"content":"* `add n/John Doe p/98765432 e/johnd@example.com a/John street, block 123, #01-01`","lastModifiedDate":"2020-05-23"},{"lineNumber":297,"author":{"gitId":"kailinteoo"},"content":"* `add n/Jane Low p/95357481 e/jane@example.com a/Bukit Batok, block 312, #08-01 t/Member`","lastModifiedDate":"2024-04-08"},{"lineNumber":298,"author":{"gitId":"kailinteoo"},"content":"* `add n/Alex Yeoh p/92157481 e/AY@example.com a/Bukit Batok, block 32, #07-01 t/VIP`","lastModifiedDate":"2024-04-08"},{"lineNumber":299,"author":{"gitId":"kailinteoo"},"content":"* `add n/David Li p/98353481 e/David@example.com a/Bukit Batok, block 462, #07-02 t/Customer`","lastModifiedDate":"2024-04-08"},{"lineNumber":300,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":301,"author":{"gitId":"kailinteoo"},"content":"### 5.5. Editing a client : `edit`","lastModifiedDate":"2024-04-14"},{"lineNumber":302,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":303,"author":{"gitId":"kailinteoo"},"content":"Edits an existing client in BookKeeper. \u003cbr\u003e","lastModifiedDate":"2024-04-08"},{"lineNumber":304,"author":{"gitId":"-"},"content":"Format: `edit INDEX [n/NAME] [p/PHONE] [e/EMAIL] [a/ADDRESS] [t/TAG]…​`","lastModifiedDate":"2020-05-23"},{"lineNumber":305,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":306,"author":{"gitId":"kailinteoo"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-info\"\u003e","lastModifiedDate":"2024-04-08"},{"lineNumber":307,"author":{"gitId":"kailinteoo"},"content":"","lastModifiedDate":"2024-04-08"},{"lineNumber":308,"author":{"gitId":"kailinteoo"},"content":"**:information_source: Additional Notes:**\u003cbr\u003e","lastModifiedDate":"2024-04-08"},{"lineNumber":309,"author":{"gitId":"kailinteoo"},"content":"","lastModifiedDate":"2024-04-08"},{"lineNumber":310,"author":{"gitId":"kailinteoo"},"content":"* Edits the client at the specified `INDEX`. The index refers to the index number shown in the displayed client list.","lastModifiedDate":"2024-04-07"},{"lineNumber":311,"author":{"gitId":"shavonneg"},"content":"  The index **must be a positive integer** 1, 2, 3, …​","lastModifiedDate":"2024-04-02"},{"lineNumber":312,"author":{"gitId":"-"},"content":"* At least one of the optional fields must be provided.","lastModifiedDate":"2020-05-23"},{"lineNumber":313,"author":{"gitId":"-"},"content":"* Existing values will be updated to the input values.","lastModifiedDate":"2020-05-23"},{"lineNumber":314,"author":{"gitId":"kailinteoo"},"content":"* When editing tags, the existing tags of the client will be removed i.e adding of tags is not cumulative.","lastModifiedDate":"2024-04-07"},{"lineNumber":315,"author":{"gitId":"kailinteoo"},"content":"* You can remove all the client’s tags by typing `t/` without","lastModifiedDate":"2024-04-07"},{"lineNumber":316,"author":{"gitId":"-"},"content":"  specifying any tags after it.","lastModifiedDate":"2020-05-23"},{"lineNumber":317,"author":{"gitId":"kailinteoo"},"content":"* tags do not accept whitespaces (e.g. \"VIP 2\" is not accepted, \"VIP2\" is accepted)","lastModifiedDate":"2024-04-09"},{"lineNumber":318,"author":{"gitId":"kailinteoo"},"content":"* tags only accept 0-9 and a-z (case-insensitive)","lastModifiedDate":"2024-04-09"},{"lineNumber":319,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":320,"author":{"gitId":"kailinteoo"},"content":"\u003c/div\u003e","lastModifiedDate":"2024-04-08"},{"lineNumber":321,"author":{"gitId":"shavonneg"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":322,"author":{"gitId":"kailinteoo"},"content":"Example:","lastModifiedDate":"2024-04-08"},{"lineNumber":323,"author":{"gitId":"kailinteoo"},"content":"`edit 1 n/Betsy Crower t/` Edits the name of the 1st client to be `Betsy Crower` and clears all existing tags.","lastModifiedDate":"2024-04-08"},{"lineNumber":324,"author":{"gitId":"shavonneg"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":325,"author":{"gitId":"kailinteoo"},"content":"![edit client](images/editClient1.png)","lastModifiedDate":"2024-04-08"},{"lineNumber":326,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":327,"author":{"gitId":"kailinteoo"},"content":"More examples:","lastModifiedDate":"2024-04-08"},{"lineNumber":328,"author":{"gitId":"kailinteoo"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":329,"author":{"gitId":"kailinteoo"},"content":"`edit 2 p/91234567 e/johndoe@example.com` Edits the phone number and email address of the 2nd client to","lastModifiedDate":"2024-04-08"},{"lineNumber":330,"author":{"gitId":"kailinteoo"},"content":"be `91234567` and `johndoe@example.com` respectively.","lastModifiedDate":"2024-04-08"},{"lineNumber":331,"author":{"gitId":"kailinteoo"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":332,"author":{"gitId":"kailinteoo"},"content":"### 5.6. Deleting a client : `delete`","lastModifiedDate":"2024-04-14"},{"lineNumber":333,"author":{"gitId":"kailinteoo"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":334,"author":{"gitId":"kailinteoo"},"content":"Deletes the specified client from BookKeeper. \u003cbr\u003e","lastModifiedDate":"2024-04-08"},{"lineNumber":335,"author":{"gitId":"kailinteoo"},"content":"Format: `delete INDEX`","lastModifiedDate":"2024-04-02"},{"lineNumber":336,"author":{"gitId":"kailinteoo"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":337,"author":{"gitId":"kailinteoo"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-info\"\u003e","lastModifiedDate":"2024-04-08"},{"lineNumber":338,"author":{"gitId":"kailinteoo"},"content":"","lastModifiedDate":"2024-04-08"},{"lineNumber":339,"author":{"gitId":"kailinteoo"},"content":"**:information_source: Additional Notes:**\u003cbr\u003e","lastModifiedDate":"2024-04-08"},{"lineNumber":340,"author":{"gitId":"kailinteoo"},"content":"","lastModifiedDate":"2024-04-08"},{"lineNumber":341,"author":{"gitId":"kailinteoo"},"content":"* Deletes the client at the specified `INDEX`.","lastModifiedDate":"2024-04-07"},{"lineNumber":342,"author":{"gitId":"kailinteoo"},"content":"* The index refers to the index number shown in the displayed client list.","lastModifiedDate":"2024-04-07"},{"lineNumber":343,"author":{"gitId":"kailinteoo"},"content":"* The index **must be a positive integer** 1, 2, 3, …​","lastModifiedDate":"2024-04-02"},{"lineNumber":344,"author":{"gitId":"kailinteoo"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":345,"author":{"gitId":"kailinteoo"},"content":"\u003c/div\u003e","lastModifiedDate":"2024-04-08"},{"lineNumber":346,"author":{"gitId":"kailinteoo"},"content":"","lastModifiedDate":"2024-04-08"},{"lineNumber":347,"author":{"gitId":"kailinteoo"},"content":"Example:","lastModifiedDate":"2024-04-08"},{"lineNumber":348,"author":{"gitId":"kailinteoo"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":349,"author":{"gitId":"kailinteoo"},"content":"* `list` followed by `delete 2` deletes the 2nd client in BookKeeper.","lastModifiedDate":"2024-04-07"},{"lineNumber":350,"author":{"gitId":"kailinteoo"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":351,"author":{"gitId":"kailinteoo"},"content":"![delete client](images/deleteClient_Before.png)","lastModifiedDate":"2024-04-14"},{"lineNumber":352,"author":{"gitId":"kailinteoo"},"content":"![delete client](images/deleteClient_After.png)","lastModifiedDate":"2024-04-14"},{"lineNumber":353,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":354,"author":{"gitId":"kailinteoo"},"content":"More examples:","lastModifiedDate":"2024-04-08"},{"lineNumber":355,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":356,"author":{"gitId":"kailinteoo"},"content":"* `find Betsy` followed by `delete 1` deletes the 1st client in the results of the `find` command.","lastModifiedDate":"2024-04-07"},{"lineNumber":357,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":358,"author":{"gitId":"kailinteoo"},"content":"### 5.7. Listing all clients : `list`","lastModifiedDate":"2024-04-14"},{"lineNumber":359,"author":{"gitId":"kailinteoo"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":360,"author":{"gitId":"kailinteoo"},"content":"Shows a list of all clients in BookKeeper. \u003cbr\u003e","lastModifiedDate":"2024-04-08"},{"lineNumber":361,"author":{"gitId":"kailinteoo"},"content":"Format: `list` \u003cbr\u003e","lastModifiedDate":"2024-04-08"},{"lineNumber":362,"author":{"gitId":"kailinteoo"},"content":"![list clients](images/listClients.png)","lastModifiedDate":"2024-04-08"},{"lineNumber":363,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":364,"author":{"gitId":"kailinteoo"},"content":"### 5.8. Locating clients by name: `find`","lastModifiedDate":"2024-04-14"},{"lineNumber":365,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":366,"author":{"gitId":"kailinteoo"},"content":"Finds clients whose names contain any of the given keywords. \u003cbr\u003e","lastModifiedDate":"2024-04-08"},{"lineNumber":367,"author":{"gitId":"-"},"content":"Format: `find KEYWORD [MORE_KEYWORDS]`","lastModifiedDate":"2020-05-23"},{"lineNumber":368,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":369,"author":{"gitId":"kailinteoo"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-info\"\u003e","lastModifiedDate":"2024-04-08"},{"lineNumber":370,"author":{"gitId":"kailinteoo"},"content":"","lastModifiedDate":"2024-04-08"},{"lineNumber":371,"author":{"gitId":"kailinteoo"},"content":"**:information_source: Additional Notes:**\u003cbr\u003e","lastModifiedDate":"2024-04-08"},{"lineNumber":372,"author":{"gitId":"kailinteoo"},"content":"","lastModifiedDate":"2024-04-08"},{"lineNumber":373,"author":{"gitId":"-"},"content":"* The search is case-insensitive. e.g `hans` will match `Hans`","lastModifiedDate":"2020-05-23"},{"lineNumber":374,"author":{"gitId":"-"},"content":"* The order of the keywords does not matter. e.g. `Hans Bo` will match `Bo Hans`","lastModifiedDate":"2020-05-23"},{"lineNumber":375,"author":{"gitId":"-"},"content":"* Only the name is searched.","lastModifiedDate":"2020-05-23"},{"lineNumber":376,"author":{"gitId":"-"},"content":"* Only full words will be matched e.g. `Han` will not match `Hans`","lastModifiedDate":"2020-05-23"},{"lineNumber":377,"author":{"gitId":"kailinteoo"},"content":"* Clients matching at least one keyword will be returned (i.e. `OR` search).","lastModifiedDate":"2024-04-07"},{"lineNumber":378,"author":{"gitId":"-"},"content":"  e.g. `Hans Bo` will return `Hans Gruber`, `Bo Yang`","lastModifiedDate":"2020-05-23"},{"lineNumber":379,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":380,"author":{"gitId":"kailinteoo"},"content":"\u003c/div\u003e","lastModifiedDate":"2024-04-08"},{"lineNumber":381,"author":{"gitId":"shavonneg"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":382,"author":{"gitId":"kailinteoo"},"content":"Example:","lastModifiedDate":"2024-04-08"},{"lineNumber":383,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":384,"author":{"gitId":"kailinteoo"},"content":"* `find alex david` returns `Alex Yeoh`, `David Li`","lastModifiedDate":"2024-04-08"},{"lineNumber":385,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":386,"author":{"gitId":"kailinteoo"},"content":"![find clients](images/findClient.png)","lastModifiedDate":"2024-04-08"},{"lineNumber":387,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":388,"author":{"gitId":"kailinteoo"},"content":"More examples:","lastModifiedDate":"2024-04-08"},{"lineNumber":389,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":390,"author":{"gitId":"-"},"content":"* `find John` returns `john` and `John Doe`","lastModifiedDate":"2020-05-23"},{"lineNumber":391,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":392,"author":{"gitId":"kailinteoo"},"content":"### 5.9. Adding an order: `order`","lastModifiedDate":"2024-04-14"},{"lineNumber":393,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":394,"author":{"gitId":"kailinteoo"},"content":"Adds an order into BookKeeper. \u003cbr\u003e","lastModifiedDate":"2024-04-08"},{"lineNumber":395,"author":{"gitId":"Jaspertzx"},"content":"Format: `order \u003cINDEX\u003e by/DEADLINE c/PRICE d/DESCRIPTION`","lastModifiedDate":"2024-04-04"},{"lineNumber":396,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":397,"author":{"gitId":"kailinteoo"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-info\"\u003e","lastModifiedDate":"2024-04-08"},{"lineNumber":398,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-08"},{"lineNumber":399,"author":{"gitId":"kailinteoo"},"content":"**:information_source: Additional Notes:**\u003cbr\u003e","lastModifiedDate":"2024-04-08"},{"lineNumber":400,"author":{"gitId":"kailinteoo"},"content":"","lastModifiedDate":"2024-04-08"},{"lineNumber":401,"author":{"gitId":"kailinteoo"},"content":"* Adds the order to the client at the specified `INDEX`.","lastModifiedDate":"2024-04-08"},{"lineNumber":402,"author":{"gitId":"Jaspertzx"},"content":"  The index **must be a positive integer** 1, 2, 3, …​, and the index must exist in the Client list.","lastModifiedDate":"2024-04-04"},{"lineNumber":403,"author":{"gitId":"Jaspertzx"},"content":"* All fields must be provided.","lastModifiedDate":"2024-04-04"},{"lineNumber":404,"author":{"gitId":"kailinteoo"},"content":"* order of the fields does not matter","lastModifiedDate":"2024-04-08"},{"lineNumber":405,"author":{"gitId":"kailinteoo"},"content":"  (e.g. both `order \u003cINDEX\u003e by/DEADLINE c/PRICE d/DESCRIPTION` and `order \u003cINDEX\u003e d/DESCRIPTION c/PRICE by/DEADLINE`","lastModifiedDate":"2024-04-08"},{"lineNumber":406,"author":{"gitId":"kailinteoo"},"content":"  are acceptable)","lastModifiedDate":"2024-04-08"},{"lineNumber":407,"author":{"gitId":"kailinteoo"},"content":"* All orders status are automatically set to PENDING.","lastModifiedDate":"2024-04-08"},{"lineNumber":408,"author":{"gitId":"Jaspertzx"},"content":"* Please specify `by/DEADLINE` field in `DD-MM-YYYY HH:MM`.","lastModifiedDate":"2024-04-04"},{"lineNumber":409,"author":{"gitId":"rertyy"},"content":"    * Deadlines can be set to a date before their current date to suggest that the order is overdue.","lastModifiedDate":"2024-04-13"},{"lineNumber":410,"author":{"gitId":"kailinteoo"},"content":"      (e.g. If your order was due yesterday, but you never make yet, you can also add a new order and put yesterday\u0027s","lastModifiedDate":"2024-04-14"},{"lineNumber":411,"author":{"gitId":"kailinteoo"},"content":"      day","lastModifiedDate":"2024-04-14"},{"lineNumber":412,"author":{"gitId":"kailinteoo"},"content":"      to track if you have orders that are overdue.)","lastModifiedDate":"2024-04-14"},{"lineNumber":413,"author":{"gitId":"Jaspertzx"},"content":"* For the `c/PRICE` field, do note that any decimal places after 2 will be rounded up.","lastModifiedDate":"2024-04-04"},{"lineNumber":414,"author":{"gitId":"Jaspertzx"},"content":"    * For e.g. `2.999` will be rounded up to `3.00`.","lastModifiedDate":"2024-04-04"},{"lineNumber":415,"author":{"gitId":"Jaspertzx"},"content":"* The order list will be sorted according to their deadline.","lastModifiedDate":"2024-04-10"},{"lineNumber":416,"author":{"gitId":"kailinteoo"},"content":"    * Meaning, if there are two orders, one due on `10-10-2025 10:00` and another due on `10-10-2025 10:30`, the order","lastModifiedDate":"2024-04-11"},{"lineNumber":417,"author":{"gitId":"kailinteoo"},"content":"      with","lastModifiedDate":"2024-04-11"},{"lineNumber":418,"author":{"gitId":"Jaspertzx"},"content":"      the deadline of `10-10-2025 10:00` will have an index of `1`, and the other order will have an index of `2`.","lastModifiedDate":"2024-04-10"},{"lineNumber":419,"author":{"gitId":"Jaspertzx"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":420,"author":{"gitId":"kailinteoo"},"content":"\u003c/div\u003e","lastModifiedDate":"2024-04-08"},{"lineNumber":421,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-08"},{"lineNumber":422,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2024-04-04"},{"lineNumber":423,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":424,"author":{"gitId":"shavonneg"},"content":"* `order 1 d/1xRoses c/40 by/23-07-2024 00:00`","lastModifiedDate":"2024-04-04"},{"lineNumber":425,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":426,"author":{"gitId":"kailinteoo"},"content":"![add order](images/addOrder.png)","lastModifiedDate":"2024-04-08"},{"lineNumber":427,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-08"},{"lineNumber":428,"author":{"gitId":"kailinteoo"},"content":"More examples:","lastModifiedDate":"2024-04-08"},{"lineNumber":429,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":430,"author":{"gitId":"kailinteoo"},"content":"* `order 3 by/07-07-2024 00:00 c/88.88 d/99xRoses`","lastModifiedDate":"2024-04-08"},{"lineNumber":431,"author":{"gitId":"kailinteoo"},"content":"* `order 1 by/23-05-2024 16:00 c/58.90 d/1xLily`","lastModifiedDate":"2024-04-08"},{"lineNumber":432,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":433,"author":{"gitId":"kailinteoo"},"content":"### 5.10. Deleting an order: `deleteOrder`","lastModifiedDate":"2024-04-14"},{"lineNumber":434,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":435,"author":{"gitId":"kailinteoo"},"content":"Deletes the specified order from BookKeeper. \u003cbr\u003e","lastModifiedDate":"2024-04-08"},{"lineNumber":436,"author":{"gitId":"rertyy"},"content":"Format: `deleteOrder INDEX`","lastModifiedDate":"2024-04-02"},{"lineNumber":437,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":438,"author":{"gitId":"kailinteoo"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-info\"\u003e","lastModifiedDate":"2024-04-08"},{"lineNumber":439,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-08"},{"lineNumber":440,"author":{"gitId":"kailinteoo"},"content":"**:information_source: Additional Notes:**","lastModifiedDate":"2024-04-14"},{"lineNumber":441,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-08"},{"lineNumber":442,"author":{"gitId":"rertyy"},"content":"* Deletes the order at the specified `INDEX`.","lastModifiedDate":"2024-04-02"},{"lineNumber":443,"author":{"gitId":"rertyy"},"content":"* The index refers to the index number shown in the displayed order list.","lastModifiedDate":"2024-04-02"},{"lineNumber":444,"author":{"gitId":"rertyy"},"content":"* The index **must be a positive integer** 1, 2, 3, …​","lastModifiedDate":"2024-04-02"},{"lineNumber":445,"author":{"gitId":"rertyy"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":446,"author":{"gitId":"kailinteoo"},"content":"\u003c/div\u003e","lastModifiedDate":"2024-04-08"},{"lineNumber":447,"author":{"gitId":"rertyy"},"content":"Examples:","lastModifiedDate":"2024-04-02"},{"lineNumber":448,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":449,"author":{"gitId":"rertyy"},"content":"* `deleteOrder 2` deletes the 2nd order in the order list.","lastModifiedDate":"2024-04-02"},{"lineNumber":450,"author":{"gitId":"rertyy"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":451,"author":{"gitId":"kailinteoo"},"content":"![delete order](images/deleteOrder_Before.png)","lastModifiedDate":"2024-04-08"},{"lineNumber":452,"author":{"gitId":"kailinteoo"},"content":"![delete order](images/deleteOrder_After.png)","lastModifiedDate":"2024-04-08"},{"lineNumber":453,"author":{"gitId":"kailinteoo"},"content":"","lastModifiedDate":"2024-04-08"},{"lineNumber":454,"author":{"gitId":"kailinteoo"},"content":"### 5.11. Editing an order : `editOrder`","lastModifiedDate":"2024-04-14"},{"lineNumber":455,"author":{"gitId":"shavonneg"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":456,"author":{"gitId":"kailinteoo"},"content":"Edits an existing order in BookKeeper. \u003cbr\u003e","lastModifiedDate":"2024-04-08"},{"lineNumber":457,"author":{"gitId":"kailinteoo"},"content":"Format: `editOrder \u003cINDEX\u003e [by/DEADLINE] [c/PRICE] [d/DESCRIPTION] [s/STATUS]`","lastModifiedDate":"2024-04-07"},{"lineNumber":458,"author":{"gitId":"shavonneg"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":459,"author":{"gitId":"kailinteoo"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-info\"\u003e","lastModifiedDate":"2024-04-08"},{"lineNumber":460,"author":{"gitId":"shavonneg"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":461,"author":{"gitId":"kailinteoo"},"content":"**:information_source: Additional Notes:**","lastModifiedDate":"2024-04-14"},{"lineNumber":462,"author":{"gitId":"shavonneg"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":463,"author":{"gitId":"shavonneg"},"content":"* Edits the order at the specified `INDEX`.","lastModifiedDate":"2024-04-02"},{"lineNumber":464,"author":{"gitId":"shavonneg"},"content":"  The index **must be a positive integer** 1, 2, 3, …​","lastModifiedDate":"2024-04-02"},{"lineNumber":465,"author":{"gitId":"kailinteoo"},"content":"* Command can work without any optional fields provided.","lastModifiedDate":"2024-04-10"},{"lineNumber":466,"author":{"gitId":"shavonneg"},"content":"* Existing values will be updated to the input values.","lastModifiedDate":"2024-04-02"},{"lineNumber":467,"author":{"gitId":"kailinteoo"},"content":"* There are 3 different status (they are all case-insensitive):","lastModifiedDate":"2024-04-09"},{"lineNumber":468,"author":{"gitId":"shavonneg"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":469,"author":{"gitId":"kailinteoo"},"content":"| Status        | Information                                   |","lastModifiedDate":"2024-04-08"},{"lineNumber":470,"author":{"gitId":"kailinteoo"},"content":"|---------------|-----------------------------------------------|","lastModifiedDate":"2024-04-08"},{"lineNumber":471,"author":{"gitId":"kailinteoo"},"content":"| **PENDING**   | `All orders are automatically set to PENDING` |","lastModifiedDate":"2024-04-08"},{"lineNumber":472,"author":{"gitId":"kailinteoo"},"content":"| **COMPLETED** | `When the order is delivered successfully`    |","lastModifiedDate":"2024-04-08"},{"lineNumber":473,"author":{"gitId":"kailinteoo"},"content":"| **CANCELED**  | `When the order is canceled`                  |","lastModifiedDate":"2024-04-08"},{"lineNumber":474,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-08"},{"lineNumber":475,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2024-04-08"},{"lineNumber":476,"author":{"gitId":"shavonneg"},"content":"Examples:","lastModifiedDate":"2024-04-02"},{"lineNumber":477,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":478,"author":{"gitId":"kailinteoo"},"content":"1. `editOrder 1  by/05-05-2024 16:00 c/58.90 d/1xRoses s/PENDING` edits 1st order Deadline and Description in the order","lastModifiedDate":"2024-04-08"},{"lineNumber":479,"author":{"gitId":"kailinteoo"},"content":"   list.","lastModifiedDate":"2024-04-08"},{"lineNumber":480,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-08"},{"lineNumber":481,"author":{"gitId":"kailinteoo"},"content":"![edit order](images/editOrder1.png)","lastModifiedDate":"2024-04-08"},{"lineNumber":482,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-08"},{"lineNumber":483,"author":{"gitId":"kailinteoo"},"content":"2. `editOrder 1  s/COMPLETED` edits 1st order status to \"COMPLETED\".","lastModifiedDate":"2024-04-08"},{"lineNumber":484,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-08"},{"lineNumber":485,"author":{"gitId":"kailinteoo"},"content":"![edit order](images/editOrder2.png)","lastModifiedDate":"2024-04-08"},{"lineNumber":486,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":487,"author":{"gitId":"-"},"content":"### Saving the data","lastModifiedDate":"2020-05-23"},{"lineNumber":488,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":489,"author":{"gitId":"kailinteoo"},"content":"BookKeeper data are saved in the hard disk automatically after any command that changes the data. There is no need to","lastModifiedDate":"2024-04-07"},{"lineNumber":490,"author":{"gitId":"shavonneg"},"content":"save manually.","lastModifiedDate":"2024-04-02"},{"lineNumber":491,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":492,"author":{"gitId":"-"},"content":"### Editing the data file","lastModifiedDate":"2021-02-04"},{"lineNumber":493,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":494,"author":{"gitId":"kailinteoo"},"content":"BookKeeper data are saved automatically as a JSON file `[JAR file location]/data/bookkeeper.json`. Advanced users are","lastModifiedDate":"2024-04-07"},{"lineNumber":495,"author":{"gitId":"shavonneg"},"content":"welcome to update data directly by editing that data file.","lastModifiedDate":"2024-04-02"},{"lineNumber":496,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":497,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-warning\"\u003e:exclamation: **Caution:**","lastModifiedDate":"2021-02-04"},{"lineNumber":498,"author":{"gitId":"kailinteoo"},"content":"If your changes to the data file makes its format invalid, BookKeeper will discard all data and start with an empty data file at the next run. Hence, it is recommended to take a backup of the file before editing it.\u003cbr\u003e","lastModifiedDate":"2024-04-07"},{"lineNumber":499,"author":{"gitId":"kailinteoo"},"content":"Furthermore, certain edits can cause the BookKeeper to behave in unexpected ways (e.g., if a value entered is outside of the acceptable range). Therefore, edit the data file only if you are confident that you can update it correctly.","lastModifiedDate":"2024-04-07"},{"lineNumber":500,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-02-04"},{"lineNumber":501,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":502,"author":{"gitId":"shavonneg"},"content":"## 6. Known issues","lastModifiedDate":"2024-04-14"},{"lineNumber":503,"author":{"gitId":"shavonneg"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":504,"author":{"gitId":"shavonneg"},"content":"1. **When using multiple screens**, if you move the application to a secondary screen, and later switch to using only","lastModifiedDate":"2024-04-14"},{"lineNumber":505,"author":{"gitId":"shavonneg"},"content":"   the primary screen, the GUI will open off-screen. The remedy is to delete the `preferences.json` file created by the","lastModifiedDate":"2024-04-14"},{"lineNumber":506,"author":{"gitId":"shavonneg"},"content":"   application before running the application again.","lastModifiedDate":"2024-04-14"},{"lineNumber":507,"author":{"gitId":"kailinteoo"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":508,"author":{"gitId":"shavonneg"},"content":"## Appendix A: Technical Glossary","lastModifiedDate":"2024-04-14"},{"lineNumber":509,"author":{"gitId":"kailinteoo"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":510,"author":{"gitId":"kailinteoo"},"content":"**Java** - the programming language that the application was written in,","lastModifiedDate":"2024-04-02"},{"lineNumber":511,"author":{"gitId":"kailinteoo"},"content":"as well as the process in which the application is run","lastModifiedDate":"2024-04-02"},{"lineNumber":512,"author":{"gitId":"kailinteoo"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":513,"author":{"gitId":"kailinteoo"},"content":"**JSON (Javascript Object Notation)** - a file format used to store data which is understandable","lastModifiedDate":"2024-04-02"},{"lineNumber":514,"author":{"gitId":"kailinteoo"},"content":"for both end users and computers. BookKeeper stores its data inside bookkeeper.json.","lastModifiedDate":"2024-04-07"},{"lineNumber":515,"author":{"gitId":"kailinteoo"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":516,"author":{"gitId":"kailinteoo"},"content":"**Command Line Interface (CLI)**","lastModifiedDate":"2024-04-02"},{"lineNumber":517,"author":{"gitId":"kailinteoo"},"content":"![Ui](images/CLI.png)","lastModifiedDate":"2024-04-02"},{"lineNumber":518,"author":{"gitId":"kailinteoo"},"content":"A user interface that allows users to interact with the computer software by typing commands into the console.","lastModifiedDate":"2024-04-02"},{"lineNumber":519,"author":{"gitId":"kailinteoo"},"content":"The CLI is one method which BookKeeper application can be launched","lastModifiedDate":"2024-04-07"},{"lineNumber":520,"author":{"gitId":"kailinteoo"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":521,"author":{"gitId":"kailinteoo"},"content":"**CRM (Customer Relationship Management)** - a program that simplifies managing of clientele and their needs.","lastModifiedDate":"2024-04-02"},{"lineNumber":522,"author":{"gitId":"kailinteoo"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":523,"author":{"gitId":"kailinteoo"},"content":"**GUI (Graphical User Interface)** - is a type of user interface that allows users to interact through buttons and text.","lastModifiedDate":"2024-04-08"},{"lineNumber":524,"author":{"gitId":"kailinteoo"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":525,"author":{"gitId":"shavonneg"},"content":"## Appendix B: FAQ","lastModifiedDate":"2024-04-14"},{"lineNumber":526,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":527,"author":{"gitId":"kailinteoo"},"content":"**Q**: I cannot run the application.\u003cbr\u003e","lastModifiedDate":"2024-04-07"},{"lineNumber":528,"author":{"gitId":"shavonneg"},"content":"**A**: Ensure you have Java `11` and above installed in your system.","lastModifiedDate":"2024-04-14"},{"lineNumber":529,"author":{"gitId":"shavonneg"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":530,"author":{"gitId":"shavonneg"},"content":"* You may check if you have Java installed by opening your command prompt or terminal, and type:  ","lastModifiedDate":"2024-04-14"},{"lineNumber":531,"author":{"gitId":"shavonneg"},"content":"  `java --version`","lastModifiedDate":"2024-04-14"},{"lineNumber":532,"author":{"gitId":"shavonneg"},"content":"* If Java is installed, you should ensure that it is currently running on version \"11.x.xx\".","lastModifiedDate":"2024-04-14"},{"lineNumber":533,"author":{"gitId":"shavonneg"},"content":"* ![img_2.png](images/JavaVersionScreenshot.png)","lastModifiedDate":"2024-04-14"},{"lineNumber":534,"author":{"gitId":"shavonneg"},"content":"* If you encounter an error, or if your version does not match our specified requirements, you may visit the","lastModifiedDate":"2024-04-14"},{"lineNumber":535,"author":{"gitId":"shavonneg"},"content":"  [Official Oracle website](https://www.oracle.com/java/technologies/javase/jdk11-archive-downloads.html) to","lastModifiedDate":"2024-04-14"},{"lineNumber":536,"author":{"gitId":"shavonneg"},"content":"  download the Java JDK required to run this project.","lastModifiedDate":"2024-04-14"},{"lineNumber":537,"author":{"gitId":"kailinteoo"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":538,"author":{"gitId":"kailinteoo"},"content":"**Q**: What command do I use to [...].\u003cbr\u003e","lastModifiedDate":"2024-04-07"},{"lineNumber":539,"author":{"gitId":"kailinteoo"},"content":"**A**: You can access the help page by clicking the Help button on the application.","lastModifiedDate":"2024-04-14"},{"lineNumber":540,"author":{"gitId":"kailinteoo"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":541,"author":{"gitId":"kailinteoo"},"content":"**Q**: How do I back up and restore data?\u003cbr\u003e","lastModifiedDate":"2024-04-02"},{"lineNumber":542,"author":{"gitId":"kailinteoo"},"content":"**A**: Your data is stored in the same directory you downloaded the application in.","lastModifiedDate":"2024-04-02"},{"lineNumber":543,"author":{"gitId":"kailinteoo"},"content":"In that directory, search for a directory called data. In that directory, it is called `bookkeeper.json`.","lastModifiedDate":"2024-04-07"},{"lineNumber":544,"author":{"gitId":"kailinteoo"},"content":"You may copy `bookkeeper.json` to another location to back it up,","lastModifiedDate":"2024-04-14"},{"lineNumber":545,"author":{"gitId":"kailinteoo"},"content":"and you may copy another `bookkeeper.json` to restore existing data.","lastModifiedDate":"2024-04-14"},{"lineNumber":546,"author":{"gitId":"kailinteoo"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":547,"author":{"gitId":"kailinteoo"},"content":"**Q**: Can I access the application from multiple devices at once?\u003cbr\u003e","lastModifiedDate":"2024-04-02"},{"lineNumber":548,"author":{"gitId":"kailinteoo"},"content":"**A**: Not at the moment. It is something that we are working on, though.","lastModifiedDate":"2024-04-02"},{"lineNumber":549,"author":{"gitId":"kailinteoo"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":550,"author":{"gitId":"kailinteoo"},"content":"**Q**: Can I access this application without internet connection?\u003cbr\u003e","lastModifiedDate":"2024-04-02"},{"lineNumber":551,"author":{"gitId":"kailinteoo"},"content":"**A**: BookKeeper is designed to work fully offline.","lastModifiedDate":"2024-04-07"},{"lineNumber":552,"author":{"gitId":"kailinteoo"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":553,"author":{"gitId":"kailinteoo"},"content":"**Q**: The application is not working!!!\u003cbr\u003e","lastModifiedDate":"2024-04-02"},{"lineNumber":554,"author":{"gitId":"kailinteoo"},"content":"**A**: Contact us at [here](https://github.com/AY2324S2-CS2103T-T09-2/tp/releases).","lastModifiedDate":"2024-04-07"},{"lineNumber":555,"author":{"gitId":"kailinteoo"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":556,"author":{"gitId":"kailinteoo"},"content":"**Q**: How do I update my application?\u003cbr\u003e","lastModifiedDate":"2024-04-02"},{"lineNumber":557,"author":{"gitId":"kailinteoo"},"content":"**A**: You may download the latest release [here](https://github.com/AY2324S2-CS2103T-T09-2/tp/releases).","lastModifiedDate":"2024-04-07"},{"lineNumber":558,"author":{"gitId":"kailinteoo"},"content":"","lastModifiedDate":"2024-04-11"},{"lineNumber":559,"author":{"gitId":"shavonneg"},"content":"## Appendix C: Planned Features","lastModifiedDate":"2024-04-14"},{"lineNumber":560,"author":{"gitId":"kailinteoo"},"content":"","lastModifiedDate":"2024-04-11"},{"lineNumber":561,"author":{"gitId":"kailinteoo"},"content":"1. Enhanced Error Messaging","lastModifiedDate":"2024-04-11"},{"lineNumber":562,"author":{"gitId":"kailinteoo"},"content":"    * Implementing more specific error messages for the \"edit\" and \"editOrder\" functions to provide clearer guidance","lastModifiedDate":"2024-04-11"},{"lineNumber":563,"author":{"gitId":"kailinteoo"},"content":"      to users encountering issues.","lastModifiedDate":"2024-04-11"},{"lineNumber":564,"author":{"gitId":"rertyy"},"content":"2. Enhanced Error Messaging for Wrong Indices with Missing Fields","lastModifiedDate":"2024-04-13"},{"lineNumber":565,"author":{"gitId":"rertyy"},"content":"    * For the `edit` command, if the user fills in 0 fills but an invalid index, the error message is \"At least one","lastModifiedDate":"2024-04-13"},{"lineNumber":566,"author":{"gitId":"rertyy"},"content":"      field to edit must be provided.\"","lastModifiedDate":"2024-04-13"},{"lineNumber":567,"author":{"gitId":"rertyy"},"content":"    * This will be changed to note the invalid index in the future.","lastModifiedDate":"2024-04-13"},{"lineNumber":568,"author":{"gitId":"rertyy"},"content":"3. Extended Tag Length and Error Refinement","lastModifiedDate":"2024-04-13"},{"lineNumber":569,"author":{"gitId":"kailinteoo"},"content":"    * Increase the maximum length of tags supported within the system, enabling users to provide more descriptive labels","lastModifiedDate":"2024-04-11"},{"lineNumber":570,"author":{"gitId":"kailinteoo"},"content":"      and organize content effectively.","lastModifiedDate":"2024-04-11"},{"lineNumber":571,"author":{"gitId":"rertyy"},"content":"4. Resolution Support","lastModifiedDate":"2024-04-13"},{"lineNumber":572,"author":{"gitId":"kailinteoo"},"content":"    * Expand resolution support to include additional screen resolutions such as 1280x720, catering to a broader range","lastModifiedDate":"2024-04-11"},{"lineNumber":573,"author":{"gitId":"kailinteoo"},"content":"      of devices and user preferences.","lastModifiedDate":"2024-04-11"},{"lineNumber":574,"author":{"gitId":"rertyy"},"content":"5. Allow filtering of orders based on displayed customers.","lastModifiedDate":"2024-04-13"},{"lineNumber":575,"author":{"gitId":"rertyy"},"content":"    * Allow users to filter orders based on the displayed customers, providing a more streamlined and efficient","lastModifiedDate":"2024-04-13"},{"lineNumber":576,"author":{"gitId":"rertyy"},"content":"      experience for users managing multiple clients.","lastModifiedDate":"2024-04-13"},{"lineNumber":577,"author":{"gitId":"rertyy"},"content":"6. Allow adding of multiple users with the same name.","lastModifiedDate":"2024-04-13"},{"lineNumber":578,"author":{"gitId":"rertyy"},"content":"    * Allow users to add multiple clients with the same name, enabling users to manage multiple clients with similar","lastModifiedDate":"2024-04-13"},{"lineNumber":579,"author":{"gitId":"rertyy"},"content":"      names more effectively.","lastModifiedDate":"2024-04-13"},{"lineNumber":580,"author":{"gitId":"rertyy"},"content":"7. Relax constraints on field data types","lastModifiedDate":"2024-04-13"},{"lineNumber":581,"author":{"gitId":"rertyy"},"content":"    * There are constraints on length of values that may prevent overly long fields from being displayed correctly.","lastModifiedDate":"2024-04-13"},{"lineNumber":582,"author":{"gitId":"rertyy"},"content":"        * E.g. do not input a name that is too long, as it may not be displayed correctly.","lastModifiedDate":"2024-04-13"},{"lineNumber":583,"author":{"gitId":"rertyy"},"content":"    * There a constraints on size of values due to the innate storage system. Numbers cannot be too large.","lastModifiedDate":"2024-04-13"},{"lineNumber":584,"author":{"gitId":"rertyy"},"content":"        * E.g. do not input an Order Price that is unrealistically large for flower orders e.g. 9 billion (","lastModifiedDate":"2024-04-13"},{"lineNumber":585,"author":{"gitId":"rertyy"},"content":"          9,000,000,000).","lastModifiedDate":"2024-04-13"}],"authorContributionMap":{"kailinteoo":319,"shavonneg":56,"rertyy":32,"Jaspertzx":51,"-":127}},{"path":"docs/_sass/minima/_base.scss","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"html {","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  font-size: $base-font-size;","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Reset some basic elements","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"body, h1, h2, h3, h4, h5, h6,","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"p, blockquote, pre, hr,","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"dl, dd, ol, ul, figure {","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"  margin: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"  padding: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * Basic styling","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"body {","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"  font: $base-font-weight #{$base-font-size}/#{$base-line-height} $base-font-family;","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"  color: $text-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"  background-color: $background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"  -webkit-text-size-adjust: 100%;","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"  -webkit-font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     -moz-font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"       -o-font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"          font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"  font-kerning: normal;","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"  display: flex;","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"  min-height: 100vh;","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"  flex-direction: column;","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"  overflow-wrap: break-word;","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":" * Set `margin-bottom` to maintain vertical rhythm","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"h1, h2, h3, h4, h5, h6,","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"p, blockquote, pre,","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"ul, ol, dl, figure,","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"%vertical-rhythm {","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"  margin-bottom: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"hr {","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"  margin-top: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"  margin-bottom: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":" * `main` element","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"main {","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"  display: block; /* Default value of `display` of `main` element is \u0027inline\u0027 in IE 11. */","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":" * Images","lastModifiedDate":"2020-05-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"img {","lastModifiedDate":"2020-05-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"  max-width: 100%;","lastModifiedDate":"2020-05-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"  vertical-align: middle;","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":" * Figures","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"figure \u003e img {","lastModifiedDate":"2020-05-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"  display: block;","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"figcaption {","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"  font-size: $small-font-size;","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":" * Lists","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"ul, ol {","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"  margin-left: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"li {","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"  \u003e ul,","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"  \u003e ol {","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    margin-bottom: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":" * Headings","lastModifiedDate":"2020-05-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"h1, h2, h3, h4, h5, h6 {","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"  font-weight: $base-font-weight;","lastModifiedDate":"2020-05-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":" * Links","lastModifiedDate":"2020-05-23"},{"lineNumber":113,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":114,"author":{"gitId":"-"},"content":"a {","lastModifiedDate":"2020-05-23"},{"lineNumber":115,"author":{"gitId":"-"},"content":"  color: $link-base-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"  text-decoration: none;","lastModifiedDate":"2020-05-23"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"  \u0026:visited {","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    color: $link-visited-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":120,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"  \u0026:hover {","lastModifiedDate":"2020-05-23"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    color: $text-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    text-decoration: underline;","lastModifiedDate":"2020-05-23"},{"lineNumber":125,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":127,"author":{"gitId":"-"},"content":"  .social-media-list \u0026:hover {","lastModifiedDate":"2020-05-23"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    text-decoration: none;","lastModifiedDate":"2020-05-23"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    .username {","lastModifiedDate":"2020-05-23"},{"lineNumber":131,"author":{"gitId":"-"},"content":"      text-decoration: underline;","lastModifiedDate":"2020-05-23"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":" * Blockquotes","lastModifiedDate":"2020-05-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"blockquote {","lastModifiedDate":"2020-05-23"},{"lineNumber":141,"author":{"gitId":"-"},"content":"  color: $brand-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":142,"author":{"gitId":"-"},"content":"  border-left: 4px solid $brand-color-light;","lastModifiedDate":"2020-05-23"},{"lineNumber":143,"author":{"gitId":"-"},"content":"  padding-left: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":144,"author":{"gitId":"-"},"content":"  @include relative-font-size(1.125);","lastModifiedDate":"2020-05-23"},{"lineNumber":145,"author":{"gitId":"-"},"content":"  font-style: italic;","lastModifiedDate":"2020-05-23"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"  \u003e :last-child {","lastModifiedDate":"2020-05-23"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    margin-bottom: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"  i, em {","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    font-style: normal;","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":158,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":159,"author":{"gitId":"-"},"content":" * Code formatting","lastModifiedDate":"2020-05-23"},{"lineNumber":160,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":161,"author":{"gitId":"-"},"content":"pre,","lastModifiedDate":"2020-05-23"},{"lineNumber":162,"author":{"gitId":"-"},"content":"code {","lastModifiedDate":"2020-05-23"},{"lineNumber":163,"author":{"gitId":"-"},"content":"  font-family: $code-font-family;","lastModifiedDate":"2020-05-23"},{"lineNumber":164,"author":{"gitId":"-"},"content":"  font-size: 0.9375em;","lastModifiedDate":"2020-05-23"},{"lineNumber":165,"author":{"gitId":"-"},"content":"  border: 1px solid $brand-color-light;","lastModifiedDate":"2020-05-23"},{"lineNumber":166,"author":{"gitId":"-"},"content":"  border-radius: 3px;","lastModifiedDate":"2020-05-23"},{"lineNumber":167,"author":{"gitId":"-"},"content":"  background-color: $code-background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":168,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":170,"author":{"gitId":"-"},"content":"code {","lastModifiedDate":"2020-05-23"},{"lineNumber":171,"author":{"gitId":"-"},"content":"  padding: 1px 5px;","lastModifiedDate":"2020-05-23"},{"lineNumber":172,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":174,"author":{"gitId":"-"},"content":"pre {","lastModifiedDate":"2020-05-23"},{"lineNumber":175,"author":{"gitId":"-"},"content":"  padding: 8px 12px;","lastModifiedDate":"2020-05-23"},{"lineNumber":176,"author":{"gitId":"-"},"content":"  overflow-x: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":178,"author":{"gitId":"-"},"content":"  \u003e code {","lastModifiedDate":"2020-05-23"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    border: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    padding-right: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":181,"author":{"gitId":"-"},"content":"    padding-left: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":182,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":183,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":185,"author":{"gitId":"-"},"content":".highlight {","lastModifiedDate":"2020-05-23"},{"lineNumber":186,"author":{"gitId":"-"},"content":"  border-radius: 3px;","lastModifiedDate":"2020-05-23"},{"lineNumber":187,"author":{"gitId":"-"},"content":"  background: $code-background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":188,"author":{"gitId":"-"},"content":"  @extend %vertical-rhythm;","lastModifiedDate":"2020-05-23"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":190,"author":{"gitId":"-"},"content":"  .highlighter-rouge \u0026 {","lastModifiedDate":"2020-05-23"},{"lineNumber":191,"author":{"gitId":"-"},"content":"    background: $code-background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":192,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":193,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":197,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":198,"author":{"gitId":"-"},"content":" * Wrapper","lastModifiedDate":"2020-05-23"},{"lineNumber":199,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":200,"author":{"gitId":"-"},"content":".wrapper {","lastModifiedDate":"2020-05-23"},{"lineNumber":201,"author":{"gitId":"-"},"content":"  max-width: calc(#{$content-width} - (#{$spacing-unit}));","lastModifiedDate":"2020-05-23"},{"lineNumber":202,"author":{"gitId":"-"},"content":"  margin-right: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":203,"author":{"gitId":"-"},"content":"  margin-left: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":204,"author":{"gitId":"-"},"content":"  padding-right: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":205,"author":{"gitId":"-"},"content":"  padding-left: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":206,"author":{"gitId":"-"},"content":"  @extend %clearfix;","lastModifiedDate":"2020-05-23"},{"lineNumber":207,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":208,"author":{"gitId":"-"},"content":"  @media screen and (min-width: $on-large) {","lastModifiedDate":"2020-05-23"},{"lineNumber":209,"author":{"gitId":"-"},"content":"    max-width: calc(#{$content-width} - (#{$spacing-unit} * 2));","lastModifiedDate":"2020-05-23"},{"lineNumber":210,"author":{"gitId":"-"},"content":"    padding-right: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":211,"author":{"gitId":"-"},"content":"    padding-left: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":212,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":213,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":214,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":217,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":218,"author":{"gitId":"-"},"content":" * Clearfix","lastModifiedDate":"2020-05-23"},{"lineNumber":219,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":220,"author":{"gitId":"-"},"content":"%clearfix:after {","lastModifiedDate":"2020-05-23"},{"lineNumber":221,"author":{"gitId":"-"},"content":"  content: \"\";","lastModifiedDate":"2020-05-23"},{"lineNumber":222,"author":{"gitId":"-"},"content":"  display: table;","lastModifiedDate":"2020-05-23"},{"lineNumber":223,"author":{"gitId":"-"},"content":"  clear: both;","lastModifiedDate":"2020-05-23"},{"lineNumber":224,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":226,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":227,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":228,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":229,"author":{"gitId":"-"},"content":" * Icons","lastModifiedDate":"2020-05-23"},{"lineNumber":230,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":231,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":232,"author":{"gitId":"-"},"content":".orange {","lastModifiedDate":"2020-05-23"},{"lineNumber":233,"author":{"gitId":"-"},"content":"  color: #f66a0a;","lastModifiedDate":"2020-05-23"},{"lineNumber":234,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":235,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":236,"author":{"gitId":"-"},"content":".grey {","lastModifiedDate":"2020-05-23"},{"lineNumber":237,"author":{"gitId":"-"},"content":"  color: #828282;","lastModifiedDate":"2020-05-23"},{"lineNumber":238,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":239,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":240,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":241,"author":{"gitId":"-"},"content":" * Tables","lastModifiedDate":"2020-05-23"},{"lineNumber":242,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":243,"author":{"gitId":"-"},"content":"table {","lastModifiedDate":"2020-05-23"},{"lineNumber":244,"author":{"gitId":"-"},"content":"  margin-bottom: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":245,"author":{"gitId":"-"},"content":"  width: 100%;","lastModifiedDate":"2020-05-23"},{"lineNumber":246,"author":{"gitId":"-"},"content":"  text-align: $table-text-align;","lastModifiedDate":"2020-05-23"},{"lineNumber":247,"author":{"gitId":"-"},"content":"  color: $table-text-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":248,"author":{"gitId":"-"},"content":"  border-collapse: collapse;","lastModifiedDate":"2020-05-23"},{"lineNumber":249,"author":{"gitId":"-"},"content":"  border: 1px solid $table-border-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":250,"author":{"gitId":"-"},"content":"  tr {","lastModifiedDate":"2020-05-23"},{"lineNumber":251,"author":{"gitId":"-"},"content":"    \u0026:nth-child(even) {","lastModifiedDate":"2020-05-23"},{"lineNumber":252,"author":{"gitId":"-"},"content":"      background-color: $table-zebra-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":253,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":254,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":255,"author":{"gitId":"-"},"content":"  th, td {","lastModifiedDate":"2020-05-23"},{"lineNumber":256,"author":{"gitId":"-"},"content":"    padding: ($spacing-unit / 3) ($spacing-unit / 2);","lastModifiedDate":"2020-05-23"},{"lineNumber":257,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":258,"author":{"gitId":"-"},"content":"  th {","lastModifiedDate":"2020-05-23"},{"lineNumber":259,"author":{"gitId":"-"},"content":"    background-color: $table-header-bg-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":260,"author":{"gitId":"-"},"content":"    border: 1px solid $table-header-border;","lastModifiedDate":"2020-05-23"},{"lineNumber":261,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":262,"author":{"gitId":"-"},"content":"  td {","lastModifiedDate":"2020-05-23"},{"lineNumber":263,"author":{"gitId":"-"},"content":"    border: 1px solid $table-border-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":264,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":265,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":266,"author":{"gitId":"-"},"content":"  @include media-query($on-laptop) {","lastModifiedDate":"2020-05-23"},{"lineNumber":267,"author":{"gitId":"-"},"content":"    display: block;","lastModifiedDate":"2020-05-23"},{"lineNumber":268,"author":{"gitId":"-"},"content":"    overflow-x: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":269,"author":{"gitId":"-"},"content":"    -webkit-overflow-scrolling: touch;","lastModifiedDate":"2020-05-23"},{"lineNumber":270,"author":{"gitId":"-"},"content":"            -ms-overflow-style: -ms-autohiding-scrollbar;","lastModifiedDate":"2020-05-23"},{"lineNumber":271,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":272,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":273,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-01-11"},{"lineNumber":274,"author":{"gitId":"-"},"content":"@media print {","lastModifiedDate":"2021-01-12"},{"lineNumber":275,"author":{"gitId":"-"},"content":"  /**","lastModifiedDate":"2021-01-11"},{"lineNumber":276,"author":{"gitId":"-"},"content":"  * Prevents page break from cutting through content when printing","lastModifiedDate":"2021-01-12"},{"lineNumber":277,"author":{"gitId":"-"},"content":"  */","lastModifiedDate":"2021-01-11"},{"lineNumber":278,"author":{"gitId":"-"},"content":"  body {","lastModifiedDate":"2021-01-11"},{"lineNumber":279,"author":{"gitId":"-"},"content":"    display: block;","lastModifiedDate":"2021-01-11"},{"lineNumber":280,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-11"},{"lineNumber":281,"author":{"gitId":"-"},"content":"  /**","lastModifiedDate":"2021-01-12"},{"lineNumber":282,"author":{"gitId":"-"},"content":"  * Replaces the top navigation menu with the project name when printing","lastModifiedDate":"2021-01-12"},{"lineNumber":283,"author":{"gitId":"-"},"content":"  */","lastModifiedDate":"2021-01-12"},{"lineNumber":284,"author":{"gitId":"-"},"content":"  .site-header .wrapper {","lastModifiedDate":"2021-01-12"},{"lineNumber":285,"author":{"gitId":"-"},"content":"    display: none;","lastModifiedDate":"2021-01-12"},{"lineNumber":286,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-12"},{"lineNumber":287,"author":{"gitId":"-"},"content":"  .site-header {","lastModifiedDate":"2021-01-12"},{"lineNumber":288,"author":{"gitId":"-"},"content":"    text-align: center;","lastModifiedDate":"2021-01-12"},{"lineNumber":289,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-12"},{"lineNumber":290,"author":{"gitId":"-"},"content":"  .site-header:before {","lastModifiedDate":"2021-01-12"},{"lineNumber":291,"author":{"gitId":"Jaspertzx"},"content":"    content: \"BookKeeper\";","lastModifiedDate":"2024-04-08"},{"lineNumber":292,"author":{"gitId":"-"},"content":"    font-size: 32px;","lastModifiedDate":"2021-01-12"},{"lineNumber":293,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-11"},{"lineNumber":294,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-01-12"},{"lineNumber":295,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-01-12"}],"authorContributionMap":{"Jaspertzx":1,"-":294}},{"path":"docs/diagrams/ArchitectureSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam ArrowFontStyle plain","lastModifiedDate":"2023-07-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"Actor User as user USER_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"Participant \":UI\" as ui UI_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Participant \":Logic\" as logic LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"Participant \":Model\" as model MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"Participant \":Storage\" as storage STORAGE_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"user -[USER_COLOR]\u003e ui : \"delete 1\"","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"activate ui UI_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"ui -[UI_COLOR]\u003e logic : execute(\"delete 1\")","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"activate logic LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"Jaspertzx"},"content":"logic -[LOGIC_COLOR]\u003e model : deleteClient(c)","lastModifiedDate":"2024-04-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"activate model MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"model -[MODEL_COLOR]-\u003e logic","lastModifiedDate":"2019-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"deactivate model","lastModifiedDate":"2019-07-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":23,"author":{"gitId":"Jaspertzx"},"content":"logic -[LOGIC_COLOR]\u003e storage : saveBookKeeper(bookKeeper)","lastModifiedDate":"2024-04-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"activate storage STORAGE_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"storage -[STORAGE_COLOR]\u003e storage : Save to file","lastModifiedDate":"2019-07-03"},{"lineNumber":27,"author":{"gitId":"-"},"content":"activate storage STORAGE_COLOR_T1","lastModifiedDate":"2019-07-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"storage --[STORAGE_COLOR]\u003e storage","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"deactivate storage","lastModifiedDate":"2019-07-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"storage --[STORAGE_COLOR]\u003e logic","lastModifiedDate":"2019-07-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"deactivate storage","lastModifiedDate":"2019-07-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"logic --[LOGIC_COLOR]\u003e ui","lastModifiedDate":"2019-07-03"},{"lineNumber":35,"author":{"gitId":"-"},"content":"deactivate logic","lastModifiedDate":"2019-07-03"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":37,"author":{"gitId":"-"},"content":"ui--[UI_COLOR]\u003e user","lastModifiedDate":"2019-07-03"},{"lineNumber":38,"author":{"gitId":"-"},"content":"deactivate ui","lastModifiedDate":"2019-07-03"},{"lineNumber":39,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"Jaspertzx":2,"-":37}},{"path":"docs/diagrams/BetterModelClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam arrowColor MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam classBackgroundColor MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"Jaspertzx"},"content":"BookKeeper *-right-\u003e \"1\" UniqueClientList","lastModifiedDate":"2024-04-14"},{"lineNumber":8,"author":{"gitId":"Jaspertzx"},"content":"BookKeeper *-right-\u003e \"1\" UniqueTagList","lastModifiedDate":"2024-04-14"},{"lineNumber":9,"author":{"gitId":"Jaspertzx"},"content":"UniqueTagList -[hidden]down- UniqueClientList","lastModifiedDate":"2024-04-14"},{"lineNumber":10,"author":{"gitId":"Jaspertzx"},"content":"UniqueTagList -[hidden]down- UniqueClientList","lastModifiedDate":"2024-04-14"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"UniqueTagList -right-\u003e \"*\" Tag","lastModifiedDate":"2023-01-01"},{"lineNumber":13,"author":{"gitId":"Jaspertzx"},"content":"UniqueClientList -right-\u003e Client","lastModifiedDate":"2024-04-14"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"Jaspertzx"},"content":"Client -up-\u003e \"*\" Tag","lastModifiedDate":"2024-04-14"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"Jaspertzx"},"content":"Client *--\u003e Name","lastModifiedDate":"2024-04-14"},{"lineNumber":18,"author":{"gitId":"Jaspertzx"},"content":"Client *--\u003e Phone","lastModifiedDate":"2024-04-14"},{"lineNumber":19,"author":{"gitId":"Jaspertzx"},"content":"Client *--\u003e Email","lastModifiedDate":"2024-04-14"},{"lineNumber":20,"author":{"gitId":"Jaspertzx"},"content":"Client *--\u003e Address","lastModifiedDate":"2024-04-14"},{"lineNumber":21,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"Jaspertzx":10,"-":11}},{"path":"docs/diagrams/BetterOrderClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"Jaspertzx"},"content":"@startuml","lastModifiedDate":"2024-04-15"},{"lineNumber":2,"author":{"gitId":"Jaspertzx"},"content":"!include style.puml","lastModifiedDate":"2024-04-15"},{"lineNumber":3,"author":{"gitId":"Jaspertzx"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2024-04-15"},{"lineNumber":4,"author":{"gitId":"Jaspertzx"},"content":"skinparam arrowColor MODEL_COLOR","lastModifiedDate":"2024-04-15"},{"lineNumber":5,"author":{"gitId":"Jaspertzx"},"content":"skinparam classBackgroundColor MODEL_COLOR","lastModifiedDate":"2024-04-15"},{"lineNumber":6,"author":{"gitId":"Jaspertzx"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":7,"author":{"gitId":"Jaspertzx"},"content":"BookKeeper *-right-\u003e  Order","lastModifiedDate":"2024-04-15"},{"lineNumber":8,"author":{"gitId":"Jaspertzx"},"content":"Order *--\u003e Deadline","lastModifiedDate":"2024-04-15"},{"lineNumber":9,"author":{"gitId":"Jaspertzx"},"content":"Order *--\u003e OrderDate","lastModifiedDate":"2024-04-15"},{"lineNumber":10,"author":{"gitId":"Jaspertzx"},"content":"Order *--\u003e Price","lastModifiedDate":"2024-04-15"},{"lineNumber":11,"author":{"gitId":"Jaspertzx"},"content":"Order *--\u003e Remark","lastModifiedDate":"2024-04-15"},{"lineNumber":12,"author":{"gitId":"Jaspertzx"},"content":"Order *--\u003e Status","lastModifiedDate":"2024-04-15"},{"lineNumber":13,"author":{"gitId":"Jaspertzx"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":14,"author":{"gitId":"Jaspertzx"},"content":"@enduml","lastModifiedDate":"2024-04-15"}],"authorContributionMap":{"Jaspertzx":14}},{"path":"docs/diagrams/DeleteSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam ArrowFontStyle plain","lastModifiedDate":"2023-07-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"Jaspertzx"},"content":"participant \":BookKeeperParser\" as BookKeeperParser LOGIC_COLOR","lastModifiedDate":"2024-04-14"},{"lineNumber":8,"author":{"gitId":"-"},"content":"participant \":DeleteCommandParser\" as DeleteCommandParser LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"participant \"d:DeleteCommand\" as DeleteCommand LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"participant \"r:CommandResult\" as CommandResult LOGIC_COLOR","lastModifiedDate":"2024-02-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"end box","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"participant \"m:Model\" as Model MODEL_COLOR","lastModifiedDate":"2024-02-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"end box","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"[-\u003e LogicManager : execute(\"delete 1\")","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"activate LogicManager","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"Jaspertzx"},"content":"LogicManager -\u003e BookKeeperParser : parseCommand(\"delete 1\")","lastModifiedDate":"2024-04-14"},{"lineNumber":21,"author":{"gitId":"Jaspertzx"},"content":"activate BookKeeperParser","lastModifiedDate":"2024-04-14"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":23,"author":{"gitId":"-"},"content":"create DeleteCommandParser","lastModifiedDate":"2019-07-03"},{"lineNumber":24,"author":{"gitId":"Jaspertzx"},"content":"BookKeeperParser -\u003e DeleteCommandParser","lastModifiedDate":"2024-04-14"},{"lineNumber":25,"author":{"gitId":"-"},"content":"activate DeleteCommandParser","lastModifiedDate":"2019-07-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":27,"author":{"gitId":"Jaspertzx"},"content":"DeleteCommandParser --\u003e BookKeeperParser","lastModifiedDate":"2024-04-14"},{"lineNumber":28,"author":{"gitId":"-"},"content":"deactivate DeleteCommandParser","lastModifiedDate":"2019-07-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":30,"author":{"gitId":"Jaspertzx"},"content":"BookKeeperParser -\u003e DeleteCommandParser : parse(\"1\")","lastModifiedDate":"2024-04-14"},{"lineNumber":31,"author":{"gitId":"-"},"content":"activate DeleteCommandParser","lastModifiedDate":"2019-07-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"create DeleteCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"DeleteCommandParser -\u003e DeleteCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":35,"author":{"gitId":"-"},"content":"activate DeleteCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":37,"author":{"gitId":"-"},"content":"DeleteCommand --\u003e DeleteCommandParser :","lastModifiedDate":"2024-02-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"deactivate DeleteCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":40,"author":{"gitId":"Jaspertzx"},"content":"DeleteCommandParser --\u003e BookKeeperParser : d","lastModifiedDate":"2024-04-14"},{"lineNumber":41,"author":{"gitId":"-"},"content":"deactivate DeleteCommandParser","lastModifiedDate":"2019-07-03"},{"lineNumber":42,"author":{"gitId":"-"},"content":"\u0027Hidden arrow to position the destroy marker below the end of the activation bar.","lastModifiedDate":"2019-07-03"},{"lineNumber":43,"author":{"gitId":"Jaspertzx"},"content":"DeleteCommandParser -[hidden]-\u003e BookKeeperParser","lastModifiedDate":"2024-04-14"},{"lineNumber":44,"author":{"gitId":"-"},"content":"destroy DeleteCommandParser","lastModifiedDate":"2019-07-03"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":46,"author":{"gitId":"Jaspertzx"},"content":"BookKeeperParser --\u003e LogicManager : d","lastModifiedDate":"2024-04-14"},{"lineNumber":47,"author":{"gitId":"Jaspertzx"},"content":"deactivate BookKeeperParser","lastModifiedDate":"2024-04-14"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":49,"author":{"gitId":"-"},"content":"LogicManager -\u003e DeleteCommand : execute(m)","lastModifiedDate":"2024-02-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"activate DeleteCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":52,"author":{"gitId":"Jaspertzx"},"content":"DeleteCommand -\u003e Model : deleteClient(1)","lastModifiedDate":"2024-04-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"activate Model","lastModifiedDate":"2019-07-03"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":55,"author":{"gitId":"-"},"content":"Model --\u003e DeleteCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":56,"author":{"gitId":"-"},"content":"deactivate Model","lastModifiedDate":"2019-07-03"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":58,"author":{"gitId":"-"},"content":"create CommandResult","lastModifiedDate":"2019-07-03"},{"lineNumber":59,"author":{"gitId":"-"},"content":"DeleteCommand -\u003e CommandResult","lastModifiedDate":"2019-07-03"},{"lineNumber":60,"author":{"gitId":"-"},"content":"activate CommandResult","lastModifiedDate":"2019-07-03"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":62,"author":{"gitId":"-"},"content":"CommandResult --\u003e DeleteCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":63,"author":{"gitId":"-"},"content":"deactivate CommandResult","lastModifiedDate":"2019-07-03"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":65,"author":{"gitId":"-"},"content":"DeleteCommand --\u003e LogicManager : r","lastModifiedDate":"2024-02-09"},{"lineNumber":66,"author":{"gitId":"-"},"content":"deactivate DeleteCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":68,"author":{"gitId":"-"},"content":"[\u003c--LogicManager","lastModifiedDate":"2019-07-03"},{"lineNumber":69,"author":{"gitId":"-"},"content":"deactivate LogicManager","lastModifiedDate":"2019-07-03"},{"lineNumber":70,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"Jaspertzx":11,"-":59}},{"path":"docs/diagrams/LogicClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam arrowColor LOGIC_COLOR_T4","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam classBackgroundColor LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"package Logic as LogicPackage {","lastModifiedDate":"2023-07-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"package \"Parser Classes\" as ParserClasses{","lastModifiedDate":"2024-02-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2024-02-09"},{"lineNumber":11,"author":{"gitId":"shavonneg"},"content":"Class ClientCommand","lastModifiedDate":"2024-03-20"},{"lineNumber":12,"author":{"gitId":"shavonneg"},"content":"Class OrderCommand","lastModifiedDate":"2024-03-20"},{"lineNumber":13,"author":{"gitId":"-"},"content":"Class CommandResult","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"Class \"{abstract}\\nCommand\" as Command","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nLogic\" as Logic","lastModifiedDate":"2022-01-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"Class LogicManager","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"package Model {","lastModifiedDate":"2019-07-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"Class HiddenModel #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":23,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":25,"author":{"gitId":"-"},"content":"package Storage {","lastModifiedDate":"2021-03-30"},{"lineNumber":26,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-03-30"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":28,"author":{"gitId":"-"},"content":"Class HiddenOutside #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"HiddenOutside ..\u003e Logic","lastModifiedDate":"2019-07-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"LogicManager .right.|\u003e Logic","lastModifiedDate":"2021-07-31"},{"lineNumber":32,"author":{"gitId":"-"},"content":"LogicManager -right-\u003e\"1\" ParserClasses","lastModifiedDate":"2024-02-09"},{"lineNumber":33,"author":{"gitId":"shavonneg"},"content":"ParserClasses ..\u003e OrderCommand : \u003c\u003ccreate\u003e\u003e","lastModifiedDate":"2024-03-20"},{"lineNumber":34,"author":{"gitId":"shavonneg"},"content":"ParserClasses ..\u003e ClientCommand : \u003c\u003ccreate\u003e\u003e","lastModifiedDate":"2024-03-20"},{"lineNumber":35,"author":{"gitId":"shavonneg"},"content":"ClientCommand -up-|\u003e Command","lastModifiedDate":"2024-03-20"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":37,"author":{"gitId":"shavonneg"},"content":"OrderCommand -up-|\u003e Command","lastModifiedDate":"2024-03-20"},{"lineNumber":38,"author":{"gitId":"-"},"content":"LogicManager .left.\u003e Command : \u003c\u003ccall\u003e\u003e","lastModifiedDate":"2024-02-09"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":40,"author":{"gitId":"-"},"content":"LogicManager --\u003e Model","lastModifiedDate":"2019-07-03"},{"lineNumber":41,"author":{"gitId":"-"},"content":"LogicManager --\u003e Storage","lastModifiedDate":"2021-03-30"},{"lineNumber":42,"author":{"gitId":"-"},"content":"Storage --[hidden] Model","lastModifiedDate":"2021-03-30"},{"lineNumber":43,"author":{"gitId":"-"},"content":"Command .[hidden]up.\u003e Storage","lastModifiedDate":"2021-03-30"},{"lineNumber":44,"author":{"gitId":"-"},"content":"Command .right.\u003e Model","lastModifiedDate":"2019-07-03"},{"lineNumber":45,"author":{"gitId":"shavonneg"},"content":"note right of ClientCommand: ClientCommand \u003d AddCommand, \\nFindCommand, etc","lastModifiedDate":"2024-03-20"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":47,"author":{"gitId":"-"},"content":"Logic ..\u003e CommandResult","lastModifiedDate":"2019-07-03"},{"lineNumber":48,"author":{"gitId":"-"},"content":"LogicManager .down.\u003e CommandResult","lastModifiedDate":"2019-07-03"},{"lineNumber":49,"author":{"gitId":"-"},"content":"Command .up.\u003e CommandResult : \u003c\u003ccreate\u003e\u003e","lastModifiedDate":"2024-02-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"shavonneg":7,"-":43}},{"path":"docs/diagrams/ModelClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam arrowColor MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam classBackgroundColor MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Package Model as ModelPackage \u003c\u003cRectangle\u003e\u003e{","lastModifiedDate":"2023-07-27"},{"lineNumber":8,"author":{"gitId":"Jaspertzx"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nReadOnlyBookKeeper\" as ReadOnlyBookKeeper","lastModifiedDate":"2024-04-14"},{"lineNumber":9,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nReadOnlyUserPrefs\" as ReadOnlyUserPrefs","lastModifiedDate":"2022-01-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nModel\" as Model","lastModifiedDate":"2022-01-03"},{"lineNumber":11,"author":{"gitId":"Jaspertzx"},"content":"Class BookKeeper","lastModifiedDate":"2024-04-14"},{"lineNumber":12,"author":{"gitId":"-"},"content":"Class ModelManager","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"Class UserPrefs","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":15,"author":{"gitId":"Jaspertzx"},"content":"Class UniqueClientList","lastModifiedDate":"2024-04-13"},{"lineNumber":16,"author":{"gitId":"Jaspertzx"},"content":"Class Client","lastModifiedDate":"2024-04-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"Class Address","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"Class Email","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"Class Name","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"Class Phone","lastModifiedDate":"2019-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"Class Tag","lastModifiedDate":"2019-07-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":23,"author":{"gitId":"rertyy"},"content":"Class OrderList","lastModifiedDate":"2024-03-18"},{"lineNumber":24,"author":{"gitId":"rertyy"},"content":"Class Order","lastModifiedDate":"2024-03-18"},{"lineNumber":25,"author":{"gitId":"rertyy"},"content":"Class OrderId","lastModifiedDate":"2024-03-18"},{"lineNumber":26,"author":{"gitId":"rertyy"},"content":"Class OrderDate","lastModifiedDate":"2024-03-18"},{"lineNumber":27,"author":{"gitId":"rertyy"},"content":"Class Deadline","lastModifiedDate":"2024-03-18"},{"lineNumber":28,"author":{"gitId":"rertyy"},"content":"Class Price","lastModifiedDate":"2024-03-18"},{"lineNumber":29,"author":{"gitId":"rertyy"},"content":"Class Description","lastModifiedDate":"2024-03-18"},{"lineNumber":30,"author":{"gitId":"rertyy"},"content":"Class Status","lastModifiedDate":"2024-03-18"},{"lineNumber":31,"author":{"gitId":"rertyy"},"content":"Class ClientId","lastModifiedDate":"2024-03-18"},{"lineNumber":32,"author":{"gitId":"rertyy"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":33,"author":{"gitId":"-"},"content":"Class I #FFFFFF","lastModifiedDate":"2023-07-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":36,"author":{"gitId":"-"},"content":"Class HiddenOutside #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":37,"author":{"gitId":"-"},"content":"HiddenOutside ..\u003e Model","lastModifiedDate":"2019-07-03"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":39,"author":{"gitId":"Jaspertzx"},"content":"BookKeeper .up.|\u003e ReadOnlyBookKeeper","lastModifiedDate":"2024-04-14"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":41,"author":{"gitId":"-"},"content":"ModelManager .up.|\u003e Model","lastModifiedDate":"2019-07-03"},{"lineNumber":42,"author":{"gitId":"-"},"content":"Model .right.\u003e ReadOnlyUserPrefs","lastModifiedDate":"2021-07-31"},{"lineNumber":43,"author":{"gitId":"Jaspertzx"},"content":"Model .left.\u003e ReadOnlyBookKeeper","lastModifiedDate":"2024-04-14"},{"lineNumber":44,"author":{"gitId":"Jaspertzx"},"content":"ModelManager -left-\u003e \"1\" BookKeeper","lastModifiedDate":"2024-04-14"},{"lineNumber":45,"author":{"gitId":"-"},"content":"ModelManager -right-\u003e \"1\" UserPrefs","lastModifiedDate":"2021-07-31"},{"lineNumber":46,"author":{"gitId":"-"},"content":"UserPrefs .up.|\u003e ReadOnlyUserPrefs","lastModifiedDate":"2019-07-03"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":48,"author":{"gitId":"Jaspertzx"},"content":"BookKeeper *--\u003e \"1\" UniqueClientList","lastModifiedDate":"2024-04-14"},{"lineNumber":49,"author":{"gitId":"Jaspertzx"},"content":"UniqueClientList --\u003e \"~* all\" Client","lastModifiedDate":"2024-04-13"},{"lineNumber":50,"author":{"gitId":"Jaspertzx"},"content":"Client *--\u003e Name","lastModifiedDate":"2024-04-13"},{"lineNumber":51,"author":{"gitId":"Jaspertzx"},"content":"Client *--\u003e Phone","lastModifiedDate":"2024-04-13"},{"lineNumber":52,"author":{"gitId":"Jaspertzx"},"content":"Client *--\u003e Email","lastModifiedDate":"2024-04-13"},{"lineNumber":53,"author":{"gitId":"Jaspertzx"},"content":"Client *--\u003e Address","lastModifiedDate":"2024-04-13"},{"lineNumber":54,"author":{"gitId":"Jaspertzx"},"content":"Client *--\u003e \"*\" Tag","lastModifiedDate":"2024-04-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":56,"author":{"gitId":"Jaspertzx"},"content":"UniqueClientList -[hidden]right-\u003e I","lastModifiedDate":"2024-04-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"Name -[hidden]right-\u003e Phone","lastModifiedDate":"2019-07-03"},{"lineNumber":59,"author":{"gitId":"-"},"content":"Phone -[hidden]right-\u003e Address","lastModifiedDate":"2019-07-03"},{"lineNumber":60,"author":{"gitId":"-"},"content":"Address -[hidden]right-\u003e Email","lastModifiedDate":"2019-07-03"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":62,"author":{"gitId":"Jaspertzx"},"content":"BookKeeper *--\u003e \"1\" OrderList","lastModifiedDate":"2024-04-14"},{"lineNumber":63,"author":{"gitId":"rertyy"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":64,"author":{"gitId":"rertyy"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":65,"author":{"gitId":"rertyy"},"content":"OrderList --\u003e \"~* all\" Order","lastModifiedDate":"2024-03-18"},{"lineNumber":66,"author":{"gitId":"rertyy"},"content":"Order -[hidden]up-\u003eName","lastModifiedDate":"2024-03-18"},{"lineNumber":67,"author":{"gitId":"rertyy"},"content":"Order *--\u003e OrderId","lastModifiedDate":"2024-03-18"},{"lineNumber":68,"author":{"gitId":"rertyy"},"content":"Order *--\u003e OrderDate","lastModifiedDate":"2024-03-18"},{"lineNumber":69,"author":{"gitId":"rertyy"},"content":"Order *--\u003e Deadline","lastModifiedDate":"2024-03-18"},{"lineNumber":70,"author":{"gitId":"rertyy"},"content":"Order *--\u003e Price","lastModifiedDate":"2024-03-18"},{"lineNumber":71,"author":{"gitId":"rertyy"},"content":"Order *--\u003e Description","lastModifiedDate":"2024-03-18"},{"lineNumber":72,"author":{"gitId":"rertyy"},"content":"Order *--\u003e Status","lastModifiedDate":"2024-03-18"},{"lineNumber":73,"author":{"gitId":"rertyy"},"content":"Order *--\u003e ClientId","lastModifiedDate":"2024-03-18"},{"lineNumber":74,"author":{"gitId":"rertyy"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":75,"author":{"gitId":"Jaspertzx"},"content":"ModelManager --\u003e \"~* filtered\" Client","lastModifiedDate":"2024-04-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"rertyy":22,"Jaspertzx":17,"-":37}},{"path":"docs/diagrams/StorageClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam arrowColor STORAGE_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam classBackgroundColor STORAGE_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"package Storage as StoragePackage {","lastModifiedDate":"2023-07-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":9,"author":{"gitId":"-"},"content":"package \"UserPrefs Storage\" #F4F6F6{","lastModifiedDate":"2021-07-31"},{"lineNumber":10,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nUserPrefsStorage\" as UserPrefsStorage","lastModifiedDate":"2022-01-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"Class JsonUserPrefsStorage","lastModifiedDate":"2021-07-31"},{"lineNumber":12,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-07-31"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nStorage\" as Storage","lastModifiedDate":"2022-01-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"Class StorageManager","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":17,"author":{"gitId":"Jaspertzx"},"content":"package \"BookKeeper Storage\" #F4F6F6{","lastModifiedDate":"2024-04-14"},{"lineNumber":18,"author":{"gitId":"Jaspertzx"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nBookKeeperStorage\" as BookKeeperStorage","lastModifiedDate":"2024-04-14"},{"lineNumber":19,"author":{"gitId":"Jaspertzx"},"content":"Class JsonBookKeeperStorage","lastModifiedDate":"2024-04-14"},{"lineNumber":20,"author":{"gitId":"Jaspertzx"},"content":"Class JsonSerializableBookKeeper","lastModifiedDate":"2024-04-14"},{"lineNumber":21,"author":{"gitId":"Jaspertzx"},"content":"Class JsonAdaptedClient","lastModifiedDate":"2024-04-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"Class JsonAdaptedTag","lastModifiedDate":"2021-07-31"},{"lineNumber":23,"author":{"gitId":"Jaspertzx"},"content":"Class JsonAdaptedOrder","lastModifiedDate":"2024-03-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-07-31"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":26,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-07-31"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":28,"author":{"gitId":"kailinteoo"},"content":"Class HiddenOutside #C4A484","lastModifiedDate":"2024-03-20"},{"lineNumber":29,"author":{"gitId":"-"},"content":"HiddenOutside ..\u003e Storage","lastModifiedDate":"2021-07-31"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":31,"author":{"gitId":"-"},"content":"StorageManager .up.|\u003e Storage","lastModifiedDate":"2021-07-31"},{"lineNumber":32,"author":{"gitId":"-"},"content":"StorageManager -up-\u003e \"1\" UserPrefsStorage","lastModifiedDate":"2021-07-31"},{"lineNumber":33,"author":{"gitId":"Jaspertzx"},"content":"StorageManager -up-\u003e \"1\" BookKeeperStorage","lastModifiedDate":"2024-04-14"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":35,"author":{"gitId":"-"},"content":"Storage -left-|\u003e UserPrefsStorage","lastModifiedDate":"2021-07-31"},{"lineNumber":36,"author":{"gitId":"Jaspertzx"},"content":"Storage -right-|\u003e BookKeeperStorage","lastModifiedDate":"2024-04-14"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":38,"author":{"gitId":"-"},"content":"JsonUserPrefsStorage .up.|\u003e UserPrefsStorage","lastModifiedDate":"2021-07-31"},{"lineNumber":39,"author":{"gitId":"Jaspertzx"},"content":"JsonBookKeeperStorage .up.|\u003e BookKeeperStorage","lastModifiedDate":"2024-04-14"},{"lineNumber":40,"author":{"gitId":"Jaspertzx"},"content":"JsonBookKeeperStorage ..\u003e JsonSerializableBookKeeper","lastModifiedDate":"2024-04-14"},{"lineNumber":41,"author":{"gitId":"Jaspertzx"},"content":"JsonSerializableBookKeeper --\u003e \"*\" JsonAdaptedClient","lastModifiedDate":"2024-04-14"},{"lineNumber":42,"author":{"gitId":"Jaspertzx"},"content":"JsonSerializableBookKeeper --\u003e \"*\" JsonAdaptedOrder","lastModifiedDate":"2024-04-14"},{"lineNumber":43,"author":{"gitId":"Jaspertzx"},"content":"JsonAdaptedClient --\u003e \"*\" JsonAdaptedTag","lastModifiedDate":"2024-04-13"},{"lineNumber":44,"author":{"gitId":"Jaspertzx"},"content":"JsonAdaptedTag -[hidden]right-\u003e JsonAdaptedOrder","lastModifiedDate":"2024-03-20"},{"lineNumber":45,"author":{"gitId":"Jaspertzx"},"content":"JsonAdaptedClient --\u003e \"*\" JsonAdaptedOrder","lastModifiedDate":"2024-04-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":47,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"kailinteoo":1,"Jaspertzx":15,"-":31}},{"path":"docs/diagrams/UiClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam arrowColor UI_COLOR_T4","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam classBackgroundColor UI_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"package UI \u003c\u003cRectangle\u003e\u003e{","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nUi\" as Ui","lastModifiedDate":"2022-01-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"Class \"{abstract}\\nUiPart\" as UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"Class UiManager","lastModifiedDate":"2019-07-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"Class MainWindow","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"Class HelpWindow","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"Class ResultDisplay","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"Jaspertzx"},"content":"Class ClientListPanel","lastModifiedDate":"2024-04-13"},{"lineNumber":15,"author":{"gitId":"kailinteoo"},"content":"Class OrderListPanel","lastModifiedDate":"2024-03-20"},{"lineNumber":16,"author":{"gitId":"Jaspertzx"},"content":"Class ClientCard","lastModifiedDate":"2024-04-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"Class StatusBarFooter","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"Class CommandBox","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"kailinteoo"},"content":"Class OrderCard","lastModifiedDate":"2024-03-20"},{"lineNumber":20,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"package Model \u003c\u003cRectangle\u003e\u003e {","lastModifiedDate":"2019-07-03"},{"lineNumber":23,"author":{"gitId":"-"},"content":"Class HiddenModel #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":24,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"package Logic \u003c\u003cRectangle\u003e\u003e {","lastModifiedDate":"2019-07-03"},{"lineNumber":27,"author":{"gitId":"-"},"content":"Class HiddenLogic #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"Class HiddenOutside #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"HiddenOutside ..\u003e Ui","lastModifiedDate":"2019-07-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"UiManager .left.|\u003e Ui","lastModifiedDate":"2019-07-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"UiManager -down-\u003e \"1\" MainWindow","lastModifiedDate":"2021-07-31"},{"lineNumber":35,"author":{"gitId":"-"},"content":"MainWindow *-down-\u003e  \"1\" CommandBox","lastModifiedDate":"2021-07-31"},{"lineNumber":36,"author":{"gitId":"-"},"content":"MainWindow *-down-\u003e \"1\" ResultDisplay","lastModifiedDate":"2021-07-31"},{"lineNumber":37,"author":{"gitId":"Jaspertzx"},"content":"MainWindow *-down-\u003e \"1\" ClientListPanel","lastModifiedDate":"2024-04-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"MainWindow *-down-\u003e \"1\" StatusBarFooter","lastModifiedDate":"2021-07-31"},{"lineNumber":39,"author":{"gitId":"kailinteoo"},"content":"MainWindow *-down-\u003e \"1\" OrderListPanel","lastModifiedDate":"2024-03-20"},{"lineNumber":40,"author":{"gitId":"-"},"content":"MainWindow --\u003e \"0..1\" HelpWindow","lastModifiedDate":"2021-07-31"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":42,"author":{"gitId":"Jaspertzx"},"content":"ClientListPanel -down-\u003e \"*\" ClientCard","lastModifiedDate":"2024-04-13"},{"lineNumber":43,"author":{"gitId":"kailinteoo"},"content":"OrderListPanel -down-\u003e \"*\" OrderCard","lastModifiedDate":"2024-03-20"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":45,"author":{"gitId":"-"},"content":"MainWindow -left-|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":47,"author":{"gitId":"-"},"content":"ResultDisplay --|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":48,"author":{"gitId":"-"},"content":"CommandBox --|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":49,"author":{"gitId":"Jaspertzx"},"content":"ClientListPanel --|\u003e UiPart","lastModifiedDate":"2024-04-13"},{"lineNumber":50,"author":{"gitId":"Jaspertzx"},"content":"ClientCard --|\u003e UiPart","lastModifiedDate":"2024-04-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"StatusBarFooter --|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":52,"author":{"gitId":"-"},"content":"HelpWindow --|\u003e UiPart","lastModifiedDate":"2021-07-31"},{"lineNumber":53,"author":{"gitId":"kailinteoo"},"content":"OrderListPanel --|\u003e UiPart","lastModifiedDate":"2024-03-20"},{"lineNumber":54,"author":{"gitId":"kailinteoo"},"content":"OrderCard -up-|\u003e UiPart","lastModifiedDate":"2024-03-20"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":56,"author":{"gitId":"Jaspertzx"},"content":"ClientCard ..\u003e Model","lastModifiedDate":"2024-04-13"},{"lineNumber":57,"author":{"gitId":"kailinteoo"},"content":"OrderCard ..\u003e Model","lastModifiedDate":"2024-03-20"},{"lineNumber":58,"author":{"gitId":"-"},"content":"UiManager -right-\u003e Logic","lastModifiedDate":"2019-07-03"},{"lineNumber":59,"author":{"gitId":"-"},"content":"MainWindow -left-\u003e Logic","lastModifiedDate":"2019-07-03"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":61,"author":{"gitId":"Jaspertzx"},"content":"ClientListPanel -[hidden]left- HelpWindow","lastModifiedDate":"2024-04-13"},{"lineNumber":62,"author":{"gitId":"kailinteoo"},"content":"HelpWindow -[hidden]up-\u003e CommandBox","lastModifiedDate":"2024-03-20"},{"lineNumber":63,"author":{"gitId":"-"},"content":"CommandBox -[hidden]left- ResultDisplay","lastModifiedDate":"2019-07-03"},{"lineNumber":64,"author":{"gitId":"-"},"content":"ResultDisplay -[hidden]left- StatusBarFooter","lastModifiedDate":"2019-07-30"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":66,"author":{"gitId":"kailinteoo"},"content":"MainWindow -[hidden]up-|\u003e UiPart","lastModifiedDate":"2024-03-20"},{"lineNumber":67,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"kailinteoo":9,"Jaspertzx":8,"-":50}},{"path":"docs/index.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"shavonneg"},"content":"title: BookKeeper","lastModifiedDate":"2024-04-14"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"rertyy"},"content":"[![CI Status](https://github.com/se-edu/addressbook-level3/workflows/Java%20CI/badge.svg)](https://github.com/AY2324S2-CS2103T-T09-2/tp/actions)","lastModifiedDate":"2024-04-05"},{"lineNumber":7,"author":{"gitId":"rertyy"},"content":"","lastModifiedDate":"2024-04-05"},{"lineNumber":8,"author":{"gitId":"rertyy"},"content":"[![codecov](https://codecov.io/gh/AY2324S2-CS2103T-T09-2/tp/graph/badge.svg?token\u003dBMICX593IT)](https://codecov.io/gh/AY2324S2-CS2103T-T09-2/tp)","lastModifiedDate":"2024-04-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"![Ui](images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"rertyy"},"content":"# Introduction","lastModifiedDate":"2024-04-05"},{"lineNumber":13,"author":{"gitId":"rertyy"},"content":"","lastModifiedDate":"2024-04-05"},{"lineNumber":14,"author":{"gitId":"rertyy"},"content":"Welcome to BookKeeper, your solution for efficient customer management for **small business owners in the floral","lastModifiedDate":"2024-04-05"},{"lineNumber":15,"author":{"gitId":"rertyy"},"content":"industry**. \u003cbr\u003e","lastModifiedDate":"2024-04-05"},{"lineNumber":16,"author":{"gitId":"rertyy"},"content":"","lastModifiedDate":"2024-04-05"},{"lineNumber":17,"author":{"gitId":"rertyy"},"content":"This application is designed to streamline customer lists and enhance productivity for individuals operating","lastModifiedDate":"2024-04-05"},{"lineNumber":18,"author":{"gitId":"rertyy"},"content":"small businesses with limited resources and manpower. With BookKeeper, you can easily manage customer information, track","lastModifiedDate":"2024-04-05"},{"lineNumber":19,"author":{"gitId":"rertyy"},"content":"orders, and personalize your customer interactions, all through a user-friendly command-line interface.","lastModifiedDate":"2024-04-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"rertyy"},"content":"For the detailed documentation of this project, see","lastModifiedDate":"2024-04-05"},{"lineNumber":22,"author":{"gitId":"rertyy"},"content":"the [BookKeeper website](https://ay2324s2-cs2103t-t09-2.github.io/tp/).","lastModifiedDate":"2024-04-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"rertyy"},"content":"* If you are interested in using BookKeeper, head over to the [_Quick Start_ section of the **User Guide","lastModifiedDate":"2024-04-05"},{"lineNumber":25,"author":{"gitId":"rertyy"},"content":"  **](UserGuide.html#quick-start).","lastModifiedDate":"2024-04-05"},{"lineNumber":26,"author":{"gitId":"rertyy"},"content":"* If you are interested in developing BookKeeper, the [**Developer Guide**](DeveloperGuide.html) is a good place to","lastModifiedDate":"2024-04-05"},{"lineNumber":27,"author":{"gitId":"rertyy"},"content":"  start.","lastModifiedDate":"2024-04-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"**Acknowledgements**","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"rertyy"},"content":"* Libraries","lastModifiedDate":"2024-04-05"},{"lineNumber":32,"author":{"gitId":"rertyy"},"content":"  used: [JavaFX](https://openjfx.io/), [Jackson](https://github.com/FasterXML/jackson), [JUnit5](https://github.com/junit-team/junit5)","lastModifiedDate":"2024-04-05"}],"authorContributionMap":{"shavonneg":1,"rertyy":19,"-":12}},{"path":"docs/tutorials/AddRemark.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-07-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-07-29"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: \"Tutorial: Adding a command\"","lastModifiedDate":"2020-07-29"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-07-29"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":6,"author":{"gitId":"kailinteoo"},"content":"Let\u0027s walk you through the implementation of a new command —`remark`.","lastModifiedDate":"2024-04-14"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":8,"author":{"gitId":"kailinteoo"},"content":"This command allows users of BookKeeper application to add optional remarks to people in their bookkeeper and edit it if","lastModifiedDate":"2024-04-14"},{"lineNumber":9,"author":{"gitId":"kailinteoo"},"content":"required. The command should have the following format:","lastModifiedDate":"2024-04-14"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":11,"author":{"gitId":"-"},"content":"`remark INDEX r/REMARK` (e.g., `remark 2 r/Likes baseball`)","lastModifiedDate":"2020-07-29"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":13,"author":{"gitId":"-"},"content":"We’ll assume that you have already set up the development environment as outlined in the Developer’s Guide.","lastModifiedDate":"2020-07-29"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"## Create a new `remark` command","lastModifiedDate":"2020-07-29"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":17,"author":{"gitId":"kailinteoo"},"content":"Looking in the `logic.command` package, you will notice that each existing command have their own class. All the","lastModifiedDate":"2024-04-14"},{"lineNumber":18,"author":{"gitId":"kailinteoo"},"content":"commands inherit from the abstract class `Command` which means that they must override `execute()`. Each `Command`","lastModifiedDate":"2024-04-14"},{"lineNumber":19,"author":{"gitId":"kailinteoo"},"content":"returns an instance of `CommandResult` upon success and `CommandResult#feedbackToUser` is printed to","lastModifiedDate":"2024-04-14"},{"lineNumber":20,"author":{"gitId":"kailinteoo"},"content":"the `ResultDisplay`.","lastModifiedDate":"2024-04-14"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":22,"author":{"gitId":"-"},"content":"Let’s start by creating a new `RemarkCommand` class in the `src/main/java/seedu/address/logic/command` directory.","lastModifiedDate":"2020-07-29"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":24,"author":{"gitId":"kailinteoo"},"content":"For now, let’s keep `RemarkCommand` as simple as possible and print some output. We accomplish that by returning","lastModifiedDate":"2024-04-14"},{"lineNumber":25,"author":{"gitId":"kailinteoo"},"content":"a `CommandResult` with an accompanying message.","lastModifiedDate":"2024-04-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":27,"author":{"gitId":"-"},"content":"**`RemarkCommand.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":29,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":30,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2020-07-29"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2020-07-29"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":34,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-07-29"},{"lineNumber":35,"author":{"gitId":"Jaspertzx"},"content":" * Changes the remark of an existing client in bookkeeper.","lastModifiedDate":"2024-04-14"},{"lineNumber":36,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-07-29"},{"lineNumber":37,"author":{"gitId":"-"},"content":"public class RemarkCommand extends Command {","lastModifiedDate":"2020-07-29"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"remark\";","lastModifiedDate":"2020-07-29"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2020-07-29"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        return new CommandResult(\"Hello from remark\");","lastModifiedDate":"2020-07-29"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":45,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":46,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":48,"author":{"gitId":"-"},"content":"### Hook `RemarkCommand` into the application","lastModifiedDate":"2020-07-29"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":50,"author":{"gitId":"kailinteoo"},"content":"Now that we have our `RemarkCommand` ready to be executed, we need to update `AddressBookParser#parseCommand()` to","lastModifiedDate":"2024-04-14"},{"lineNumber":51,"author":{"gitId":"kailinteoo"},"content":"recognize the `remark` keyword. Add the new command to the `switch` block by creating a new `case` that returns a new","lastModifiedDate":"2024-04-14"},{"lineNumber":52,"author":{"gitId":"kailinteoo"},"content":"instance of `RemarkCommand`.","lastModifiedDate":"2024-04-14"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":54,"author":{"gitId":"kailinteoo"},"content":"You can refer to the changes in","lastModifiedDate":"2024-04-14"},{"lineNumber":55,"author":{"gitId":"kailinteoo"},"content":"this [diff](https://github.com/se-edu/addressbook-level3/commit/35eb7286f18a029d39cb7a29df8f172a001e4fd8#diff-399c284cb892c20b7c04a69116fcff6ccc0666c5230a1db8e4a9145def8fa4ee).","lastModifiedDate":"2024-04-14"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":57,"author":{"gitId":"-"},"content":"### Run the application","lastModifiedDate":"2020-07-29"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":59,"author":{"gitId":"-"},"content":"Run `Main#main` and try out your new `RemarkCommand`. If everything went well, you should see something like this:","lastModifiedDate":"2020-07-29"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":61,"author":{"gitId":"-"},"content":"![Output displayed](../images/add-remark/RemarkHello.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":63,"author":{"gitId":"-"},"content":"## Change `RemarkCommand` to throw an exception","lastModifiedDate":"2020-07-29"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":65,"author":{"gitId":"kailinteoo"},"content":"While we have successfully printed a message to `ResultDisplay`, the command does not do what it is supposed to do.","lastModifiedDate":"2024-04-14"},{"lineNumber":66,"author":{"gitId":"kailinteoo"},"content":"Let’s change the command to throw a `CommandException` to accurately reflect that our command is still a work in","lastModifiedDate":"2024-04-14"},{"lineNumber":67,"author":{"gitId":"kailinteoo"},"content":"progress.","lastModifiedDate":"2024-04-14"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":69,"author":{"gitId":"-"},"content":"![The relationship between RemarkCommand and Command](../images/add-remark/RemarkCommandClass.png)","lastModifiedDate":"2023-09-12"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":71,"author":{"gitId":"-"},"content":"Following the convention in other commands, we add relevant messages as constants and use them.","lastModifiedDate":"2020-07-29"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":73,"author":{"gitId":"-"},"content":"**`RemarkCommand.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":75,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2021-08-01"},{"lineNumber":77,"author":{"gitId":"Jaspertzx"},"content":"            + \": Edits the remark of the client identified \"","lastModifiedDate":"2024-04-14"},{"lineNumber":78,"author":{"gitId":"Jaspertzx"},"content":"            + \"by the index number used in the last client listing. \"","lastModifiedDate":"2024-04-14"},{"lineNumber":79,"author":{"gitId":"-"},"content":"            + \"Existing remark will be overwritten by the input.\\n\"","lastModifiedDate":"2020-07-29"},{"lineNumber":80,"author":{"gitId":"-"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2020-07-29"},{"lineNumber":81,"author":{"gitId":"-"},"content":"            + \"r/ [REMARK]\\n\"","lastModifiedDate":"2020-07-29"},{"lineNumber":82,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2020-07-29"},{"lineNumber":83,"author":{"gitId":"-"},"content":"            + \"r/ Likes to swim.\";","lastModifiedDate":"2020-07-29"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_NOT_IMPLEMENTED_YET \u003d","lastModifiedDate":"2021-08-01"},{"lineNumber":86,"author":{"gitId":"-"},"content":"            \"Remark command not implemented yet\";","lastModifiedDate":"2021-08-01"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2020-07-29"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        throw new CommandException(MESSAGE_NOT_IMPLEMENTED_YET);","lastModifiedDate":"2020-07-29"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":92,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":94,"author":{"gitId":"-"},"content":"## Enhancing `RemarkCommand`","lastModifiedDate":"2020-07-29"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":96,"author":{"gitId":"-"},"content":"Let’s change `RemarkCommand` to parse input from the user.","lastModifiedDate":"2020-07-29"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":98,"author":{"gitId":"-"},"content":"### Make the command accept parameters","lastModifiedDate":"2020-07-29"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":100,"author":{"gitId":"kailinteoo"},"content":"We start by modifying the constructor of `RemarkCommand` to accept an `Index` and a `String`. While we are at it, let’s","lastModifiedDate":"2024-04-14"},{"lineNumber":101,"author":{"gitId":"kailinteoo"},"content":"change the error message to echo the values. While this is not a replacement for tests, it is an obvious way to tell if","lastModifiedDate":"2024-04-14"},{"lineNumber":102,"author":{"gitId":"kailinteoo"},"content":"our code is functioning as intended.","lastModifiedDate":"2024-04-14"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":104,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":105,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2020-07-29"},{"lineNumber":106,"author":{"gitId":"-"},"content":"//...","lastModifiedDate":"2020-07-29"},{"lineNumber":107,"author":{"gitId":"-"},"content":"public class RemarkCommand extends Command {","lastModifiedDate":"2020-07-29"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    //...","lastModifiedDate":"2020-07-29"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_ARGUMENTS \u003d \"Index: %1$d, Remark: %2$s\";","lastModifiedDate":"2020-07-29"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    private final Index index;","lastModifiedDate":"2020-07-29"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    private final String remark;","lastModifiedDate":"2020-07-29"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-07-29"},{"lineNumber":115,"author":{"gitId":"Jaspertzx"},"content":"     * @param index of the client in the filtered client list to edit the remark","lastModifiedDate":"2024-04-14"},{"lineNumber":116,"author":{"gitId":"Jaspertzx"},"content":"     * @param remark of the client to be updated to","lastModifiedDate":"2024-04-14"},{"lineNumber":117,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-07-29"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    public RemarkCommand(Index index, String remark) {","lastModifiedDate":"2020-07-29"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        requireAllNonNull(index, remark);","lastModifiedDate":"2020-07-29"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        this.index \u003d index;","lastModifiedDate":"2020-07-29"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        this.remark \u003d remark;","lastModifiedDate":"2020-07-29"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2020-07-29"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        throw new CommandException(","lastModifiedDate":"2021-08-01"},{"lineNumber":127,"author":{"gitId":"-"},"content":"                String.format(MESSAGE_ARGUMENTS, index.getOneBased(), remark));","lastModifiedDate":"2021-08-01"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2020-07-29"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2020-07-29"},{"lineNumber":133,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2020-07-29"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-07-29"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2020-07-29"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        if (!(other instanceof RemarkCommand)) {","lastModifiedDate":"2020-07-29"},{"lineNumber":138,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2020-07-29"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-07-29"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        RemarkCommand e \u003d (RemarkCommand) other;","lastModifiedDate":"2020-07-29"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        return index.equals(e.index)","lastModifiedDate":"2020-07-29"},{"lineNumber":143,"author":{"gitId":"-"},"content":"                \u0026\u0026 remark.equals(e.remark);","lastModifiedDate":"2020-07-29"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":145,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":146,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":148,"author":{"gitId":"kailinteoo"},"content":"Your code should look something","lastModifiedDate":"2024-04-14"},{"lineNumber":149,"author":{"gitId":"kailinteoo"},"content":"like [this](https://github.com/se-edu/addressbook-level3/commit/dc6d5139d08f6403da0ec624ea32bd79a2ae0cbf#diff-a8e35af8f9c251525063fae36c9852922a7e7195763018eacec60f3a4d87c594)","lastModifiedDate":"2024-04-14"},{"lineNumber":150,"author":{"gitId":"kailinteoo"},"content":"after you are done.","lastModifiedDate":"2024-04-14"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":152,"author":{"gitId":"-"},"content":"### Parse user input","lastModifiedDate":"2020-07-29"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":154,"author":{"gitId":"-"},"content":"Now let’s move on to writing a parser that will extract the index and remark from the input provided by the user.","lastModifiedDate":"2020-07-29"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":156,"author":{"gitId":"kailinteoo"},"content":"Create a `RemarkCommandParser` class in the `seedu.address.logic.parser` package. The class must extend the `Parser`","lastModifiedDate":"2024-04-14"},{"lineNumber":157,"author":{"gitId":"kailinteoo"},"content":"interface.","lastModifiedDate":"2024-04-14"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":159,"author":{"gitId":"-"},"content":"![The relationship between Parser and RemarkCommandParser](../images/add-remark/RemarkCommandParserClass.png)","lastModifiedDate":"2023-09-12"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":161,"author":{"gitId":"kailinteoo"},"content":"Thankfully, `ArgumentTokenizer#tokenize()` makes it trivial to parse user input. Let’s take a look at the JavaDoc","lastModifiedDate":"2024-04-14"},{"lineNumber":162,"author":{"gitId":"kailinteoo"},"content":"provided for the function to understand what it does.","lastModifiedDate":"2024-04-14"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":164,"author":{"gitId":"-"},"content":"**`ArgumentTokenizer.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":166,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":167,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-07-29"},{"lineNumber":168,"author":{"gitId":"-"},"content":" * Tokenizes an arguments string and returns an {@code ArgumentMultimap}","lastModifiedDate":"2020-07-29"},{"lineNumber":169,"author":{"gitId":"-"},"content":" * object that maps prefixes to their respective argument values. Only the","lastModifiedDate":"2020-07-29"},{"lineNumber":170,"author":{"gitId":"-"},"content":" * given prefixes will be recognized in the arguments string.","lastModifiedDate":"2020-07-29"},{"lineNumber":171,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2020-07-29"},{"lineNumber":172,"author":{"gitId":"-"},"content":" * @param argsString Arguments string of the form:","lastModifiedDate":"2020-07-29"},{"lineNumber":173,"author":{"gitId":"-"},"content":" * {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}","lastModifiedDate":"2020-07-29"},{"lineNumber":174,"author":{"gitId":"-"},"content":" * @param prefixes   Prefixes to tokenize the arguments string with","lastModifiedDate":"2020-07-29"},{"lineNumber":175,"author":{"gitId":"-"},"content":" * @return           ArgumentMultimap object that maps prefixes to their","lastModifiedDate":"2020-07-29"},{"lineNumber":176,"author":{"gitId":"-"},"content":" * arguments","lastModifiedDate":"2020-07-29"},{"lineNumber":177,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-07-29"},{"lineNumber":178,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":180,"author":{"gitId":"kailinteoo"},"content":"We can tell `ArgumentTokenizer#tokenize()` to look out for our new prefix `r/` and it will return us an instance","lastModifiedDate":"2024-04-14"},{"lineNumber":181,"author":{"gitId":"kailinteoo"},"content":"of `ArgumentMultimap`. Now let’s find out what we need to do in order to obtain the Index and String that we need. Let’s","lastModifiedDate":"2024-04-14"},{"lineNumber":182,"author":{"gitId":"kailinteoo"},"content":"look through `ArgumentMultimap` :","lastModifiedDate":"2024-04-14"},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":184,"author":{"gitId":"-"},"content":"**`ArgumentMultimap.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":185,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":186,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":187,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-07-29"},{"lineNumber":188,"author":{"gitId":"-"},"content":" * Returns the last value of {@code prefix}.","lastModifiedDate":"2020-07-29"},{"lineNumber":189,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-07-29"},{"lineNumber":190,"author":{"gitId":"-"},"content":"public Optional\u003cString\u003e getValue(Prefix prefix) {","lastModifiedDate":"2020-07-29"},{"lineNumber":191,"author":{"gitId":"-"},"content":"    List\u003cString\u003e values \u003d getAllValues(prefix);","lastModifiedDate":"2020-07-29"},{"lineNumber":192,"author":{"gitId":"-"},"content":"    return values.isEmpty() ? Optional.empty() :","lastModifiedDate":"2020-07-29"},{"lineNumber":193,"author":{"gitId":"-"},"content":"        Optional.of(values.get(values.size() - 1));","lastModifiedDate":"2020-07-29"},{"lineNumber":194,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":195,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":197,"author":{"gitId":"kailinteoo"},"content":"This appears to be what we need to get a String of the remark. But what about the Index? Let\u0027s take a quick peek at","lastModifiedDate":"2024-04-14"},{"lineNumber":198,"author":{"gitId":"kailinteoo"},"content":"existing `Command` that uses an index to see how it is done.","lastModifiedDate":"2024-04-14"},{"lineNumber":199,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":200,"author":{"gitId":"-"},"content":"**`DeleteCommandParser.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":201,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":202,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":203,"author":{"gitId":"-"},"content":"Index index \u003d ParserUtil.parseIndex(args);","lastModifiedDate":"2020-07-29"},{"lineNumber":204,"author":{"gitId":"-"},"content":"return new DeleteCommand(index);","lastModifiedDate":"2020-07-29"},{"lineNumber":205,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":206,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":207,"author":{"gitId":"-"},"content":"There appears to be another utility class that obtains an `Index` from the input provided by the user.","lastModifiedDate":"2020-07-29"},{"lineNumber":208,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":209,"author":{"gitId":"kailinteoo"},"content":"Now that we have the know-how to extract the data that we need from the user’s input, we can parse the user command and","lastModifiedDate":"2024-04-14"},{"lineNumber":210,"author":{"gitId":"kailinteoo"},"content":"create a new instance of `RemarkCommand`, as given below.","lastModifiedDate":"2024-04-14"},{"lineNumber":211,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":212,"author":{"gitId":"-"},"content":"**`RemarkCommandParser.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":213,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":214,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":215,"author":{"gitId":"-"},"content":"public RemarkCommand parse(String args) throws ParseException {","lastModifiedDate":"2020-07-29"},{"lineNumber":216,"author":{"gitId":"-"},"content":"    requireNonNull(args);","lastModifiedDate":"2020-07-29"},{"lineNumber":217,"author":{"gitId":"-"},"content":"    ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args,","lastModifiedDate":"2020-07-29"},{"lineNumber":218,"author":{"gitId":"-"},"content":"        PREFIX_REMARK);","lastModifiedDate":"2020-07-29"},{"lineNumber":219,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":220,"author":{"gitId":"-"},"content":"    Index index;","lastModifiedDate":"2020-07-29"},{"lineNumber":221,"author":{"gitId":"-"},"content":"    try {","lastModifiedDate":"2020-07-29"},{"lineNumber":222,"author":{"gitId":"-"},"content":"        index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2020-07-29"},{"lineNumber":223,"author":{"gitId":"-"},"content":"    } catch (IllegalValueException ive) {","lastModifiedDate":"2020-07-29"},{"lineNumber":224,"author":{"gitId":"-"},"content":"        throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2020-07-29"},{"lineNumber":225,"author":{"gitId":"-"},"content":"            RemarkCommand.MESSAGE_USAGE), ive);","lastModifiedDate":"2020-07-29"},{"lineNumber":226,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":227,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":228,"author":{"gitId":"-"},"content":"    String remark \u003d argMultimap.getValue(PREFIX_REMARK).orElse(\"\");","lastModifiedDate":"2020-07-29"},{"lineNumber":229,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":230,"author":{"gitId":"-"},"content":"    return new RemarkCommand(index, remark);","lastModifiedDate":"2020-07-29"},{"lineNumber":231,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":232,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":233,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":234,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":235,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":236,"author":{"gitId":"-"},"content":":information_source: Don’t forget to update `AddressBookParser` to use our new `RemarkCommandParser`!","lastModifiedDate":"2020-07-29"},{"lineNumber":237,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":238,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":239,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":240,"author":{"gitId":"-"},"content":"If you are stuck, check out the sample","lastModifiedDate":"2020-07-29"},{"lineNumber":241,"author":{"gitId":"-"},"content":"[here](https://github.com/se-edu/addressbook-level3/commit/dc6d5139d08f6403da0ec624ea32bd79a2ae0cbf#diff-8bf239e8e9529369b577701303ddd96af93178b4ed6735f91c2d8488b20c6b4a).","lastModifiedDate":"2022-01-02"},{"lineNumber":242,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":243,"author":{"gitId":"-"},"content":"## Add `Remark` to the model","lastModifiedDate":"2020-07-29"},{"lineNumber":244,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":245,"author":{"gitId":"kailinteoo"},"content":"Now that we have all the information that we need, let’s lay the groundwork for propagating the remarks added into the","lastModifiedDate":"2024-04-14"},{"lineNumber":246,"author":{"gitId":"Jaspertzx"},"content":"in-memory storage of client data. We achieve that by working with the `Person` model. Each field in a Person is","lastModifiedDate":"2024-04-14"},{"lineNumber":247,"author":{"gitId":"Jaspertzx"},"content":"implemented as a separate class (e.g. a `Name` object represents the client’s name). That means we should add a `Remark`","lastModifiedDate":"2024-04-14"},{"lineNumber":248,"author":{"gitId":"Jaspertzx"},"content":"class so that we can use a `Remark` object to represent a remark given to a client.","lastModifiedDate":"2024-04-14"},{"lineNumber":249,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":250,"author":{"gitId":"-"},"content":"### Add a new `Remark` class","lastModifiedDate":"2020-07-29"},{"lineNumber":251,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":252,"author":{"gitId":"Jaspertzx"},"content":"Create a new `Remark` in `seedu.address.model.client`. Since a `Remark` is a field that is similar to `Address`, we can","lastModifiedDate":"2024-04-14"},{"lineNumber":253,"author":{"gitId":"kailinteoo"},"content":"reuse a significant bit of code.","lastModifiedDate":"2024-04-14"},{"lineNumber":254,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":255,"author":{"gitId":"kailinteoo"},"content":"A copy-paste and search-replace later, you should have something","lastModifiedDate":"2024-04-14"},{"lineNumber":256,"author":{"gitId":"kailinteoo"},"content":"like [this](https://github.com/se-edu/addressbook-level3/commit/4516e099699baa9e2d51801bd26f016d812dedcc#diff-41bb13c581e280c686198251ad6cc337cd5e27032772f06ed9bf7f1440995ece).","lastModifiedDate":"2024-04-14"},{"lineNumber":257,"author":{"gitId":"kailinteoo"},"content":"Note how `Remark` has no constrains and thus does not require input","lastModifiedDate":"2024-04-14"},{"lineNumber":258,"author":{"gitId":"-"},"content":"validation.","lastModifiedDate":"2020-07-29"},{"lineNumber":259,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":260,"author":{"gitId":"-"},"content":"### Make use of `Remark`","lastModifiedDate":"2020-07-29"},{"lineNumber":261,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":262,"author":{"gitId":"kailinteoo"},"content":"Let’s change `RemarkCommand` and `RemarkCommandParser` to use the new `Remark` class instead of plain `String`. These","lastModifiedDate":"2024-04-14"},{"lineNumber":263,"author":{"gitId":"kailinteoo"},"content":"should be relatively simple changes.","lastModifiedDate":"2024-04-14"},{"lineNumber":264,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":265,"author":{"gitId":"-"},"content":"## Add a placeholder element for remark to the UI","lastModifiedDate":"2020-07-29"},{"lineNumber":266,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":267,"author":{"gitId":"kailinteoo"},"content":"Without getting too deep into `fxml`, let’s go on a 5 minute adventure to get some placeholder text to show up for each","lastModifiedDate":"2024-04-14"},{"lineNumber":268,"author":{"gitId":"Jaspertzx"},"content":"client.","lastModifiedDate":"2024-04-14"},{"lineNumber":269,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":270,"author":{"gitId":"kailinteoo"},"content":"Simply add the following","lastModifiedDate":"2024-04-14"},{"lineNumber":271,"author":{"gitId":"Jaspertzx"},"content":"to [`seedu.address.ui.ClientCard`](https://github.com/se-edu/addressbook-level3/commit/850b78879582f38accb05dd20c245963c65ea599#diff-639834f1e05afe2276a86372adf0fe5f69314642c2d93cfa543d614ce5a76688).","lastModifiedDate":"2024-04-14"},{"lineNumber":272,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":273,"author":{"gitId":"-"},"content":"**`PersonCard.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":274,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":275,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":276,"author":{"gitId":"-"},"content":"@FXML","lastModifiedDate":"2020-07-29"},{"lineNumber":277,"author":{"gitId":"-"},"content":"private Label remark;","lastModifiedDate":"2020-07-29"},{"lineNumber":278,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":279,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":280,"author":{"gitId":"kailinteoo"},"content":"`@FXML` is an annotation that marks a private or protected field and makes it accessible to FXML. It might sound like","lastModifiedDate":"2024-04-14"},{"lineNumber":281,"author":{"gitId":"kailinteoo"},"content":"Greek to you right now, don’t worry — we will get back to it later.","lastModifiedDate":"2024-04-14"},{"lineNumber":282,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":283,"author":{"gitId":"kailinteoo"},"content":"Then insert the following","lastModifiedDate":"2024-04-14"},{"lineNumber":284,"author":{"gitId":"kailinteoo"},"content":"into [`main/resources/view/PersonListCard.fxml`](https://github.com/se-edu/addressbook-level3/commit/850b78879582f38accb05dd20c245963c65ea599#diff-d44c4f51c24f6253c277a2bb9bc440b8064d9c15ad7cb7ceda280bca032efce9).","lastModifiedDate":"2024-04-14"},{"lineNumber":285,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":286,"author":{"gitId":"-"},"content":"**`PersonListCard.fxml`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":287,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":288,"author":{"gitId":"-"},"content":"``` xml","lastModifiedDate":"2020-07-29"},{"lineNumber":289,"author":{"gitId":"-"},"content":"\u003cLabel fx:id\u003d\"remark\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$remark\" /\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":290,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":291,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":292,"author":{"gitId":"-"},"content":"That’s it! Fire up the application again and you should see something like this:","lastModifiedDate":"2020-07-29"},{"lineNumber":293,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":294,"author":{"gitId":"-"},"content":"![$remark shows up in each entry](../images/add-remark/$Remark.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":295,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":296,"author":{"gitId":"-"},"content":"## Modify `Person` to support a `Remark` field","lastModifiedDate":"2020-07-29"},{"lineNumber":297,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":298,"author":{"gitId":"-"},"content":"Since `PersonCard` displays data from a `Person`, we need to update `Person` to get our `Remark` displayed!","lastModifiedDate":"2020-07-29"},{"lineNumber":299,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":300,"author":{"gitId":"-"},"content":"### Modify `Person`","lastModifiedDate":"2020-07-29"},{"lineNumber":301,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":302,"author":{"gitId":"kailinteoo"},"content":"We change the constructor of `Person` to take a `Remark`. We will also need to define new fields and accessors","lastModifiedDate":"2024-04-14"},{"lineNumber":303,"author":{"gitId":"kailinteoo"},"content":"accordingly to store our new addition.","lastModifiedDate":"2024-04-14"},{"lineNumber":304,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":305,"author":{"gitId":"-"},"content":"### Update other usages of `Person`","lastModifiedDate":"2020-07-29"},{"lineNumber":306,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":307,"author":{"gitId":"kailinteoo"},"content":"Unfortunately, a change to `Person` will cause other commands to break, you will have to modify these commands to use","lastModifiedDate":"2024-04-14"},{"lineNumber":308,"author":{"gitId":"kailinteoo"},"content":"the updated `Person`!","lastModifiedDate":"2024-04-14"},{"lineNumber":309,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":310,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":311,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":312,"author":{"gitId":"-"},"content":":bulb: Use the `Find Usages` feature in IntelliJ IDEA on the `Person` class to find these commands.","lastModifiedDate":"2020-07-29"},{"lineNumber":313,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":314,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":315,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":316,"author":{"gitId":"kailinteoo"},"content":"Refer to [this commit](https://github.com/se-edu/addressbook-level3/commit/ce998c37e65b92d35c91d28c7822cd139c2c0a5c) and","lastModifiedDate":"2024-04-14"},{"lineNumber":317,"author":{"gitId":"kailinteoo"},"content":"check that you have got everything in order!","lastModifiedDate":"2024-04-14"},{"lineNumber":318,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":319,"author":{"gitId":"-"},"content":"## Updating Storage","lastModifiedDate":"2020-07-29"},{"lineNumber":320,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":321,"author":{"gitId":"kailinteoo"},"content":"AddressBook stores data by serializing `JsonAdaptedPerson` into `json` with the help of an external library — Jackson.","lastModifiedDate":"2024-04-14"},{"lineNumber":322,"author":{"gitId":"kailinteoo"},"content":"Let’s update `JsonAdaptedPerson` to work with our new `Person`!","lastModifiedDate":"2024-04-14"},{"lineNumber":323,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":324,"author":{"gitId":"-"},"content":"While the changes to code may be minimal, the test data will have to be updated as well.","lastModifiedDate":"2020-07-29"},{"lineNumber":325,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":326,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-warning\"\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":327,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":328,"author":{"gitId":"kailinteoo"},"content":":exclamation: You must delete BookKeeper’s storage file located at `/data/bookkeeper.json` before running it! Not doing","lastModifiedDate":"2024-04-14"},{"lineNumber":329,"author":{"gitId":"kailinteoo"},"content":"so will cause BookKeeper to default to an empty bookkeeper!","lastModifiedDate":"2024-04-14"},{"lineNumber":330,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":331,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":332,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":333,"author":{"gitId":"-"},"content":"Check out [this commit](https://github.com/se-edu/addressbook-level3/commit/556cbd0e03ff224d7a68afba171ad2eb0ce56bbf)","lastModifiedDate":"2020-07-29"},{"lineNumber":334,"author":{"gitId":"-"},"content":"to see what the changes entail.","lastModifiedDate":"2020-07-29"},{"lineNumber":335,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":336,"author":{"gitId":"-"},"content":"## Finalizing the UI","lastModifiedDate":"2020-07-29"},{"lineNumber":337,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":338,"author":{"gitId":"-"},"content":"Now that we have finalized the `Person` class and its dependencies, we can now bind the `Remark` field to the UI.","lastModifiedDate":"2020-07-29"},{"lineNumber":339,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":340,"author":{"gitId":"kailinteoo"},"content":"Just","lastModifiedDate":"2024-04-14"},{"lineNumber":341,"author":{"gitId":"kailinteoo"},"content":"add [this one line of code!](https://github.com/se-edu/addressbook-level3/commit/5b98fee11b6b3f5749b6b943c4f3bd3aa049b692)","lastModifiedDate":"2024-04-14"},{"lineNumber":342,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":343,"author":{"gitId":"-"},"content":"**`PersonCard.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":344,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":345,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":346,"author":{"gitId":"Jaspertzx"},"content":"public PersonCard(Person client, int displayedIndex) {","lastModifiedDate":"2024-04-14"},{"lineNumber":347,"author":{"gitId":"-"},"content":"    //...","lastModifiedDate":"2020-07-29"},{"lineNumber":348,"author":{"gitId":"Jaspertzx"},"content":"    remark.setText(client.getRemark().value);","lastModifiedDate":"2024-04-14"},{"lineNumber":349,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":350,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":351,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":352,"author":{"gitId":"-"},"content":"![The remark label is bound properly!](../images/add-remark/RemarkBound.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":353,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":354,"author":{"gitId":"-"},"content":"## Putting everything together","lastModifiedDate":"2020-07-29"},{"lineNumber":355,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":356,"author":{"gitId":"kailinteoo"},"content":"After the previous step, we notice a peculiar regression — we went from displaying something to nothing at all. However,","lastModifiedDate":"2024-04-14"},{"lineNumber":357,"author":{"gitId":"kailinteoo"},"content":"this is expected behavior as we are yet to update the `RemarkCommand` to make use of the code we\u0027ve been adding in the","lastModifiedDate":"2024-04-14"},{"lineNumber":358,"author":{"gitId":"kailinteoo"},"content":"last few steps.","lastModifiedDate":"2024-04-14"},{"lineNumber":359,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":360,"author":{"gitId":"-"},"content":"### Update `RemarkCommand` and `RemarkCommandParser`","lastModifiedDate":"2020-07-29"},{"lineNumber":361,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":362,"author":{"gitId":"kailinteoo"},"content":"In this last step, we modify `RemarkCommand#execute()` to change the `Remark` of a `Person`. Since all fields in","lastModifiedDate":"2024-04-14"},{"lineNumber":363,"author":{"gitId":"kailinteoo"},"content":"a `Person` are immutable, we create a new instance of a `Person` with the values that we want and","lastModifiedDate":"2024-04-14"},{"lineNumber":364,"author":{"gitId":"-"},"content":"save it with `Model#setPerson()`.","lastModifiedDate":"2020-07-29"},{"lineNumber":365,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":366,"author":{"gitId":"-"},"content":"**`RemarkCommand.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":367,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":368,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":369,"author":{"gitId":"-"},"content":"//...","lastModifiedDate":"2020-07-29"},{"lineNumber":370,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_ADD_REMARK_SUCCESS \u003d \"Added remark to Person: %1$s\";","lastModifiedDate":"2020-07-29"},{"lineNumber":371,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DELETE_REMARK_SUCCESS \u003d \"Removed remark from Person: %1$s\";","lastModifiedDate":"2020-07-29"},{"lineNumber":372,"author":{"gitId":"-"},"content":"//...","lastModifiedDate":"2020-07-29"},{"lineNumber":373,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":374,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2020-07-29"},{"lineNumber":375,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2020-07-29"},{"lineNumber":376,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":377,"author":{"gitId":"-"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2020-07-29"},{"lineNumber":378,"author":{"gitId":"-"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2020-07-29"},{"lineNumber":379,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-07-29"},{"lineNumber":380,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":381,"author":{"gitId":"Jaspertzx"},"content":"        Person clientToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2024-04-14"},{"lineNumber":382,"author":{"gitId":"Jaspertzx"},"content":"        Person editedClient \u003d new Person(","lastModifiedDate":"2024-04-14"},{"lineNumber":383,"author":{"gitId":"Jaspertzx"},"content":"                clientToEdit.getName(), clientToEdit.getPhone(), clientToEdit.getEmail(),","lastModifiedDate":"2024-04-14"},{"lineNumber":384,"author":{"gitId":"Jaspertzx"},"content":"                clientToEdit.getAddress(), remark, clientToEdit.getTags());","lastModifiedDate":"2024-04-14"},{"lineNumber":385,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":386,"author":{"gitId":"Jaspertzx"},"content":"        model.setPerson(clientToEdit, editedClient);","lastModifiedDate":"2024-04-14"},{"lineNumber":387,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2020-07-29"},{"lineNumber":388,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":389,"author":{"gitId":"Jaspertzx"},"content":"        return new CommandResult(generateSuccessMessage(editedClient));","lastModifiedDate":"2024-04-14"},{"lineNumber":390,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":391,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":392,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-07-29"},{"lineNumber":393,"author":{"gitId":"-"},"content":"     * Generates a command execution success message based on whether","lastModifiedDate":"2021-08-01"},{"lineNumber":394,"author":{"gitId":"-"},"content":"     * the remark is added to or removed from","lastModifiedDate":"2021-08-01"},{"lineNumber":395,"author":{"gitId":"Jaspertzx"},"content":"     * {@code clientToEdit}.","lastModifiedDate":"2024-04-14"},{"lineNumber":396,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-07-29"},{"lineNumber":397,"author":{"gitId":"Jaspertzx"},"content":"    private String generateSuccessMessage(Person clientToEdit) {","lastModifiedDate":"2024-04-14"},{"lineNumber":398,"author":{"gitId":"-"},"content":"        String message \u003d !remark.value.isEmpty() ? MESSAGE_ADD_REMARK_SUCCESS : MESSAGE_DELETE_REMARK_SUCCESS;","lastModifiedDate":"2020-07-29"},{"lineNumber":399,"author":{"gitId":"Jaspertzx"},"content":"        return String.format(message, clientToEdit);","lastModifiedDate":"2024-04-14"},{"lineNumber":400,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":401,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":402,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":403,"author":{"gitId":"-"},"content":"![Congratulations!](../images/add-remark/RemarkComplete.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":404,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":405,"author":{"gitId":"-"},"content":"## Writing tests","lastModifiedDate":"2020-07-29"},{"lineNumber":406,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":407,"author":{"gitId":"kailinteoo"},"content":"Tests are crucial to ensuring that bugs don’t slip into the codebase unnoticed. This is especially true for large code","lastModifiedDate":"2024-04-14"},{"lineNumber":408,"author":{"gitId":"kailinteoo"},"content":"bases where a change might lead to unintended behavior.","lastModifiedDate":"2024-04-14"},{"lineNumber":409,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":410,"author":{"gitId":"-"},"content":"Let’s verify the correctness of our code by writing some tests!","lastModifiedDate":"2020-07-29"},{"lineNumber":411,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":412,"author":{"gitId":"kailinteoo"},"content":"Of course you can simply add the test cases manually, like you\u0027ve been doing all along this tutorial. The result would","lastModifiedDate":"2024-04-14"},{"lineNumber":413,"author":{"gitId":"kailinteoo"},"content":"be like the test cases","lastModifiedDate":"2024-04-14"},{"lineNumber":414,"author":{"gitId":"kailinteoo"},"content":"in [here](https://github.com/se-edu/addressbook-level3/commit/fac8f3fd855d55831ca0cc73313b5943d49d4d6e#diff-ff58f7c10338b34f76645df49b71ecb2bafaf7611b20e7ff59ebc98475538a01).","lastModifiedDate":"2024-04-14"},{"lineNumber":415,"author":{"gitId":"kailinteoo"},"content":"Alternatively, you can get the help of IntelliJ to generate the skeletons of the test cases, as explained in the next","lastModifiedDate":"2024-04-14"},{"lineNumber":416,"author":{"gitId":"kailinteoo"},"content":"section.","lastModifiedDate":"2024-04-14"},{"lineNumber":417,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-01"},{"lineNumber":418,"author":{"gitId":"-"},"content":"### Automatically generating tests","lastModifiedDate":"2020-07-29"},{"lineNumber":419,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":420,"author":{"gitId":"-"},"content":"The goal is to write effective and efficient tests to ensure that `RemarkCommand#execute()` behaves as expected.","lastModifiedDate":"2020-07-29"},{"lineNumber":421,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":422,"author":{"gitId":"-"},"content":"The convention for test names is `methodName_testScenario_expectedResult`. An example would be","lastModifiedDate":"2020-07-29"},{"lineNumber":423,"author":{"gitId":"-"},"content":"`execute_filteredList_success`.","lastModifiedDate":"2020-07-29"},{"lineNumber":424,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":425,"author":{"gitId":"kailinteoo"},"content":"Let’s create a test for `RemarkCommand#execute()` to test that adding a remark works. On `IntelliJ IDEA` you can bring","lastModifiedDate":"2024-04-14"},{"lineNumber":426,"author":{"gitId":"kailinteoo"},"content":"up the context menu and choose to `Go To` \\\u003e `Test` or use the appropriate keyboard shortcut.","lastModifiedDate":"2024-04-14"},{"lineNumber":427,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":428,"author":{"gitId":"-"},"content":"![Using the context menu to jump to tests](../images/add-remark/ContextMenu.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":429,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":430,"author":{"gitId":"-"},"content":"Then, create a test for the `execute` method.","lastModifiedDate":"2020-07-29"},{"lineNumber":431,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":432,"author":{"gitId":"-"},"content":"![Creating a test for `execute`.](../images/add-remark/CreateTest.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":433,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":434,"author":{"gitId":"-"},"content":"Following convention, let’s change the name of the generated method to `execute_addRemarkUnfilteredList_success`.","lastModifiedDate":"2020-07-29"},{"lineNumber":435,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":436,"author":{"gitId":"kailinteoo"},"content":"Let’s use the utility functions provided in `CommandTestUtil`. The functions ensure that commands produce the","lastModifiedDate":"2024-04-14"},{"lineNumber":437,"author":{"gitId":"kailinteoo"},"content":"expected `CommandResult` and output the correct message. In this case, `CommandTestUtil#assertCommandSuccess` is the","lastModifiedDate":"2024-04-14"},{"lineNumber":438,"author":{"gitId":"kailinteoo"},"content":"best fit as we are testing that a `RemarkCommand` will successfully add a `Remark`.","lastModifiedDate":"2024-04-14"},{"lineNumber":439,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":440,"author":{"gitId":"kailinteoo"},"content":"You should end up with a test that looks something","lastModifiedDate":"2024-04-14"},{"lineNumber":441,"author":{"gitId":"kailinteoo"},"content":"like [this](https://github.com/se-edu/addressbook-level3/commit/fac8f3fd855d55831ca0cc73313b5943d49d4d6e#diff-ff58f7c10338b34f76645df49b71ecb2bafaf7611b20e7ff59ebc98475538a01R36-R49).","lastModifiedDate":"2024-04-14"},{"lineNumber":442,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":443,"author":{"gitId":"-"},"content":"## Conclusion","lastModifiedDate":"2020-07-29"},{"lineNumber":444,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":445,"author":{"gitId":"-"},"content":"This concludes the tutorial for adding a new `Command` to AddressBook.","lastModifiedDate":"2020-07-29"}],"authorContributionMap":{"kailinteoo":78,"Jaspertzx":22,"-":345}},{"path":"docs/tutorials/RemovingFields.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: \"Tutorial: Removing Fields\"","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003e Perfection is achieved, not when there is nothing more to add, but when there is nothing left to take away.","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003e —  Antoine de Saint-Exupery","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"When working on an existing code base, you will most likely find that some features that are no longer necessary.","lastModifiedDate":"2021-08-01"},{"lineNumber":11,"author":{"gitId":"-"},"content":"This tutorial aims to give you some practice on such a code \u0027removal\u0027 activity by removing the `address` field from `Person` class.","lastModifiedDate":"2021-08-01"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-01"},{"lineNumber":13,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-success\"\u003e","lastModifiedDate":"2021-08-01"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-01"},{"lineNumber":15,"author":{"gitId":"-"},"content":"**If you have done the [Add `remark` command tutorial](AddRemark.html)  already**, you should know where the code had to be updated to add the field `remark`. From that experience, you can deduce where the code needs to be changed to _remove_ that field too. The removing of the `address` field can be done similarly.","lastModifiedDate":"2021-08-01"},{"lineNumber":16,"author":{"gitId":"-"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-08-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-08-01"},{"lineNumber":18,"author":{"gitId":"-"},"content":"However, if you have no such prior knowledge, removing a field can take a quite a bit of detective work. This tutorial takes you through that process. **At least have a read even if you don\u0027t actually do the steps yourself.**","lastModifiedDate":"2021-08-01"},{"lineNumber":19,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-08-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"## Safely deleting `Address`","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"IntelliJ IDEA provides a refactoring tool that can identify *most* parts of a removal easily. Let’s try to use it as much as we can.","lastModifiedDate":"2021-08-01"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"### Assisted refactoring","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"Jaspertzx"},"content":"The `address` field in `Person` is actually an instance of the `seedu.address.model.client.Address` class. Since removing the `Address` class will break the application, we start by identifying `Address`\u0027s usages. This allows us to see code that depends on `Address` to function properly and edit them on a case-by-case basis. Right-click the `Address` class and select `Refactor` \\\u003e `Safe Delete` through the menu.","lastModifiedDate":"2024-04-14"},{"lineNumber":32,"author":{"gitId":"-"},"content":"* :bulb: To make things simpler, you can unselect the options `Search in comments and strings` and `Search for text occurrences`","lastModifiedDate":"2021-08-01"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"![Usages detected](../images/remove/UnsafeDelete.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"Choose to `View Usages` and you should be presented with a list of `Safe Delete Conflicts`. These conflicts describe locations in which the `Address` class is used.","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"![List of conflicts](../images/remove/SafeDeleteConflicts.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"Remove usages of `Address` by performing `Safe Delete`s on each entry i.e., double-click on the entry (which takes you to the code in concern, right-click on that entity, and choose `Refactor` -\u003e `Safe delete` as before). You will need to exercise discretion when removing usages of `Address`. Functions like `ParserUtil#parseAddress()` can be safely removed but its usages must be removed as well. Other usages like in `EditPersonDescriptor` may require more careful inspection.","lastModifiedDate":"2021-08-01"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"Let’s try removing references to `Address` in `EditPersonDescriptor`.","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"1. Safe delete the field `address` in `EditPersonDescriptor`.","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"1. Select `Yes` when prompted to remove getters and setters.","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"1. Select `View Usages` again.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"   ![UnsafeDeleteOnField](../images/remove/UnsafeDeleteOnField.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"1. Remove the usages of `address` and select `Do refactor` when you are done.","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"   \u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"   :bulb: **Tip:** Removing usages may result in errors. Exercise discretion and fix them. For example, removing the `address` field from the `Person` class will require you to modify its constructor.","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"   \u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"1. Repeat the steps for the remaining usages of `Address`","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"After you are done, verify that the application still works by compiling and running it again.","lastModifiedDate":"2020-05-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"### Manual refactoring","lastModifiedDate":"2020-05-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"Unfortunately, there are usages of `Address` that IntelliJ IDEA cannot identify. You can find them by searching for instances of the word `address` in your code (`Edit` \\\u003e `Find` \\\u003e `Find in path`).","lastModifiedDate":"2020-05-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"Places of interest to look out for would be resources used by the application. `main/resources` contains images and `fxml` files used by the application and `test/resources` contains test data. For example, there is a `$address` in each `PersonCard` that has not been removed nor identified.","lastModifiedDate":"2020-05-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"![$address](../images/remove/$address.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"A quick look at the `PersonCard` class and its `fxml` file quickly reveals why it slipped past the automated refactoring.","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"**`PersonCard.java`**","lastModifiedDate":"2020-05-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":"...","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"@FXML","lastModifiedDate":"2020-05-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"private Label address;","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"...","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"**`PersonCard.fxml`**","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"``` xml","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"...","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"\u003cLabel fx:id\u003d\"phone\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$phone\" /\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"\u003cLabel fx:id\u003d\"address\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$address\" /\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"\u003cLabel fx:id\u003d\"email\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$email\" /\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"...","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"After removing the `Label`, we can proceed to formally test our code. If everything went well, you should have most of your tests pass. Fix any remaining errors until the tests all pass.","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"## Tidying up","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"At this point, your application is working as intended and all your tests are passing. What’s left to do is to clean up references to `Address` in test data and documentation.","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"In `src/test/data/`, data meant for testing purposes are stored. While keeping the `address` field in the json files does not cause the tests to fail, it is not good practice to let cruft from old features accumulate.","lastModifiedDate":"2020-05-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"**`invalidPersonAddressBook.json`:**","lastModifiedDate":"2020-05-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"```json","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"{","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"Jaspertzx"},"content":"  \"clients\": [ {","lastModifiedDate":"2024-04-14"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    \"name\": \"Person with invalid name field: Ha!ns Mu@ster\",","lastModifiedDate":"2020-05-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    \"phone\": \"9482424\",","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    \"email\": \"hans@example.com\",","lastModifiedDate":"2020-05-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    \"address\": \"4th street\"","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"  } ]","lastModifiedDate":"2020-05-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-05-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":"You can go through each individual `json` file and manually remove the `address` field.","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"Jaspertzx":2,"-":110}},{"path":"docs/tutorials/TracingCode.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: \"Tutorial: Tracing code\"","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003e Indeed, the ratio of time spent reading versus writing is well over 10 to 1. We are constantly reading old code as part of the effort to write new code. …​\\[Therefore,\\] making it easy to read makes it easier to write.","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003e —  Robert C. Martin Clean Code: A Handbook of Agile Software Craftsmanship","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"When trying to understand an unfamiliar code base, one common strategy used is to trace some representative execution path through the code base. One easy way to trace an execution path is to use a debugger to step through the code. In this tutorial, you will be using the IntelliJ IDEA’s debugger to trace the execution path of a specific user command.","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"## Before we start","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"Before we jump into the code, it is useful to get an idea of the overall structure and the high-level behavior of the application. This is provided in the \u0027Architecture\u0027 section of the developer guide. In particular, the architecture diagram (reproduced below), tells us that the App consists of several components.","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"![ArchitectureDiagram](../images/ArchitectureDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"It also has a sequence diagram (reproduced below) that tells us how a command propagates through the App.","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"../images/ArchitectureSequenceDiagram.png\" width\u003d\"550\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"Note how the diagram shows only the execution flows _between_ the main components. That is, it does not show details of the execution path *inside* each component. By hiding those details, the diagram aims to inform the reader about the overall execution path of a command without overwhelming the reader with too much details. In this tutorial, you aim to find those omitted details so that you get a more in-depth understanding of how the code works.","lastModifiedDate":"2021-07-31"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"Before we proceed, ensure that you have done the following:","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"1. Read the [*Architecture* section of the DG](../DeveloperGuide.md#architecture)","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"1. Set up the project in Intellij IDEA","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"1. Learn basic debugging features of Intellij IDEA","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"   * If you are using a different IDE, we\u0027ll leave it to you to figure out the equivalent feature to use in your IDE.","lastModifiedDate":"2021-07-31"},{"lineNumber":32,"author":{"gitId":"-"},"content":"   * If you are not using an IDE, we\u0027ll let you figure out how to achieve the same using your coding toolchain.","lastModifiedDate":"2021-07-31"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"## Setting a breakpoint","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"As you know, the first step of debugging is to put in a breakpoint where you want the debugger to pause the execution. For example, if you are trying to understand how the App starts up, you would put a breakpoint in the first statement of the `main` method.","lastModifiedDate":"2021-07-31"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"In our case, we would want to begin the tracing at the very point where the App start processing user input (i.e., somewhere in the UI component), and then trace through how the execution proceeds through the UI component. However, the execution path through a GUI is often somewhat obscure due to various *event-driven mechanisms* used by GUI frameworks, which happens to be the case here too. Therefore, let us put the breakpoint where the `UI` transfers control to the `Logic` component.","lastModifiedDate":"2021-07-31"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"../images/ArchitectureSequenceDiagram.png\" width\u003d\"550\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":42,"author":{"gitId":"-"},"content":"According to the sequence diagram you saw earlier (and repeated above for reference), the `UI` component yields control to the `Logic` component through a method named `execute`. Searching through the code base for an `execute()` method that belongs to the `Logic` component yields a promising candidate in `seedu.address.logic.Logic`.","lastModifiedDate":"2021-07-31"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":44,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"../images/tracing/searchResultsForExecuteMethod.png\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":46,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":48,"author":{"gitId":"-"},"content":":bulb: **Intellij Tip:** The [\u0027**Search Everywhere**\u0027 feature](https://www.jetbrains.com/help/idea/searching-everywhere.html) can be used here. In particular, the \u0027**Find Symbol**\u0027 (\u0027Symbol\u0027 here refers to methods, variables, classes etc.) variant of that feature is quite useful here as we are looking for a _method_ named `execute`, not simply the text `execute`.","lastModifiedDate":"2021-07-31"},{"lineNumber":49,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":51,"author":{"gitId":"-"},"content":"A quick look at the `seedu.address.logic.Logic` (an extract given below) confirms that this indeed might be what we’re looking for.","lastModifiedDate":"2021-07-31"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":53,"author":{"gitId":"-"},"content":"```java","lastModifiedDate":"2021-07-31"},{"lineNumber":54,"author":{"gitId":"-"},"content":"public interface Logic {","lastModifiedDate":"2021-07-31"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-07-31"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2021-07-31"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     * @param commandText The command as entered by the user.","lastModifiedDate":"2021-07-31"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     * @return the result of the command execution.","lastModifiedDate":"2021-07-31"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     * @throws CommandException If an error occurs during command execution.","lastModifiedDate":"2021-07-31"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     * @throws ParseException If an error occurs during parsing.","lastModifiedDate":"2021-07-31"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-07-31"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    CommandResult execute(String commandText) throws CommandException, ParseException;","lastModifiedDate":"2021-07-31"},{"lineNumber":63,"author":{"gitId":"-"},"content":"...","lastModifiedDate":"2021-07-31"},{"lineNumber":64,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-07-31"},{"lineNumber":65,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-07-31"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":67,"author":{"gitId":"-"},"content":"But apparently, this is an interface, not a concrete implementation.","lastModifiedDate":"2021-07-31"},{"lineNumber":68,"author":{"gitId":"-"},"content":"That should be fine because the [Architecture section of the Developer Guide](../DeveloperGuide.html#architecture) tells us that components interact through interfaces. Here\u0027s the relevant diagram:","lastModifiedDate":"2021-07-31"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":70,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"../images/ComponentManagers.png\" width\u003d\"300\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":72,"author":{"gitId":"-"},"content":"Next, let\u0027s find out which statement(s) in the `UI` code is calling this method, thus transferring control from the `UI` to the `Logic`.","lastModifiedDate":"2021-07-31"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":74,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":76,"author":{"gitId":"-"},"content":":bulb: **Intellij Tip:** The [\u0027**Find Usages**\u0027 feature](https://www.jetbrains.com/help/idea/find-highlight-usages.html#find-usages) can find from which parts of the code a class/method/variable is being used.","lastModifiedDate":"2021-07-31"},{"lineNumber":77,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"![`Find Usages` tool window. `Edit` \\\u003e `Find` \\\u003e `Find Usages`.](../images/tracing/FindUsages.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"Bingo\\! `MainWindow#executeCommand()` seems to be exactly what we’re looking for\\!","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"Now let’s set the breakpoint. First, double-click the item to reach the corresponding code. Once there, click on the left gutter to set a breakpoint, as shown below.","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":" ![LeftGutter](../images/tracing/LeftGutter.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"## Tracing the execution path","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"Recall from the User Guide that the `edit` command has the format: `edit INDEX [n/NAME] [p/PHONE] [e/EMAIL] [a/ADDRESS] [t/TAG]…​` For this tutorial we will be issuing the command `edit 1 n/Alice Yeoh`.","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":":bulb: **Tip:** Over the course of the debugging session, you will encounter every major component in the application. Try to keep track of what happens inside the component and where the execution transfers to another component.","lastModifiedDate":"2021-07-31"},{"lineNumber":93,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"1. To start the debugging session, simply `Run` \\\u003e `Debug Main`","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"1. When the GUI appears, enter `edit 1 n/Alice Yeoh` into the command box and press `Enter`.","lastModifiedDate":"2021-07-31"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"1. The Debugger tool window should show up and show something like this:\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":100,"author":{"gitId":"-"},"content":"   ![DebuggerStep1](../images/tracing/DebuggerStep1.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"1. Use the _Show execution point_ feature to jump to the line of code that we stopped at:\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":103,"author":{"gitId":"-"},"content":"   ![ShowExecutionPoint](../images/tracing/ShowExecutionPoint.png)\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":104,"author":{"gitId":"-"},"content":"   `CommandResult commandResult \u003d logic.execute(commandText);` is the line that you end up at (i.e., the place where we put the breakpoint).","lastModifiedDate":"2021-07-31"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"1. We are interested in the `logic.execute(commandText)` portion of that line so let’s _Step in_ into that method call:\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    ![StepInto](../images/tracing/StepInto.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"1. We end up in `LogicManager#execute()` (not `Logic#execute` -- but this is expected because we know the `execute()` method in the `Logic` interface is actually implemented by the `LogicManager` class). Let’s take a look at the body of the method. Given below is the same code, with additional explanatory comments.","lastModifiedDate":"2021-07-31"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"   **LogicManager\\#execute().**","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":113,"author":{"gitId":"-"},"content":"   ``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":114,"author":{"gitId":"-"},"content":"   @Override","lastModifiedDate":"2020-05-23"},{"lineNumber":115,"author":{"gitId":"-"},"content":"   public CommandResult execute(String commandText)","lastModifiedDate":"2020-05-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"           throws CommandException, ParseException {","lastModifiedDate":"2020-05-23"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        //Logging, safe to ignore","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        logger.info(\"----------------[USER COMMAND][\" + commandText + \"]\");","lastModifiedDate":"2020-05-23"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        CommandResult commandResult;","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        //Parse user input from String to a Command","lastModifiedDate":"2020-05-23"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        Command command \u003d addressBookParser.parseCommand(commandText);","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        //Executes the Command and stores the result","lastModifiedDate":"2020-05-23"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        commandResult \u003d command.execute(model);","lastModifiedDate":"2020-05-23"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2020-05-23"},{"lineNumber":128,"author":{"gitId":"-"},"content":"            //We can deduce that the previous line of code modifies model in some way","lastModifiedDate":"2020-05-23"},{"lineNumber":129,"author":{"gitId":"-"},"content":"            // since it\u0027s being stored here.","lastModifiedDate":"2020-05-23"},{"lineNumber":130,"author":{"gitId":"-"},"content":"            storage.saveAddressBook(model.getAddressBook());","lastModifiedDate":"2020-05-23"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2020-05-23"},{"lineNumber":132,"author":{"gitId":"-"},"content":"            throw new CommandException(FILE_OPS_ERROR_MESSAGE + ioe, ioe);","lastModifiedDate":"2020-05-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-05-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        return commandResult;","lastModifiedDate":"2020-05-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":"1. `LogicManager#execute()` appears to delegate most of the heavy lifting to other components. Let’s take a closer look at each one.","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":141,"author":{"gitId":"-"},"content":"1. _Step over_ the logging code since it is of no interest to us now.","lastModifiedDate":"2021-07-31"},{"lineNumber":142,"author":{"gitId":"-"},"content":"   ![StepOver](../images/tracing/StepOver.png)","lastModifiedDate":"2021-07-31"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":144,"author":{"gitId":"-"},"content":"1. _Step into_ the line where user input in parsed from a String to a Command, which should bring you to the `AddressBookParser#parseCommand()` method (partial code given below):","lastModifiedDate":"2021-07-31"},{"lineNumber":145,"author":{"gitId":"-"},"content":"   ``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":146,"author":{"gitId":"-"},"content":"   public Command parseCommand(String userInput) throws ParseException {","lastModifiedDate":"2020-05-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"       ...","lastModifiedDate":"2020-05-23"},{"lineNumber":148,"author":{"gitId":"-"},"content":"       final String commandWord \u003d matcher.group(\"commandWord\");","lastModifiedDate":"2020-05-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"       final String arguments \u003d matcher.group(\"arguments\");","lastModifiedDate":"2020-05-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"       ...","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"1. _Step over_ the statements in that method until you reach the `switch` statement. The \u0027Variables\u0027 window now shows the value of both `commandWord` and `arguments`:\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    ![Variables](../images/tracing/Variables.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"1. We see that the value of `commandWord` is now `edit` but `arguments` is still not processed in any meaningful way.","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":158,"author":{"gitId":"-"},"content":"1. Stepping through the `switch` block, we end up at a call to `EditCommandParser().parse()` as expected (because the command we typed is an edit command).","lastModifiedDate":"2021-07-31"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    ``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    ...","lastModifiedDate":"2020-05-23"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    case EditCommand.COMMAND_WORD:","lastModifiedDate":"2020-05-23"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        return new EditCommandParser().parse(arguments);","lastModifiedDate":"2020-05-23"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    ...","lastModifiedDate":"2020-05-23"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    ```","lastModifiedDate":"2020-05-23"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":167,"author":{"gitId":"-"},"content":"1. Let’s see what `EditCommandParser#parse()` does by stepping into it. You might have to click the \u0027step into\u0027 button multiple times here because there are two method calls in that statement: `EditCommandParser()` and `parse()`.","lastModifiedDate":"2021-07-31"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"   \u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e:bulb: **Intellij Tip:** Sometimes, you might end up stepping into functions that are not of interest. Simply use the `step out` button to get out of them!","lastModifiedDate":"2021-07-31"},{"lineNumber":170,"author":{"gitId":"-"},"content":"   \u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":172,"author":{"gitId":"-"},"content":"1. Stepping through the method shows that it calls `ArgumentTokenizer#tokenize()` and `ParserUtil#parseIndex()` to obtain the arguments and index required.","lastModifiedDate":"2021-07-31"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":174,"author":{"gitId":"-"},"content":"1. The rest of the method seems to exhaustively check for the existence of each possible parameter of the `edit` command and store any possible changes in an `EditPersonDescriptor`. Recall that we can verify the contents of `editPersonDesciptor` through the \u0027Variables\u0027 window.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":175,"author":{"gitId":"-"},"content":"   ![EditCommand](../images/tracing/EditCommand.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":177,"author":{"gitId":"-"},"content":"1. As you just traced through some code involved in parsing a command, you can take a look at this class diagram to see where the various parsing-related classes you encountered fit into the design of the `Logic` component.","lastModifiedDate":"2021-07-31"},{"lineNumber":178,"author":{"gitId":"-"},"content":"   \u003cimg src\u003d\"../images/ParserClasses.png\" width\u003d\"600\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":180,"author":{"gitId":"-"},"content":"1. Let’s continue stepping through until we return to `LogicManager#execute()`.","lastModifiedDate":"2020-05-23"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":182,"author":{"gitId":"-"},"content":"    The sequence diagram below shows the details of the execution path through the Logic component. Does the execution path you traced in the code so far match the diagram?\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":183,"author":{"gitId":"-"},"content":"    ![Tracing an `edit` command through the Logic component](../images/tracing/LogicSequenceDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":185,"author":{"gitId":"-"},"content":"1. Now, step over until you read the statement that calls the `execute()` method of the `EditCommand` object received, and step into that `execute()` method (partial code given below):","lastModifiedDate":"2021-07-31"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":187,"author":{"gitId":"-"},"content":"   **`EditCommand#execute()`:**","lastModifiedDate":"2021-07-31"},{"lineNumber":188,"author":{"gitId":"-"},"content":"   ``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":189,"author":{"gitId":"-"},"content":"   @Override","lastModifiedDate":"2020-05-23"},{"lineNumber":190,"author":{"gitId":"-"},"content":"   public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2020-05-23"},{"lineNumber":191,"author":{"gitId":"-"},"content":"       ...","lastModifiedDate":"2020-05-23"},{"lineNumber":192,"author":{"gitId":"Jaspertzx"},"content":"       Person clientToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2024-04-14"},{"lineNumber":193,"author":{"gitId":"Jaspertzx"},"content":"       Person editedClient \u003d createEditedPerson(clientToEdit, editClientDescriptor);","lastModifiedDate":"2024-04-14"},{"lineNumber":194,"author":{"gitId":"Jaspertzx"},"content":"       if (!clientToEdit.isSamePerson(editedClient) \u0026\u0026 model.hasPerson(editedClient)) {","lastModifiedDate":"2024-04-14"},{"lineNumber":195,"author":{"gitId":"-"},"content":"           throw new CommandException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2020-05-23"},{"lineNumber":196,"author":{"gitId":"-"},"content":"       }","lastModifiedDate":"2020-05-23"},{"lineNumber":197,"author":{"gitId":"Jaspertzx"},"content":"       model.setPerson(clientToEdit, editedClient);","lastModifiedDate":"2024-04-14"},{"lineNumber":198,"author":{"gitId":"-"},"content":"       model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2020-05-23"},{"lineNumber":199,"author":{"gitId":"Jaspertzx"},"content":"       return new CommandResult(String.format(MESSAGE_EDIT_PERSON_SUCCESS, editedClient));","lastModifiedDate":"2024-04-14"},{"lineNumber":200,"author":{"gitId":"-"},"content":"   }","lastModifiedDate":"2020-05-23"},{"lineNumber":201,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-23"},{"lineNumber":202,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":203,"author":{"gitId":"-"},"content":"1. As suspected, `command#execute()` does indeed make changes to the `model` object. Specifically,","lastModifiedDate":"2021-07-31"},{"lineNumber":204,"author":{"gitId":"Jaspertzx"},"content":"   * it uses the `setPerson()` method (defined in the interface `Model` and implemented in `ModelManager` as per the usual pattern) to update the client data.","lastModifiedDate":"2024-04-14"},{"lineNumber":205,"author":{"gitId":"Jaspertzx"},"content":"   * it uses the `updateFilteredPersonList` method to ask the `Model` to populate the \u0027filtered list\u0027 with _all_ clients.\u003cbr\u003e","lastModifiedDate":"2024-04-14"},{"lineNumber":206,"author":{"gitId":"Jaspertzx"},"content":"     FYI, The \u0027filtered list\u0027 is the list of clients resulting from the most recent operation that will be shown to the user immediately after. For the `edit` command, we populate it with all the clients so that the user can see the edited client along with all other clients. If this was a `find` command, we would be setting that list to contain the search results instead.\u003cbr\u003e","lastModifiedDate":"2024-04-14"},{"lineNumber":207,"author":{"gitId":"Jaspertzx"},"content":"     To provide some context, given below is the class diagram of the `Model` component. See if you can figure out where the \u0027filtered list\u0027 of clients is being tracked.","lastModifiedDate":"2024-04-14"},{"lineNumber":208,"author":{"gitId":"-"},"content":"     \u003cimg src\u003d\"../images/ModelClassDiagram.png\" width\u003d\"450\" /\u003e\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":209,"author":{"gitId":"-"},"content":"   * :bulb: This may be a good time to read through the [`Model` component section of the DG](../DeveloperGuide.html#model-component)","lastModifiedDate":"2021-07-31"},{"lineNumber":210,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":211,"author":{"gitId":"-"},"content":"1. As you step through the rest of the statements in the `EditCommand#execute()` method, you\u0027ll see that it creates a `CommandResult` object (containing information about the result of the execution) and returns it.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":212,"author":{"gitId":"-"},"content":"   Advancing the debugger by one more step should take you back to the middle of the `LogicManager#execute()` method.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":213,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":214,"author":{"gitId":"-"},"content":"1. Given that you have already seen quite a few classes in the `Logic` component in action, see if you can identify in this partial class diagram some of the classes you\u0027ve encountered so far, and see how they fit into the class structure of the `Logic` component:","lastModifiedDate":"2021-07-31"},{"lineNumber":215,"author":{"gitId":"-"},"content":"    \u003cimg src\u003d\"../images/LogicClassDiagram.png\" width\u003d\"550\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":216,"author":{"gitId":"-"},"content":"   * :bulb: This may be a good time to read through the [`Logic` component section of the DG](../DeveloperGuide.html#logic-component)","lastModifiedDate":"2021-07-31"},{"lineNumber":217,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":218,"author":{"gitId":"-"},"content":"1. Similar to before, you can step over/into statements in the `LogicManager#execute()` method to examine how the control is transferred to the `Storage` component and what happens inside that component.","lastModifiedDate":"2021-07-31"},{"lineNumber":219,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":220,"author":{"gitId":"-"},"content":"   \u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e:bulb: **Intellij Tip:** When trying to step into a statement such as `storage.saveAddressBook(model.getAddressBook())` which contains multiple method calls, Intellij will let you choose (by clicking) which one you want to step into.","lastModifiedDate":"2021-07-31"},{"lineNumber":221,"author":{"gitId":"-"},"content":"   \u003c/div\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":222,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":223,"author":{"gitId":"-"},"content":"1.  As you step through the code inside the `Storage` component, you will eventually arrive at the `JsonAddressBook#saveAddressBook()` method which calls the `JsonSerializableAddressBook` constructor, to create an object that can be _serialized_ (i.e., stored in storage medium) in JSON format. That constructor is given below (with added line breaks for easier readability):","lastModifiedDate":"2021-07-31"},{"lineNumber":224,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":225,"author":{"gitId":"-"},"content":"    **`JsonSerializableAddressBook` constructor:**","lastModifiedDate":"2021-07-31"},{"lineNumber":226,"author":{"gitId":"-"},"content":"    ``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":227,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-23"},{"lineNumber":228,"author":{"gitId":"-"},"content":"     * Converts a given {@code ReadOnlyAddressBook} into this class for Jackson use.","lastModifiedDate":"2020-05-23"},{"lineNumber":229,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2020-05-23"},{"lineNumber":230,"author":{"gitId":"-"},"content":"     * @param source future changes to this will not affect the created","lastModifiedDate":"2020-05-23"},{"lineNumber":231,"author":{"gitId":"-"},"content":"     * {@code JsonSerializableAddressBook}.","lastModifiedDate":"2020-05-23"},{"lineNumber":232,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-23"},{"lineNumber":233,"author":{"gitId":"-"},"content":"    public JsonSerializableAddressBook(ReadOnlyAddressBook source) {","lastModifiedDate":"2020-05-23"},{"lineNumber":234,"author":{"gitId":"Jaspertzx"},"content":"        clients.addAll(","lastModifiedDate":"2024-04-14"},{"lineNumber":235,"author":{"gitId":"-"},"content":"            source.getPersonList()","lastModifiedDate":"2020-05-23"},{"lineNumber":236,"author":{"gitId":"-"},"content":"                  .stream()","lastModifiedDate":"2020-05-23"},{"lineNumber":237,"author":{"gitId":"-"},"content":"                  .map(JsonAdaptedPerson::new)","lastModifiedDate":"2020-05-23"},{"lineNumber":238,"author":{"gitId":"-"},"content":"                  .collect(Collectors.toList()));","lastModifiedDate":"2020-05-23"},{"lineNumber":239,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":240,"author":{"gitId":"-"},"content":"    ```","lastModifiedDate":"2020-05-23"},{"lineNumber":241,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":242,"author":{"gitId":"-"},"content":"1. It appears that a `JsonAdaptedPerson` is created for each `Person` and then added to the `JsonSerializableAddressBook`.","lastModifiedDate":"2020-05-23"},{"lineNumber":243,"author":{"gitId":"-"},"content":"   This is because regular Java objects need to go through an _adaptation_ for them to be suitable to be saved in JSON format.","lastModifiedDate":"2021-07-31"},{"lineNumber":244,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":245,"author":{"gitId":"-"},"content":"1. While you are stepping through the classes in the `Storage` component, here is the component\u0027s class diagram to help you understand how those classes fit into the structure of the component.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":246,"author":{"gitId":"-"},"content":"   \u003cimg src\u003d\"../images/StorageClassDiagram.png\" width\u003d\"550\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":247,"author":{"gitId":"-"},"content":"   * :bulb: This may be a good time to read through the [`Storage` component section of the DG](../DeveloperGuide.html#storage-component)","lastModifiedDate":"2021-07-31"},{"lineNumber":248,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":249,"author":{"gitId":"-"},"content":"1. We can continue to step through until you reach the end of the `LogicManager#execute()` method and return to the `MainWindow#executeCommand()` method (the place where we put the original breakpoint).","lastModifiedDate":"2021-07-31"},{"lineNumber":250,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":251,"author":{"gitId":"-"},"content":"1. Stepping into `resultDisplay.setFeedbackToUser(commandResult.getFeedbackToUser());`, we end up in:","lastModifiedDate":"2021-07-31"},{"lineNumber":252,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":253,"author":{"gitId":"-"},"content":"    **`ResultDisplay#setFeedbackToUser()`**","lastModifiedDate":"2021-07-31"},{"lineNumber":254,"author":{"gitId":"-"},"content":"    ``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":255,"author":{"gitId":"-"},"content":"    public void setFeedbackToUser(String feedbackToUser) {","lastModifiedDate":"2020-05-23"},{"lineNumber":256,"author":{"gitId":"-"},"content":"        requireNonNull(feedbackToUser);","lastModifiedDate":"2020-05-23"},{"lineNumber":257,"author":{"gitId":"-"},"content":"        resultDisplay.setText(feedbackToUser);","lastModifiedDate":"2020-05-23"},{"lineNumber":258,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":259,"author":{"gitId":"-"},"content":"    ```","lastModifiedDate":"2020-05-23"},{"lineNumber":260,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":261,"author":{"gitId":"-"},"content":"1. Finally, you can step through until you reach the end of`MainWindow#executeCommand()`.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":262,"author":{"gitId":"-"},"content":"   :bulb: This may be a good time to read through the [`UI` component section of the DG](../DeveloperGuide.html#ui-component)","lastModifiedDate":"2021-07-31"},{"lineNumber":263,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":264,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":265,"author":{"gitId":"-"},"content":"## Conclusion","lastModifiedDate":"2020-05-23"},{"lineNumber":266,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":267,"author":{"gitId":"-"},"content":"In this tutorial, we traced a valid edit command from raw user input to the result being displayed to the user. From this tutorial, you learned more about how the various components work together to produce a response to a user command.","lastModifiedDate":"2021-07-31"},{"lineNumber":268,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":269,"author":{"gitId":"-"},"content":"Here are some quick questions you can try to answer based on your execution path tracing. In some cases, you can do further tracing for the given commands to find exactly what happens.","lastModifiedDate":"2021-07-31"},{"lineNumber":270,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":271,"author":{"gitId":"-"},"content":"1.  In this tutorial, we traced the \"happy path\" (i.e., no errors). What","lastModifiedDate":"2020-05-23"},{"lineNumber":272,"author":{"gitId":"-"},"content":"    do you think will happen if we traced the following commands","lastModifiedDate":"2020-05-23"},{"lineNumber":273,"author":{"gitId":"-"},"content":"    instead? What exceptions do you think will be thrown (if any), where","lastModifiedDate":"2020-05-23"},{"lineNumber":274,"author":{"gitId":"-"},"content":"    will the exceptions be thrown and where will they be handled?","lastModifiedDate":"2020-05-23"},{"lineNumber":275,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":276,"author":{"gitId":"-"},"content":"    1.  `redit 1 n/Alice Yu`","lastModifiedDate":"2020-05-23"},{"lineNumber":277,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":278,"author":{"gitId":"-"},"content":"    2.  `edit 0 n/Alice Yu`","lastModifiedDate":"2020-05-23"},{"lineNumber":279,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":280,"author":{"gitId":"-"},"content":"    3.  `edit 1 n/Alex Yeoh`","lastModifiedDate":"2020-05-23"},{"lineNumber":281,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":282,"author":{"gitId":"-"},"content":"    4.  `edit 1`","lastModifiedDate":"2020-05-23"},{"lineNumber":283,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":284,"author":{"gitId":"-"},"content":"    5.  `edit 1 n/アリス ユー`","lastModifiedDate":"2020-05-23"},{"lineNumber":285,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":286,"author":{"gitId":"-"},"content":"    6.  `edit 1 t/one t/two t/three t/one`","lastModifiedDate":"2020-05-23"},{"lineNumber":287,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":288,"author":{"gitId":"-"},"content":"2.  What components will you have to modify to perform the following","lastModifiedDate":"2020-05-23"},{"lineNumber":289,"author":{"gitId":"-"},"content":"    enhancements to the application?","lastModifiedDate":"2020-05-23"},{"lineNumber":290,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":291,"author":{"gitId":"-"},"content":"    1.  Make command words case-insensitive","lastModifiedDate":"2020-05-23"},{"lineNumber":292,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":293,"author":{"gitId":"-"},"content":"    2.  Allow `delete` to remove more than one index at a time","lastModifiedDate":"2020-05-23"},{"lineNumber":294,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":295,"author":{"gitId":"-"},"content":"    3.  Save the address book in the CSV format instead","lastModifiedDate":"2020-05-23"},{"lineNumber":296,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":297,"author":{"gitId":"-"},"content":"    4.  Add a new command","lastModifiedDate":"2020-05-23"},{"lineNumber":298,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":299,"author":{"gitId":"-"},"content":"    5.  Add a new field to `Person`","lastModifiedDate":"2020-05-23"},{"lineNumber":300,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":301,"author":{"gitId":"-"},"content":"    6.  Add a new entity to the address book","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"Jaspertzx":10,"-":291}},{"path":"src/main/java/seedu/address/Main.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address;","lastModifiedDate":"2019-02-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2023-07-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.application.Application;","lastModifiedDate":"2019-02-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2023-07-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2019-02-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * The main entry point to the application.","lastModifiedDate":"2019-02-08"},{"lineNumber":10,"author":{"gitId":"kailinteoo"},"content":" * \u003cp\u003e","lastModifiedDate":"2024-04-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * This is a workaround for the following error when MainApp is made the","lastModifiedDate":"2019-02-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * entry point of the application:","lastModifiedDate":"2019-02-08"},{"lineNumber":13,"author":{"gitId":"kailinteoo"},"content":" * \u003cp\u003e","lastModifiedDate":"2024-04-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Error: JavaFX runtime components are missing, and are required to run this application","lastModifiedDate":"2019-02-08"},{"lineNumber":15,"author":{"gitId":"kailinteoo"},"content":" * \u003cp\u003e","lastModifiedDate":"2024-04-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * The reason is that MainApp extends Application. In that case, the","lastModifiedDate":"2019-02-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * LauncherHelper will check for the javafx.graphics module to be present","lastModifiedDate":"2019-02-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * as a named module. We don\u0027t use JavaFX via the module system so it can\u0027t","lastModifiedDate":"2019-02-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * find the javafx.graphics module, and so the launch is aborted.","lastModifiedDate":"2019-02-08"},{"lineNumber":20,"author":{"gitId":"kailinteoo"},"content":" * find alex david","lastModifiedDate":"2024-04-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":" * By having a separate main class (Main) that doesn\u0027t extend Application","lastModifiedDate":"2019-02-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * to be the entry point of the application, we avoid this issue.","lastModifiedDate":"2019-02-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2019-02-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"public class Main {","lastModifiedDate":"2019-02-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private static Logger logger \u003d LogsCenter.getLogger(Main.class);","lastModifiedDate":"2023-07-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2019-02-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        // As per https://github.com/openjdk/jfx/blob/master/doc-files/release-notes-16.md","lastModifiedDate":"2023-07-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        // JavaFX 16 (or later) runtime logs a warning at startup if JavaFX classes are loaded from","lastModifiedDate":"2023-07-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // the classpath instead of a module.","lastModifiedDate":"2023-07-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        // Our application does not use Java modules yet. Even if it did, modules are ignored when","lastModifiedDate":"2023-07-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        // packed into a FAT Jar file (as we do), which means this warning will persist even then.","lastModifiedDate":"2023-07-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        // The warning however, can be safely ignored. Thus, the following log informs","lastModifiedDate":"2023-07-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // the user (if looking at the log output) that the said warning appearing in the log","lastModifiedDate":"2023-07-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        // can be ignored.","lastModifiedDate":"2023-07-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        logger.warning(\"The warning about Unsupported JavaFX configuration below can be ignored.\");","lastModifiedDate":"2023-07-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        Application.launch(MainApp.class, args);","lastModifiedDate":"2019-02-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-02-08"}],"authorContributionMap":{"kailinteoo":4,"-":37}},{"path":"src/main/java/seedu/address/MainApp.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.application.Application;","lastModifiedDate":"2016-08-26"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Config;","lastModifiedDate":"2016-09-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Version;","lastModifiedDate":"2016-09-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.DataLoadingException;","lastModifiedDate":"2023-06-14"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ConfigUtil;","lastModifiedDate":"2016-10-07"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2016-09-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.Logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.LogicManager;","lastModifiedDate":"2016-09-24"},{"lineNumber":18,"author":{"gitId":"Jaspertzx"},"content":"import seedu.address.model.BookKeeper;","lastModifiedDate":"2024-04-14"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-01-18"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-01-18"},{"lineNumber":21,"author":{"gitId":"Jaspertzx"},"content":"import seedu.address.model.ReadOnlyBookKeeper;","lastModifiedDate":"2024-04-14"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2018-12-06"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-01-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.util.SampleDataUtil;","lastModifiedDate":"2016-12-20"},{"lineNumber":25,"author":{"gitId":"Jaspertzx"},"content":"import seedu.address.storage.BookKeeperStorage;","lastModifiedDate":"2024-04-14"},{"lineNumber":26,"author":{"gitId":"Jaspertzx"},"content":"import seedu.address.storage.JsonBookKeeperStorage;","lastModifiedDate":"2024-04-14"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonUserPrefsStorage;","lastModifiedDate":"2017-02-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.storage.Storage;","lastModifiedDate":"2016-09-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.storage.StorageManager;","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.storage.UserPrefsStorage;","lastModifiedDate":"2017-02-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import seedu.address.ui.Ui;","lastModifiedDate":"2016-09-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import seedu.address.ui.UiManager;","lastModifiedDate":"2016-09-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":" * Runs the application.","lastModifiedDate":"2019-02-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"public class MainApp extends Application {","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"Jaspertzx"},"content":"    public static final Version VERSION \u003d new Version(1, 4, 0, true);","lastModifiedDate":"2024-04-14"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(MainApp.class);","lastModifiedDate":"2017-04-01"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    protected Ui ui;","lastModifiedDate":"2016-09-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    protected Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    protected Storage storage;","lastModifiedDate":"2016-09-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    protected Model model;","lastModifiedDate":"2016-09-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    protected Config config;","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public void init() throws Exception {","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"Jaspertzx"},"content":"        logger.info(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d[ Initializing BookKeeper ]\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");","lastModifiedDate":"2024-04-10"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        super.init();","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        AppParameters appParameters \u003d AppParameters.parse(getParameters());","lastModifiedDate":"2018-04-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        config \u003d initConfig(appParameters.getConfigPath());","lastModifiedDate":"2018-04-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        initLogging(config);","lastModifiedDate":"2023-07-29"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        UserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(config.getUserPrefsFilePath());","lastModifiedDate":"2017-02-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d initPrefs(userPrefsStorage);","lastModifiedDate":"2018-12-06"},{"lineNumber":60,"author":{"gitId":"Jaspertzx"},"content":"        BookKeeperStorage bookKeeperStorage \u003d new JsonBookKeeperStorage(userPrefs.getAddressBookFilePath());","lastModifiedDate":"2024-04-14"},{"lineNumber":61,"author":{"gitId":"Jaspertzx"},"content":"        storage \u003d new StorageManager(bookKeeperStorage, userPrefsStorage);","lastModifiedDate":"2024-04-14"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        model \u003d initModelManager(storage, userPrefs);","lastModifiedDate":"2016-09-25"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        ui \u003d new UiManager(logic);","lastModifiedDate":"2018-12-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":71,"author":{"gitId":"kailinteoo"},"content":"     * Returns a {@code ModelManager} with the data from {@code storage}\u0027s bookkeeper and {@code userPrefs}. \u003cbr\u003e","lastModifiedDate":"2024-04-14"},{"lineNumber":72,"author":{"gitId":"kailinteoo"},"content":"     * The data from the sample bookkeeper will be used instead if {@code storage}\u0027s bookkeeper is not found,","lastModifiedDate":"2024-04-14"},{"lineNumber":73,"author":{"gitId":"kailinteoo"},"content":"     * or an empty bookkeeper will be used instead if errors occur when reading {@code storage}\u0027s bookkeeper.","lastModifiedDate":"2024-04-14"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    private Model initModelManager(Storage storage, ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":76,"author":{"gitId":"Jaspertzx"},"content":"        logger.info(\"Using data file : \" + storage.getBookKeeperFilePath());","lastModifiedDate":"2024-04-14"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-29"},{"lineNumber":78,"author":{"gitId":"Jaspertzx"},"content":"        Optional\u003cReadOnlyBookKeeper\u003e addressBookOptional;","lastModifiedDate":"2024-04-14"},{"lineNumber":79,"author":{"gitId":"Jaspertzx"},"content":"        ReadOnlyBookKeeper initialData;","lastModifiedDate":"2024-04-14"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"            addressBookOptional \u003d storage.readAddressBook();","lastModifiedDate":"2016-09-25"},{"lineNumber":82,"author":{"gitId":"-"},"content":"            if (!addressBookOptional.isPresent()) {","lastModifiedDate":"2016-09-24"},{"lineNumber":83,"author":{"gitId":"Jaspertzx"},"content":"                logger.info(\"Creating a new data file \" + storage.getBookKeeperFilePath()","lastModifiedDate":"2024-04-14"},{"lineNumber":84,"author":{"gitId":"kailinteoo"},"content":"                        + \" populated with a sample BookKeeper.\");","lastModifiedDate":"2024-04-14"},{"lineNumber":85,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-09-24"},{"lineNumber":86,"author":{"gitId":"-"},"content":"            initialData \u003d addressBookOptional.orElseGet(SampleDataUtil::getSampleAddressBook);","lastModifiedDate":"2016-12-20"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        } catch (DataLoadingException e) {","lastModifiedDate":"2023-06-14"},{"lineNumber":88,"author":{"gitId":"Jaspertzx"},"content":"            logger.warning(\"Data file at \" + storage.getBookKeeperFilePath() + \" could not be loaded.\"","lastModifiedDate":"2024-04-14"},{"lineNumber":89,"author":{"gitId":"kailinteoo"},"content":"                    + \" Will be starting with an empty BookKeeper.\");","lastModifiedDate":"2024-04-14"},{"lineNumber":90,"author":{"gitId":"Jaspertzx"},"content":"            initialData \u003d new BookKeeper();","lastModifiedDate":"2024-04-14"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        return new ModelManager(initialData, userPrefs);","lastModifiedDate":"2016-09-25"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    private void initLogging(Config config) {","lastModifiedDate":"2016-09-24"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        LogsCenter.init(config);","lastModifiedDate":"2016-09-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     * Returns a {@code Config} using the file at {@code configFilePath}. \u003cbr\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     * The default file path {@code Config#DEFAULT_CONFIG_FILE} will be used instead","lastModifiedDate":"2017-08-16"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     * if {@code configFilePath} is null.","lastModifiedDate":"2017-08-16"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    protected Config initConfig(Path configFilePath) {","lastModifiedDate":"2018-04-21"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        Config initializedConfig;","lastModifiedDate":"2016-09-24"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        Path configFilePathUsed;","lastModifiedDate":"2018-04-21"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        configFilePathUsed \u003d Config.DEFAULT_CONFIG_FILE;","lastModifiedDate":"2016-09-24"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        if (configFilePath !\u003d null) {","lastModifiedDate":"2016-09-24"},{"lineNumber":112,"author":{"gitId":"-"},"content":"            logger.info(\"Custom Config file specified \" + configFilePath);","lastModifiedDate":"2016-09-24"},{"lineNumber":113,"author":{"gitId":"-"},"content":"            configFilePathUsed \u003d configFilePath;","lastModifiedDate":"2016-09-24"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        logger.info(\"Using config file : \" + configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":119,"author":{"gitId":"-"},"content":"            Optional\u003cConfig\u003e configOptional \u003d ConfigUtil.readConfig(configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":120,"author":{"gitId":"-"},"content":"            if (!configOptional.isPresent()) {","lastModifiedDate":"2023-01-03"},{"lineNumber":121,"author":{"gitId":"-"},"content":"                logger.info(\"Creating new config file \" + configFilePathUsed);","lastModifiedDate":"2023-05-15"},{"lineNumber":122,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2023-01-03"},{"lineNumber":123,"author":{"gitId":"-"},"content":"            initializedConfig \u003d configOptional.orElse(new Config());","lastModifiedDate":"2016-09-24"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        } catch (DataLoadingException e) {","lastModifiedDate":"2023-06-14"},{"lineNumber":125,"author":{"gitId":"-"},"content":"            logger.warning(\"Config file at \" + configFilePathUsed + \" could not be loaded.\"","lastModifiedDate":"2023-06-15"},{"lineNumber":126,"author":{"gitId":"-"},"content":"                    + \" Using default config properties.\");","lastModifiedDate":"2023-05-15"},{"lineNumber":127,"author":{"gitId":"-"},"content":"            initializedConfig \u003d new Config();","lastModifiedDate":"2016-09-24"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        // Update config file in case it was missing to begin with or there are new/unused fields","lastModifiedDate":"2016-09-24"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":132,"author":{"gitId":"-"},"content":"            ConfigUtil.saveConfig(initializedConfig, configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":134,"author":{"gitId":"-"},"content":"            logger.warning(\"Failed to save config file : \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        return initializedConfig;","lastModifiedDate":"2016-09-24"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":140,"author":{"gitId":"-"},"content":"     * Returns a {@code UserPrefs} using the file at {@code storage}\u0027s user prefs file path,","lastModifiedDate":"2017-08-16"},{"lineNumber":141,"author":{"gitId":"-"},"content":"     * or a new {@code UserPrefs} with default configuration if errors occur when","lastModifiedDate":"2017-08-16"},{"lineNumber":142,"author":{"gitId":"-"},"content":"     * reading from the file.","lastModifiedDate":"2017-08-16"},{"lineNumber":143,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    protected UserPrefs initPrefs(UserPrefsStorage storage) {","lastModifiedDate":"2017-02-25"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        Path prefsFilePath \u003d storage.getUserPrefsFilePath();","lastModifiedDate":"2018-04-21"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        logger.info(\"Using preference file : \" + prefsFilePath);","lastModifiedDate":"2023-05-15"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        UserPrefs initializedPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":150,"author":{"gitId":"-"},"content":"            Optional\u003cUserPrefs\u003e prefsOptional \u003d storage.readUserPrefs();","lastModifiedDate":"2016-09-25"},{"lineNumber":151,"author":{"gitId":"-"},"content":"            if (!prefsOptional.isPresent()) {","lastModifiedDate":"2023-01-03"},{"lineNumber":152,"author":{"gitId":"-"},"content":"                logger.info(\"Creating new preference file \" + prefsFilePath);","lastModifiedDate":"2023-05-15"},{"lineNumber":153,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2023-01-03"},{"lineNumber":154,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d prefsOptional.orElse(new UserPrefs());","lastModifiedDate":"2016-09-24"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        } catch (DataLoadingException e) {","lastModifiedDate":"2023-06-14"},{"lineNumber":156,"author":{"gitId":"-"},"content":"            logger.warning(\"Preference file at \" + prefsFilePath + \" could not be loaded.\"","lastModifiedDate":"2023-06-15"},{"lineNumber":157,"author":{"gitId":"-"},"content":"                    + \" Using default preferences.\");","lastModifiedDate":"2023-05-15"},{"lineNumber":158,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        // Update prefs file in case it was missing to begin with or there are new/unused fields","lastModifiedDate":"2016-09-24"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":163,"author":{"gitId":"-"},"content":"            storage.saveUserPrefs(initializedPrefs);","lastModifiedDate":"2016-09-25"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":165,"author":{"gitId":"-"},"content":"            logger.warning(\"Failed to save config file : \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        return initializedPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":171,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    public void start(Stage primaryStage) {","lastModifiedDate":"2016-08-08"},{"lineNumber":173,"author":{"gitId":"kailinteoo"},"content":"        logger.info(\"Starting BookKeeper \" + MainApp.VERSION);","lastModifiedDate":"2024-04-14"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        ui.start(primaryStage);","lastModifiedDate":"2016-09-25"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":178,"author":{"gitId":"-"},"content":"    public void stop() {","lastModifiedDate":"2016-08-08"},{"lineNumber":179,"author":{"gitId":"Jaspertzx"},"content":"        logger.info(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d [ Stopping BookKeeper ] \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");","lastModifiedDate":"2024-04-10"},{"lineNumber":180,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":181,"author":{"gitId":"-"},"content":"            storage.saveUserPrefs(model.getUserPrefs());","lastModifiedDate":"2018-12-06"},{"lineNumber":182,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":183,"author":{"gitId":"-"},"content":"            logger.severe(\"Failed to save preferences \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":184,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":185,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-26"},{"lineNumber":186,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"kailinteoo":6,"Jaspertzx":15,"-":165}},{"path":"src/main/java/seedu/address/commons/core/Config.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.commons.core;","lastModifiedDate":"2016-09-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2016-09-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Level;","lastModifiedDate":"2016-09-09"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2019-02-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"rertyy"},"content":" * Config values used by the app.","lastModifiedDate":"2024-03-20"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class Config {","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public static final Path DEFAULT_CONFIG_FILE \u003d Paths.get(\"config.json\");","lastModifiedDate":"2018-04-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    // Config values customizable through config file","lastModifiedDate":"2016-09-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private Level logLevel \u003d Level.INFO;","lastModifiedDate":"2016-09-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private Path userPrefsFilePath \u003d Paths.get(\"preferences.json\");","lastModifiedDate":"2018-04-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public Level getLogLevel() {","lastModifiedDate":"2016-09-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        return logLevel;","lastModifiedDate":"2016-09-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public void setLogLevel(Level logLevel) {","lastModifiedDate":"2016-09-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        this.logLevel \u003d logLevel;","lastModifiedDate":"2016-09-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public Path getUserPrefsFilePath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        return userPrefsFilePath;","lastModifiedDate":"2016-09-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public void setUserPrefsFilePath(Path userPrefsFilePath) {","lastModifiedDate":"2018-04-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        this.userPrefsFilePath \u003d userPrefsFilePath;","lastModifiedDate":"2016-09-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2016-09-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2016-09-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        if (!(other instanceof Config)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2016-09-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        Config otherConfig \u003d (Config) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        return Objects.equals(logLevel, otherConfig.logLevel)","lastModifiedDate":"2023-07-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"                \u0026\u0026 Objects.equals(userPrefsFilePath, otherConfig.userPrefsFilePath);","lastModifiedDate":"2023-07-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        return Objects.hash(logLevel, userPrefsFilePath);","lastModifiedDate":"2018-12-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-09-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"                .add(\"logLevel\", logLevel)","lastModifiedDate":"2019-02-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"                .add(\"userPrefsFilePath\", userPrefsFilePath)","lastModifiedDate":"2019-02-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"                .toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"rertyy":1,"-":65}},{"path":"src/main/java/seedu/address/commons/core/LogsCenter.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.commons.core;","lastModifiedDate":"2016-09-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-05-20"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-05-20"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-09-09"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.logging.ConsoleHandler;","lastModifiedDate":"2017-01-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.logging.FileHandler;","lastModifiedDate":"2017-01-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.logging.Level;","lastModifiedDate":"2017-01-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.logging.SimpleFormatter;","lastModifiedDate":"2017-01-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Configures and manages loggers and handlers, including their logging level","lastModifiedDate":"2016-09-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * Named {@link Logger}s can be obtained from this class\u003cbr\u003e","lastModifiedDate":"2016-09-29"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * These loggers have been configured to output messages to the console and a {@code .log} file by default,","lastModifiedDate":"2016-09-29"},{"lineNumber":17,"author":{"gitId":"-"},"content":" *   at the {@code INFO} level. A new {@code .log} file with a new numbering will be created after the log","lastModifiedDate":"2016-09-29"},{"lineNumber":18,"author":{"gitId":"-"},"content":" *   file reaches 5MB big, up to a maximum of 5 files.\u003cbr\u003e","lastModifiedDate":"2016-09-29"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class LogsCenter {","lastModifiedDate":"2016-09-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final int MAX_FILE_COUNT \u003d 5;","lastModifiedDate":"2016-09-28"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final int MAX_FILE_SIZE_IN_BYTES \u003d (int) (Math.pow(2, 20) * 5); // 5MB","lastModifiedDate":"2016-09-28"},{"lineNumber":23,"author":{"gitId":"Jaspertzx"},"content":"    private static final String LOG_FILE \u003d \"bookkeeper.log\";","lastModifiedDate":"2024-04-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private static final Logger logger; // logger for this class","lastModifiedDate":"2023-07-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private static Logger baseLogger; // to be used as the parent of all other loggers created by this class.","lastModifiedDate":"2023-07-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private static Level currentLogLevel \u003d Level.INFO;","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    // This static block ensures essential loggers are created early","lastModifiedDate":"2023-07-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    static {","lastModifiedDate":"2023-07-19"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        setBaseLogger();","lastModifiedDate":"2023-07-19"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        logger \u003d LogsCenter.getLogger(LogsCenter.class);","lastModifiedDate":"2023-07-19"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-07-19"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-29"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Initializes loggers with the log level specified in the {@code config} object. Applies to all loggers created","lastModifiedDate":"2023-07-19"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * using {@link #getLogger(String)} and {@link #getLogger(Class)} methods except for those that are manually set.","lastModifiedDate":"2023-07-19"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-29"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static void init(Config config) {","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        currentLogLevel \u003d config.getLogLevel();","lastModifiedDate":"2016-09-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        logger.info(\"Log level will be set as: \" + currentLogLevel);","lastModifiedDate":"2023-07-19"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        // set the level of the baseLogger which will be inherited by other loggers","lastModifiedDate":"2023-07-19"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        baseLogger.setLevel(currentLogLevel);","lastModifiedDate":"2023-07-19"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-29"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     * Creates a logger with the given name prefixed by the {@code baseLogger}\u0027s name so that the created logger","lastModifiedDate":"2023-07-19"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * becomes a descendant of the {@code baseLogger}. Furthermore, the returned logger will have the same log handlers","lastModifiedDate":"2023-07-19"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * as the {@code baseLogger}.","lastModifiedDate":"2023-07-19"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-29"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public static Logger getLogger(String name) {","lastModifiedDate":"2016-09-28"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // Java organizes loggers into a hierarchy based on their names (using \u0027.\u0027 as a separator, similar to how Java","lastModifiedDate":"2023-07-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        // packages form a hierarchy). Furthermore, loggers without a level inherit the level of their parent logger.","lastModifiedDate":"2023-07-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        // By prefixing names of all loggers with baseLogger\u0027s name + \".\", we make the baseLogger the parent of all","lastModifiedDate":"2023-07-19"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        // loggers. This allows us to change the level of all loggers simply by changing the baseLogger level.","lastModifiedDate":"2023-07-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        Logger logger \u003d Logger.getLogger(baseLogger.getName() + \".\" + name);","lastModifiedDate":"2023-07-19"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        removeHandlers(logger);","lastModifiedDate":"2016-09-28"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        logger.setUseParentHandlers(true);","lastModifiedDate":"2023-07-19"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        return logger;","lastModifiedDate":"2023-07-19"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * Creates a Logger for the given class name.","lastModifiedDate":"2017-01-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public static \u003cT\u003e Logger getLogger(Class\u003cT\u003e clazz) {","lastModifiedDate":"2017-01-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        requireNonNull(clazz);","lastModifiedDate":"2023-05-20"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        return getLogger(clazz.getSimpleName());","lastModifiedDate":"2017-01-16"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-16"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     * Removes all handlers from the {@code logger}.","lastModifiedDate":"2023-07-19"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    private static void removeHandlers(Logger logger) {","lastModifiedDate":"2016-09-28"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        Arrays.stream(logger.getHandlers())","lastModifiedDate":"2018-01-21"},{"lineNumber":74,"author":{"gitId":"-"},"content":"                .forEach(logger::removeHandler);","lastModifiedDate":"2018-01-21"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-28"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     * Creates a logger named \u0027ab3\u0027, containing a {@code ConsoleHandler} and a {@code FileHandler}.","lastModifiedDate":"2023-07-19"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * Sets it as the {@code baseLogger}, to be used as the parent logger of all other loggers.","lastModifiedDate":"2023-07-19"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    private static void setBaseLogger() {","lastModifiedDate":"2023-07-19"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        baseLogger \u003d Logger.getLogger(\"ab3\");","lastModifiedDate":"2023-07-19"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        baseLogger.setUseParentHandlers(false);","lastModifiedDate":"2023-07-19"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        removeHandlers(baseLogger);","lastModifiedDate":"2023-07-19"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-19"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        // Level.ALL is used as the level for the handlers because the baseLogger filters the log messages by level","lastModifiedDate":"2023-07-19"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        // already; there is no need to control log message level of the handlers.","lastModifiedDate":"2023-07-19"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-19"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        // add a ConsoleHandler to log to the console","lastModifiedDate":"2023-07-19"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        ConsoleHandler consoleHandler \u003d new ConsoleHandler();","lastModifiedDate":"2023-07-19"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        consoleHandler.setLevel(Level.ALL);","lastModifiedDate":"2023-07-19"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        baseLogger.addHandler(consoleHandler);","lastModifiedDate":"2023-07-19"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-19"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        // add a FileHandler to log to a file","lastModifiedDate":"2023-07-19"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-09"},{"lineNumber":96,"author":{"gitId":"-"},"content":"            FileHandler fileHandler \u003d new FileHandler(LOG_FILE, MAX_FILE_SIZE_IN_BYTES, MAX_FILE_COUNT, true);","lastModifiedDate":"2023-07-19"},{"lineNumber":97,"author":{"gitId":"-"},"content":"            fileHandler.setFormatter(new SimpleFormatter());","lastModifiedDate":"2023-07-19"},{"lineNumber":98,"author":{"gitId":"-"},"content":"            fileHandler.setLevel(Level.ALL);","lastModifiedDate":"2023-07-19"},{"lineNumber":99,"author":{"gitId":"-"},"content":"            baseLogger.addHandler(fileHandler);","lastModifiedDate":"2023-07-19"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-09"},{"lineNumber":101,"author":{"gitId":"-"},"content":"            logger.warning(\"Error adding file handler for logger.\");","lastModifiedDate":"2016-09-09"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":106,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"Jaspertzx":1,"-":105}},{"path":"src/main/java/seedu/address/commons/core/Version.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.commons.core;","lastModifiedDate":"2016-09-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2016-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonValue;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"rertyy"},"content":" * Represents a version with major, minor and patch number.","lastModifiedDate":"2024-03-20"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class Version implements Comparable\u003cVersion\u003e {","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public static final String VERSION_REGEX \u003d \"V(\\\\d+)\\\\.(\\\\d+)\\\\.(\\\\d+)(ea)?\";","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private static final String EXCEPTION_STRING_NOT_VERSION \u003d \"String is not a valid Version. %s\";","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private static final Pattern VERSION_PATTERN \u003d Pattern.compile(VERSION_REGEX);","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private final int major;","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private final int minor;","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private final int patch;","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private final boolean isEarlyAccess;","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * Constructs a {@code Version} with the given version details.","lastModifiedDate":"2020-05-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public Version(int major, int minor, int patch, boolean isEarlyAccess) {","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        this.major \u003d major;","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        this.minor \u003d minor;","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        this.patch \u003d patch;","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        this.isEarlyAccess \u003d isEarlyAccess;","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * Parses a version number string in the format V1.2.3.","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"rertyy"},"content":"     *","lastModifiedDate":"2024-03-20"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     * @param versionString version number string","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * @return a Version object","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public static Version fromString(String versionString) throws IllegalArgumentException {","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        Matcher versionMatcher \u003d VERSION_PATTERN.matcher(versionString);","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        if (!versionMatcher.find()) {","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            throw new IllegalArgumentException(String.format(EXCEPTION_STRING_NOT_VERSION, versionString));","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        return new Version(Integer.parseInt(versionMatcher.group(1)),","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"                Integer.parseInt(versionMatcher.group(2)),","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"                Integer.parseInt(versionMatcher.group(3)),","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"                versionMatcher.group(4) \u003d\u003d null ? false : true);","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"rertyy"},"content":"    public int getMajor() {","lastModifiedDate":"2024-03-20"},{"lineNumber":56,"author":{"gitId":"rertyy"},"content":"        return major;","lastModifiedDate":"2024-03-20"},{"lineNumber":57,"author":{"gitId":"rertyy"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":58,"author":{"gitId":"rertyy"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":59,"author":{"gitId":"rertyy"},"content":"    public int getMinor() {","lastModifiedDate":"2024-03-20"},{"lineNumber":60,"author":{"gitId":"rertyy"},"content":"        return minor;","lastModifiedDate":"2024-03-20"},{"lineNumber":61,"author":{"gitId":"rertyy"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":62,"author":{"gitId":"rertyy"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":63,"author":{"gitId":"rertyy"},"content":"    public int getPatch() {","lastModifiedDate":"2024-03-20"},{"lineNumber":64,"author":{"gitId":"rertyy"},"content":"        return patch;","lastModifiedDate":"2024-03-20"},{"lineNumber":65,"author":{"gitId":"rertyy"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":66,"author":{"gitId":"rertyy"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":67,"author":{"gitId":"rertyy"},"content":"    public boolean isEarlyAccess() {","lastModifiedDate":"2024-03-20"},{"lineNumber":68,"author":{"gitId":"rertyy"},"content":"        return isEarlyAccess;","lastModifiedDate":"2024-03-20"},{"lineNumber":69,"author":{"gitId":"rertyy"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":70,"author":{"gitId":"rertyy"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @JsonValue","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        return String.format(\"V%d.%d.%d%s\", major, minor, patch, isEarlyAccess ? \"ea\" : \"\");","lastModifiedDate":"2016-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public int compareTo(Version other) {","lastModifiedDate":"2016-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        if (major !\u003d other.major) {","lastModifiedDate":"2018-08-14"},{"lineNumber":79,"author":{"gitId":"-"},"content":"            return major - other.major;","lastModifiedDate":"2018-08-14"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-22"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        if (minor !\u003d other.minor) {","lastModifiedDate":"2018-08-14"},{"lineNumber":82,"author":{"gitId":"-"},"content":"            return minor - other.minor;","lastModifiedDate":"2018-08-14"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-22"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        if (patch !\u003d other.patch) {","lastModifiedDate":"2018-08-14"},{"lineNumber":85,"author":{"gitId":"-"},"content":"            return patch - other.patch;","lastModifiedDate":"2018-08-14"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-22"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        if (isEarlyAccess \u003d\u003d other.isEarlyAccess()) {","lastModifiedDate":"2018-08-14"},{"lineNumber":88,"author":{"gitId":"-"},"content":"            return 0;","lastModifiedDate":"2017-05-22"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-22"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        if (isEarlyAccess) {","lastModifiedDate":"2018-08-14"},{"lineNumber":91,"author":{"gitId":"-"},"content":"            return -1;","lastModifiedDate":"2017-05-22"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-22"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        return 1;","lastModifiedDate":"2017-05-22"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-07-13"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":99,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        if (!(other instanceof Version)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":104,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2016-08-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        Version otherVersion \u003d (Version) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        return major \u003d\u003d otherVersion.major","lastModifiedDate":"2023-07-13"},{"lineNumber":109,"author":{"gitId":"-"},"content":"                \u0026\u0026 minor \u003d\u003d otherVersion.minor","lastModifiedDate":"2023-07-13"},{"lineNumber":110,"author":{"gitId":"-"},"content":"                \u0026\u0026 patch \u003d\u003d otherVersion.patch","lastModifiedDate":"2023-07-13"},{"lineNumber":111,"author":{"gitId":"-"},"content":"                \u0026\u0026 isEarlyAccess \u003d\u003d otherVersion.isEarlyAccess;","lastModifiedDate":"2023-07-13"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        String hash \u003d String.format(\"%03d%03d%03d\", major, minor, patch);","lastModifiedDate":"2016-08-08"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        if (!isEarlyAccess) {","lastModifiedDate":"2016-08-08"},{"lineNumber":118,"author":{"gitId":"-"},"content":"            hash \u003d \"1\" + hash;","lastModifiedDate":"2016-08-08"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        return Integer.parseInt(hash);","lastModifiedDate":"2016-08-08"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"rertyy":18,"-":104}},{"path":"src/main/java/seedu/address/commons/util/AppUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.commons.util;","lastModifiedDate":"2016-09-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2016-08-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.MainApp;","lastModifiedDate":"2016-08-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":9,"author":{"gitId":"rertyy"},"content":" * A container for App specific utility functions.","lastModifiedDate":"2024-03-20"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class AppUtil {","lastModifiedDate":"2016-08-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     * Gets an {@code Image} from the specified path.","lastModifiedDate":"2020-05-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public static Image getImage(String imagePath) {","lastModifiedDate":"2016-08-18"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        requireNonNull(imagePath);","lastModifiedDate":"2017-05-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        return new Image(MainApp.class.getResourceAsStream(imagePath));","lastModifiedDate":"2016-08-18"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * Checks that {@code condition} is true. Used for validating arguments to methods.","lastModifiedDate":"2017-05-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @throws IllegalArgumentException if {@code condition} is false.","lastModifiedDate":"2017-05-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-15"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static void checkArgument(Boolean condition) {","lastModifiedDate":"2017-05-15"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        if (!condition) {","lastModifiedDate":"2017-05-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            throw new IllegalArgumentException();","lastModifiedDate":"2017-05-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-15"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-15"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Checks that {@code condition} is true. Used for validating arguments to methods.","lastModifiedDate":"2017-05-15"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-15"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * @throws IllegalArgumentException with {@code errorMessage} if {@code condition} is false.","lastModifiedDate":"2017-05-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-15"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static void checkArgument(Boolean condition, String errorMessage) {","lastModifiedDate":"2017-05-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        if (!condition) {","lastModifiedDate":"2017-05-15"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            throw new IllegalArgumentException(errorMessage);","lastModifiedDate":"2017-05-15"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-15"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-15"},{"lineNumber":42,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"rertyy":1,"-":41}},{"path":"src/main/java/seedu/address/commons/util/CollectionUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.commons.util;","lastModifiedDate":"2016-09-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-06-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2017-01-30"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2016-12-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"rertyy"},"content":" * Utility methods related to Collections.","lastModifiedDate":"2024-03-20"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class CollectionUtil {","lastModifiedDate":"2016-09-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"rertyy"},"content":"    /**","lastModifiedDate":"2024-03-20"},{"lineNumber":16,"author":{"gitId":"rertyy"},"content":"     * @see #requireAllNonNull(Collection)","lastModifiedDate":"2024-03-20"},{"lineNumber":17,"author":{"gitId":"rertyy"},"content":"     */","lastModifiedDate":"2024-03-20"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public static void requireAllNonNull(Object... items) {","lastModifiedDate":"2017-05-19"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        requireNonNull(items);","lastModifiedDate":"2017-06-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        Stream.of(items).forEach(Objects::requireNonNull);","lastModifiedDate":"2017-05-19"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Throws NullPointerException if {@code items} or any element of {@code items} is null.","lastModifiedDate":"2017-05-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static void requireAllNonNull(Collection\u003c?\u003e items) {","lastModifiedDate":"2017-05-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        requireNonNull(items);","lastModifiedDate":"2017-06-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        items.forEach(Objects::requireNonNull);","lastModifiedDate":"2017-05-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * Returns true if {@code items} contain any elements that are non-null.","lastModifiedDate":"2017-06-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public static boolean isAnyNonNull(Object... items) {","lastModifiedDate":"2017-06-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        return items !\u003d null \u0026\u0026 Arrays.stream(items).anyMatch(Objects::nonNull);","lastModifiedDate":"2017-06-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"rertyy":4,"-":33}},{"path":"src/main/java/seedu/address/commons/util/DateTimeUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"rertyy"},"content":"package seedu.address.commons.util;","lastModifiedDate":"2024-03-17"},{"lineNumber":2,"author":{"gitId":"rertyy"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":3,"author":{"gitId":"rertyy"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-03-17"},{"lineNumber":4,"author":{"gitId":"rertyy"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-03-17"},{"lineNumber":5,"author":{"gitId":"rertyy"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2024-03-17"},{"lineNumber":6,"author":{"gitId":"rertyy"},"content":"import java.time.format.ResolverStyle;","lastModifiedDate":"2024-04-09"},{"lineNumber":7,"author":{"gitId":"rertyy"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":8,"author":{"gitId":"rertyy"},"content":"/**","lastModifiedDate":"2024-03-17"},{"lineNumber":9,"author":{"gitId":"rertyy"},"content":" * Helper functions for handling datetimes.","lastModifiedDate":"2024-03-17"},{"lineNumber":10,"author":{"gitId":"rertyy"},"content":" */","lastModifiedDate":"2024-03-17"},{"lineNumber":11,"author":{"gitId":"rertyy"},"content":"public class DateTimeUtil {","lastModifiedDate":"2024-03-17"},{"lineNumber":12,"author":{"gitId":"rertyy"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":13,"author":{"gitId":"rertyy"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Date should be in the format of dd/MM/yyyy\";","lastModifiedDate":"2024-03-17"},{"lineNumber":14,"author":{"gitId":"rertyy"},"content":"","lastModifiedDate":"2024-04-09"},{"lineNumber":15,"author":{"gitId":"rertyy"},"content":"    /**","lastModifiedDate":"2024-03-17"},{"lineNumber":16,"author":{"gitId":"rertyy"},"content":"     * Returns a list of valid date time formats.","lastModifiedDate":"2024-03-17"},{"lineNumber":17,"author":{"gitId":"rertyy"},"content":"     * Note that ResolverStyle.STRICT requires \"uuuu\" instead of \"yyyy\"","lastModifiedDate":"2024-04-09"},{"lineNumber":18,"author":{"gitId":"rertyy"},"content":"     */","lastModifiedDate":"2024-03-17"},{"lineNumber":19,"author":{"gitId":"rertyy"},"content":"    public static final String VALID_DATETIME_FORMAT \u003d \"dd-MM-uuuu HH:mm\";","lastModifiedDate":"2024-04-09"},{"lineNumber":20,"author":{"gitId":"rertyy"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":21,"author":{"gitId":"rertyy"},"content":"    /**","lastModifiedDate":"2024-03-17"},{"lineNumber":22,"author":{"gitId":"rertyy"},"content":"     * Returns the valid formatter pattern.","lastModifiedDate":"2024-03-20"},{"lineNumber":23,"author":{"gitId":"rertyy"},"content":"     */","lastModifiedDate":"2024-03-17"},{"lineNumber":24,"author":{"gitId":"rertyy"},"content":"    public static final DateTimeFormatter FORMATTER \u003d DateTimeFormatter","lastModifiedDate":"2024-04-09"},{"lineNumber":25,"author":{"gitId":"rertyy"},"content":"            .ofPattern(VALID_DATETIME_FORMAT)","lastModifiedDate":"2024-04-09"},{"lineNumber":26,"author":{"gitId":"rertyy"},"content":"            .withResolverStyle(ResolverStyle.STRICT);","lastModifiedDate":"2024-04-09"},{"lineNumber":27,"author":{"gitId":"rertyy"},"content":"","lastModifiedDate":"2024-04-09"},{"lineNumber":28,"author":{"gitId":"rertyy"},"content":"    private DateTimeUtil() {","lastModifiedDate":"2024-04-09"},{"lineNumber":29,"author":{"gitId":"rertyy"},"content":"        // Prevent instantiation","lastModifiedDate":"2024-04-09"},{"lineNumber":30,"author":{"gitId":"rertyy"},"content":"    }","lastModifiedDate":"2024-04-09"},{"lineNumber":31,"author":{"gitId":"rertyy"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":32,"author":{"gitId":"rertyy"},"content":"    /**","lastModifiedDate":"2024-03-17"},{"lineNumber":33,"author":{"gitId":"rertyy"},"content":"     * Returns true if a given string is a valid date.","lastModifiedDate":"2024-03-17"},{"lineNumber":34,"author":{"gitId":"rertyy"},"content":"     *","lastModifiedDate":"2024-03-17"},{"lineNumber":35,"author":{"gitId":"rertyy"},"content":"     * @param test the date to be tested.","lastModifiedDate":"2024-03-17"},{"lineNumber":36,"author":{"gitId":"rertyy"},"content":"     * @return true if the date is valid.","lastModifiedDate":"2024-03-17"},{"lineNumber":37,"author":{"gitId":"rertyy"},"content":"     */","lastModifiedDate":"2024-03-17"},{"lineNumber":38,"author":{"gitId":"rertyy"},"content":"    public static boolean isValidDate(String test) {","lastModifiedDate":"2024-03-17"},{"lineNumber":39,"author":{"gitId":"rertyy"},"content":"        try {","lastModifiedDate":"2024-03-17"},{"lineNumber":40,"author":{"gitId":"rertyy"},"content":"            LocalDateTime.parse(test, FORMATTER);","lastModifiedDate":"2024-03-17"},{"lineNumber":41,"author":{"gitId":"rertyy"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2024-03-17"},{"lineNumber":42,"author":{"gitId":"rertyy"},"content":"            return false;","lastModifiedDate":"2024-03-17"},{"lineNumber":43,"author":{"gitId":"rertyy"},"content":"        }","lastModifiedDate":"2024-03-17"},{"lineNumber":44,"author":{"gitId":"rertyy"},"content":"        return true;","lastModifiedDate":"2024-03-17"},{"lineNumber":45,"author":{"gitId":"rertyy"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":46,"author":{"gitId":"rertyy"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":47,"author":{"gitId":"rertyy"},"content":"    /**","lastModifiedDate":"2024-03-20"},{"lineNumber":48,"author":{"gitId":"rertyy"},"content":"     * Returns the current date time as a String.","lastModifiedDate":"2024-03-20"},{"lineNumber":49,"author":{"gitId":"rertyy"},"content":"     *","lastModifiedDate":"2024-03-20"},{"lineNumber":50,"author":{"gitId":"rertyy"},"content":"     * @param dateTime the date to be formatted.","lastModifiedDate":"2024-03-20"},{"lineNumber":51,"author":{"gitId":"rertyy"},"content":"     * @return the current date time as a String.","lastModifiedDate":"2024-03-20"},{"lineNumber":52,"author":{"gitId":"rertyy"},"content":"     */","lastModifiedDate":"2024-03-20"},{"lineNumber":53,"author":{"gitId":"rertyy"},"content":"    public static String formatDateTime(LocalDateTime dateTime) {","lastModifiedDate":"2024-03-20"},{"lineNumber":54,"author":{"gitId":"rertyy"},"content":"        return dateTime.format(FORMATTER);","lastModifiedDate":"2024-03-20"},{"lineNumber":55,"author":{"gitId":"rertyy"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":56,"author":{"gitId":"rertyy"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":57,"author":{"gitId":"rertyy"},"content":"    /**","lastModifiedDate":"2024-03-17"},{"lineNumber":58,"author":{"gitId":"rertyy"},"content":"     * Returns the localDateTime object of the given date.","lastModifiedDate":"2024-03-17"},{"lineNumber":59,"author":{"gitId":"rertyy"},"content":"     *","lastModifiedDate":"2024-03-17"},{"lineNumber":60,"author":{"gitId":"rertyy"},"content":"     * @param dateTime the date to be parsed must be a valid dateTime.","lastModifiedDate":"2024-03-17"},{"lineNumber":61,"author":{"gitId":"rertyy"},"content":"     * @return the localDateTime object of the given date.","lastModifiedDate":"2024-03-17"},{"lineNumber":62,"author":{"gitId":"rertyy"},"content":"     */","lastModifiedDate":"2024-03-17"},{"lineNumber":63,"author":{"gitId":"rertyy"},"content":"    public static LocalDateTime parseDateTime(String dateTime) {","lastModifiedDate":"2024-03-17"},{"lineNumber":64,"author":{"gitId":"rertyy"},"content":"        return LocalDateTime.parse(dateTime, FORMATTER);","lastModifiedDate":"2024-03-17"},{"lineNumber":65,"author":{"gitId":"rertyy"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":66,"author":{"gitId":"rertyy"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":67,"author":{"gitId":"rertyy"},"content":"    /**","lastModifiedDate":"2024-03-23"},{"lineNumber":68,"author":{"gitId":"rertyy"},"content":"     * Returns current date time as a String in the common datetime format.","lastModifiedDate":"2024-03-23"},{"lineNumber":69,"author":{"gitId":"rertyy"},"content":"     *","lastModifiedDate":"2024-03-23"},{"lineNumber":70,"author":{"gitId":"rertyy"},"content":"     * @return the current date time as a String.","lastModifiedDate":"2024-03-23"},{"lineNumber":71,"author":{"gitId":"rertyy"},"content":"     */","lastModifiedDate":"2024-03-23"},{"lineNumber":72,"author":{"gitId":"rertyy"},"content":"    public static String getCurrentTime() {","lastModifiedDate":"2024-03-23"},{"lineNumber":73,"author":{"gitId":"rertyy"},"content":"        LocalDateTime now \u003d LocalDateTime.now();","lastModifiedDate":"2024-03-23"},{"lineNumber":74,"author":{"gitId":"rertyy"},"content":"        return formatDateTime(now);","lastModifiedDate":"2024-03-23"},{"lineNumber":75,"author":{"gitId":"rertyy"},"content":"    }","lastModifiedDate":"2024-03-23"},{"lineNumber":76,"author":{"gitId":"rertyy"},"content":"}","lastModifiedDate":"2024-03-17"}],"authorContributionMap":{"rertyy":76}},{"path":"src/main/java/seedu/address/commons/util/FileUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.commons.util;","lastModifiedDate":"2016-09-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Files;","lastModifiedDate":"2016-08-26"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.InvalidPathException;","lastModifiedDate":"2018-04-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"rertyy"},"content":" * Writes and reads files.","lastModifiedDate":"2024-03-20"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class FileUtil {","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private static final String CHARSET \u003d \"UTF-8\";","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public static boolean isFileExists(Path file) {","lastModifiedDate":"2018-04-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        return Files.exists(file) \u0026\u0026 Files.isRegularFile(file);","lastModifiedDate":"2018-04-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * Returns true if {@code path} can be converted into a {@code Path} via {@link Paths#get(String)},","lastModifiedDate":"2018-04-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * otherwise returns false.","lastModifiedDate":"2018-04-21"},{"lineNumber":23,"author":{"gitId":"rertyy"},"content":"     *","lastModifiedDate":"2024-03-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @param path A string representing the file path. Cannot be null.","lastModifiedDate":"2018-04-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static boolean isValidPath(String path) {","lastModifiedDate":"2018-04-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-04-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            Paths.get(path);","lastModifiedDate":"2018-04-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        } catch (InvalidPathException ipe) {","lastModifiedDate":"2018-04-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-04-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        return true;","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * Creates a file if it does not exist along with its missing parent directories.","lastModifiedDate":"2017-08-16"},{"lineNumber":37,"author":{"gitId":"rertyy"},"content":"     *","lastModifiedDate":"2024-03-20"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     * @throws IOException if the file or directory cannot be created.","lastModifiedDate":"2017-08-16"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public static void createIfMissing(Path file) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        if (!isFileExists(file)) {","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"            createFile(file);","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * Creates a file if it does not exist along with its missing parent directories.","lastModifiedDate":"2018-04-15"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public static void createFile(Path file) throws IOException {","lastModifiedDate":"2018-04-15"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        if (Files.exists(file)) {","lastModifiedDate":"2018-04-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            return;","lastModifiedDate":"2018-04-15"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        createParentDirsOfFile(file);","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        Files.createFile(file);","lastModifiedDate":"2018-04-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"rertyy"},"content":"     * Creates parent directories of file if it has a parent directory.","lastModifiedDate":"2024-03-20"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public static void createParentDirsOfFile(Path file) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        Path parentDir \u003d file.getParent();","lastModifiedDate":"2018-04-21"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        if (parentDir !\u003d null) {","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"            Files.createDirectories(parentDir);","lastModifiedDate":"2018-04-21"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"rertyy"},"content":"     * Assumes file exists.","lastModifiedDate":"2024-03-20"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public static String readFromFile(Path file) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        return new String(Files.readAllBytes(file), CHARSET);","lastModifiedDate":"2018-04-21"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     * Writes given string to a file.","lastModifiedDate":"2016-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * Will create the file if it does not exist yet.","lastModifiedDate":"2016-08-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public static void writeToFile(Path file, String content) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        Files.write(file, content.getBytes(CHARSET));","lastModifiedDate":"2018-04-21"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"rertyy":5,"-":80}},{"path":"src/main/java/seedu/address/commons/util/JsonUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.commons.util;","lastModifiedDate":"2016-09-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Files;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.logging.Level;","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonAutoDetect;","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.PropertyAccessor;","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.core.JsonProcessingException;","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.DeserializationContext;","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.DeserializationFeature;","lastModifiedDate":"2016-09-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.ObjectMapper;","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.SerializationFeature;","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.deser.std.FromStringDeserializer;","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.module.SimpleModule;","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.ser.std.ToStringSerializer;","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-10-07"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.DataLoadingException;","lastModifiedDate":"2023-06-14"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"rertyy"},"content":" * Converts a Java object instance to JSON and vice versa.","lastModifiedDate":"2024-03-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"public class JsonUtil {","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(JsonUtil.class);","lastModifiedDate":"2016-10-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private static ObjectMapper objectMapper \u003d new ObjectMapper().findAndRegisterModules()","lastModifiedDate":"2016-10-19"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            .configure(SerializationFeature.WRITE_DATES_AS_TIMESTAMPS, false)","lastModifiedDate":"2016-10-19"},{"lineNumber":35,"author":{"gitId":"-"},"content":"            .configure(DeserializationFeature.FAIL_ON_UNKNOWN_PROPERTIES, false)","lastModifiedDate":"2016-10-19"},{"lineNumber":36,"author":{"gitId":"-"},"content":"            .setVisibility(PropertyAccessor.ALL, JsonAutoDetect.Visibility.NONE)","lastModifiedDate":"2016-10-19"},{"lineNumber":37,"author":{"gitId":"-"},"content":"            .setVisibility(PropertyAccessor.FIELD, JsonAutoDetect.Visibility.ANY)","lastModifiedDate":"2016-10-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            .registerModule(new SimpleModule(\"SimpleModule\")","lastModifiedDate":"2016-10-19"},{"lineNumber":39,"author":{"gitId":"-"},"content":"                    .addSerializer(Level.class, new ToStringSerializer())","lastModifiedDate":"2016-10-19"},{"lineNumber":40,"author":{"gitId":"-"},"content":"                    .addDeserializer(Level.class, new LevelDeserializer(Level.class)));","lastModifiedDate":"2016-10-19"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    static \u003cT\u003e void serializeObjectToJsonFile(Path jsonFile, T objectToSerialize) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        FileUtil.writeToFile(jsonFile, toJsonString(objectToSerialize));","lastModifiedDate":"2016-10-07"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-07"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    static \u003cT\u003e T deserializeObjectFromJsonFile(Path jsonFile, Class\u003cT\u003e classOfObjectToDeserialize)","lastModifiedDate":"2018-04-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            throws IOException {","lastModifiedDate":"2016-10-07"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        return fromJsonString(FileUtil.readFromFile(jsonFile), classOfObjectToDeserialize);","lastModifiedDate":"2016-10-07"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-07"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-07"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * Returns the JSON object from the given file or {@code Optional.empty()} object if the file is not found.","lastModifiedDate":"2023-06-15"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * If any values are missing from the file, default values will be used, as long as the file is a valid JSON file.","lastModifiedDate":"2023-06-15"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2023-06-15"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * @param filePath                   cannot be null.","lastModifiedDate":"2016-10-07"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * @param classOfObjectToDeserialize JSON file has to correspond to the structure in the class given here.","lastModifiedDate":"2023-06-15"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     * @throws DataLoadingException if loading of the JSON file failed.","lastModifiedDate":"2023-06-15"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-07"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public static \u003cT\u003e Optional\u003cT\u003e readJsonFile(","lastModifiedDate":"2016-10-07"},{"lineNumber":60,"author":{"gitId":"-"},"content":"            Path filePath, Class\u003cT\u003e classOfObjectToDeserialize) throws DataLoadingException {","lastModifiedDate":"2023-06-14"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2017-05-15"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        if (!Files.exists(filePath)) {","lastModifiedDate":"2018-04-21"},{"lineNumber":64,"author":{"gitId":"-"},"content":"            return Optional.empty();","lastModifiedDate":"2016-10-07"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-07"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        logger.info(\"JSON file \" + filePath + \" found.\");","lastModifiedDate":"2023-01-03"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        T jsonFile;","lastModifiedDate":"2016-10-07"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-10-07"},{"lineNumber":71,"author":{"gitId":"-"},"content":"            jsonFile \u003d deserializeObjectFromJsonFile(filePath, classOfObjectToDeserialize);","lastModifiedDate":"2018-04-21"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-10-07"},{"lineNumber":73,"author":{"gitId":"-"},"content":"            logger.warning(\"Error reading from jsonFile file \" + filePath + \": \" + e);","lastModifiedDate":"2018-04-21"},{"lineNumber":74,"author":{"gitId":"-"},"content":"            throw new DataLoadingException(e);","lastModifiedDate":"2023-06-14"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-07"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        return Optional.of(jsonFile);","lastModifiedDate":"2016-10-07"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-07"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-07"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     * Saves the Json object to the specified file.","lastModifiedDate":"2016-10-07"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     * Overwrites existing file if it exists, creates a new file if it doesn\u0027t.","lastModifiedDate":"2016-10-07"},{"lineNumber":83,"author":{"gitId":"rertyy"},"content":"     *","lastModifiedDate":"2024-03-20"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     * @param jsonFile cannot be null","lastModifiedDate":"2016-10-07"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     * @param filePath cannot be null","lastModifiedDate":"2016-10-07"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * @throws IOException if there was an error during writing to the file","lastModifiedDate":"2016-10-07"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-07"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public static \u003cT\u003e void saveJsonFile(T jsonFile, Path filePath) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2017-05-15"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        requireNonNull(jsonFile);","lastModifiedDate":"2017-05-15"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        serializeObjectToJsonFile(filePath, jsonFile);","lastModifiedDate":"2018-04-21"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-07"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-19"},{"lineNumber":97,"author":{"gitId":"rertyy"},"content":"     * Converts a given string representation of a JSON data to instance of a class.","lastModifiedDate":"2024-03-20"},{"lineNumber":98,"author":{"gitId":"rertyy"},"content":"     *","lastModifiedDate":"2024-03-20"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     * @param \u003cT\u003e The generic type to create an instance of","lastModifiedDate":"2016-10-19"},{"lineNumber":100,"author":{"gitId":"-"},"content":"     * @return The instance of T with the specified values in the JSON string","lastModifiedDate":"2016-10-19"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-19"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    public static \u003cT\u003e T fromJsonString(String json, Class\u003cT\u003e instanceClass) throws IOException {","lastModifiedDate":"2016-10-19"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        return objectMapper.readValue(json, instanceClass);","lastModifiedDate":"2016-10-19"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-19"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-19"},{"lineNumber":107,"author":{"gitId":"rertyy"},"content":"     * Converts a given instance of a class into its JSON data string representation.","lastModifiedDate":"2024-03-20"},{"lineNumber":108,"author":{"gitId":"rertyy"},"content":"     *","lastModifiedDate":"2024-03-20"},{"lineNumber":109,"author":{"gitId":"-"},"content":"     * @param instance The T object to be converted into the JSON string","lastModifiedDate":"2016-10-19"},{"lineNumber":110,"author":{"gitId":"-"},"content":"     * @param \u003cT\u003e      The generic type to create an instance of","lastModifiedDate":"2016-10-19"},{"lineNumber":111,"author":{"gitId":"-"},"content":"     * @return JSON data representation of the given class instance, in string","lastModifiedDate":"2016-10-19"},{"lineNumber":112,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-19"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    public static \u003cT\u003e String toJsonString(T instance) throws JsonProcessingException {","lastModifiedDate":"2016-10-19"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        return objectMapper.writerWithDefaultPrettyPrinter().writeValueAsString(instance);","lastModifiedDate":"2016-10-19"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-19"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":118,"author":{"gitId":"-"},"content":"     * Contains methods that retrieve logging level from serialized string.","lastModifiedDate":"2017-08-16"},{"lineNumber":119,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    private static class LevelDeserializer extends FromStringDeserializer\u003cLevel\u003e {","lastModifiedDate":"2016-08-08"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        protected LevelDeserializer(Class\u003c?\u003e vc) {","lastModifiedDate":"2016-08-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":"            super(vc);","lastModifiedDate":"2016-08-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        protected Level _deserialize(String value, DeserializationContext ctxt) {","lastModifiedDate":"2018-08-08"},{"lineNumber":128,"author":{"gitId":"-"},"content":"            return getLoggingLevel(value);","lastModifiedDate":"2016-08-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2016-08-08"},{"lineNumber":132,"author":{"gitId":"rertyy"},"content":"         * Gets the logging level that matches loggingLevelString.","lastModifiedDate":"2024-03-20"},{"lineNumber":133,"author":{"gitId":"-"},"content":"         * \u003cp\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":134,"author":{"gitId":"-"},"content":"         * Returns null if there are no matches","lastModifiedDate":"2016-08-08"},{"lineNumber":135,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-08-08"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        private Level getLoggingLevel(String loggingLevelString) {","lastModifiedDate":"2016-08-08"},{"lineNumber":137,"author":{"gitId":"-"},"content":"            return Level.parse(loggingLevelString);","lastModifiedDate":"2016-09-09"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        public Class\u003cLevel\u003e handledType() {","lastModifiedDate":"2016-08-08"},{"lineNumber":142,"author":{"gitId":"-"},"content":"            return Level.class;","lastModifiedDate":"2016-08-08"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":146,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"rertyy":7,"-":139}},{"path":"src/main/java/seedu/address/commons/util/Pair.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"rertyy"},"content":"package seedu.address.commons.util;","lastModifiedDate":"2024-03-23"},{"lineNumber":2,"author":{"gitId":"rertyy"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":3,"author":{"gitId":"rertyy"},"content":"/**","lastModifiedDate":"2024-03-23"},{"lineNumber":4,"author":{"gitId":"rertyy"},"content":" * Represents a pair of values.","lastModifiedDate":"2024-03-23"},{"lineNumber":5,"author":{"gitId":"rertyy"},"content":" *","lastModifiedDate":"2024-03-23"},{"lineNumber":6,"author":{"gitId":"rertyy"},"content":" * @param \u003cT\u003e the type of the first param.","lastModifiedDate":"2024-03-23"},{"lineNumber":7,"author":{"gitId":"rertyy"},"content":" * @param \u003cU\u003e the type of the second param.","lastModifiedDate":"2024-03-23"},{"lineNumber":8,"author":{"gitId":"rertyy"},"content":" */","lastModifiedDate":"2024-03-23"},{"lineNumber":9,"author":{"gitId":"rertyy"},"content":"public class Pair\u003cT, U\u003e {","lastModifiedDate":"2024-03-23"},{"lineNumber":10,"author":{"gitId":"rertyy"},"content":"    private final T t;","lastModifiedDate":"2024-03-23"},{"lineNumber":11,"author":{"gitId":"rertyy"},"content":"    private final U u;","lastModifiedDate":"2024-03-23"},{"lineNumber":12,"author":{"gitId":"rertyy"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":13,"author":{"gitId":"rertyy"},"content":"    /**","lastModifiedDate":"2024-03-23"},{"lineNumber":14,"author":{"gitId":"rertyy"},"content":"     * Constructor for Pair.","lastModifiedDate":"2024-03-23"},{"lineNumber":15,"author":{"gitId":"rertyy"},"content":"     *","lastModifiedDate":"2024-03-23"},{"lineNumber":16,"author":{"gitId":"rertyy"},"content":"     * @param t the first param.","lastModifiedDate":"2024-03-23"},{"lineNumber":17,"author":{"gitId":"rertyy"},"content":"     * @param u the second param.","lastModifiedDate":"2024-03-23"},{"lineNumber":18,"author":{"gitId":"rertyy"},"content":"     */","lastModifiedDate":"2024-03-23"},{"lineNumber":19,"author":{"gitId":"rertyy"},"content":"    public Pair(T t, U u) {","lastModifiedDate":"2024-03-23"},{"lineNumber":20,"author":{"gitId":"rertyy"},"content":"        this.t \u003d t;","lastModifiedDate":"2024-03-23"},{"lineNumber":21,"author":{"gitId":"rertyy"},"content":"        this.u \u003d u;","lastModifiedDate":"2024-03-23"},{"lineNumber":22,"author":{"gitId":"rertyy"},"content":"    }","lastModifiedDate":"2024-03-23"},{"lineNumber":23,"author":{"gitId":"rertyy"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":24,"author":{"gitId":"rertyy"},"content":"    public T getFirst() {","lastModifiedDate":"2024-03-23"},{"lineNumber":25,"author":{"gitId":"rertyy"},"content":"        return t;","lastModifiedDate":"2024-03-23"},{"lineNumber":26,"author":{"gitId":"rertyy"},"content":"    }","lastModifiedDate":"2024-03-23"},{"lineNumber":27,"author":{"gitId":"rertyy"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":28,"author":{"gitId":"rertyy"},"content":"    public U getSecond() {","lastModifiedDate":"2024-03-23"},{"lineNumber":29,"author":{"gitId":"rertyy"},"content":"        return u;","lastModifiedDate":"2024-03-23"},{"lineNumber":30,"author":{"gitId":"rertyy"},"content":"    }","lastModifiedDate":"2024-03-23"},{"lineNumber":31,"author":{"gitId":"rertyy"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":32,"author":{"gitId":"rertyy"},"content":"}","lastModifiedDate":"2024-03-23"}],"authorContributionMap":{"rertyy":32}},{"path":"src/main/java/seedu/address/logic/Logic.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-09-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2024-03-17"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":10,"author":{"gitId":"Jaspertzx"},"content":"import seedu.address.model.ReadOnlyBookKeeper;","lastModifiedDate":"2024-04-14"},{"lineNumber":11,"author":{"gitId":"Jaspertzx"},"content":"import seedu.address.model.client.Client;","lastModifiedDate":"2024-04-14"},{"lineNumber":12,"author":{"gitId":"kailinteoo"},"content":"import seedu.address.model.order.Order;","lastModifiedDate":"2024-03-20"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":15,"author":{"gitId":"rertyy"},"content":" * API of the Logic component.","lastModifiedDate":"2024-03-20"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public interface Logic {","lastModifiedDate":"2016-09-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2016-09-25"},{"lineNumber":20,"author":{"gitId":"rertyy"},"content":"     *","lastModifiedDate":"2024-03-20"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * @param commandText The command as entered by the user.","lastModifiedDate":"2016-09-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * @return the result of the command execution.","lastModifiedDate":"2016-09-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * @throws CommandException If an error occurs during command execution.","lastModifiedDate":"2017-02-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @throws ParseException   If an error occurs during parsing.","lastModifiedDate":"2017-03-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    CommandResult execute(String commandText) throws CommandException, ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-03"},{"lineNumber":29,"author":{"gitId":"kailinteoo"},"content":"     * Returns the BookKeeper.","lastModifiedDate":"2024-04-14"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-12-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * @see seedu.address.model.Model#getAddressBook()","lastModifiedDate":"2018-12-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-03"},{"lineNumber":33,"author":{"gitId":"Jaspertzx"},"content":"    ReadOnlyBookKeeper getAddressBook();","lastModifiedDate":"2024-04-14"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-03"},{"lineNumber":35,"author":{"gitId":"rertyy"},"content":"    /**","lastModifiedDate":"2024-03-20"},{"lineNumber":36,"author":{"gitId":"Jaspertzx"},"content":"     * Returns an unmodifiable view of the filtered list of clients.","lastModifiedDate":"2024-04-14"},{"lineNumber":37,"author":{"gitId":"rertyy"},"content":"     */","lastModifiedDate":"2024-03-20"},{"lineNumber":38,"author":{"gitId":"Jaspertzx"},"content":"    ObservableList\u003cClient\u003e getFilteredClientList();","lastModifiedDate":"2024-04-14"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-26"},{"lineNumber":40,"author":{"gitId":"kailinteoo"},"content":"    /**","lastModifiedDate":"2024-03-20"},{"lineNumber":41,"author":{"gitId":"kailinteoo"},"content":"     * Returns an unmodifiable view of the filtered list of orders.","lastModifiedDate":"2024-03-20"},{"lineNumber":42,"author":{"gitId":"kailinteoo"},"content":"     */","lastModifiedDate":"2024-03-20"},{"lineNumber":43,"author":{"gitId":"rertyy"},"content":"    ObservableList\u003cOrder\u003e getFilteredOrderList();","lastModifiedDate":"2024-03-29"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"kailinteoo"},"content":"     * Returns the user prefs\u0027 bookkeeper file path.","lastModifiedDate":"2024-04-14"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    Path getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * Set the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    void setGuiSettings(GuiSettings guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"kailinteoo":6,"rertyy":5,"Jaspertzx":5,"-":43}},{"path":"src/main/java/seedu/address/logic/LogicManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-12-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.AccessDeniedException;","lastModifiedDate":"2023-06-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-09-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-29"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2016-09-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2024-03-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":14,"author":{"gitId":"Jaspertzx"},"content":"import seedu.address.logic.parser.BookKeeperParser;","lastModifiedDate":"2024-04-14"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"Jaspertzx"},"content":"import seedu.address.model.ReadOnlyBookKeeper;","lastModifiedDate":"2024-04-14"},{"lineNumber":18,"author":{"gitId":"Jaspertzx"},"content":"import seedu.address.model.client.Client;","lastModifiedDate":"2024-04-14"},{"lineNumber":19,"author":{"gitId":"kailinteoo"},"content":"import seedu.address.model.order.Order;","lastModifiedDate":"2024-03-20"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.storage.Storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":" * The main LogicManager of the app.","lastModifiedDate":"2016-09-22"},{"lineNumber":24,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"public class LogicManager implements Logic {","lastModifiedDate":"2018-12-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static final String FILE_OPS_ERROR_FORMAT \u003d \"Could not save data due to the following error: %s\";","lastModifiedDate":"2023-06-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-06-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public static final String FILE_OPS_PERMISSION_ERROR_FORMAT \u003d","lastModifiedDate":"2023-06-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            \"Could not save data to file %s due to insufficient permissions to write to the file or the folder.\";","lastModifiedDate":"2023-06-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-06-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(LogicManager.class);","lastModifiedDate":"2016-09-29"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private final Model model;","lastModifiedDate":"2016-09-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private final Storage storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":35,"author":{"gitId":"Jaspertzx"},"content":"    private final BookKeeperParser bookKeeperParser;","lastModifiedDate":"2024-04-14"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     * Constructs a {@code LogicManager} with the given {@code Model} and {@code Storage}.","lastModifiedDate":"2020-05-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public LogicManager(Model model, Storage storage) {","lastModifiedDate":"2018-12-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        this.model \u003d model;","lastModifiedDate":"2016-09-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        this.storage \u003d storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":43,"author":{"gitId":"Jaspertzx"},"content":"        bookKeeperParser \u003d new BookKeeperParser();","lastModifiedDate":"2024-04-14"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public CommandResult execute(String commandText) throws CommandException, ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        logger.info(\"----------------[USER COMMAND][\" + commandText + \"]\");","lastModifiedDate":"2016-09-29"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        CommandResult commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":51,"author":{"gitId":"Jaspertzx"},"content":"        Command command \u003d bookKeeperParser.parseCommand(commandText);","lastModifiedDate":"2024-04-14"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        commandResult \u003d command.execute(model);","lastModifiedDate":"2019-01-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-12-09"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            storage.saveAddressBook(model.getAddressBook());","lastModifiedDate":"2018-12-09"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        } catch (AccessDeniedException e) {","lastModifiedDate":"2023-06-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"            throw new CommandException(String.format(FILE_OPS_PERMISSION_ERROR_FORMAT, e.getMessage()), e);","lastModifiedDate":"2023-06-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2018-12-09"},{"lineNumber":59,"author":{"gitId":"-"},"content":"            throw new CommandException(String.format(FILE_OPS_ERROR_FORMAT, ioe.getMessage()), ioe);","lastModifiedDate":"2023-06-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        return commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-12-03"},{"lineNumber":66,"author":{"gitId":"Jaspertzx"},"content":"    public ReadOnlyBookKeeper getAddressBook() {","lastModifiedDate":"2024-04-14"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        return model.getAddressBook();","lastModifiedDate":"2018-12-03"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-03"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-03"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":71,"author":{"gitId":"Jaspertzx"},"content":"    public ObservableList\u003cClient\u003e getFilteredClientList() {","lastModifiedDate":"2024-04-14"},{"lineNumber":72,"author":{"gitId":"Jaspertzx"},"content":"        return model.getFilteredClientList();","lastModifiedDate":"2024-04-14"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-29"},{"lineNumber":75,"author":{"gitId":"kailinteoo"},"content":"    @Override","lastModifiedDate":"2024-03-20"},{"lineNumber":76,"author":{"gitId":"rertyy"},"content":"    public ObservableList\u003cOrder\u003e getFilteredOrderList() {","lastModifiedDate":"2024-03-29"},{"lineNumber":77,"author":{"gitId":"kailinteoo"},"content":"        return model.getFilteredOrderList();","lastModifiedDate":"2024-03-20"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        return model.getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        return model.getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        model.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"kailinteoo":3,"rertyy":1,"Jaspertzx":9,"-":81}},{"path":"src/main/java/seedu/address/logic/Messages.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2023-07-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2023-07-14"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2023-07-14"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2023-07-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.Prefix;","lastModifiedDate":"2023-07-14"},{"lineNumber":8,"author":{"gitId":"Jaspertzx"},"content":"import seedu.address.model.client.Client;","lastModifiedDate":"2024-04-14"},{"lineNumber":9,"author":{"gitId":"Jaspertzx"},"content":"import seedu.address.model.order.Order;","lastModifiedDate":"2024-03-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Container for user visible messages.","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class Messages {","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_UNKNOWN_COMMAND \u003d \"Unknown command\";","lastModifiedDate":"2016-09-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_COMMAND_FORMAT \u003d \"Invalid command format! \\n%1$s\";","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"Jaspertzx"},"content":"    public static final String MESSAGE_INVALID_CLIENT_DISPLAYED_INDEX \u003d \"The client index provided is invalid\";","lastModifiedDate":"2024-04-14"},{"lineNumber":19,"author":{"gitId":"Jaspertzx"},"content":"    public static final String MESSAGE_CLIENTS_LISTED_OVERVIEW \u003d \"%1$d clients listed!\";","lastModifiedDate":"2024-04-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DUPLICATE_FIELDS \u003d","lastModifiedDate":"2023-07-14"},{"lineNumber":21,"author":{"gitId":"-"},"content":"            \"Multiple values specified for the following single-valued field(s): \";","lastModifiedDate":"2023-07-14"},{"lineNumber":22,"author":{"gitId":"Jaspertzx"},"content":"    public static final String MESSAGE_INVALID_ORDER_DISPLAYED_INDEX \u003d \"The order index provided is invalid\";","lastModifiedDate":"2024-03-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-07-14"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * Returns an error message indicating the duplicate prefixes.","lastModifiedDate":"2023-07-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-07-14"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public static String getErrorMessageForDuplicatePrefixes(Prefix... duplicatePrefixes) {","lastModifiedDate":"2023-07-14"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assert duplicatePrefixes.length \u003e 0;","lastModifiedDate":"2023-07-14"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        Set\u003cString\u003e duplicateFields \u003d","lastModifiedDate":"2023-07-14"},{"lineNumber":31,"author":{"gitId":"-"},"content":"                Stream.of(duplicatePrefixes).map(Prefix::toString).collect(Collectors.toSet());","lastModifiedDate":"2023-07-14"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return MESSAGE_DUPLICATE_FIELDS + String.join(\" \", duplicateFields);","lastModifiedDate":"2023-07-14"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-07-14"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2019-02-23"},{"lineNumber":37,"author":{"gitId":"Jaspertzx"},"content":"     * Formats the {@code client} for display to the user.","lastModifiedDate":"2024-04-14"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2019-02-23"},{"lineNumber":39,"author":{"gitId":"Jaspertzx"},"content":"    public static String format(Client client) {","lastModifiedDate":"2024-04-14"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        final StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2019-02-23"},{"lineNumber":41,"author":{"gitId":"Jaspertzx"},"content":"        builder.append(client.getName())","lastModifiedDate":"2024-04-14"},{"lineNumber":42,"author":{"gitId":"-"},"content":"                .append(\"; Phone: \")","lastModifiedDate":"2019-02-23"},{"lineNumber":43,"author":{"gitId":"Jaspertzx"},"content":"                .append(client.getPhone())","lastModifiedDate":"2024-04-14"},{"lineNumber":44,"author":{"gitId":"-"},"content":"                .append(\"; Email: \")","lastModifiedDate":"2019-02-23"},{"lineNumber":45,"author":{"gitId":"Jaspertzx"},"content":"                .append(client.getEmail())","lastModifiedDate":"2024-04-14"},{"lineNumber":46,"author":{"gitId":"-"},"content":"                .append(\"; Address: \")","lastModifiedDate":"2019-02-23"},{"lineNumber":47,"author":{"gitId":"Jaspertzx"},"content":"                .append(client.getAddress())","lastModifiedDate":"2024-04-14"},{"lineNumber":48,"author":{"gitId":"-"},"content":"                .append(\"; Tags: \");","lastModifiedDate":"2019-02-23"},{"lineNumber":49,"author":{"gitId":"Jaspertzx"},"content":"        client.getTags().forEach(builder::append);","lastModifiedDate":"2024-04-14"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        return builder.toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":53,"author":{"gitId":"Jaspertzx"},"content":"    /**","lastModifiedDate":"2024-03-18"},{"lineNumber":54,"author":{"gitId":"Jaspertzx"},"content":"     * Formats the {@code Order} for display to the user.","lastModifiedDate":"2024-03-18"},{"lineNumber":55,"author":{"gitId":"Jaspertzx"},"content":"     */","lastModifiedDate":"2024-03-18"},{"lineNumber":56,"author":{"gitId":"Jaspertzx"},"content":"    public static String format(Order order) {","lastModifiedDate":"2024-03-18"},{"lineNumber":57,"author":{"gitId":"Jaspertzx"},"content":"        final StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2024-03-18"},{"lineNumber":58,"author":{"gitId":"kailinteoo"},"content":"        builder.append(\"Deadline: \")","lastModifiedDate":"2024-04-14"},{"lineNumber":59,"author":{"gitId":"Jaspertzx"},"content":"                .append(order.getDeadline())","lastModifiedDate":"2024-03-18"},{"lineNumber":60,"author":{"gitId":"Jaspertzx"},"content":"                .append(\"; Date Received: \")","lastModifiedDate":"2024-03-18"},{"lineNumber":61,"author":{"gitId":"Jaspertzx"},"content":"                .append(order.getOrderDate())","lastModifiedDate":"2024-03-18"},{"lineNumber":62,"author":{"gitId":"Jaspertzx"},"content":"                .append(\"; Details: \")","lastModifiedDate":"2024-03-18"},{"lineNumber":63,"author":{"gitId":"Jaspertzx"},"content":"                .append(order.getRemark());","lastModifiedDate":"2024-03-18"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        return builder.toString();","lastModifiedDate":"2024-03-18"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":67,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"kailinteoo":1,"Jaspertzx":22,"-":44}},{"path":"src/main/java/seedu/address/logic/commands/client/AddCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Jaspertzx"},"content":"package seedu.address.logic.commands.client;","lastModifiedDate":"2024-04-14"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2024-04-14"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2024-04-14"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2024-04-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2024-04-14"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2024-04-14"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2024-04-14"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2019-02-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-07-13"},{"lineNumber":12,"author":{"gitId":"Jaspertzx"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2024-03-16"},{"lineNumber":13,"author":{"gitId":"Jaspertzx"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2024-03-17"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":16,"author":{"gitId":"Jaspertzx"},"content":"import seedu.address.model.client.Client;","lastModifiedDate":"2024-04-14"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"kailinteoo"},"content":" * Adds a client to bookkeeper.","lastModifiedDate":"2024-04-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"public class AddCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"add\";","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"kailinteoo"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Adds a client to bookkeeper. \"","lastModifiedDate":"2024-04-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"            + \"Parameters: \"","lastModifiedDate":"2017-06-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"            + PREFIX_NAME + \"NAME \"","lastModifiedDate":"2017-06-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            + PREFIX_PHONE + \"PHONE \"","lastModifiedDate":"2017-05-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            + PREFIX_EMAIL + \"EMAIL \"","lastModifiedDate":"2017-05-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            + PREFIX_ADDRESS + \"ADDRESS \"","lastModifiedDate":"2017-05-09"},{"lineNumber":31,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_TAG + \"TAG]...\\n\"","lastModifiedDate":"2017-05-09"},{"lineNumber":32,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2017-06-06"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            + PREFIX_NAME + \"John Doe \"","lastModifiedDate":"2017-06-06"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            + PREFIX_PHONE + \"98765432 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":35,"author":{"gitId":"-"},"content":"            + PREFIX_EMAIL + \"johnd@example.com \"","lastModifiedDate":"2017-05-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"            + PREFIX_ADDRESS + \"311, Clementi Ave 2, #02-25 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"            + PREFIX_TAG + \"friends \"","lastModifiedDate":"2017-05-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            + PREFIX_TAG + \"owesMoney\";","lastModifiedDate":"2017-05-09"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"kailinteoo"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"New client added: %1$s\";","lastModifiedDate":"2024-04-08"},{"lineNumber":41,"author":{"gitId":"Jaspertzx"},"content":"    public static final String MESSAGE_DUPLICATE_CLIENT \u003d \"This client already exists in bookkeeper\";","lastModifiedDate":"2024-04-14"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"Jaspertzx"},"content":"    private final Client toAdd;","lastModifiedDate":"2024-04-14"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":46,"author":{"gitId":"Jaspertzx"},"content":"     * Creates an AddCommand to add the specified {@code Client}.","lastModifiedDate":"2024-04-14"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":48,"author":{"gitId":"Jaspertzx"},"content":"    public AddCommand(Client client) {","lastModifiedDate":"2024-04-14"},{"lineNumber":49,"author":{"gitId":"Jaspertzx"},"content":"        requireNonNull(client);","lastModifiedDate":"2024-04-14"},{"lineNumber":50,"author":{"gitId":"Jaspertzx"},"content":"        toAdd \u003d client;","lastModifiedDate":"2024-04-14"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2017-05-15"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":57,"author":{"gitId":"Jaspertzx"},"content":"        if (model.hasClient(toAdd)) {","lastModifiedDate":"2024-04-14"},{"lineNumber":58,"author":{"gitId":"Jaspertzx"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_CLIENT);","lastModifiedDate":"2024-04-14"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":61,"author":{"gitId":"Jaspertzx"},"content":"        model.addClient(toAdd);","lastModifiedDate":"2024-04-14"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, Messages.format(toAdd)));","lastModifiedDate":"2019-02-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-22"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-22"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        if (!(other instanceof AddCommand)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        AddCommand otherAddCommand \u003d (AddCommand) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        return toAdd.equals(otherAddCommand.toAdd);","lastModifiedDate":"2023-07-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-22"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2019-02-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2019-02-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"                .add(\"toAdd\", toAdd)","lastModifiedDate":"2019-02-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"                .toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"kailinteoo":3,"Jaspertzx":13,"-":70}},{"path":"src/main/java/seedu/address/logic/commands/client/ClearCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Jaspertzx"},"content":"package seedu.address.logic.commands.client;","lastModifiedDate":"2024-04-14"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"Jaspertzx"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2024-03-16"},{"lineNumber":6,"author":{"gitId":"Jaspertzx"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2024-03-17"},{"lineNumber":7,"author":{"gitId":"Jaspertzx"},"content":"import seedu.address.model.BookKeeper;","lastModifiedDate":"2024-04-14"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"kailinteoo"},"content":" * Clears the bookkeeper.","lastModifiedDate":"2024-04-14"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class ClearCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"clear\";","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"kailinteoo"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"BookKeeper has been cleared!\";","lastModifiedDate":"2024-04-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2017-05-15"},{"lineNumber":22,"author":{"gitId":"Jaspertzx"},"content":"        model.setAddressBook(new BookKeeper());","lastModifiedDate":"2024-04-14"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        return new CommandResult(MESSAGE_SUCCESS);","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"kailinteoo":2,"Jaspertzx":5,"-":18}},{"path":"src/main/java/seedu/address/logic/commands/client/DeleteCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Jaspertzx"},"content":"package seedu.address.logic.commands.client;","lastModifiedDate":"2024-04-14"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-09-01"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2019-02-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-07-13"},{"lineNumber":10,"author":{"gitId":"Jaspertzx"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2024-03-16"},{"lineNumber":11,"author":{"gitId":"Jaspertzx"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2024-03-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":14,"author":{"gitId":"Jaspertzx"},"content":"import seedu.address.model.client.Client;","lastModifiedDate":"2024-04-14"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"kailinteoo"},"content":" * Deletes a client identified using it\u0027s displayed index from bookkeeper.","lastModifiedDate":"2024-04-14"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"delete\";","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"kailinteoo"},"content":"            + \": Deletes the client identified by the index number used in the displayed client list.\\n\"","lastModifiedDate":"2024-04-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"            + \"Parameters: INDEX (must be a positive integer)\\n\"","lastModifiedDate":"2016-09-29"},{"lineNumber":26,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1\";","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"Jaspertzx"},"content":"    public static final String MESSAGE_DELETE_CLIENT_SUCCESS \u003d \"Deleted Client: %1$s\";","lastModifiedDate":"2024-04-14"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private final Index targetIndex;","lastModifiedDate":"2017-06-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public DeleteCommand(Index targetIndex) {","lastModifiedDate":"2017-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        this.targetIndex \u003d targetIndex;","lastModifiedDate":"2016-09-22"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":39,"author":{"gitId":"Jaspertzx"},"content":"        List\u003cClient\u003e lastShownList \u003d model.getFilteredClientList();","lastModifiedDate":"2024-04-14"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        if (targetIndex.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2018-04-19"},{"lineNumber":42,"author":{"gitId":"Jaspertzx"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_CLIENT_DISPLAYED_INDEX);","lastModifiedDate":"2024-04-14"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":45,"author":{"gitId":"Jaspertzx"},"content":"        Client clientToDelete \u003d lastShownList.get(targetIndex.getZeroBased());","lastModifiedDate":"2024-04-14"},{"lineNumber":46,"author":{"gitId":"Jaspertzx"},"content":"        model.deleteClient(clientToDelete);","lastModifiedDate":"2024-04-14"},{"lineNumber":47,"author":{"gitId":"Jaspertzx"},"content":"        return new CommandResult(String.format(MESSAGE_DELETE_CLIENT_SUCCESS, Messages.format(clientToDelete)));","lastModifiedDate":"2024-04-14"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        if (!(other instanceof DeleteCommand)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        DeleteCommand otherDeleteCommand \u003d (DeleteCommand) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        return targetIndex.equals(otherDeleteCommand.targetIndex);","lastModifiedDate":"2023-07-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2019-02-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2019-02-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"                .add(\"targetIndex\", targetIndex)","lastModifiedDate":"2019-02-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"                .toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"kailinteoo":2,"Jaspertzx":10,"-":59}},{"path":"src/main/java/seedu/address/logic/commands/client/EditCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Jaspertzx"},"content":"package seedu.address.logic.commands.client;","lastModifiedDate":"2024-04-14"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-05-09"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-05-09"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-05-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-05-09"},{"lineNumber":9,"author":{"gitId":"Jaspertzx"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_CLIENTS;","lastModifiedDate":"2024-04-14"},{"lineNumber":10,"author":{"gitId":"rertyy"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_ORDERS;","lastModifiedDate":"2024-04-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2018-01-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-01-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-12-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2023-07-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2016-12-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.CollectionUtil;","lastModifiedDate":"2016-12-26"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2019-02-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-07-13"},{"lineNumber":23,"author":{"gitId":"Jaspertzx"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2024-03-16"},{"lineNumber":24,"author":{"gitId":"Jaspertzx"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2024-03-17"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":27,"author":{"gitId":"Jaspertzx"},"content":"import seedu.address.model.client.Address;","lastModifiedDate":"2024-04-14"},{"lineNumber":28,"author":{"gitId":"Jaspertzx"},"content":"import seedu.address.model.client.Client;","lastModifiedDate":"2024-04-14"},{"lineNumber":29,"author":{"gitId":"Jaspertzx"},"content":"import seedu.address.model.client.Email;","lastModifiedDate":"2024-04-14"},{"lineNumber":30,"author":{"gitId":"Jaspertzx"},"content":"import seedu.address.model.client.Name;","lastModifiedDate":"2024-04-14"},{"lineNumber":31,"author":{"gitId":"Jaspertzx"},"content":"import seedu.address.model.client.Phone;","lastModifiedDate":"2024-04-14"},{"lineNumber":32,"author":{"gitId":"Jaspertzx"},"content":"import seedu.address.model.order.Order;","lastModifiedDate":"2024-03-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-07"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":35,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-12-26"},{"lineNumber":36,"author":{"gitId":"Jaspertzx"},"content":" * Edits the details of an existing client in the bookkeeper.","lastModifiedDate":"2024-04-14"},{"lineNumber":37,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-12-26"},{"lineNumber":38,"author":{"gitId":"-"},"content":"public class EditCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"edit\";","lastModifiedDate":"2016-12-26"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":42,"author":{"gitId":"kailinteoo"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Edits the details of the client identified \"","lastModifiedDate":"2024-04-08"},{"lineNumber":43,"author":{"gitId":"kailinteoo"},"content":"            + \"by the index number used in the displayed client list. \"","lastModifiedDate":"2024-04-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            + \"Existing values will be overwritten by the input values.\\n\"","lastModifiedDate":"2016-12-26"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2017-06-06"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_NAME + \"NAME] \"","lastModifiedDate":"2017-06-06"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_PHONE + \"PHONE] \"","lastModifiedDate":"2017-05-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_EMAIL + \"EMAIL] \"","lastModifiedDate":"2017-05-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_ADDRESS + \"ADDRESS] \"","lastModifiedDate":"2017-05-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_TAG + \"TAG]...\\n\"","lastModifiedDate":"2017-05-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"            + PREFIX_PHONE + \"91234567 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            + PREFIX_EMAIL + \"johndoe@example.com\";","lastModifiedDate":"2017-05-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":55,"author":{"gitId":"Jaspertzx"},"content":"    public static final String MESSAGE_EDIT_CLIENT_SUCCESS \u003d \"Edited Client: %1$s\";","lastModifiedDate":"2024-04-14"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_NOT_EDITED \u003d \"At least one field to edit must be provided.\";","lastModifiedDate":"2016-12-26"},{"lineNumber":57,"author":{"gitId":"Jaspertzx"},"content":"    public static final String MESSAGE_DUPLICATE_CLIENT \u003d \"This client already exists in bookkeeper.\";","lastModifiedDate":"2024-04-14"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    private final Index index;","lastModifiedDate":"2017-05-25"},{"lineNumber":60,"author":{"gitId":"Jaspertzx"},"content":"    private final EditClientDescriptor editClientDescriptor;","lastModifiedDate":"2024-04-14"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":63,"author":{"gitId":"Jaspertzx"},"content":"     * @param index                of the client in the filtered client list to edit","lastModifiedDate":"2024-04-14"},{"lineNumber":64,"author":{"gitId":"Jaspertzx"},"content":"     * @param editClientDescriptor details to edit the client with","lastModifiedDate":"2024-04-14"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":66,"author":{"gitId":"Jaspertzx"},"content":"    public EditCommand(Index index, EditClientDescriptor editClientDescriptor) {","lastModifiedDate":"2024-04-14"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        requireNonNull(index);","lastModifiedDate":"2017-05-25"},{"lineNumber":68,"author":{"gitId":"Jaspertzx"},"content":"        requireNonNull(editClientDescriptor);","lastModifiedDate":"2024-04-14"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        this.index \u003d index;","lastModifiedDate":"2017-05-25"},{"lineNumber":71,"author":{"gitId":"Jaspertzx"},"content":"        this.editClientDescriptor \u003d new EditClientDescriptor(editClientDescriptor);","lastModifiedDate":"2024-04-14"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":74,"author":{"gitId":"Jaspertzx"},"content":"    /**","lastModifiedDate":"2024-03-27"},{"lineNumber":75,"author":{"gitId":"Jaspertzx"},"content":"     * Creates and returns a {@code Client} with the details of {@code clientToEdit}","lastModifiedDate":"2024-04-14"},{"lineNumber":76,"author":{"gitId":"Jaspertzx"},"content":"     * edited with {@code editClientDescriptor}.","lastModifiedDate":"2024-04-14"},{"lineNumber":77,"author":{"gitId":"Jaspertzx"},"content":"     */","lastModifiedDate":"2024-03-27"},{"lineNumber":78,"author":{"gitId":"Jaspertzx"},"content":"    private static Client createEditedClient(Client clientToEdit, EditClientDescriptor editClientDescriptor) {","lastModifiedDate":"2024-04-14"},{"lineNumber":79,"author":{"gitId":"Jaspertzx"},"content":"        assert clientToEdit !\u003d null;","lastModifiedDate":"2024-04-14"},{"lineNumber":80,"author":{"gitId":"Jaspertzx"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":81,"author":{"gitId":"Jaspertzx"},"content":"        Name updatedName \u003d editClientDescriptor.getName().orElse(clientToEdit.getName());","lastModifiedDate":"2024-04-14"},{"lineNumber":82,"author":{"gitId":"Jaspertzx"},"content":"        Phone updatedPhone \u003d editClientDescriptor.getPhone().orElse(clientToEdit.getPhone());","lastModifiedDate":"2024-04-14"},{"lineNumber":83,"author":{"gitId":"Jaspertzx"},"content":"        Email updatedEmail \u003d editClientDescriptor.getEmail().orElse(clientToEdit.getEmail());","lastModifiedDate":"2024-04-14"},{"lineNumber":84,"author":{"gitId":"Jaspertzx"},"content":"        Address updatedAddress \u003d editClientDescriptor.getAddress().orElse(clientToEdit.getAddress());","lastModifiedDate":"2024-04-14"},{"lineNumber":85,"author":{"gitId":"Jaspertzx"},"content":"        Set\u003cTag\u003e updatedTags \u003d editClientDescriptor.getTags().orElse(clientToEdit.getTags());","lastModifiedDate":"2024-04-14"},{"lineNumber":86,"author":{"gitId":"Jaspertzx"},"content":"        Set\u003cOrder\u003e orderSet \u003d editClientDescriptor.getOrders().orElse(clientToEdit.getOrders());","lastModifiedDate":"2024-04-14"},{"lineNumber":87,"author":{"gitId":"Jaspertzx"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":88,"author":{"gitId":"Jaspertzx"},"content":"        Client client \u003d new Client(updatedName, updatedPhone, updatedEmail, updatedAddress, updatedTags, orderSet);","lastModifiedDate":"2024-04-14"},{"lineNumber":89,"author":{"gitId":"rertyy"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":90,"author":{"gitId":"Jaspertzx"},"content":"        client.getOrders().forEach(order -\u003e order.setClient(client));","lastModifiedDate":"2024-04-14"},{"lineNumber":91,"author":{"gitId":"rertyy"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":92,"author":{"gitId":"Jaspertzx"},"content":"        return client;","lastModifiedDate":"2024-04-14"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-26"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":98,"author":{"gitId":"Jaspertzx"},"content":"        List\u003cClient\u003e lastShownList \u003d model.getFilteredClientList();","lastModifiedDate":"2024-04-14"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2018-04-19"},{"lineNumber":101,"author":{"gitId":"Jaspertzx"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_CLIENT_DISPLAYED_INDEX);","lastModifiedDate":"2024-04-14"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":104,"author":{"gitId":"Jaspertzx"},"content":"        Client clientToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2024-04-14"},{"lineNumber":105,"author":{"gitId":"Jaspertzx"},"content":"        Client editedClient \u003d createEditedClient(clientToEdit, editClientDescriptor);","lastModifiedDate":"2024-04-14"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":107,"author":{"gitId":"Jaspertzx"},"content":"        if (!clientToEdit.isSameClient(editedClient) \u0026\u0026 model.hasClient(editedClient)) {","lastModifiedDate":"2024-04-14"},{"lineNumber":108,"author":{"gitId":"Jaspertzx"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_CLIENT);","lastModifiedDate":"2024-04-14"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":111,"author":{"gitId":"Jaspertzx"},"content":"        model.setClient(clientToEdit, editedClient);","lastModifiedDate":"2024-04-14"},{"lineNumber":112,"author":{"gitId":"Jaspertzx"},"content":"        model.updateFilteredClientList(PREDICATE_SHOW_ALL_CLIENTS);","lastModifiedDate":"2024-04-14"},{"lineNumber":113,"author":{"gitId":"rertyy"},"content":"        model.updateFilteredOrderList(PREDICATE_SHOW_ALL_ORDERS);","lastModifiedDate":"2024-04-13"},{"lineNumber":114,"author":{"gitId":"Jaspertzx"},"content":"        return new CommandResult(String.format(MESSAGE_EDIT_CLIENT_SUCCESS, Messages.format(editedClient)));","lastModifiedDate":"2024-04-14"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-08"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-05-08"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2017-05-08"},{"lineNumber":120,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-05-08"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-05-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        if (!(other instanceof EditCommand)) {","lastModifiedDate":"2017-05-08"},{"lineNumber":125,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-05-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        EditCommand otherEditCommand \u003d (EditCommand) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        return index.equals(otherEditCommand.index)","lastModifiedDate":"2023-07-13"},{"lineNumber":130,"author":{"gitId":"Jaspertzx"},"content":"                \u0026\u0026 editClientDescriptor.equals(otherEditCommand.editClientDescriptor);","lastModifiedDate":"2024-04-14"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-08"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2019-02-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2019-02-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"                .add(\"index\", index)","lastModifiedDate":"2019-02-23"},{"lineNumber":137,"author":{"gitId":"Jaspertzx"},"content":"                .add(\"editClientDescriptor\", editClientDescriptor)","lastModifiedDate":"2024-04-14"},{"lineNumber":138,"author":{"gitId":"-"},"content":"                .toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":142,"author":{"gitId":"Jaspertzx"},"content":"     * Stores the details to edit the client with. Each non-empty field value will replace the","lastModifiedDate":"2024-04-14"},{"lineNumber":143,"author":{"gitId":"Jaspertzx"},"content":"     * corresponding field value of the client.","lastModifiedDate":"2024-04-14"},{"lineNumber":144,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":145,"author":{"gitId":"Jaspertzx"},"content":"    public static class EditClientDescriptor {","lastModifiedDate":"2024-04-14"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        private Name name;","lastModifiedDate":"2017-06-21"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        private Phone phone;","lastModifiedDate":"2017-06-21"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        private Email email;","lastModifiedDate":"2017-06-21"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        private Address address;","lastModifiedDate":"2017-06-21"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        private Set\u003cTag\u003e tags;","lastModifiedDate":"2017-06-21"},{"lineNumber":151,"author":{"gitId":"Jaspertzx"},"content":"        private Set\u003cOrder\u003e orders;","lastModifiedDate":"2024-03-27"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":153,"author":{"gitId":"Jaspertzx"},"content":"        public EditClientDescriptor() {","lastModifiedDate":"2024-04-14"},{"lineNumber":154,"author":{"gitId":"Jaspertzx"},"content":"        }","lastModifiedDate":"2024-03-27"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":157,"author":{"gitId":"-"},"content":"         * Copy constructor.","lastModifiedDate":"2018-01-11"},{"lineNumber":158,"author":{"gitId":"-"},"content":"         * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2018-01-11"},{"lineNumber":159,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":160,"author":{"gitId":"Jaspertzx"},"content":"        public EditClientDescriptor(EditClientDescriptor toCopy) {","lastModifiedDate":"2024-04-14"},{"lineNumber":161,"author":{"gitId":"-"},"content":"            setName(toCopy.name);","lastModifiedDate":"2018-01-15"},{"lineNumber":162,"author":{"gitId":"-"},"content":"            setPhone(toCopy.phone);","lastModifiedDate":"2018-01-15"},{"lineNumber":163,"author":{"gitId":"-"},"content":"            setEmail(toCopy.email);","lastModifiedDate":"2018-01-15"},{"lineNumber":164,"author":{"gitId":"-"},"content":"            setAddress(toCopy.address);","lastModifiedDate":"2018-01-15"},{"lineNumber":165,"author":{"gitId":"-"},"content":"            setTags(toCopy.tags);","lastModifiedDate":"2018-01-11"},{"lineNumber":166,"author":{"gitId":"Jaspertzx"},"content":"            setOrders(toCopy.orders);","lastModifiedDate":"2024-03-27"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2016-12-26"},{"lineNumber":170,"author":{"gitId":"-"},"content":"         * Returns true if at least one field is edited.","lastModifiedDate":"2016-12-26"},{"lineNumber":171,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-12-26"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        public boolean isAnyFieldEdited() {","lastModifiedDate":"2016-12-26"},{"lineNumber":173,"author":{"gitId":"-"},"content":"            return CollectionUtil.isAnyNonNull(name, phone, email, address, tags);","lastModifiedDate":"2018-08-14"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":175,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        public Optional\u003cName\u003e getName() {","lastModifiedDate":"2016-12-26"},{"lineNumber":177,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(name);","lastModifiedDate":"2017-06-21"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":180,"author":{"gitId":"-"},"content":"        public void setName(Name name) {","lastModifiedDate":"2024-03-27"},{"lineNumber":181,"author":{"gitId":"-"},"content":"            this.name \u003d name;","lastModifiedDate":"2024-03-27"},{"lineNumber":182,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":184,"author":{"gitId":"-"},"content":"        public Optional\u003cPhone\u003e getPhone() {","lastModifiedDate":"2016-12-26"},{"lineNumber":185,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(phone);","lastModifiedDate":"2017-06-21"},{"lineNumber":186,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":187,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":188,"author":{"gitId":"-"},"content":"        public void setPhone(Phone phone) {","lastModifiedDate":"2024-03-27"},{"lineNumber":189,"author":{"gitId":"-"},"content":"            this.phone \u003d phone;","lastModifiedDate":"2024-03-27"},{"lineNumber":190,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":191,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":192,"author":{"gitId":"-"},"content":"        public Optional\u003cEmail\u003e getEmail() {","lastModifiedDate":"2016-12-26"},{"lineNumber":193,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(email);","lastModifiedDate":"2017-06-21"},{"lineNumber":194,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":196,"author":{"gitId":"-"},"content":"        public void setEmail(Email email) {","lastModifiedDate":"2024-03-27"},{"lineNumber":197,"author":{"gitId":"-"},"content":"            this.email \u003d email;","lastModifiedDate":"2024-03-27"},{"lineNumber":198,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":199,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":200,"author":{"gitId":"-"},"content":"        public Optional\u003cAddress\u003e getAddress() {","lastModifiedDate":"2016-12-26"},{"lineNumber":201,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(address);","lastModifiedDate":"2017-06-21"},{"lineNumber":202,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":203,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":204,"author":{"gitId":"-"},"content":"        public void setAddress(Address address) {","lastModifiedDate":"2024-03-27"},{"lineNumber":205,"author":{"gitId":"-"},"content":"            this.address \u003d address;","lastModifiedDate":"2024-03-27"},{"lineNumber":206,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":207,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":208,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":209,"author":{"gitId":"-"},"content":"         * Returns an unmodifiable tag set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2018-01-11"},{"lineNumber":210,"author":{"gitId":"-"},"content":"         * if modification is attempted.","lastModifiedDate":"2018-01-11"},{"lineNumber":211,"author":{"gitId":"-"},"content":"         * Returns {@code Optional#empty()} if {@code tags} is null.","lastModifiedDate":"2018-01-11"},{"lineNumber":212,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":213,"author":{"gitId":"-"},"content":"        public Optional\u003cSet\u003cTag\u003e\u003e getTags() {","lastModifiedDate":"2017-03-07"},{"lineNumber":214,"author":{"gitId":"-"},"content":"            return (tags !\u003d null) ? Optional.of(Collections.unmodifiableSet(tags)) : Optional.empty();","lastModifiedDate":"2018-01-11"},{"lineNumber":215,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":217,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2024-03-27"},{"lineNumber":218,"author":{"gitId":"-"},"content":"         * Sets {@code tags} to this object\u0027s {@code tags}.","lastModifiedDate":"2024-03-27"},{"lineNumber":219,"author":{"gitId":"-"},"content":"         * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2024-03-27"},{"lineNumber":220,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2024-03-27"},{"lineNumber":221,"author":{"gitId":"-"},"content":"        public void setTags(Set\u003cTag\u003e tags) {","lastModifiedDate":"2024-03-27"},{"lineNumber":222,"author":{"gitId":"-"},"content":"            this.tags \u003d (tags !\u003d null) ? new HashSet\u003c\u003e(tags) : null;","lastModifiedDate":"2024-03-27"},{"lineNumber":223,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2024-03-27"},{"lineNumber":224,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":225,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2024-03-27"},{"lineNumber":226,"author":{"gitId":"Jaspertzx"},"content":"         * Returns an unmodifiable order set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2024-03-27"},{"lineNumber":227,"author":{"gitId":"-"},"content":"         * if modification is attempted.","lastModifiedDate":"2024-03-27"},{"lineNumber":228,"author":{"gitId":"Jaspertzx"},"content":"         * Returns {@code Optional#empty()} if {@code orders} is null.","lastModifiedDate":"2024-03-27"},{"lineNumber":229,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2024-03-27"},{"lineNumber":230,"author":{"gitId":"Jaspertzx"},"content":"        public Optional\u003cSet\u003cOrder\u003e\u003e getOrders() {","lastModifiedDate":"2024-03-27"},{"lineNumber":231,"author":{"gitId":"Jaspertzx"},"content":"            return (orders !\u003d null) ? Optional.of(Collections.unmodifiableSet(orders)) : Optional.empty();","lastModifiedDate":"2024-03-27"},{"lineNumber":232,"author":{"gitId":"Jaspertzx"},"content":"        }","lastModifiedDate":"2024-03-27"},{"lineNumber":233,"author":{"gitId":"Jaspertzx"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":234,"author":{"gitId":"Jaspertzx"},"content":"        /**","lastModifiedDate":"2024-03-27"},{"lineNumber":235,"author":{"gitId":"Jaspertzx"},"content":"         * Sets {@code orders} to this object\u0027s {@code orders}.","lastModifiedDate":"2024-03-27"},{"lineNumber":236,"author":{"gitId":"Jaspertzx"},"content":"         * A defensive copy of {@code orders} is used internally.","lastModifiedDate":"2024-03-27"},{"lineNumber":237,"author":{"gitId":"Jaspertzx"},"content":"         */","lastModifiedDate":"2024-03-27"},{"lineNumber":238,"author":{"gitId":"Jaspertzx"},"content":"        public void setOrders(Set\u003cOrder\u003e orders) {","lastModifiedDate":"2024-03-27"},{"lineNumber":239,"author":{"gitId":"Jaspertzx"},"content":"            this.orders \u003d (orders !\u003d null) ? new HashSet\u003c\u003e(orders) : null;","lastModifiedDate":"2024-03-27"},{"lineNumber":240,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2024-03-27"},{"lineNumber":241,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":242,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-05"},{"lineNumber":243,"author":{"gitId":"-"},"content":"        public boolean equals(Object other) {","lastModifiedDate":"2017-05-05"},{"lineNumber":244,"author":{"gitId":"-"},"content":"            if (other \u003d\u003d this) {","lastModifiedDate":"2017-05-05"},{"lineNumber":245,"author":{"gitId":"-"},"content":"                return true;","lastModifiedDate":"2017-05-05"},{"lineNumber":246,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-05-05"},{"lineNumber":247,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":248,"author":{"gitId":"-"},"content":"            // instanceof handles nulls","lastModifiedDate":"2017-05-05"},{"lineNumber":249,"author":{"gitId":"Jaspertzx"},"content":"            if (!(other instanceof EditClientDescriptor)) {","lastModifiedDate":"2024-04-14"},{"lineNumber":250,"author":{"gitId":"-"},"content":"                return false;","lastModifiedDate":"2017-05-05"},{"lineNumber":251,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-05-05"},{"lineNumber":252,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":253,"author":{"gitId":"Jaspertzx"},"content":"            EditClientDescriptor otherEditClientDescriptor \u003d (EditClientDescriptor) other;","lastModifiedDate":"2024-04-14"},{"lineNumber":254,"author":{"gitId":"Jaspertzx"},"content":"            return Objects.equals(name, otherEditClientDescriptor.name)","lastModifiedDate":"2024-04-14"},{"lineNumber":255,"author":{"gitId":"Jaspertzx"},"content":"                    \u0026\u0026 Objects.equals(phone, otherEditClientDescriptor.phone)","lastModifiedDate":"2024-04-14"},{"lineNumber":256,"author":{"gitId":"Jaspertzx"},"content":"                    \u0026\u0026 Objects.equals(email, otherEditClientDescriptor.email)","lastModifiedDate":"2024-04-14"},{"lineNumber":257,"author":{"gitId":"Jaspertzx"},"content":"                    \u0026\u0026 Objects.equals(address, otherEditClientDescriptor.address)","lastModifiedDate":"2024-04-14"},{"lineNumber":258,"author":{"gitId":"Jaspertzx"},"content":"                    \u0026\u0026 Objects.equals(tags, otherEditClientDescriptor.tags);","lastModifiedDate":"2024-04-14"},{"lineNumber":259,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-05"},{"lineNumber":260,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":261,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2019-02-23"},{"lineNumber":262,"author":{"gitId":"-"},"content":"        public String toString() {","lastModifiedDate":"2019-02-23"},{"lineNumber":263,"author":{"gitId":"-"},"content":"            return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23"},{"lineNumber":264,"author":{"gitId":"-"},"content":"                    .add(\"name\", name)","lastModifiedDate":"2019-02-23"},{"lineNumber":265,"author":{"gitId":"-"},"content":"                    .add(\"phone\", phone)","lastModifiedDate":"2019-02-23"},{"lineNumber":266,"author":{"gitId":"-"},"content":"                    .add(\"email\", email)","lastModifiedDate":"2019-02-23"},{"lineNumber":267,"author":{"gitId":"-"},"content":"                    .add(\"address\", address)","lastModifiedDate":"2019-02-23"},{"lineNumber":268,"author":{"gitId":"-"},"content":"                    .add(\"tags\", tags)","lastModifiedDate":"2019-02-23"},{"lineNumber":269,"author":{"gitId":"Jaspertzx"},"content":"                    .add(\"orders\", orders)","lastModifiedDate":"2024-03-27"},{"lineNumber":270,"author":{"gitId":"-"},"content":"                    .toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":271,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2019-02-23"},{"lineNumber":272,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":273,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-26"}],"authorContributionMap":{"kailinteoo":2,"rertyy":4,"Jaspertzx":75,"-":192}},{"path":"src/main/java/seedu/address/logic/commands/client/ExitCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Jaspertzx"},"content":"package seedu.address.logic.commands.client;","lastModifiedDate":"2024-04-14"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":3,"author":{"gitId":"Jaspertzx"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2024-03-16"},{"lineNumber":4,"author":{"gitId":"Jaspertzx"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2024-03-17"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-22"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Terminates the program.","lastModifiedDate":"2016-09-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-22"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2016-09-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"exit\";","lastModifiedDate":"2016-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":14,"author":{"gitId":"kailinteoo"},"content":"    public static final String MESSAGE_EXIT_ACKNOWLEDGEMENT \u003d \"Exiting BookKeeper as requested ...\";","lastModifiedDate":"2024-04-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-22"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        return new CommandResult(MESSAGE_EXIT_ACKNOWLEDGEMENT, false, true);","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-22"}],"authorContributionMap":{"kailinteoo":1,"Jaspertzx":3,"-":17}},{"path":"src/main/java/seedu/address/logic/commands/client/FindCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Jaspertzx"},"content":"package seedu.address.logic.commands.client;","lastModifiedDate":"2024-04-14"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2019-02-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-07-13"},{"lineNumber":7,"author":{"gitId":"Jaspertzx"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2024-03-16"},{"lineNumber":8,"author":{"gitId":"Jaspertzx"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2024-03-17"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":10,"author":{"gitId":"Jaspertzx"},"content":"import seedu.address.model.client.NameContainsKeywordsPredicate;","lastModifiedDate":"2024-04-14"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-22"},{"lineNumber":13,"author":{"gitId":"Jaspertzx"},"content":" * Finds and lists all clients in bookkeeper whose name contains any of the argument keywords.","lastModifiedDate":"2024-04-14"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Keyword matching is case insensitive.","lastModifiedDate":"2018-04-01"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2016-09-22"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"find\";","lastModifiedDate":"2016-09-22"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":20,"author":{"gitId":"kailinteoo"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Finds all clients whose names contain any of \"","lastModifiedDate":"2024-04-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"            + \"the specified keywords (case-insensitive) and displays them as a list with index numbers.\\n\"","lastModifiedDate":"2018-04-01"},{"lineNumber":22,"author":{"gitId":"-"},"content":"            + \"Parameters: KEYWORD [MORE_KEYWORDS]...\\n\"","lastModifiedDate":"2016-09-22"},{"lineNumber":23,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" alice bob charlie\";","lastModifiedDate":"2016-09-22"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private final NameContainsKeywordsPredicate predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public FindCommand(NameContainsKeywordsPredicate predicate) {","lastModifiedDate":"2017-06-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        this.predicate \u003d predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-22"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":34,"author":{"gitId":"Jaspertzx"},"content":"        model.updateFilteredClientList(predicate);","lastModifiedDate":"2024-04-14"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        return new CommandResult(","lastModifiedDate":"2018-04-01"},{"lineNumber":36,"author":{"gitId":"Jaspertzx"},"content":"                String.format(Messages.MESSAGE_CLIENTS_LISTED_OVERVIEW, model.getFilteredClientList().size()));","lastModifiedDate":"2024-04-14"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        if (!(other instanceof FindCommand)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        FindCommand otherFindCommand \u003d (FindCommand) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        return predicate.equals(otherFindCommand.predicate);","lastModifiedDate":"2023-07-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2019-02-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2019-02-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"                .add(\"predicate\", predicate)","lastModifiedDate":"2019-02-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"                .toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-22"}],"authorContributionMap":{"kailinteoo":1,"Jaspertzx":7,"-":52}},{"path":"src/main/java/seedu/address/logic/commands/client/HelpCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Jaspertzx"},"content":"package seedu.address.logic.commands.client;","lastModifiedDate":"2024-04-14"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"Jaspertzx"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2024-03-16"},{"lineNumber":4,"author":{"gitId":"Jaspertzx"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2024-03-17"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-31"},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Format full help instructions for every command for display.","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class HelpCommand extends Command {","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"help\";","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Shows program usage instructions.\\n\"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD;","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public static final String SHOWING_HELP_MESSAGE \u003d \"Opened help window.\";","lastModifiedDate":"2016-08-31"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-31"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        return new CommandResult(SHOWING_HELP_MESSAGE, true, false);","lastModifiedDate":"2018-12-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"Jaspertzx":3,"-":20}},{"path":"src/main/java/seedu/address/logic/commands/client/ListCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Jaspertzx"},"content":"package seedu.address.logic.commands.client;","lastModifiedDate":"2024-04-14"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"Jaspertzx"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_CLIENTS;","lastModifiedDate":"2024-04-14"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"Jaspertzx"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2024-03-16"},{"lineNumber":7,"author":{"gitId":"Jaspertzx"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2024-03-17"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"Jaspertzx"},"content":" * Lists all clients in bookkeeper to the user.","lastModifiedDate":"2024-04-14"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2016-09-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"list\";","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"kailinteoo"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Listed all clients\";","lastModifiedDate":"2024-04-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":23,"author":{"gitId":"Jaspertzx"},"content":"        model.updateFilteredClientList(PREDICATE_SHOW_ALL_CLIENTS);","lastModifiedDate":"2024-04-14"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        return new CommandResult(MESSAGE_SUCCESS);","lastModifiedDate":"2016-09-22"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"kailinteoo":1,"Jaspertzx":6,"-":19}},{"path":"src/main/java/seedu/address/logic/commands/order/AddOrderCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Jaspertzx"},"content":"package seedu.address.logic.commands.order;","lastModifiedDate":"2024-04-14"},{"lineNumber":2,"author":{"gitId":"Jaspertzx"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":3,"author":{"gitId":"rertyy"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2024-03-23"},{"lineNumber":4,"author":{"gitId":"Jaspertzx"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2024-03-17"},{"lineNumber":5,"author":{"gitId":"rertyy"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_ORDERS;","lastModifiedDate":"2024-03-21"},{"lineNumber":6,"author":{"gitId":"Jaspertzx"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":7,"author":{"gitId":"Jaspertzx"},"content":"import java.util.List;","lastModifiedDate":"2024-03-20"},{"lineNumber":8,"author":{"gitId":"Jaspertzx"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":9,"author":{"gitId":"Jaspertzx"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2024-03-20"},{"lineNumber":10,"author":{"gitId":"Jaspertzx"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2024-04-14"},{"lineNumber":11,"author":{"gitId":"Jaspertzx"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2024-03-18"},{"lineNumber":12,"author":{"gitId":"Jaspertzx"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2024-03-17"},{"lineNumber":13,"author":{"gitId":"Jaspertzx"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2024-03-17"},{"lineNumber":14,"author":{"gitId":"Jaspertzx"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2024-03-17"},{"lineNumber":15,"author":{"gitId":"Jaspertzx"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2024-03-17"},{"lineNumber":16,"author":{"gitId":"Jaspertzx"},"content":"import seedu.address.model.client.Client;","lastModifiedDate":"2024-04-14"},{"lineNumber":17,"author":{"gitId":"Jaspertzx"},"content":"import seedu.address.model.order.Order;","lastModifiedDate":"2024-03-18"},{"lineNumber":18,"author":{"gitId":"Jaspertzx"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":19,"author":{"gitId":"Jaspertzx"},"content":"/**","lastModifiedDate":"2024-03-17"},{"lineNumber":20,"author":{"gitId":"Jaspertzx"},"content":" * Adds an order to an assigned client.","lastModifiedDate":"2024-04-14"},{"lineNumber":21,"author":{"gitId":"Jaspertzx"},"content":" */","lastModifiedDate":"2024-03-17"},{"lineNumber":22,"author":{"gitId":"Jaspertzx"},"content":"public class AddOrderCommand extends Command {","lastModifiedDate":"2024-03-17"},{"lineNumber":23,"author":{"gitId":"Jaspertzx"},"content":"    public static final String COMMAND_WORD \u003d \"order\";","lastModifiedDate":"2024-03-17"},{"lineNumber":24,"author":{"gitId":"Jaspertzx"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2024-03-17"},{"lineNumber":25,"author":{"gitId":"Jaspertzx"},"content":"            + \": Creates an order that is associated to a client. \"","lastModifiedDate":"2024-03-17"},{"lineNumber":26,"author":{"gitId":"Jaspertzx"},"content":"            + \"Multiple orders will be appended to each other, \"","lastModifiedDate":"2024-03-17"},{"lineNumber":27,"author":{"gitId":"rertyy"},"content":"            + \"and old orders will always be kept during this operation.\\n\"","lastModifiedDate":"2024-04-08"},{"lineNumber":28,"author":{"gitId":"Jaspertzx"},"content":"            + \"Parameters: INDEX (must be a positive integer), \"","lastModifiedDate":"2024-03-17"},{"lineNumber":29,"author":{"gitId":"Jaspertzx"},"content":"            + \"DETAILS (in formation related to order), \"","lastModifiedDate":"2024-03-17"},{"lineNumber":30,"author":{"gitId":"rertyy"},"content":"            + \"DEADLINE (the date the order is due) \\n\"","lastModifiedDate":"2024-04-08"},{"lineNumber":31,"author":{"gitId":"Jaspertzx"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 d/1xRoses c/40 by/23-07-2024 00:00\";","lastModifiedDate":"2024-03-20"},{"lineNumber":32,"author":{"gitId":"Jaspertzx"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":33,"author":{"gitId":"rertyy"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"New Order added! %1$s\";","lastModifiedDate":"2024-03-29"},{"lineNumber":34,"author":{"gitId":"Jaspertzx"},"content":"    private final Order order;","lastModifiedDate":"2024-03-18"},{"lineNumber":35,"author":{"gitId":"Jaspertzx"},"content":"    private final Index index;","lastModifiedDate":"2024-03-20"},{"lineNumber":36,"author":{"gitId":"Jaspertzx"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":37,"author":{"gitId":"Jaspertzx"},"content":"    /**","lastModifiedDate":"2024-03-17"},{"lineNumber":38,"author":{"gitId":"rertyy"},"content":"     * Creates an AddOrderCommand to add the specified {@code Order}.","lastModifiedDate":"2024-03-20"},{"lineNumber":39,"author":{"gitId":"Jaspertzx"},"content":"     */","lastModifiedDate":"2024-03-17"},{"lineNumber":40,"author":{"gitId":"Jaspertzx"},"content":"    public AddOrderCommand(Index index, Order order) {","lastModifiedDate":"2024-03-20"},{"lineNumber":41,"author":{"gitId":"Jaspertzx"},"content":"        requireAllNonNull(index, order);","lastModifiedDate":"2024-03-20"},{"lineNumber":42,"author":{"gitId":"Jaspertzx"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":43,"author":{"gitId":"Jaspertzx"},"content":"        this.index \u003d index;","lastModifiedDate":"2024-03-20"},{"lineNumber":44,"author":{"gitId":"Jaspertzx"},"content":"        this.order \u003d order;","lastModifiedDate":"2024-03-18"},{"lineNumber":45,"author":{"gitId":"Jaspertzx"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":46,"author":{"gitId":"Jaspertzx"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":47,"author":{"gitId":"Jaspertzx"},"content":"    /**","lastModifiedDate":"2024-04-14"},{"lineNumber":48,"author":{"gitId":"Jaspertzx"},"content":"     * Generates a command execution success message based on whether","lastModifiedDate":"2024-04-14"},{"lineNumber":49,"author":{"gitId":"Jaspertzx"},"content":"     * the order is added to or removed from","lastModifiedDate":"2024-04-14"},{"lineNumber":50,"author":{"gitId":"Jaspertzx"},"content":"     * {@code clientToEdit}.","lastModifiedDate":"2024-04-14"},{"lineNumber":51,"author":{"gitId":"Jaspertzx"},"content":"     */","lastModifiedDate":"2024-04-14"},{"lineNumber":52,"author":{"gitId":"Jaspertzx"},"content":"    private String generateSuccessMessage(Client clientToEdit) {","lastModifiedDate":"2024-04-14"},{"lineNumber":53,"author":{"gitId":"Jaspertzx"},"content":"        return String.format(MESSAGE_SUCCESS, clientToEdit.getName());","lastModifiedDate":"2024-04-14"},{"lineNumber":54,"author":{"gitId":"Jaspertzx"},"content":"    }","lastModifiedDate":"2024-04-14"},{"lineNumber":55,"author":{"gitId":"Jaspertzx"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":56,"author":{"gitId":"Jaspertzx"},"content":"    @Override","lastModifiedDate":"2024-03-17"},{"lineNumber":57,"author":{"gitId":"Jaspertzx"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2024-03-17"},{"lineNumber":58,"author":{"gitId":"rertyy"},"content":"        requireNonNull(model);","lastModifiedDate":"2024-03-23"},{"lineNumber":59,"author":{"gitId":"rertyy"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":60,"author":{"gitId":"Jaspertzx"},"content":"        List\u003cClient\u003e lastShownList \u003d model.getFilteredClientList();","lastModifiedDate":"2024-04-14"},{"lineNumber":61,"author":{"gitId":"Jaspertzx"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":62,"author":{"gitId":"Jaspertzx"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2024-03-20"},{"lineNumber":63,"author":{"gitId":"Jaspertzx"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_CLIENT_DISPLAYED_INDEX);","lastModifiedDate":"2024-04-14"},{"lineNumber":64,"author":{"gitId":"Jaspertzx"},"content":"        }","lastModifiedDate":"2024-03-20"},{"lineNumber":65,"author":{"gitId":"Jaspertzx"},"content":"        Client clientToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2024-04-14"},{"lineNumber":66,"author":{"gitId":"Jaspertzx"},"content":"        Client editedClient \u003d clientToEdit.addOrder(order);","lastModifiedDate":"2024-04-14"},{"lineNumber":67,"author":{"gitId":"Jaspertzx"},"content":"        order.setClient(editedClient);","lastModifiedDate":"2024-04-14"},{"lineNumber":68,"author":{"gitId":"rertyy"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":69,"author":{"gitId":"Jaspertzx"},"content":"        model.setClientAndAddOrder(clientToEdit, editedClient, this.order);","lastModifiedDate":"2024-04-14"},{"lineNumber":70,"author":{"gitId":"rertyy"},"content":"        model.updateFilteredOrderList(PREDICATE_SHOW_ALL_ORDERS);","lastModifiedDate":"2024-03-21"},{"lineNumber":71,"author":{"gitId":"Jaspertzx"},"content":"        return new CommandResult(generateSuccessMessage(editedClient));","lastModifiedDate":"2024-04-14"},{"lineNumber":72,"author":{"gitId":"Jaspertzx"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":73,"author":{"gitId":"rertyy"},"content":"","lastModifiedDate":"2024-04-08"},{"lineNumber":74,"author":{"gitId":"Jaspertzx"},"content":"    @Override","lastModifiedDate":"2024-04-14"},{"lineNumber":75,"author":{"gitId":"Jaspertzx"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2024-04-14"},{"lineNumber":76,"author":{"gitId":"Jaspertzx"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2024-04-14"},{"lineNumber":77,"author":{"gitId":"Jaspertzx"},"content":"            return true;","lastModifiedDate":"2024-04-14"},{"lineNumber":78,"author":{"gitId":"Jaspertzx"},"content":"        }","lastModifiedDate":"2024-04-14"},{"lineNumber":79,"author":{"gitId":"Jaspertzx"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":80,"author":{"gitId":"Jaspertzx"},"content":"        // instanceof handles nulls","lastModifiedDate":"2024-04-14"},{"lineNumber":81,"author":{"gitId":"Jaspertzx"},"content":"        if (!(other instanceof AddOrderCommand)) {","lastModifiedDate":"2024-04-14"},{"lineNumber":82,"author":{"gitId":"Jaspertzx"},"content":"            return false;","lastModifiedDate":"2024-04-14"},{"lineNumber":83,"author":{"gitId":"Jaspertzx"},"content":"        }","lastModifiedDate":"2024-04-14"},{"lineNumber":84,"author":{"gitId":"Jaspertzx"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":85,"author":{"gitId":"Jaspertzx"},"content":"        AddOrderCommand otherAddCommand \u003d (AddOrderCommand) other;","lastModifiedDate":"2024-04-14"},{"lineNumber":86,"author":{"gitId":"Jaspertzx"},"content":"        return order.equals(otherAddCommand.order) \u0026\u0026 index.equals(otherAddCommand.index);","lastModifiedDate":"2024-04-14"},{"lineNumber":87,"author":{"gitId":"Jaspertzx"},"content":"    }","lastModifiedDate":"2024-04-14"},{"lineNumber":88,"author":{"gitId":"Jaspertzx"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":89,"author":{"gitId":"Jaspertzx"},"content":"    @Override","lastModifiedDate":"2024-04-14"},{"lineNumber":90,"author":{"gitId":"Jaspertzx"},"content":"    public String toString() {","lastModifiedDate":"2024-04-14"},{"lineNumber":91,"author":{"gitId":"Jaspertzx"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2024-04-14"},{"lineNumber":92,"author":{"gitId":"Jaspertzx"},"content":"                .add(\"index\", index)","lastModifiedDate":"2024-04-14"},{"lineNumber":93,"author":{"gitId":"Jaspertzx"},"content":"                .toString();","lastModifiedDate":"2024-04-14"},{"lineNumber":94,"author":{"gitId":"Jaspertzx"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":95,"author":{"gitId":"Jaspertzx"},"content":"}","lastModifiedDate":"2024-03-17"}],"authorContributionMap":{"rertyy":11,"Jaspertzx":84}},{"path":"src/main/java/seedu/address/logic/commands/order/DeleteOrderCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Jaspertzx"},"content":"package seedu.address.logic.commands.order;","lastModifiedDate":"2024-04-14"},{"lineNumber":2,"author":{"gitId":"Jaspertzx"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":3,"author":{"gitId":"rertyy"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2024-03-23"},{"lineNumber":4,"author":{"gitId":"rertyy"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_ORDERS;","lastModifiedDate":"2024-03-23"},{"lineNumber":5,"author":{"gitId":"Jaspertzx"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":6,"author":{"gitId":"Jaspertzx"},"content":"import java.util.List;","lastModifiedDate":"2024-03-18"},{"lineNumber":7,"author":{"gitId":"Jaspertzx"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":8,"author":{"gitId":"rertyy"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2024-03-23"},{"lineNumber":9,"author":{"gitId":"rertyy"},"content":"import seedu.address.commons.util.Pair;","lastModifiedDate":"2024-03-23"},{"lineNumber":10,"author":{"gitId":"Jaspertzx"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2024-04-14"},{"lineNumber":11,"author":{"gitId":"Jaspertzx"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2024-03-18"},{"lineNumber":12,"author":{"gitId":"Jaspertzx"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2024-03-17"},{"lineNumber":13,"author":{"gitId":"Jaspertzx"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2024-03-17"},{"lineNumber":14,"author":{"gitId":"Jaspertzx"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2024-03-17"},{"lineNumber":15,"author":{"gitId":"Jaspertzx"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2024-03-17"},{"lineNumber":16,"author":{"gitId":"Jaspertzx"},"content":"import seedu.address.model.client.Client;","lastModifiedDate":"2024-04-14"},{"lineNumber":17,"author":{"gitId":"Jaspertzx"},"content":"import seedu.address.model.order.Order;","lastModifiedDate":"2024-03-18"},{"lineNumber":18,"author":{"gitId":"Jaspertzx"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":19,"author":{"gitId":"Jaspertzx"},"content":"/**","lastModifiedDate":"2024-03-17"},{"lineNumber":20,"author":{"gitId":"Jaspertzx"},"content":" * Removes an existing order in Bookkeeper.","lastModifiedDate":"2024-04-14"},{"lineNumber":21,"author":{"gitId":"Jaspertzx"},"content":" */","lastModifiedDate":"2024-03-17"},{"lineNumber":22,"author":{"gitId":"Jaspertzx"},"content":"public class DeleteOrderCommand extends Command {","lastModifiedDate":"2024-03-17"},{"lineNumber":23,"author":{"gitId":"Jaspertzx"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Deleted Order: %1$s\";","lastModifiedDate":"2024-03-18"},{"lineNumber":24,"author":{"gitId":"Jaspertzx"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":25,"author":{"gitId":"Jaspertzx"},"content":"    public static final String COMMAND_WORD \u003d \"deleteOrder\";","lastModifiedDate":"2024-03-17"},{"lineNumber":26,"author":{"gitId":"Jaspertzx"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":27,"author":{"gitId":"Jaspertzx"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2024-03-17"},{"lineNumber":28,"author":{"gitId":"Jaspertzx"},"content":"            + \": Deletes the order identified by the index number used in the displayed order list.\\n\"","lastModifiedDate":"2024-03-17"},{"lineNumber":29,"author":{"gitId":"Jaspertzx"},"content":"            + \"Parameters: INDEX (must be a positive integer)\\n\"","lastModifiedDate":"2024-03-17"},{"lineNumber":30,"author":{"gitId":"rertyy"},"content":"            + \"Example: \" + COMMAND_WORD + \" index\";","lastModifiedDate":"2024-03-23"},{"lineNumber":31,"author":{"gitId":"Jaspertzx"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":32,"author":{"gitId":"rertyy"},"content":"    public static final String MESSAGE_DELETE_ORDER_FAILURE \u003d \"Failed to delete Order!\";","lastModifiedDate":"2024-03-23"},{"lineNumber":33,"author":{"gitId":"rertyy"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":34,"author":{"gitId":"rertyy"},"content":"    private final Index targetIndex;","lastModifiedDate":"2024-03-23"},{"lineNumber":35,"author":{"gitId":"Jaspertzx"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":36,"author":{"gitId":"Jaspertzx"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":37,"author":{"gitId":"Jaspertzx"},"content":"    /**","lastModifiedDate":"2024-03-17"},{"lineNumber":38,"author":{"gitId":"rertyy"},"content":"     * Creates an DeleteOrderCommand to delete the specified {@code Order}.","lastModifiedDate":"2024-03-20"},{"lineNumber":39,"author":{"gitId":"Jaspertzx"},"content":"     */","lastModifiedDate":"2024-03-17"},{"lineNumber":40,"author":{"gitId":"rertyy"},"content":"    public DeleteOrderCommand(Index targetIndex) {","lastModifiedDate":"2024-03-23"},{"lineNumber":41,"author":{"gitId":"rertyy"},"content":"        this.targetIndex \u003d targetIndex;","lastModifiedDate":"2024-03-23"},{"lineNumber":42,"author":{"gitId":"Jaspertzx"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":43,"author":{"gitId":"Jaspertzx"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":44,"author":{"gitId":"Jaspertzx"},"content":"    private Pair\u003cClient, Client\u003e getEditedClient(List\u003cClient\u003e clientList, Order orderToDelete) throws CommandException {","lastModifiedDate":"2024-04-14"},{"lineNumber":45,"author":{"gitId":"Jaspertzx"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":46,"author":{"gitId":"Jaspertzx"},"content":"        for (Client client : clientList) {","lastModifiedDate":"2024-04-14"},{"lineNumber":47,"author":{"gitId":"Jaspertzx"},"content":"            if (client.getOrders().contains(orderToDelete)) {","lastModifiedDate":"2024-04-14"},{"lineNumber":48,"author":{"gitId":"Jaspertzx"},"content":"                Client editedClient \u003d client.removeOrder(orderToDelete);","lastModifiedDate":"2024-04-14"},{"lineNumber":49,"author":{"gitId":"Jaspertzx"},"content":"                return new Pair\u003c\u003e(client, editedClient);","lastModifiedDate":"2024-04-14"},{"lineNumber":50,"author":{"gitId":"Jaspertzx"},"content":"            }","lastModifiedDate":"2024-04-14"},{"lineNumber":51,"author":{"gitId":"Jaspertzx"},"content":"        }","lastModifiedDate":"2024-04-14"},{"lineNumber":52,"author":{"gitId":"Jaspertzx"},"content":"        throw new CommandException(MESSAGE_DELETE_ORDER_FAILURE);","lastModifiedDate":"2024-04-14"},{"lineNumber":53,"author":{"gitId":"Jaspertzx"},"content":"    }","lastModifiedDate":"2024-04-14"},{"lineNumber":54,"author":{"gitId":"Jaspertzx"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":55,"author":{"gitId":"rertyy"},"content":"    @Override","lastModifiedDate":"2024-03-23"},{"lineNumber":56,"author":{"gitId":"rertyy"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2024-03-23"},{"lineNumber":57,"author":{"gitId":"rertyy"},"content":"        requireNonNull(model);","lastModifiedDate":"2024-03-23"},{"lineNumber":58,"author":{"gitId":"rertyy"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":59,"author":{"gitId":"rertyy"},"content":"        List\u003cOrder\u003e lastShownOrderList \u003d model.getFilteredOrderList();","lastModifiedDate":"2024-03-29"},{"lineNumber":60,"author":{"gitId":"rertyy"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":61,"author":{"gitId":"rertyy"},"content":"        if (targetIndex.getZeroBased() \u003e\u003d lastShownOrderList.size()) {","lastModifiedDate":"2024-03-23"},{"lineNumber":62,"author":{"gitId":"shavonneg"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_ORDER_DISPLAYED_INDEX);","lastModifiedDate":"2024-04-08"},{"lineNumber":63,"author":{"gitId":"rertyy"},"content":"        }","lastModifiedDate":"2024-03-23"},{"lineNumber":64,"author":{"gitId":"rertyy"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":65,"author":{"gitId":"rertyy"},"content":"        Order orderToDelete \u003d lastShownOrderList.get(targetIndex.getZeroBased());","lastModifiedDate":"2024-03-29"},{"lineNumber":66,"author":{"gitId":"rertyy"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":67,"author":{"gitId":"Jaspertzx"},"content":"        List\u003cClient\u003e clientList \u003d model.getFilteredClientList();","lastModifiedDate":"2024-04-14"},{"lineNumber":68,"author":{"gitId":"Jaspertzx"},"content":"        Pair\u003cClient, Client\u003e pair \u003d getEditedClient(clientList, orderToDelete);","lastModifiedDate":"2024-04-14"},{"lineNumber":69,"author":{"gitId":"Jaspertzx"},"content":"        Client client \u003d pair.getFirst();","lastModifiedDate":"2024-04-14"},{"lineNumber":70,"author":{"gitId":"Jaspertzx"},"content":"        Client editedClient \u003d pair.getSecond();","lastModifiedDate":"2024-04-14"},{"lineNumber":71,"author":{"gitId":"rertyy"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":72,"author":{"gitId":"Jaspertzx"},"content":"        model.setClientAndDeleteOrder(client, editedClient, orderToDelete);","lastModifiedDate":"2024-04-14"},{"lineNumber":73,"author":{"gitId":"rertyy"},"content":"        model.updateFilteredOrderList(PREDICATE_SHOW_ALL_ORDERS);","lastModifiedDate":"2024-03-23"},{"lineNumber":74,"author":{"gitId":"rertyy"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":75,"author":{"gitId":"rertyy"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, Messages.format(orderToDelete)));","lastModifiedDate":"2024-03-23"},{"lineNumber":76,"author":{"gitId":"rertyy"},"content":"    }","lastModifiedDate":"2024-03-23"},{"lineNumber":77,"author":{"gitId":"rertyy"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":78,"author":{"gitId":"Jaspertzx"},"content":"    @Override","lastModifiedDate":"2024-04-14"},{"lineNumber":79,"author":{"gitId":"Jaspertzx"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2024-04-14"},{"lineNumber":80,"author":{"gitId":"Jaspertzx"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2024-04-14"},{"lineNumber":81,"author":{"gitId":"Jaspertzx"},"content":"            return true;","lastModifiedDate":"2024-04-14"},{"lineNumber":82,"author":{"gitId":"rertyy"},"content":"        }","lastModifiedDate":"2024-03-29"},{"lineNumber":83,"author":{"gitId":"Jaspertzx"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":84,"author":{"gitId":"Jaspertzx"},"content":"        // instanceof handles nulls","lastModifiedDate":"2024-04-14"},{"lineNumber":85,"author":{"gitId":"Jaspertzx"},"content":"        if (!(other instanceof DeleteOrderCommand)) {","lastModifiedDate":"2024-04-14"},{"lineNumber":86,"author":{"gitId":"Jaspertzx"},"content":"            return false;","lastModifiedDate":"2024-04-14"},{"lineNumber":87,"author":{"gitId":"Jaspertzx"},"content":"        }","lastModifiedDate":"2024-03-20"},{"lineNumber":88,"author":{"gitId":"Jaspertzx"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":89,"author":{"gitId":"Jaspertzx"},"content":"        DeleteOrderCommand otherAddCommand \u003d (DeleteOrderCommand) other;","lastModifiedDate":"2024-04-14"},{"lineNumber":90,"author":{"gitId":"Jaspertzx"},"content":"        return targetIndex.equals(otherAddCommand.targetIndex);","lastModifiedDate":"2024-04-14"},{"lineNumber":91,"author":{"gitId":"Jaspertzx"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":92,"author":{"gitId":"Jaspertzx"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":93,"author":{"gitId":"rertyy"},"content":"    @Override","lastModifiedDate":"2024-03-26"},{"lineNumber":94,"author":{"gitId":"Jaspertzx"},"content":"    public String toString() {","lastModifiedDate":"2024-04-14"},{"lineNumber":95,"author":{"gitId":"Jaspertzx"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2024-04-14"},{"lineNumber":96,"author":{"gitId":"Jaspertzx"},"content":"                .add(\"index\", targetIndex)","lastModifiedDate":"2024-04-14"},{"lineNumber":97,"author":{"gitId":"Jaspertzx"},"content":"                .toString();","lastModifiedDate":"2024-04-14"},{"lineNumber":98,"author":{"gitId":"rertyy"},"content":"    }","lastModifiedDate":"2024-03-26"},{"lineNumber":99,"author":{"gitId":"Jaspertzx"},"content":"}","lastModifiedDate":"2024-03-17"}],"authorContributionMap":{"shavonneg":1,"rertyy":31,"Jaspertzx":67}},{"path":"src/main/java/seedu/address/logic/commands/order/EditOrderCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Jaspertzx"},"content":"package seedu.address.logic.commands.order;","lastModifiedDate":"2024-04-14"},{"lineNumber":2,"author":{"gitId":"shavonneg"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":3,"author":{"gitId":"shavonneg"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2024-03-28"},{"lineNumber":4,"author":{"gitId":"shavonneg"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_BY;","lastModifiedDate":"2024-03-28"},{"lineNumber":5,"author":{"gitId":"shavonneg"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DETAILS;","lastModifiedDate":"2024-03-28"},{"lineNumber":6,"author":{"gitId":"shavonneg"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PRICE;","lastModifiedDate":"2024-03-28"},{"lineNumber":7,"author":{"gitId":"shavonneg"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_STATUS;","lastModifiedDate":"2024-03-28"},{"lineNumber":8,"author":{"gitId":"shavonneg"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_ORDERS;","lastModifiedDate":"2024-03-28"},{"lineNumber":9,"author":{"gitId":"shavonneg"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":10,"author":{"gitId":"shavonneg"},"content":"import java.util.List;","lastModifiedDate":"2024-03-28"},{"lineNumber":11,"author":{"gitId":"shavonneg"},"content":"import java.util.Objects;","lastModifiedDate":"2024-03-28"},{"lineNumber":12,"author":{"gitId":"shavonneg"},"content":"import java.util.Optional;","lastModifiedDate":"2024-03-28"},{"lineNumber":13,"author":{"gitId":"shavonneg"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":14,"author":{"gitId":"shavonneg"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2024-03-28"},{"lineNumber":15,"author":{"gitId":"shavonneg"},"content":"import seedu.address.commons.util.CollectionUtil;","lastModifiedDate":"2024-03-28"},{"lineNumber":16,"author":{"gitId":"shavonneg"},"content":"import seedu.address.commons.util.Pair;","lastModifiedDate":"2024-03-28"},{"lineNumber":17,"author":{"gitId":"shavonneg"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2024-03-28"},{"lineNumber":18,"author":{"gitId":"shavonneg"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2024-03-28"},{"lineNumber":19,"author":{"gitId":"shavonneg"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2024-03-28"},{"lineNumber":20,"author":{"gitId":"shavonneg"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2024-03-28"},{"lineNumber":21,"author":{"gitId":"shavonneg"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2024-03-28"},{"lineNumber":22,"author":{"gitId":"shavonneg"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2024-03-28"},{"lineNumber":23,"author":{"gitId":"Jaspertzx"},"content":"import seedu.address.model.client.Client;","lastModifiedDate":"2024-04-14"},{"lineNumber":24,"author":{"gitId":"shavonneg"},"content":"import seedu.address.model.order.Deadline;","lastModifiedDate":"2024-03-28"},{"lineNumber":25,"author":{"gitId":"shavonneg"},"content":"import seedu.address.model.order.Order;","lastModifiedDate":"2024-03-28"},{"lineNumber":26,"author":{"gitId":"shavonneg"},"content":"import seedu.address.model.order.OrderDate;","lastModifiedDate":"2024-03-28"},{"lineNumber":27,"author":{"gitId":"shavonneg"},"content":"import seedu.address.model.order.Price;","lastModifiedDate":"2024-03-29"},{"lineNumber":28,"author":{"gitId":"shavonneg"},"content":"import seedu.address.model.order.Remark;","lastModifiedDate":"2024-03-28"},{"lineNumber":29,"author":{"gitId":"shavonneg"},"content":"import seedu.address.model.order.Status;","lastModifiedDate":"2024-03-28"},{"lineNumber":30,"author":{"gitId":"shavonneg"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":31,"author":{"gitId":"shavonneg"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":32,"author":{"gitId":"shavonneg"},"content":"/**","lastModifiedDate":"2024-03-28"},{"lineNumber":33,"author":{"gitId":"kailinteoo"},"content":" * Edits the details of an existing order in bookkeeper.","lastModifiedDate":"2024-04-14"},{"lineNumber":34,"author":{"gitId":"shavonneg"},"content":" */","lastModifiedDate":"2024-03-28"},{"lineNumber":35,"author":{"gitId":"shavonneg"},"content":"public class EditOrderCommand extends Command {","lastModifiedDate":"2024-03-28"},{"lineNumber":36,"author":{"gitId":"shavonneg"},"content":"    public static final String COMMAND_WORD \u003d \"editOrder\";","lastModifiedDate":"2024-03-28"},{"lineNumber":37,"author":{"gitId":"shavonneg"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":38,"author":{"gitId":"shavonneg"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Edits the details of the order identified \"","lastModifiedDate":"2024-03-28"},{"lineNumber":39,"author":{"gitId":"Jaspertzx"},"content":"            + \"by the index number used in the displayed client list. \"","lastModifiedDate":"2024-04-14"},{"lineNumber":40,"author":{"gitId":"shavonneg"},"content":"            + \"Existing values will be overwritten by the input values.\\n\"","lastModifiedDate":"2024-03-28"},{"lineNumber":41,"author":{"gitId":"shavonneg"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2024-03-28"},{"lineNumber":42,"author":{"gitId":"shavonneg"},"content":"            + \"[\" + \"DATE] \"","lastModifiedDate":"2024-03-28"},{"lineNumber":43,"author":{"gitId":"shavonneg"},"content":"            + \"[\" + PREFIX_BY + \"DEADLINE] \"","lastModifiedDate":"2024-03-28"},{"lineNumber":44,"author":{"gitId":"shavonneg"},"content":"            + \"[\" + PREFIX_PRICE + \"PRICE] \"","lastModifiedDate":"2024-03-29"},{"lineNumber":45,"author":{"gitId":"shavonneg"},"content":"            + \"[\" + PREFIX_DETAILS + \"REMARK] \"","lastModifiedDate":"2024-03-28"},{"lineNumber":46,"author":{"gitId":"shavonneg"},"content":"            + \"[\" + PREFIX_STATUS + \"STATUS]...\\n\"","lastModifiedDate":"2024-03-28"},{"lineNumber":47,"author":{"gitId":"shavonneg"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \";","lastModifiedDate":"2024-03-28"},{"lineNumber":48,"author":{"gitId":"shavonneg"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":49,"author":{"gitId":"shavonneg"},"content":"    public static final String MESSAGE_EDIT_ORDER_SUCCESS \u003d \"Edited Order: %1$s\";","lastModifiedDate":"2024-03-28"},{"lineNumber":50,"author":{"gitId":"shavonneg"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":51,"author":{"gitId":"shavonneg"},"content":"    private final Index targetIndex;","lastModifiedDate":"2024-03-28"},{"lineNumber":52,"author":{"gitId":"rertyy"},"content":"    private final EditOrderDescriptor editOrderDescriptor;","lastModifiedDate":"2024-04-09"},{"lineNumber":53,"author":{"gitId":"shavonneg"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":54,"author":{"gitId":"shavonneg"},"content":"    /**","lastModifiedDate":"2024-03-28"},{"lineNumber":55,"author":{"gitId":"shavonneg"},"content":"     * @param targetIndex         of the order in the filtered order list to edit","lastModifiedDate":"2024-03-28"},{"lineNumber":56,"author":{"gitId":"shavonneg"},"content":"     * @param editOrderDescriptor details to edit the order with","lastModifiedDate":"2024-03-28"},{"lineNumber":57,"author":{"gitId":"shavonneg"},"content":"     */","lastModifiedDate":"2024-03-28"},{"lineNumber":58,"author":{"gitId":"rertyy"},"content":"    public EditOrderCommand(Index targetIndex, EditOrderDescriptor","lastModifiedDate":"2024-04-09"},{"lineNumber":59,"author":{"gitId":"shavonneg"},"content":"            editOrderDescriptor) {","lastModifiedDate":"2024-03-29"},{"lineNumber":60,"author":{"gitId":"shavonneg"},"content":"        requireNonNull(targetIndex);","lastModifiedDate":"2024-03-28"},{"lineNumber":61,"author":{"gitId":"shavonneg"},"content":"        requireNonNull(editOrderDescriptor);","lastModifiedDate":"2024-03-28"},{"lineNumber":62,"author":{"gitId":"shavonneg"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":63,"author":{"gitId":"shavonneg"},"content":"        this.targetIndex \u003d targetIndex;","lastModifiedDate":"2024-03-28"},{"lineNumber":64,"author":{"gitId":"rertyy"},"content":"        this.editOrderDescriptor \u003d new EditOrderCommand.EditOrderDescriptor(editOrderDescriptor);","lastModifiedDate":"2024-04-09"},{"lineNumber":65,"author":{"gitId":"shavonneg"},"content":"    }","lastModifiedDate":"2024-03-28"},{"lineNumber":66,"author":{"gitId":"shavonneg"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":67,"author":{"gitId":"shavonneg"},"content":"    /**","lastModifiedDate":"2024-03-28"},{"lineNumber":68,"author":{"gitId":"shavonneg"},"content":"     * Creates and returns a {@code Order} with the details of {@code orderToEdit}","lastModifiedDate":"2024-03-28"},{"lineNumber":69,"author":{"gitId":"shavonneg"},"content":"     * edited with {@code editOrderDescriptor}.","lastModifiedDate":"2024-03-28"},{"lineNumber":70,"author":{"gitId":"shavonneg"},"content":"     */","lastModifiedDate":"2024-03-28"},{"lineNumber":71,"author":{"gitId":"rertyy"},"content":"    private static Order createEditedOrder(Order orderToEdit, EditOrderDescriptor editOrderDescriptor) {","lastModifiedDate":"2024-04-09"},{"lineNumber":72,"author":{"gitId":"shavonneg"},"content":"        assert orderToEdit !\u003d null;","lastModifiedDate":"2024-03-28"},{"lineNumber":73,"author":{"gitId":"shavonneg"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":74,"author":{"gitId":"shavonneg"},"content":"        OrderDate updatedOrderDate \u003d editOrderDescriptor.getOrderDate().orElse(orderToEdit.getOrderDate());","lastModifiedDate":"2024-03-28"},{"lineNumber":75,"author":{"gitId":"shavonneg"},"content":"        Deadline updatedDeadline \u003d editOrderDescriptor.getDeadline().orElse(orderToEdit.getDeadline());","lastModifiedDate":"2024-03-28"},{"lineNumber":76,"author":{"gitId":"shavonneg"},"content":"        Price updatedPrice \u003d editOrderDescriptor.getPrice().orElse(orderToEdit.getPrice());","lastModifiedDate":"2024-03-29"},{"lineNumber":77,"author":{"gitId":"shavonneg"},"content":"        Remark updatedRemark \u003d editOrderDescriptor.getRemark().orElse(orderToEdit.getRemark());","lastModifiedDate":"2024-03-28"},{"lineNumber":78,"author":{"gitId":"shavonneg"},"content":"        Status updatedStatus \u003d editOrderDescriptor.getStatus().orElse(orderToEdit.getStatus());","lastModifiedDate":"2024-03-28"},{"lineNumber":79,"author":{"gitId":"shavonneg"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":80,"author":{"gitId":"shavonneg"},"content":"        return new Order(orderToEdit.getOrderId(), updatedOrderDate, updatedDeadline, updatedPrice, updatedRemark,","lastModifiedDate":"2024-03-29"},{"lineNumber":81,"author":{"gitId":"Jaspertzx"},"content":"                updatedStatus, orderToEdit.getClient());","lastModifiedDate":"2024-04-14"},{"lineNumber":82,"author":{"gitId":"shavonneg"},"content":"    }","lastModifiedDate":"2024-03-28"},{"lineNumber":83,"author":{"gitId":"shavonneg"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":84,"author":{"gitId":"shavonneg"},"content":"    @Override","lastModifiedDate":"2024-03-28"},{"lineNumber":85,"author":{"gitId":"shavonneg"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2024-03-28"},{"lineNumber":86,"author":{"gitId":"shavonneg"},"content":"        requireNonNull(model);","lastModifiedDate":"2024-03-28"},{"lineNumber":87,"author":{"gitId":"shavonneg"},"content":"        List\u003cOrder\u003e lastShownOrderList \u003d model.getFilteredOrderList();","lastModifiedDate":"2024-03-28"},{"lineNumber":88,"author":{"gitId":"shavonneg"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":89,"author":{"gitId":"shavonneg"},"content":"        if (targetIndex.getZeroBased() \u003e\u003d lastShownOrderList.size()) {","lastModifiedDate":"2024-03-28"},{"lineNumber":90,"author":{"gitId":"shavonneg"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_ORDER_DISPLAYED_INDEX);","lastModifiedDate":"2024-03-28"},{"lineNumber":91,"author":{"gitId":"shavonneg"},"content":"        }","lastModifiedDate":"2024-03-28"},{"lineNumber":92,"author":{"gitId":"shavonneg"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":93,"author":{"gitId":"shavonneg"},"content":"        Order orderToEdit \u003d lastShownOrderList.get(targetIndex.getZeroBased());","lastModifiedDate":"2024-03-28"},{"lineNumber":94,"author":{"gitId":"shavonneg"},"content":"        Order editedOrder \u003d createEditedOrder(orderToEdit, editOrderDescriptor);","lastModifiedDate":"2024-03-28"},{"lineNumber":95,"author":{"gitId":"shavonneg"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":96,"author":{"gitId":"Jaspertzx"},"content":"        List\u003cClient\u003e clientList \u003d model.getFilteredClientList();","lastModifiedDate":"2024-04-14"},{"lineNumber":97,"author":{"gitId":"Jaspertzx"},"content":"        Pair\u003cClient, Client\u003e clientPair \u003d editClient(clientList, orderToEdit, editedOrder);","lastModifiedDate":"2024-04-14"},{"lineNumber":98,"author":{"gitId":"Jaspertzx"},"content":"        Client clientToEdit \u003d clientPair.getFirst();","lastModifiedDate":"2024-04-14"},{"lineNumber":99,"author":{"gitId":"Jaspertzx"},"content":"        Client editedClient \u003d clientPair.getSecond();","lastModifiedDate":"2024-04-14"},{"lineNumber":100,"author":{"gitId":"shavonneg"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":101,"author":{"gitId":"Jaspertzx"},"content":"        model.setClientAndEditOrder(clientToEdit, editedClient, orderToEdit, editedOrder);","lastModifiedDate":"2024-04-14"},{"lineNumber":102,"author":{"gitId":"shavonneg"},"content":"        model.updateFilteredOrderList(PREDICATE_SHOW_ALL_ORDERS);","lastModifiedDate":"2024-03-28"},{"lineNumber":103,"author":{"gitId":"shavonneg"},"content":"        return new CommandResult(String.format(MESSAGE_EDIT_ORDER_SUCCESS, Messages.format(editedOrder)));","lastModifiedDate":"2024-03-28"},{"lineNumber":104,"author":{"gitId":"shavonneg"},"content":"    }","lastModifiedDate":"2024-03-28"},{"lineNumber":105,"author":{"gitId":"shavonneg"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":106,"author":{"gitId":"Jaspertzx"},"content":"    private Pair\u003cClient, Client\u003e editClient(List\u003cClient\u003e clientList, Order orderToEdit, Order editedOrder) throws","lastModifiedDate":"2024-04-14"},{"lineNumber":107,"author":{"gitId":"shavonneg"},"content":"            CommandException {","lastModifiedDate":"2024-03-29"},{"lineNumber":108,"author":{"gitId":"Jaspertzx"},"content":"        for (Client client : clientList) {","lastModifiedDate":"2024-04-14"},{"lineNumber":109,"author":{"gitId":"Jaspertzx"},"content":"            if (client.getOrders().contains(orderToEdit)) {","lastModifiedDate":"2024-04-14"},{"lineNumber":110,"author":{"gitId":"Jaspertzx"},"content":"                Client editedClient \u003d client.editOrder(orderToEdit, editedOrder);","lastModifiedDate":"2024-04-14"},{"lineNumber":111,"author":{"gitId":"Jaspertzx"},"content":"                return new Pair\u003c\u003e(client, editedClient);","lastModifiedDate":"2024-04-14"},{"lineNumber":112,"author":{"gitId":"shavonneg"},"content":"            }","lastModifiedDate":"2024-03-28"},{"lineNumber":113,"author":{"gitId":"shavonneg"},"content":"        }","lastModifiedDate":"2024-03-28"},{"lineNumber":114,"author":{"gitId":"kailinteoo"},"content":"        throw new CommandException(\"Failed to find the client associated with this order!\");","lastModifiedDate":"2024-04-08"},{"lineNumber":115,"author":{"gitId":"shavonneg"},"content":"    }","lastModifiedDate":"2024-03-28"},{"lineNumber":116,"author":{"gitId":"shavonneg"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":117,"author":{"gitId":"shavonneg"},"content":"    @Override","lastModifiedDate":"2024-03-28"},{"lineNumber":118,"author":{"gitId":"shavonneg"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2024-03-28"},{"lineNumber":119,"author":{"gitId":"shavonneg"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2024-03-28"},{"lineNumber":120,"author":{"gitId":"shavonneg"},"content":"            return true;","lastModifiedDate":"2024-03-28"},{"lineNumber":121,"author":{"gitId":"shavonneg"},"content":"        }","lastModifiedDate":"2024-03-28"},{"lineNumber":122,"author":{"gitId":"shavonneg"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":123,"author":{"gitId":"shavonneg"},"content":"        // instanceof handles nulls","lastModifiedDate":"2024-03-28"},{"lineNumber":124,"author":{"gitId":"rertyy"},"content":"        if (!(other instanceof EditOrderCommand)) {","lastModifiedDate":"2024-04-09"},{"lineNumber":125,"author":{"gitId":"shavonneg"},"content":"            return false;","lastModifiedDate":"2024-03-28"},{"lineNumber":126,"author":{"gitId":"shavonneg"},"content":"        }","lastModifiedDate":"2024-03-28"},{"lineNumber":127,"author":{"gitId":"shavonneg"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":128,"author":{"gitId":"rertyy"},"content":"        EditOrderCommand otherEditOrderCommand \u003d (EditOrderCommand) other;","lastModifiedDate":"2024-04-09"},{"lineNumber":129,"author":{"gitId":"shavonneg"},"content":"        return targetIndex.equals(otherEditOrderCommand.targetIndex)","lastModifiedDate":"2024-03-28"},{"lineNumber":130,"author":{"gitId":"shavonneg"},"content":"                \u0026\u0026 editOrderDescriptor.equals(otherEditOrderCommand.editOrderDescriptor);","lastModifiedDate":"2024-03-28"},{"lineNumber":131,"author":{"gitId":"shavonneg"},"content":"    }","lastModifiedDate":"2024-03-28"},{"lineNumber":132,"author":{"gitId":"shavonneg"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":133,"author":{"gitId":"shavonneg"},"content":"    @Override","lastModifiedDate":"2024-03-28"},{"lineNumber":134,"author":{"gitId":"shavonneg"},"content":"    public String toString() {","lastModifiedDate":"2024-03-28"},{"lineNumber":135,"author":{"gitId":"shavonneg"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2024-03-28"},{"lineNumber":136,"author":{"gitId":"shavonneg"},"content":"                .add(\"targetIndex\", targetIndex)","lastModifiedDate":"2024-03-28"},{"lineNumber":137,"author":{"gitId":"shavonneg"},"content":"                .add(\"editOrderDescriptor\", editOrderDescriptor)","lastModifiedDate":"2024-03-28"},{"lineNumber":138,"author":{"gitId":"shavonneg"},"content":"                .toString();","lastModifiedDate":"2024-03-28"},{"lineNumber":139,"author":{"gitId":"shavonneg"},"content":"    }","lastModifiedDate":"2024-03-28"},{"lineNumber":140,"author":{"gitId":"shavonneg"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":141,"author":{"gitId":"shavonneg"},"content":"    /**","lastModifiedDate":"2024-03-28"},{"lineNumber":142,"author":{"gitId":"shavonneg"},"content":"     * Stores the details to edit the order with. Each non-empty field value will replace the","lastModifiedDate":"2024-03-28"},{"lineNumber":143,"author":{"gitId":"shavonneg"},"content":"     * corresponding field value of the order.","lastModifiedDate":"2024-03-28"},{"lineNumber":144,"author":{"gitId":"shavonneg"},"content":"     */","lastModifiedDate":"2024-03-28"},{"lineNumber":145,"author":{"gitId":"shavonneg"},"content":"    public static class EditOrderDescriptor {","lastModifiedDate":"2024-03-28"},{"lineNumber":146,"author":{"gitId":"shavonneg"},"content":"        private OrderDate orderDate;","lastModifiedDate":"2024-03-28"},{"lineNumber":147,"author":{"gitId":"shavonneg"},"content":"        private Deadline deadline;","lastModifiedDate":"2024-03-28"},{"lineNumber":148,"author":{"gitId":"shavonneg"},"content":"        private Price price;","lastModifiedDate":"2024-03-29"},{"lineNumber":149,"author":{"gitId":"shavonneg"},"content":"        private Remark remark;","lastModifiedDate":"2024-03-28"},{"lineNumber":150,"author":{"gitId":"shavonneg"},"content":"        private Status status;","lastModifiedDate":"2024-03-28"},{"lineNumber":151,"author":{"gitId":"shavonneg"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":152,"author":{"gitId":"shavonneg"},"content":"        public EditOrderDescriptor() {","lastModifiedDate":"2024-03-28"},{"lineNumber":153,"author":{"gitId":"shavonneg"},"content":"        }","lastModifiedDate":"2024-03-28"},{"lineNumber":154,"author":{"gitId":"shavonneg"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":155,"author":{"gitId":"shavonneg"},"content":"        /**","lastModifiedDate":"2024-03-28"},{"lineNumber":156,"author":{"gitId":"shavonneg"},"content":"         * Copy constructor.","lastModifiedDate":"2024-03-28"},{"lineNumber":157,"author":{"gitId":"shavonneg"},"content":"         * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2024-03-28"},{"lineNumber":158,"author":{"gitId":"shavonneg"},"content":"         */","lastModifiedDate":"2024-03-28"},{"lineNumber":159,"author":{"gitId":"rertyy"},"content":"        public EditOrderDescriptor(EditOrderDescriptor toCopy) {","lastModifiedDate":"2024-04-09"},{"lineNumber":160,"author":{"gitId":"shavonneg"},"content":"            setOrderDate(toCopy.orderDate);","lastModifiedDate":"2024-03-28"},{"lineNumber":161,"author":{"gitId":"shavonneg"},"content":"            setDeadline(toCopy.deadline);","lastModifiedDate":"2024-03-28"},{"lineNumber":162,"author":{"gitId":"shavonneg"},"content":"            setPrice(toCopy.price);","lastModifiedDate":"2024-03-29"},{"lineNumber":163,"author":{"gitId":"shavonneg"},"content":"            setRemark(toCopy.remark);","lastModifiedDate":"2024-03-28"},{"lineNumber":164,"author":{"gitId":"shavonneg"},"content":"            setStatus(toCopy.status);","lastModifiedDate":"2024-03-28"},{"lineNumber":165,"author":{"gitId":"shavonneg"},"content":"        }","lastModifiedDate":"2024-03-28"},{"lineNumber":166,"author":{"gitId":"shavonneg"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":167,"author":{"gitId":"shavonneg"},"content":"        /**","lastModifiedDate":"2024-03-28"},{"lineNumber":168,"author":{"gitId":"shavonneg"},"content":"         * Returns true if at least one field is edited.","lastModifiedDate":"2024-03-28"},{"lineNumber":169,"author":{"gitId":"shavonneg"},"content":"         */","lastModifiedDate":"2024-03-28"},{"lineNumber":170,"author":{"gitId":"shavonneg"},"content":"        public boolean isAnyFieldEdited() {","lastModifiedDate":"2024-03-28"},{"lineNumber":171,"author":{"gitId":"shavonneg"},"content":"            return CollectionUtil.isAnyNonNull(orderDate, deadline, price, remark, status);","lastModifiedDate":"2024-03-29"},{"lineNumber":172,"author":{"gitId":"shavonneg"},"content":"        }","lastModifiedDate":"2024-03-28"},{"lineNumber":173,"author":{"gitId":"shavonneg"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":174,"author":{"gitId":"shavonneg"},"content":"        public Optional\u003cOrderDate\u003e getOrderDate() {","lastModifiedDate":"2024-03-28"},{"lineNumber":175,"author":{"gitId":"shavonneg"},"content":"            return Optional.ofNullable(orderDate);","lastModifiedDate":"2024-03-28"},{"lineNumber":176,"author":{"gitId":"shavonneg"},"content":"        }","lastModifiedDate":"2024-03-28"},{"lineNumber":177,"author":{"gitId":"shavonneg"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":178,"author":{"gitId":"shavonneg"},"content":"        public void setOrderDate(OrderDate orderDate) {","lastModifiedDate":"2024-03-28"},{"lineNumber":179,"author":{"gitId":"shavonneg"},"content":"            this.orderDate \u003d orderDate;","lastModifiedDate":"2024-03-28"},{"lineNumber":180,"author":{"gitId":"shavonneg"},"content":"        }","lastModifiedDate":"2024-03-28"},{"lineNumber":181,"author":{"gitId":"shavonneg"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":182,"author":{"gitId":"shavonneg"},"content":"        public Optional\u003cDeadline\u003e getDeadline() {","lastModifiedDate":"2024-03-28"},{"lineNumber":183,"author":{"gitId":"shavonneg"},"content":"            return Optional.ofNullable(deadline);","lastModifiedDate":"2024-03-28"},{"lineNumber":184,"author":{"gitId":"shavonneg"},"content":"        }","lastModifiedDate":"2024-03-28"},{"lineNumber":185,"author":{"gitId":"shavonneg"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":186,"author":{"gitId":"shavonneg"},"content":"        public void setDeadline(Deadline deadline) {","lastModifiedDate":"2024-03-28"},{"lineNumber":187,"author":{"gitId":"shavonneg"},"content":"            this.deadline \u003d deadline;","lastModifiedDate":"2024-03-28"},{"lineNumber":188,"author":{"gitId":"shavonneg"},"content":"        }","lastModifiedDate":"2024-03-28"},{"lineNumber":189,"author":{"gitId":"shavonneg"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":190,"author":{"gitId":"shavonneg"},"content":"        public Optional\u003cPrice\u003e getPrice() {","lastModifiedDate":"2024-03-29"},{"lineNumber":191,"author":{"gitId":"shavonneg"},"content":"            return Optional.ofNullable(price);","lastModifiedDate":"2024-03-29"},{"lineNumber":192,"author":{"gitId":"shavonneg"},"content":"        }","lastModifiedDate":"2024-03-28"},{"lineNumber":193,"author":{"gitId":"shavonneg"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":194,"author":{"gitId":"shavonneg"},"content":"        public void setPrice(Price price) {","lastModifiedDate":"2024-03-29"},{"lineNumber":195,"author":{"gitId":"shavonneg"},"content":"            this.price \u003d price;","lastModifiedDate":"2024-03-29"},{"lineNumber":196,"author":{"gitId":"shavonneg"},"content":"        }","lastModifiedDate":"2024-03-28"},{"lineNumber":197,"author":{"gitId":"shavonneg"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":198,"author":{"gitId":"shavonneg"},"content":"        public Optional\u003cRemark\u003e getRemark() {","lastModifiedDate":"2024-03-28"},{"lineNumber":199,"author":{"gitId":"shavonneg"},"content":"            return Optional.ofNullable(remark);","lastModifiedDate":"2024-03-28"},{"lineNumber":200,"author":{"gitId":"shavonneg"},"content":"        }","lastModifiedDate":"2024-03-28"},{"lineNumber":201,"author":{"gitId":"shavonneg"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":202,"author":{"gitId":"shavonneg"},"content":"        public void setRemark(Remark remark) {","lastModifiedDate":"2024-03-28"},{"lineNumber":203,"author":{"gitId":"shavonneg"},"content":"            this.remark \u003d remark;","lastModifiedDate":"2024-03-28"},{"lineNumber":204,"author":{"gitId":"shavonneg"},"content":"        }","lastModifiedDate":"2024-03-28"},{"lineNumber":205,"author":{"gitId":"shavonneg"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":206,"author":{"gitId":"shavonneg"},"content":"        public Optional\u003cStatus\u003e getStatus() {","lastModifiedDate":"2024-03-28"},{"lineNumber":207,"author":{"gitId":"shavonneg"},"content":"            return Optional.ofNullable(status);","lastModifiedDate":"2024-03-28"},{"lineNumber":208,"author":{"gitId":"shavonneg"},"content":"        }","lastModifiedDate":"2024-03-28"},{"lineNumber":209,"author":{"gitId":"shavonneg"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":210,"author":{"gitId":"shavonneg"},"content":"        public void setStatus(Status status) {","lastModifiedDate":"2024-03-28"},{"lineNumber":211,"author":{"gitId":"shavonneg"},"content":"            this.status \u003d status;","lastModifiedDate":"2024-03-28"},{"lineNumber":212,"author":{"gitId":"shavonneg"},"content":"        }","lastModifiedDate":"2024-03-28"},{"lineNumber":213,"author":{"gitId":"shavonneg"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":214,"author":{"gitId":"shavonneg"},"content":"        @Override","lastModifiedDate":"2024-03-28"},{"lineNumber":215,"author":{"gitId":"shavonneg"},"content":"        public boolean equals(Object other) {","lastModifiedDate":"2024-03-28"},{"lineNumber":216,"author":{"gitId":"shavonneg"},"content":"            if (other \u003d\u003d this) {","lastModifiedDate":"2024-03-28"},{"lineNumber":217,"author":{"gitId":"shavonneg"},"content":"                return true;","lastModifiedDate":"2024-03-28"},{"lineNumber":218,"author":{"gitId":"shavonneg"},"content":"            }","lastModifiedDate":"2024-03-28"},{"lineNumber":219,"author":{"gitId":"shavonneg"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":220,"author":{"gitId":"shavonneg"},"content":"            // instanceof handles nulls","lastModifiedDate":"2024-03-28"},{"lineNumber":221,"author":{"gitId":"rertyy"},"content":"            if (!(other instanceof EditOrderDescriptor)) {","lastModifiedDate":"2024-04-09"},{"lineNumber":222,"author":{"gitId":"shavonneg"},"content":"                return false;","lastModifiedDate":"2024-03-28"},{"lineNumber":223,"author":{"gitId":"shavonneg"},"content":"            }","lastModifiedDate":"2024-03-28"},{"lineNumber":224,"author":{"gitId":"shavonneg"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":225,"author":{"gitId":"rertyy"},"content":"            EditOrderDescriptor otherEditOrderDescriptor \u003d (EditOrderDescriptor) other;","lastModifiedDate":"2024-04-09"},{"lineNumber":226,"author":{"gitId":"shavonneg"},"content":"            return Objects.equals(orderDate, otherEditOrderDescriptor.orderDate)","lastModifiedDate":"2024-03-28"},{"lineNumber":227,"author":{"gitId":"shavonneg"},"content":"                    \u0026\u0026 Objects.equals(deadline, otherEditOrderDescriptor.deadline)","lastModifiedDate":"2024-03-28"},{"lineNumber":228,"author":{"gitId":"shavonneg"},"content":"                    \u0026\u0026 Objects.equals(price, otherEditOrderDescriptor.price)","lastModifiedDate":"2024-03-29"},{"lineNumber":229,"author":{"gitId":"shavonneg"},"content":"                    \u0026\u0026 Objects.equals(remark, otherEditOrderDescriptor.remark)","lastModifiedDate":"2024-03-28"},{"lineNumber":230,"author":{"gitId":"shavonneg"},"content":"                    \u0026\u0026 Objects.equals(status, otherEditOrderDescriptor.status);","lastModifiedDate":"2024-03-28"},{"lineNumber":231,"author":{"gitId":"shavonneg"},"content":"        }","lastModifiedDate":"2024-03-28"},{"lineNumber":232,"author":{"gitId":"shavonneg"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":233,"author":{"gitId":"shavonneg"},"content":"        @Override","lastModifiedDate":"2024-03-28"},{"lineNumber":234,"author":{"gitId":"shavonneg"},"content":"        public String toString() {","lastModifiedDate":"2024-03-28"},{"lineNumber":235,"author":{"gitId":"shavonneg"},"content":"            return new ToStringBuilder(this)","lastModifiedDate":"2024-03-28"},{"lineNumber":236,"author":{"gitId":"shavonneg"},"content":"                    .add(\"orderDate\", orderDate)","lastModifiedDate":"2024-03-28"},{"lineNumber":237,"author":{"gitId":"shavonneg"},"content":"                    .add(\"deadline\", deadline)","lastModifiedDate":"2024-03-28"},{"lineNumber":238,"author":{"gitId":"shavonneg"},"content":"                    .add(\"price\", price)","lastModifiedDate":"2024-03-29"},{"lineNumber":239,"author":{"gitId":"shavonneg"},"content":"                    .add(\"remark\", remark)","lastModifiedDate":"2024-03-28"},{"lineNumber":240,"author":{"gitId":"shavonneg"},"content":"                    .add(\"status\", status)","lastModifiedDate":"2024-03-28"},{"lineNumber":241,"author":{"gitId":"shavonneg"},"content":"                    .toString();","lastModifiedDate":"2024-03-28"},{"lineNumber":242,"author":{"gitId":"shavonneg"},"content":"        }","lastModifiedDate":"2024-03-28"},{"lineNumber":243,"author":{"gitId":"shavonneg"},"content":"    }","lastModifiedDate":"2024-03-28"},{"lineNumber":244,"author":{"gitId":"shavonneg"},"content":"}","lastModifiedDate":"2024-03-28"}],"authorContributionMap":{"kailinteoo":2,"shavonneg":219,"rertyy":9,"Jaspertzx":14}},{"path":"src/main/java/seedu/address/logic/parser/ArgumentMultimap.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-03-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-03-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.HashMap;","lastModifiedDate":"2017-03-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-03-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Map;","lastModifiedDate":"2017-03-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-03-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2023-07-14"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-07-14"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-07-14"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-03-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Stores mapping of prefixes to their respective arguments.","lastModifiedDate":"2017-03-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * Each key may be associated with multiple argument values.","lastModifiedDate":"2017-03-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * Values for a given key are stored in a list, and the insertion ordering is maintained.","lastModifiedDate":"2017-03-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * Keys are unique, but the list of argument values may contain duplicate argument values, i.e. the same argument value","lastModifiedDate":"2017-03-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * can be inserted multiple times for the same prefix.","lastModifiedDate":"2017-03-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-03-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class ArgumentMultimap {","lastModifiedDate":"2017-03-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":22,"author":{"gitId":"rertyy"},"content":"    /**","lastModifiedDate":"2024-03-20"},{"lineNumber":23,"author":{"gitId":"rertyy"},"content":"     * Prefixes mapped to their respective arguments.","lastModifiedDate":"2024-03-20"},{"lineNumber":24,"author":{"gitId":"rertyy"},"content":"     **/","lastModifiedDate":"2024-03-20"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private final Map\u003cPrefix, List\u003cString\u003e\u003e argMultimap \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2017-03-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * Associates the specified argument value with {@code prefix} key in this map.","lastModifiedDate":"2017-03-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * If the map previously contained a mapping for the key, the new value is appended to the list of existing values.","lastModifiedDate":"2017-03-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * @param prefix   Prefix key with which the specified argument value is to be associated","lastModifiedDate":"2017-03-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * @param argValue Argument value to be associated with the specified prefix key","lastModifiedDate":"2017-03-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public void put(Prefix prefix, String argValue) {","lastModifiedDate":"2017-03-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        List\u003cString\u003e argValues \u003d getAllValues(prefix);","lastModifiedDate":"2017-03-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        argValues.add(argValue);","lastModifiedDate":"2017-03-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        argMultimap.put(prefix, argValues);","lastModifiedDate":"2017-03-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * Returns the last value of {@code prefix}.","lastModifiedDate":"2017-03-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public Optional\u003cString\u003e getValue(Prefix prefix) {","lastModifiedDate":"2017-03-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        List\u003cString\u003e values \u003d getAllValues(prefix);","lastModifiedDate":"2017-03-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        return values.isEmpty() ? Optional.empty() : Optional.of(values.get(values.size() - 1));","lastModifiedDate":"2017-03-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     * Returns all values of {@code prefix}.","lastModifiedDate":"2017-03-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     * If the prefix does not exist or has no values, this will return an empty list.","lastModifiedDate":"2017-03-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     * Modifying the returned list will not affect the underlying data structure of the ArgumentMultimap.","lastModifiedDate":"2017-03-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public List\u003cString\u003e getAllValues(Prefix prefix) {","lastModifiedDate":"2017-03-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        if (!argMultimap.containsKey(prefix)) {","lastModifiedDate":"2017-03-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            return new ArrayList\u003c\u003e();","lastModifiedDate":"2017-03-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        return new ArrayList\u003c\u003e(argMultimap.get(prefix));","lastModifiedDate":"2017-03-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     * Returns the preamble (text before the first valid prefix). Trims any leading/trailing spaces.","lastModifiedDate":"2017-03-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public String getPreamble() {","lastModifiedDate":"2017-03-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        return getValue(new Prefix(\"\")).orElse(\"\");","lastModifiedDate":"2017-03-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-07-14"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     * Throws a {@code ParseException} if any of the prefixes given in {@code prefixes} appeared more than","lastModifiedDate":"2023-07-14"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     * once among the arguments.","lastModifiedDate":"2023-07-14"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-07-14"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public void verifyNoDuplicatePrefixesFor(Prefix... prefixes) throws ParseException {","lastModifiedDate":"2023-07-14"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        Prefix[] duplicatedPrefixes \u003d Stream.of(prefixes).distinct()","lastModifiedDate":"2023-07-14"},{"lineNumber":73,"author":{"gitId":"-"},"content":"                .filter(prefix -\u003e argMultimap.containsKey(prefix) \u0026\u0026 argMultimap.get(prefix).size() \u003e 1)","lastModifiedDate":"2023-07-14"},{"lineNumber":74,"author":{"gitId":"-"},"content":"                .toArray(Prefix[]::new);","lastModifiedDate":"2023-07-14"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        if (duplicatedPrefixes.length \u003e 0) {","lastModifiedDate":"2023-07-14"},{"lineNumber":77,"author":{"gitId":"-"},"content":"            throw new ParseException(Messages.getErrorMessageForDuplicatePrefixes(duplicatedPrefixes));","lastModifiedDate":"2023-07-14"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-14"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-07-14"},{"lineNumber":80,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-08"}],"authorContributionMap":{"rertyy":3,"-":77}},{"path":"src/main/java/seedu/address/logic/parser/ArgumentTokenizer.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2016-10-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-01-18"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-01-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-01-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-10-16"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Tokenizes arguments string of the form: {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}\u003cbr\u003e","lastModifiedDate":"2016-10-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * e.g. {@code some preamble text t/ 11.00 t/12.00 k/ m/ July}  where prefixes are {@code t/ k/ m/}.\u003cbr\u003e","lastModifiedDate":"2017-05-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * 1. An argument\u0027s value can be an empty string e.g. the value of {@code k/} in the above example.\u003cbr\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * 2. Leading and trailing whitespaces of an argument value will be discarded.\u003cbr\u003e","lastModifiedDate":"2016-10-16"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * 3. An argument may be repeated and all its values will be accumulated e.g. the value of {@code t/}","lastModifiedDate":"2017-05-19"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * in the above example.\u003cbr\u003e","lastModifiedDate":"2016-10-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-10-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class ArgumentTokenizer {","lastModifiedDate":"2016-10-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * Tokenizes an arguments string and returns an {@code ArgumentMultimap} object that maps prefixes to their","lastModifiedDate":"2017-03-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * respective argument values. Only the given prefixes will be recognized in the arguments string.","lastModifiedDate":"2017-03-20"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * @param argsString Arguments string of the form: {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}","lastModifiedDate":"2017-03-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * @param prefixes   Prefixes to tokenize the arguments string with","lastModifiedDate":"2017-03-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @return ArgumentMultimap object that maps prefixes to their arguments","lastModifiedDate":"2017-03-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static ArgumentMultimap tokenize(String argsString, Prefix... prefixes) {","lastModifiedDate":"2017-03-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        List\u003cPrefixPosition\u003e positions \u003d findAllPrefixPositions(argsString, prefixes);","lastModifiedDate":"2017-03-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        return extractArguments(argsString, positions);","lastModifiedDate":"2017-03-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * Finds all zero-based prefix positions in the given arguments string.","lastModifiedDate":"2017-03-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * @param argsString Arguments string of the form: {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}","lastModifiedDate":"2017-03-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * @param prefixes   Prefixes to find in the arguments string","lastModifiedDate":"2017-03-20"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * @return List of zero-based prefix positions in the given arguments string","lastModifiedDate":"2017-03-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private static List\u003cPrefixPosition\u003e findAllPrefixPositions(String argsString, Prefix... prefixes) {","lastModifiedDate":"2017-03-20"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return Arrays.stream(prefixes)","lastModifiedDate":"2018-01-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"                .flatMap(prefix -\u003e findPrefixPositions(argsString, prefix).stream())","lastModifiedDate":"2018-01-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"                .collect(Collectors.toList());","lastModifiedDate":"2018-01-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":45,"author":{"gitId":"rertyy"},"content":"     * {@see findAllPrefixPositions}.","lastModifiedDate":"2024-03-20"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    private static List\u003cPrefixPosition\u003e findPrefixPositions(String argsString, Prefix prefix) {","lastModifiedDate":"2017-03-20"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        List\u003cPrefixPosition\u003e positions \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2016-10-16"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        int prefixPosition \u003d findPrefixPosition(argsString, prefix.getPrefix(), 0);","lastModifiedDate":"2017-05-19"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        while (prefixPosition !\u003d -1) {","lastModifiedDate":"2017-05-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"            PrefixPosition extendedPrefix \u003d new PrefixPosition(prefix, prefixPosition);","lastModifiedDate":"2017-05-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            positions.add(extendedPrefix);","lastModifiedDate":"2016-10-16"},{"lineNumber":54,"author":{"gitId":"-"},"content":"            prefixPosition \u003d findPrefixPosition(argsString, prefix.getPrefix(), prefixPosition);","lastModifiedDate":"2017-05-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        return positions;","lastModifiedDate":"2016-10-16"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-19"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     * Returns the index of the first occurrence of {@code prefix} in","lastModifiedDate":"2017-05-19"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * {@code argsString} starting from index {@code fromIndex}. An occurrence","lastModifiedDate":"2017-05-19"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * is valid if there is a whitespace before {@code prefix}. Returns -1 if no","lastModifiedDate":"2017-05-19"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * such occurrence can be found.","lastModifiedDate":"2017-05-19"},{"lineNumber":65,"author":{"gitId":"rertyy"},"content":"     * \u003cp\u003e","lastModifiedDate":"2024-03-20"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     * E.g if {@code argsString} \u003d \"e/hip/900\", {@code prefix} \u003d \"p/\" and","lastModifiedDate":"2017-05-19"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     * {@code fromIndex} \u003d 0, this method returns -1 as there are no valid","lastModifiedDate":"2017-05-19"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     * occurrences of \"p/\" with whitespace before it. However, if","lastModifiedDate":"2017-05-19"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     * {@code argsString} \u003d \"e/hi p/900\", {@code prefix} \u003d \"p/\" and","lastModifiedDate":"2017-05-19"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     * {@code fromIndex} \u003d 0, this method returns 5.","lastModifiedDate":"2017-05-19"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-19"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    private static int findPrefixPosition(String argsString, String prefix, int fromIndex) {","lastModifiedDate":"2017-05-19"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        int prefixIndex \u003d argsString.indexOf(\" \" + prefix, fromIndex);","lastModifiedDate":"2017-05-19"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        return prefixIndex \u003d\u003d -1 ? -1","lastModifiedDate":"2017-05-19"},{"lineNumber":75,"author":{"gitId":"-"},"content":"                : prefixIndex + 1; // +1 as offset for whitespace","lastModifiedDate":"2017-05-19"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-19"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * Extracts prefixes and their argument values, and returns an {@code ArgumentMultimap} object that maps the","lastModifiedDate":"2017-03-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * extracted prefixes to their respective arguments. Prefixes are extracted based on their zero-based positions in","lastModifiedDate":"2017-03-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     * {@code argsString}.","lastModifiedDate":"2017-03-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     * @param argsString      Arguments string of the form: {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}","lastModifiedDate":"2017-03-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     * @param prefixPositions Zero-based positions of all prefixes in {@code argsString}","lastModifiedDate":"2017-03-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     * @return ArgumentMultimap object that maps prefixes to their arguments","lastModifiedDate":"2017-03-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    private static ArgumentMultimap extractArguments(String argsString, List\u003cPrefixPosition\u003e prefixPositions) {","lastModifiedDate":"2017-03-20"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        // Sort by start position","lastModifiedDate":"2016-10-16"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        prefixPositions.sort((prefix1, prefix2) -\u003e prefix1.getStartPosition() - prefix2.getStartPosition());","lastModifiedDate":"2016-10-16"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        // Insert a PrefixPosition to represent the preamble","lastModifiedDate":"2016-10-16"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        PrefixPosition preambleMarker \u003d new PrefixPosition(new Prefix(\"\"), 0);","lastModifiedDate":"2016-10-16"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        prefixPositions.add(0, preambleMarker);","lastModifiedDate":"2016-10-16"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        // Add a dummy PrefixPosition to represent the end of the string","lastModifiedDate":"2016-10-16"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        PrefixPosition endPositionMarker \u003d new PrefixPosition(new Prefix(\"\"), argsString.length());","lastModifiedDate":"2016-10-16"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        prefixPositions.add(endPositionMarker);","lastModifiedDate":"2016-10-16"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        // Map prefixes to their argument values (if any)","lastModifiedDate":"2017-03-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d new ArgumentMultimap();","lastModifiedDate":"2017-03-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        for (int i \u003d 0; i \u003c prefixPositions.size() - 1; i++) {","lastModifiedDate":"2016-10-16"},{"lineNumber":103,"author":{"gitId":"-"},"content":"            // Extract and store prefixes and their arguments","lastModifiedDate":"2017-03-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"            Prefix argPrefix \u003d prefixPositions.get(i).getPrefix();","lastModifiedDate":"2017-03-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"            String argValue \u003d extractArgumentValue(argsString, prefixPositions.get(i), prefixPositions.get(i + 1));","lastModifiedDate":"2016-10-16"},{"lineNumber":106,"author":{"gitId":"-"},"content":"            argMultimap.put(argPrefix, argValue);","lastModifiedDate":"2017-03-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-16"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        return argMultimap;","lastModifiedDate":"2017-03-08"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":113,"author":{"gitId":"-"},"content":"     * Returns the trimmed value of the argument in the arguments string specified by {@code currentPrefixPosition}.","lastModifiedDate":"2017-03-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"     * The end position of the value is determined by {@code nextPrefixPosition}.","lastModifiedDate":"2017-03-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    private static String extractArgumentValue(String argsString,","lastModifiedDate":"2017-03-20"},{"lineNumber":117,"author":{"gitId":"-"},"content":"                                               PrefixPosition currentPrefixPosition,","lastModifiedDate":"2016-10-16"},{"lineNumber":118,"author":{"gitId":"-"},"content":"                                               PrefixPosition nextPrefixPosition) {","lastModifiedDate":"2016-10-16"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        Prefix prefix \u003d currentPrefixPosition.getPrefix();","lastModifiedDate":"2016-10-16"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        int valueStartPos \u003d currentPrefixPosition.getStartPosition() + prefix.getPrefix().length();","lastModifiedDate":"2016-10-16"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        String value \u003d argsString.substring(valueStartPos, nextPrefixPosition.getStartPosition());","lastModifiedDate":"2016-10-16"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        return value.trim();","lastModifiedDate":"2016-10-16"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":128,"author":{"gitId":"-"},"content":"     * Represents a prefix\u0027s position in an arguments string.","lastModifiedDate":"2017-03-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-19"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    private static class PrefixPosition {","lastModifiedDate":"2017-03-20"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        private final Prefix prefix;","lastModifiedDate":"2016-10-19"},{"lineNumber":132,"author":{"gitId":"rertyy"},"content":"        private int startPosition;","lastModifiedDate":"2024-03-20"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        PrefixPosition(Prefix prefix, int startPosition) {","lastModifiedDate":"2016-10-19"},{"lineNumber":135,"author":{"gitId":"-"},"content":"            this.prefix \u003d prefix;","lastModifiedDate":"2016-10-19"},{"lineNumber":136,"author":{"gitId":"-"},"content":"            this.startPosition \u003d startPosition;","lastModifiedDate":"2016-10-19"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-19"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        int getStartPosition() {","lastModifiedDate":"2016-10-19"},{"lineNumber":140,"author":{"gitId":"-"},"content":"            return startPosition;","lastModifiedDate":"2018-08-14"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-19"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        Prefix getPrefix() {","lastModifiedDate":"2016-10-19"},{"lineNumber":144,"author":{"gitId":"-"},"content":"            return prefix;","lastModifiedDate":"2018-08-14"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-19"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-19"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":148,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-10-16"}],"authorContributionMap":{"rertyy":3,"-":145}},{"path":"src/main/java/seedu/address/logic/parser/BookKeeperParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-07-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2023-07-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2023-07-29"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2023-07-29"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2017-01-18"},{"lineNumber":12,"author":{"gitId":"Jaspertzx"},"content":"import seedu.address.logic.commands.client.AddCommand;","lastModifiedDate":"2024-04-14"},{"lineNumber":13,"author":{"gitId":"Jaspertzx"},"content":"import seedu.address.logic.commands.client.ClearCommand;","lastModifiedDate":"2024-04-14"},{"lineNumber":14,"author":{"gitId":"Jaspertzx"},"content":"import seedu.address.logic.commands.client.DeleteCommand;","lastModifiedDate":"2024-04-14"},{"lineNumber":15,"author":{"gitId":"Jaspertzx"},"content":"import seedu.address.logic.commands.client.EditCommand;","lastModifiedDate":"2024-04-14"},{"lineNumber":16,"author":{"gitId":"Jaspertzx"},"content":"import seedu.address.logic.commands.client.ExitCommand;","lastModifiedDate":"2024-04-14"},{"lineNumber":17,"author":{"gitId":"Jaspertzx"},"content":"import seedu.address.logic.commands.client.FindCommand;","lastModifiedDate":"2024-04-14"},{"lineNumber":18,"author":{"gitId":"Jaspertzx"},"content":"import seedu.address.logic.commands.client.HelpCommand;","lastModifiedDate":"2024-04-14"},{"lineNumber":19,"author":{"gitId":"Jaspertzx"},"content":"import seedu.address.logic.commands.client.ListCommand;","lastModifiedDate":"2024-04-14"},{"lineNumber":20,"author":{"gitId":"Jaspertzx"},"content":"import seedu.address.logic.commands.order.AddOrderCommand;","lastModifiedDate":"2024-04-14"},{"lineNumber":21,"author":{"gitId":"Jaspertzx"},"content":"import seedu.address.logic.commands.order.DeleteOrderCommand;","lastModifiedDate":"2024-04-14"},{"lineNumber":22,"author":{"gitId":"Jaspertzx"},"content":"import seedu.address.logic.commands.order.EditOrderCommand;","lastModifiedDate":"2024-04-14"},{"lineNumber":23,"author":{"gitId":"Jaspertzx"},"content":"import seedu.address.logic.parser.client.AddCommandParser;","lastModifiedDate":"2024-04-14"},{"lineNumber":24,"author":{"gitId":"Jaspertzx"},"content":"import seedu.address.logic.parser.client.DeleteCommandParser;","lastModifiedDate":"2024-04-14"},{"lineNumber":25,"author":{"gitId":"Jaspertzx"},"content":"import seedu.address.logic.parser.client.EditCommandParser;","lastModifiedDate":"2024-04-14"},{"lineNumber":26,"author":{"gitId":"Jaspertzx"},"content":"import seedu.address.logic.parser.client.FindCommandParser;","lastModifiedDate":"2024-04-14"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":28,"author":{"gitId":"Jaspertzx"},"content":"import seedu.address.logic.parser.order.AddOrderCommandParser;","lastModifiedDate":"2024-04-14"},{"lineNumber":29,"author":{"gitId":"Jaspertzx"},"content":"import seedu.address.logic.parser.order.DeleteOrderCommandParser;","lastModifiedDate":"2024-04-14"},{"lineNumber":30,"author":{"gitId":"Jaspertzx"},"content":"import seedu.address.logic.parser.order.EditOrderCommandParser;","lastModifiedDate":"2024-04-14"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":" * Parses user input.","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"Jaspertzx"},"content":"public class BookKeeperParser {","lastModifiedDate":"2024-04-14"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     * Used for initial separation of command word and args.","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private static final Pattern BASIC_COMMAND_FORMAT \u003d Pattern.compile(\"(?\u003ccommandWord\u003e\\\\S+)(?\u003carguments\u003e.*)\");","lastModifiedDate":"2016-09-22"},{"lineNumber":41,"author":{"gitId":"Jaspertzx"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(BookKeeperParser.class);","lastModifiedDate":"2024-04-14"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * Parses user input into command for execution.","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     * @param userInput full user input string","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * @return the command based on the user input","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public Command parseCommand(String userInput) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        final Matcher matcher \u003d BASIC_COMMAND_FORMAT.matcher(userInput.trim());","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        if (!matcher.matches()) {","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-03-11"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        final String commandWord \u003d matcher.group(\"commandWord\");","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        final String arguments \u003d matcher.group(\"arguments\");","lastModifiedDate":"2016-08-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-29"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        // Note to developers: Change the log level in config.json to enable lower level (i.e., FINE, FINER and lower)","lastModifiedDate":"2023-07-29"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        // log messages such as the one below.","lastModifiedDate":"2023-07-29"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        // Lower level log messages are used sparingly to minimize noise in the code.","lastModifiedDate":"2023-07-29"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        logger.fine(\"Command word: \" + commandWord + \"; Arguments: \" + arguments);","lastModifiedDate":"2023-07-29"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-29"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        switch (commandWord) {","lastModifiedDate":"2016-08-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        case AddCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":67,"author":{"gitId":"-"},"content":"            return new AddCommandParser().parse(arguments);","lastModifiedDate":"2017-02-05"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        case EditCommand.COMMAND_WORD:","lastModifiedDate":"2016-12-21"},{"lineNumber":70,"author":{"gitId":"-"},"content":"            return new EditCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        case DeleteCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":73,"author":{"gitId":"-"},"content":"            return new DeleteCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        case ClearCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":76,"author":{"gitId":"-"},"content":"            return new ClearCommand();","lastModifiedDate":"2016-09-21"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        case FindCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":79,"author":{"gitId":"-"},"content":"            return new FindCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        case ListCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":82,"author":{"gitId":"-"},"content":"            return new ListCommand();","lastModifiedDate":"2016-09-21"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        case ExitCommand.COMMAND_WORD:","lastModifiedDate":"2016-08-24"},{"lineNumber":85,"author":{"gitId":"-"},"content":"            return new ExitCommand();","lastModifiedDate":"2016-08-24"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        case HelpCommand.COMMAND_WORD:","lastModifiedDate":"2016-08-26"},{"lineNumber":88,"author":{"gitId":"-"},"content":"            return new HelpCommand();","lastModifiedDate":"2016-08-24"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":90,"author":{"gitId":"Jaspertzx"},"content":"        case AddOrderCommand.COMMAND_WORD:","lastModifiedDate":"2024-03-17"},{"lineNumber":91,"author":{"gitId":"Jaspertzx"},"content":"            return new AddOrderCommandParser().parse(arguments);","lastModifiedDate":"2024-03-17"},{"lineNumber":92,"author":{"gitId":"Jaspertzx"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":93,"author":{"gitId":"Jaspertzx"},"content":"        case DeleteOrderCommand.COMMAND_WORD:","lastModifiedDate":"2024-03-17"},{"lineNumber":94,"author":{"gitId":"Jaspertzx"},"content":"            return new DeleteOrderCommandParser().parse(arguments);","lastModifiedDate":"2024-03-17"},{"lineNumber":95,"author":{"gitId":"Jaspertzx"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":96,"author":{"gitId":"shavonneg"},"content":"        case EditOrderCommand.COMMAND_WORD:","lastModifiedDate":"2024-03-28"},{"lineNumber":97,"author":{"gitId":"shavonneg"},"content":"            return new EditOrderCommandParser().parse(arguments);","lastModifiedDate":"2024-03-28"},{"lineNumber":98,"author":{"gitId":"shavonneg"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        default:","lastModifiedDate":"2016-08-26"},{"lineNumber":100,"author":{"gitId":"-"},"content":"            logger.finer(\"This user input caused a ParseException: \" + userInput);","lastModifiedDate":"2023-07-29"},{"lineNumber":101,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2017-03-11"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":105,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"shavonneg":3,"Jaspertzx":26,"-":76}},{"path":"src/main/java/seedu/address/logic/parser/CliSyntax.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11"},{"lineNumber":4,"author":{"gitId":"rertyy"},"content":" * Contains Command Line Interface (CLI) syntax definitions common to multiple commands.","lastModifiedDate":"2024-03-20"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class CliSyntax {","lastModifiedDate":"2017-02-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":8,"author":{"gitId":"rertyy"},"content":"    /* Prefix definitions. */","lastModifiedDate":"2024-03-20"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_NAME \u003d new Prefix(\"n/\");","lastModifiedDate":"2017-06-06"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_PHONE \u003d new Prefix(\"p/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_EMAIL \u003d new Prefix(\"e/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_ADDRESS \u003d new Prefix(\"a/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_TAG \u003d new Prefix(\"t/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":14,"author":{"gitId":"Jaspertzx"},"content":"    public static final Prefix PREFIX_DETAILS \u003d new Prefix(\"d/\");","lastModifiedDate":"2024-03-17"},{"lineNumber":15,"author":{"gitId":"Jaspertzx"},"content":"    public static final Prefix PREFIX_BY \u003d new Prefix(\"by/\");","lastModifiedDate":"2024-03-17"},{"lineNumber":16,"author":{"gitId":"Jaspertzx"},"content":"    public static final Prefix PREFIX_PRICE \u003d new Prefix(\"c/\");","lastModifiedDate":"2024-03-18"},{"lineNumber":17,"author":{"gitId":"shavonneg"},"content":"    public static final Prefix PREFIX_STATUS \u003d new Prefix(\"s/\");","lastModifiedDate":"2024-03-28"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":20,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11"}],"authorContributionMap":{"shavonneg":1,"rertyy":2,"Jaspertzx":3,"-":14}},{"path":"src/main/java/seedu/address/logic/parser/ParserUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2017-02-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-02-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-02-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2017-02-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2018-07-10"},{"lineNumber":12,"author":{"gitId":"Jaspertzx"},"content":"import seedu.address.model.client.Address;","lastModifiedDate":"2024-04-14"},{"lineNumber":13,"author":{"gitId":"Jaspertzx"},"content":"import seedu.address.model.client.Email;","lastModifiedDate":"2024-04-14"},{"lineNumber":14,"author":{"gitId":"Jaspertzx"},"content":"import seedu.address.model.client.Name;","lastModifiedDate":"2024-04-14"},{"lineNumber":15,"author":{"gitId":"Jaspertzx"},"content":"import seedu.address.model.client.Phone;","lastModifiedDate":"2024-04-14"},{"lineNumber":16,"author":{"gitId":"shavonneg"},"content":"import seedu.address.model.order.Deadline;","lastModifiedDate":"2024-03-28"},{"lineNumber":17,"author":{"gitId":"Jaspertzx"},"content":"import seedu.address.model.order.OrderId;","lastModifiedDate":"2024-03-19"},{"lineNumber":18,"author":{"gitId":"shavonneg"},"content":"import seedu.address.model.order.Price;","lastModifiedDate":"2024-03-29"},{"lineNumber":19,"author":{"gitId":"shavonneg"},"content":"import seedu.address.model.order.Remark;","lastModifiedDate":"2024-03-28"},{"lineNumber":20,"author":{"gitId":"shavonneg"},"content":"import seedu.address.model.order.Status;","lastModifiedDate":"2024-03-28"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-02-11"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":23,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11"},{"lineNumber":24,"author":{"gitId":"-"},"content":" * Contains utility methods used for parsing strings in the various *Parser classes.","lastModifiedDate":"2017-07-18"},{"lineNumber":25,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":"public class ParserUtil {","lastModifiedDate":"2017-02-11"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_INDEX \u003d \"Index is not a non-zero unsigned integer.\";","lastModifiedDate":"2017-06-02"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-11"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Parses {@code oneBasedIndex} into an {@code Index} and returns it. Leading and trailing whitespaces will be","lastModifiedDate":"2017-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * trimmed.","lastModifiedDate":"2017-05-25"},{"lineNumber":33,"author":{"gitId":"kailinteoo"},"content":"     *","lastModifiedDate":"2024-03-19"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * @throws ParseException if the specified index is invalid (not non-zero unsigned integer).","lastModifiedDate":"2018-07-10"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-11"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public static Index parseIndex(String oneBasedIndex) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        String trimmedIndex \u003d oneBasedIndex.trim();","lastModifiedDate":"2017-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        if (!StringUtil.isNonZeroUnsignedInteger(trimmedIndex)) {","lastModifiedDate":"2017-06-02"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_INVALID_INDEX);","lastModifiedDate":"2018-07-10"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-02-11"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        return Index.fromOneBased(Integer.parseInt(trimmedIndex));","lastModifiedDate":"2017-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-11"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-29"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * Parses a {@code String name} into a {@code Name}.","lastModifiedDate":"2017-05-29"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-29"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-29"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code name} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-29"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public static Name parseName(String name) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        requireNonNull(name);","lastModifiedDate":"2017-05-29"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        String trimmedName \u003d name.trim();","lastModifiedDate":"2017-05-29"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        if (!Name.isValidName(trimmedName)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":54,"author":{"gitId":"-"},"content":"            throw new ParseException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        return new Name(trimmedName);","lastModifiedDate":"2017-05-29"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-29"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-29"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     * Parses a {@code String phone} into a {@code Phone}.","lastModifiedDate":"2017-05-30"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code phone} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public static Phone parsePhone(String phone) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        requireNonNull(phone);","lastModifiedDate":"2017-05-30"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        String trimmedPhone \u003d phone.trim();","lastModifiedDate":"2024-04-10"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        if (!Phone.isValidPhone(trimmedPhone)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":69,"author":{"gitId":"-"},"content":"            throw new ParseException(Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        return new Phone(trimmedPhone);","lastModifiedDate":"2017-05-30"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     * Parses a {@code String address} into an {@code Address}.","lastModifiedDate":"2017-05-30"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code address} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public static Address parseAddress(String address) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        requireNonNull(address);","lastModifiedDate":"2017-05-30"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        String trimmedAddress \u003d address.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        if (!Address.isValidAddress(trimmedAddress)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":84,"author":{"gitId":"-"},"content":"            throw new ParseException(Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        return new Address(trimmedAddress);","lastModifiedDate":"2017-05-30"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     * Parses a {@code String email} into an {@code Email}.","lastModifiedDate":"2017-05-30"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code email} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    public static Email parseEmail(String email) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        requireNonNull(email);","lastModifiedDate":"2017-05-30"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        String trimmedEmail \u003d email.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        if (!Email.isValidEmail(trimmedEmail)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":99,"author":{"gitId":"-"},"content":"            throw new ParseException(Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        return new Email(trimmedEmail);","lastModifiedDate":"2017-05-30"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     * Parses a {@code String tag} into a {@code Tag}.","lastModifiedDate":"2017-05-30"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":107,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":108,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code tag} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":109,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    public static Tag parseTag(String tag) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        requireNonNull(tag);","lastModifiedDate":"2017-05-30"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        String trimmedTag \u003d tag.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        if (!Tag.isValidTagName(trimmedTag)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":114,"author":{"gitId":"-"},"content":"            throw new ParseException(Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        return new Tag(trimmedTag);","lastModifiedDate":"2017-05-30"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":119,"author":{"gitId":"Jaspertzx"},"content":"    /**","lastModifiedDate":"2024-03-19"},{"lineNumber":120,"author":{"gitId":"Jaspertzx"},"content":"     * Parses a {@code String orderId} into a {@code OrderId}.","lastModifiedDate":"2024-03-19"},{"lineNumber":121,"author":{"gitId":"Jaspertzx"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2024-03-19"},{"lineNumber":122,"author":{"gitId":"Jaspertzx"},"content":"     *","lastModifiedDate":"2024-03-19"},{"lineNumber":123,"author":{"gitId":"Jaspertzx"},"content":"     * @throws ParseException if the given {@code orderId} is invalid.","lastModifiedDate":"2024-03-19"},{"lineNumber":124,"author":{"gitId":"Jaspertzx"},"content":"     */","lastModifiedDate":"2024-03-19"},{"lineNumber":125,"author":{"gitId":"Jaspertzx"},"content":"    public static OrderId parseOrderId(String orderId) throws ParseException {","lastModifiedDate":"2024-03-19"},{"lineNumber":126,"author":{"gitId":"Jaspertzx"},"content":"        requireNonNull(orderId);","lastModifiedDate":"2024-03-19"},{"lineNumber":127,"author":{"gitId":"Jaspertzx"},"content":"        String trimmedTag \u003d orderId.trim();","lastModifiedDate":"2024-03-19"},{"lineNumber":128,"author":{"gitId":"kailinteoo"},"content":"        if (!OrderId.isValidOrderId(trimmedTag)) {","lastModifiedDate":"2024-03-19"},{"lineNumber":129,"author":{"gitId":"kailinteoo"},"content":"            throw new ParseException(OrderId.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-19"},{"lineNumber":130,"author":{"gitId":"kailinteoo"},"content":"        } else {","lastModifiedDate":"2024-03-19"},{"lineNumber":131,"author":{"gitId":"Jaspertzx"},"content":"            return new OrderId(trimmedTag);","lastModifiedDate":"2024-03-19"},{"lineNumber":132,"author":{"gitId":"Jaspertzx"},"content":"        }","lastModifiedDate":"2024-03-19"},{"lineNumber":133,"author":{"gitId":"kailinteoo"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":134,"author":{"gitId":"Jaspertzx"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-11"},{"lineNumber":136,"author":{"gitId":"-"},"content":"     * Parses {@code Collection\u003cString\u003e tags} into a {@code Set\u003cTag\u003e}.","lastModifiedDate":"2017-03-07"},{"lineNumber":137,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-11"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    public static Set\u003cTag\u003e parseTags(Collection\u003cString\u003e tags) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        requireNonNull(tags);","lastModifiedDate":"2017-05-15"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        final Set\u003cTag\u003e tagSet \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2017-02-11"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        for (String tagName : tags) {","lastModifiedDate":"2017-02-11"},{"lineNumber":142,"author":{"gitId":"-"},"content":"            tagSet.add(parseTag(tagName));","lastModifiedDate":"2017-05-30"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-02-11"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        return tagSet;","lastModifiedDate":"2017-03-07"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-11"},{"lineNumber":146,"author":{"gitId":"shavonneg"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":147,"author":{"gitId":"shavonneg"},"content":"    /**","lastModifiedDate":"2024-03-28"},{"lineNumber":148,"author":{"gitId":"shavonneg"},"content":"     * Parses a {@code String deadline} into a {@code deadline}.","lastModifiedDate":"2024-03-28"},{"lineNumber":149,"author":{"gitId":"shavonneg"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2024-03-28"},{"lineNumber":150,"author":{"gitId":"shavonneg"},"content":"     *","lastModifiedDate":"2024-03-28"},{"lineNumber":151,"author":{"gitId":"shavonneg"},"content":"     * @throws ParseException if the given {@code deadline} is invalid.","lastModifiedDate":"2024-03-28"},{"lineNumber":152,"author":{"gitId":"shavonneg"},"content":"     */","lastModifiedDate":"2024-03-28"},{"lineNumber":153,"author":{"gitId":"shavonneg"},"content":"    public static Deadline parseDeadline(String deadline) throws ParseException {","lastModifiedDate":"2024-03-28"},{"lineNumber":154,"author":{"gitId":"shavonneg"},"content":"        requireNonNull(deadline);","lastModifiedDate":"2024-03-28"},{"lineNumber":155,"author":{"gitId":"shavonneg"},"content":"        String trimmedDeadline \u003d deadline.trim();","lastModifiedDate":"2024-03-28"},{"lineNumber":156,"author":{"gitId":"shavonneg"},"content":"        if (!Deadline.isValidDeadline(trimmedDeadline)) {","lastModifiedDate":"2024-03-28"},{"lineNumber":157,"author":{"gitId":"shavonneg"},"content":"            throw new ParseException(Deadline.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-28"},{"lineNumber":158,"author":{"gitId":"shavonneg"},"content":"        } else {","lastModifiedDate":"2024-03-28"},{"lineNumber":159,"author":{"gitId":"shavonneg"},"content":"            return new Deadline(trimmedDeadline);","lastModifiedDate":"2024-03-28"},{"lineNumber":160,"author":{"gitId":"shavonneg"},"content":"        }","lastModifiedDate":"2024-03-28"},{"lineNumber":161,"author":{"gitId":"shavonneg"},"content":"    }","lastModifiedDate":"2024-03-28"},{"lineNumber":162,"author":{"gitId":"shavonneg"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":163,"author":{"gitId":"shavonneg"},"content":"    /**","lastModifiedDate":"2024-03-28"},{"lineNumber":164,"author":{"gitId":"shavonneg"},"content":"     * Parses a {@code String price} into a {@code price}.","lastModifiedDate":"2024-03-29"},{"lineNumber":165,"author":{"gitId":"shavonneg"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2024-03-28"},{"lineNumber":166,"author":{"gitId":"shavonneg"},"content":"     *","lastModifiedDate":"2024-03-28"},{"lineNumber":167,"author":{"gitId":"shavonneg"},"content":"     * @throws ParseException if the given {@code price} is invalid.","lastModifiedDate":"2024-03-29"},{"lineNumber":168,"author":{"gitId":"shavonneg"},"content":"     */","lastModifiedDate":"2024-03-28"},{"lineNumber":169,"author":{"gitId":"shavonneg"},"content":"    public static Price parsePrice(String price) throws ParseException {","lastModifiedDate":"2024-03-29"},{"lineNumber":170,"author":{"gitId":"shavonneg"},"content":"        requireNonNull(price);","lastModifiedDate":"2024-03-29"},{"lineNumber":171,"author":{"gitId":"Jaspertzx"},"content":"        String trimmedPrice \u003d price.replaceAll(\"\\\\s+\", \"\");","lastModifiedDate":"2024-04-08"},{"lineNumber":172,"author":{"gitId":"shavonneg"},"content":"        if (!Price.isValidPrice(trimmedPrice)) {","lastModifiedDate":"2024-03-29"},{"lineNumber":173,"author":{"gitId":"shavonneg"},"content":"            throw new ParseException(Price.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-29"},{"lineNumber":174,"author":{"gitId":"shavonneg"},"content":"        } else {","lastModifiedDate":"2024-03-28"},{"lineNumber":175,"author":{"gitId":"shavonneg"},"content":"            return new Price(trimmedPrice);","lastModifiedDate":"2024-03-29"},{"lineNumber":176,"author":{"gitId":"shavonneg"},"content":"        }","lastModifiedDate":"2024-03-28"},{"lineNumber":177,"author":{"gitId":"shavonneg"},"content":"    }","lastModifiedDate":"2024-03-28"},{"lineNumber":178,"author":{"gitId":"shavonneg"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":179,"author":{"gitId":"shavonneg"},"content":"    /**","lastModifiedDate":"2024-03-28"},{"lineNumber":180,"author":{"gitId":"shavonneg"},"content":"     * Parses a {@code String remark} into a {@code remark}.","lastModifiedDate":"2024-03-28"},{"lineNumber":181,"author":{"gitId":"shavonneg"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2024-03-28"},{"lineNumber":182,"author":{"gitId":"shavonneg"},"content":"     *","lastModifiedDate":"2024-03-28"},{"lineNumber":183,"author":{"gitId":"shavonneg"},"content":"     * @throws ParseException if the given {@code remark} is invalid.","lastModifiedDate":"2024-03-28"},{"lineNumber":184,"author":{"gitId":"shavonneg"},"content":"     */","lastModifiedDate":"2024-03-28"},{"lineNumber":185,"author":{"gitId":"shavonneg"},"content":"    public static Remark parseRemark(String remark) throws ParseException {","lastModifiedDate":"2024-03-28"},{"lineNumber":186,"author":{"gitId":"shavonneg"},"content":"        requireNonNull(remark);","lastModifiedDate":"2024-03-28"},{"lineNumber":187,"author":{"gitId":"shavonneg"},"content":"        String trimmedRemark \u003d remark.trim();","lastModifiedDate":"2024-03-28"},{"lineNumber":188,"author":{"gitId":"shavonneg"},"content":"        if (!Remark.isValidRemark(trimmedRemark)) {","lastModifiedDate":"2024-03-28"},{"lineNumber":189,"author":{"gitId":"shavonneg"},"content":"            throw new ParseException(Remark.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-28"},{"lineNumber":190,"author":{"gitId":"shavonneg"},"content":"        } else {","lastModifiedDate":"2024-03-28"},{"lineNumber":191,"author":{"gitId":"shavonneg"},"content":"            return new Remark(trimmedRemark);","lastModifiedDate":"2024-03-28"},{"lineNumber":192,"author":{"gitId":"shavonneg"},"content":"        }","lastModifiedDate":"2024-03-28"},{"lineNumber":193,"author":{"gitId":"shavonneg"},"content":"    }","lastModifiedDate":"2024-03-28"},{"lineNumber":194,"author":{"gitId":"shavonneg"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":195,"author":{"gitId":"shavonneg"},"content":"    /**","lastModifiedDate":"2024-03-28"},{"lineNumber":196,"author":{"gitId":"shavonneg"},"content":"     * Parses a {@code String status} into a {@code status}.","lastModifiedDate":"2024-03-28"},{"lineNumber":197,"author":{"gitId":"shavonneg"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2024-03-28"},{"lineNumber":198,"author":{"gitId":"shavonneg"},"content":"     *","lastModifiedDate":"2024-03-28"},{"lineNumber":199,"author":{"gitId":"shavonneg"},"content":"     * @throws ParseException if the given {@code status} is invalid.","lastModifiedDate":"2024-03-28"},{"lineNumber":200,"author":{"gitId":"shavonneg"},"content":"     */","lastModifiedDate":"2024-03-28"},{"lineNumber":201,"author":{"gitId":"shavonneg"},"content":"    public static Status parseStatus(String status) throws ParseException {","lastModifiedDate":"2024-03-28"},{"lineNumber":202,"author":{"gitId":"shavonneg"},"content":"        requireNonNull(status);","lastModifiedDate":"2024-03-28"},{"lineNumber":203,"author":{"gitId":"shavonneg"},"content":"        String trimmedStatus \u003d status.trim();","lastModifiedDate":"2024-03-28"},{"lineNumber":204,"author":{"gitId":"shavonneg"},"content":"        if (!Status.isValidStatus(trimmedStatus)) {","lastModifiedDate":"2024-03-28"},{"lineNumber":205,"author":{"gitId":"shavonneg"},"content":"            throw new ParseException(Status.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-28"},{"lineNumber":206,"author":{"gitId":"shavonneg"},"content":"        } else {","lastModifiedDate":"2024-03-28"},{"lineNumber":207,"author":{"gitId":"shavonneg"},"content":"            return new Status(trimmedStatus);","lastModifiedDate":"2024-03-28"},{"lineNumber":208,"author":{"gitId":"shavonneg"},"content":"        }","lastModifiedDate":"2024-03-28"},{"lineNumber":209,"author":{"gitId":"shavonneg"},"content":"    }","lastModifiedDate":"2024-03-28"},{"lineNumber":210,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11"}],"authorContributionMap":{"kailinteoo":5,"shavonneg":67,"Jaspertzx":18,"-":120}},{"path":"src/main/java/seedu/address/logic/parser/client/AddCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Jaspertzx"},"content":"package seedu.address.logic.parser.client;","lastModifiedDate":"2024-04-14"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-07-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-02-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-02-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-02-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-02-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":10,"author":{"gitId":"Jaspertzx"},"content":"import java.util.HashSet;","lastModifiedDate":"2024-03-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2017-03-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":14,"author":{"gitId":"Jaspertzx"},"content":"import seedu.address.logic.commands.client.AddCommand;","lastModifiedDate":"2024-04-14"},{"lineNumber":15,"author":{"gitId":"Jaspertzx"},"content":"import seedu.address.logic.parser.ArgumentMultimap;","lastModifiedDate":"2024-04-14"},{"lineNumber":16,"author":{"gitId":"Jaspertzx"},"content":"import seedu.address.logic.parser.ArgumentTokenizer;","lastModifiedDate":"2024-04-14"},{"lineNumber":17,"author":{"gitId":"Jaspertzx"},"content":"import seedu.address.logic.parser.Parser;","lastModifiedDate":"2024-04-14"},{"lineNumber":18,"author":{"gitId":"Jaspertzx"},"content":"import seedu.address.logic.parser.ParserUtil;","lastModifiedDate":"2024-04-14"},{"lineNumber":19,"author":{"gitId":"Jaspertzx"},"content":"import seedu.address.logic.parser.Prefix;","lastModifiedDate":"2024-04-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":21,"author":{"gitId":"Jaspertzx"},"content":"import seedu.address.model.client.Address;","lastModifiedDate":"2024-04-14"},{"lineNumber":22,"author":{"gitId":"Jaspertzx"},"content":"import seedu.address.model.client.Client;","lastModifiedDate":"2024-04-14"},{"lineNumber":23,"author":{"gitId":"Jaspertzx"},"content":"import seedu.address.model.client.Email;","lastModifiedDate":"2024-04-14"},{"lineNumber":24,"author":{"gitId":"Jaspertzx"},"content":"import seedu.address.model.client.Name;","lastModifiedDate":"2024-04-14"},{"lineNumber":25,"author":{"gitId":"Jaspertzx"},"content":"import seedu.address.model.client.Phone;","lastModifiedDate":"2024-04-14"},{"lineNumber":26,"author":{"gitId":"Jaspertzx"},"content":"import seedu.address.model.order.Order;","lastModifiedDate":"2024-03-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-17"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-05"},{"lineNumber":30,"author":{"gitId":"rertyy"},"content":" * Parses input arguments and creates a new AddCommand object.","lastModifiedDate":"2024-03-20"},{"lineNumber":31,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"public class AddCommandParser implements Parser\u003cAddCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":34,"author":{"gitId":"rertyy"},"content":"    /**","lastModifiedDate":"2024-03-20"},{"lineNumber":35,"author":{"gitId":"rertyy"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2024-03-20"},{"lineNumber":36,"author":{"gitId":"rertyy"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2024-03-20"},{"lineNumber":37,"author":{"gitId":"rertyy"},"content":"     */","lastModifiedDate":"2024-03-20"},{"lineNumber":38,"author":{"gitId":"rertyy"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2024-03-20"},{"lineNumber":39,"author":{"gitId":"rertyy"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2024-03-20"},{"lineNumber":40,"author":{"gitId":"rertyy"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":41,"author":{"gitId":"rertyy"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the AddCommand","lastModifiedDate":"2017-02-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * and returns an AddCommand object for execution.","lastModifiedDate":"2017-02-05"},{"lineNumber":45,"author":{"gitId":"rertyy"},"content":"     *","lastModifiedDate":"2024-03-20"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-05"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public AddCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2017-03-20"},{"lineNumber":50,"author":{"gitId":"-"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL, PREFIX_ADDRESS, PREFIX_TAG);","lastModifiedDate":"2017-06-06"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_NAME, PREFIX_ADDRESS, PREFIX_PHONE, PREFIX_EMAIL)","lastModifiedDate":"2017-12-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"                || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2017-12-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-03-11"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-17"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        argMultimap.verifyNoDuplicatePrefixesFor(PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL, PREFIX_ADDRESS);","lastModifiedDate":"2023-07-14"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        Name name \u003d ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        Phone phone \u003d ParserUtil.parsePhone(argMultimap.getValue(PREFIX_PHONE).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        Email email \u003d ParserUtil.parseEmail(argMultimap.getValue(PREFIX_EMAIL).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        Address address \u003d ParserUtil.parseAddress(argMultimap.getValue(PREFIX_ADDRESS).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e tagList \u003d ParserUtil.parseTags(argMultimap.getAllValues(PREFIX_TAG));","lastModifiedDate":"2017-03-17"},{"lineNumber":63,"author":{"gitId":"rertyy"},"content":"        Set\u003cOrder\u003e orderList \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2024-03-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":65,"author":{"gitId":"Jaspertzx"},"content":"        Client client \u003d new Client(name, phone, email, address, tagList, orderList);","lastModifiedDate":"2024-04-14"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":67,"author":{"gitId":"Jaspertzx"},"content":"        return new AddCommand(client);","lastModifiedDate":"2024-04-14"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":70,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-05"}],"authorContributionMap":{"rertyy":11,"Jaspertzx":16,"-":43}},{"path":"src/main/java/seedu/address/logic/parser/client/DeleteCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Jaspertzx"},"content":"package seedu.address.logic.parser.client;","lastModifiedDate":"2024-04-14"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-07-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":6,"author":{"gitId":"Jaspertzx"},"content":"import seedu.address.logic.commands.client.DeleteCommand;","lastModifiedDate":"2024-04-14"},{"lineNumber":7,"author":{"gitId":"Jaspertzx"},"content":"import seedu.address.logic.parser.Parser;","lastModifiedDate":"2024-04-14"},{"lineNumber":8,"author":{"gitId":"Jaspertzx"},"content":"import seedu.address.logic.parser.ParserUtil;","lastModifiedDate":"2024-04-14"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26"},{"lineNumber":12,"author":{"gitId":"rertyy"},"content":" * Parses input arguments and creates a new DeleteCommand object.","lastModifiedDate":"2024-03-20"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class DeleteCommandParser implements Parser\u003cDeleteCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the DeleteCommand","lastModifiedDate":"2017-01-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * and returns a DeleteCommand object for execution.","lastModifiedDate":"2019-05-11"},{"lineNumber":19,"author":{"gitId":"rertyy"},"content":"     *","lastModifiedDate":"2024-03-20"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public DeleteCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-05-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"            Index index \u003d ParserUtil.parseIndex(args);","lastModifiedDate":"2017-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"            return new DeleteCommand(index);","lastModifiedDate":"2017-05-15"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2018-07-10"},{"lineNumber":27,"author":{"gitId":"-"},"content":"            throw new ParseException(","lastModifiedDate":"2017-03-11"},{"lineNumber":28,"author":{"gitId":"-"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2018-08-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":32,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26"}],"authorContributionMap":{"rertyy":2,"Jaspertzx":4,"-":26}},{"path":"src/main/java/seedu/address/logic/parser/client/EditCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Jaspertzx"},"content":"package seedu.address.logic.parser.client;","lastModifiedDate":"2024-04-14"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-07-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-01-26"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-01-26"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-01-26"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-01-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2017-01-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-01-26"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":17,"author":{"gitId":"Jaspertzx"},"content":"import seedu.address.logic.commands.client.EditCommand;","lastModifiedDate":"2024-04-14"},{"lineNumber":18,"author":{"gitId":"Jaspertzx"},"content":"import seedu.address.logic.parser.ArgumentMultimap;","lastModifiedDate":"2024-04-14"},{"lineNumber":19,"author":{"gitId":"Jaspertzx"},"content":"import seedu.address.logic.parser.ArgumentTokenizer;","lastModifiedDate":"2024-04-14"},{"lineNumber":20,"author":{"gitId":"Jaspertzx"},"content":"import seedu.address.logic.parser.Parser;","lastModifiedDate":"2024-04-14"},{"lineNumber":21,"author":{"gitId":"Jaspertzx"},"content":"import seedu.address.logic.parser.ParserUtil;","lastModifiedDate":"2024-04-14"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-07"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":25,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26"},{"lineNumber":26,"author":{"gitId":"rertyy"},"content":" * Parses input arguments and creates a new EditCommand object.","lastModifiedDate":"2024-03-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26"},{"lineNumber":28,"author":{"gitId":"-"},"content":"public class EditCommandParser implements Parser\u003cEditCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the EditCommand","lastModifiedDate":"2017-01-26"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * and returns an EditCommand object for execution.","lastModifiedDate":"2017-01-26"},{"lineNumber":33,"author":{"gitId":"rertyy"},"content":"     *","lastModifiedDate":"2024-03-20"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public EditCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        requireNonNull(args);","lastModifiedDate":"2017-05-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2017-03-20"},{"lineNumber":39,"author":{"gitId":"-"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL, PREFIX_ADDRESS, PREFIX_TAG);","lastModifiedDate":"2017-06-06"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        Index index;","lastModifiedDate":"2017-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-05-15"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2017-06-06"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2018-07-10"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2018-08-06"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        argMultimap.verifyNoDuplicatePrefixesFor(PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL, PREFIX_ADDRESS);","lastModifiedDate":"2023-07-14"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":51,"author":{"gitId":"Jaspertzx"},"content":"        EditCommand.EditClientDescriptor editClientDescriptor \u003d new EditCommand.EditClientDescriptor();","lastModifiedDate":"2024-04-14"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_NAME).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":54,"author":{"gitId":"Jaspertzx"},"content":"            editClientDescriptor.setName(ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get()));","lastModifiedDate":"2024-04-14"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_PHONE).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":57,"author":{"gitId":"Jaspertzx"},"content":"            editClientDescriptor.setPhone(ParserUtil.parsePhone(argMultimap.getValue(PREFIX_PHONE).get()));","lastModifiedDate":"2024-04-14"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_EMAIL).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":60,"author":{"gitId":"Jaspertzx"},"content":"            editClientDescriptor.setEmail(ParserUtil.parseEmail(argMultimap.getValue(PREFIX_EMAIL).get()));","lastModifiedDate":"2024-04-14"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_ADDRESS).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":63,"author":{"gitId":"Jaspertzx"},"content":"            editClientDescriptor.setAddress(ParserUtil.parseAddress(argMultimap.getValue(PREFIX_ADDRESS).get()));","lastModifiedDate":"2024-04-14"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":65,"author":{"gitId":"Jaspertzx"},"content":"        parseTagsForEdit(argMultimap.getAllValues(PREFIX_TAG)).ifPresent(editClientDescriptor::setTags);","lastModifiedDate":"2024-04-14"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":67,"author":{"gitId":"Jaspertzx"},"content":"        if (!editClientDescriptor.isAnyFieldEdited()) {","lastModifiedDate":"2024-04-14"},{"lineNumber":68,"author":{"gitId":"-"},"content":"            throw new ParseException(EditCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2017-03-11"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":71,"author":{"gitId":"Jaspertzx"},"content":"        return new EditCommand(index, editClientDescriptor);","lastModifiedDate":"2024-04-14"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     * Parses {@code Collection\u003cString\u003e tags} into a {@code Set\u003cTag\u003e} if {@code tags} is non-empty.","lastModifiedDate":"2017-03-07"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     * If {@code tags} contain only one element which is an empty string, it will be parsed into a","lastModifiedDate":"2017-01-26"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     * {@code Set\u003cTag\u003e} containing zero tags.","lastModifiedDate":"2017-03-07"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    private Optional\u003cSet\u003cTag\u003e\u003e parseTagsForEdit(Collection\u003cString\u003e tags) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        assert tags !\u003d null;","lastModifiedDate":"2017-01-26"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        if (tags.isEmpty()) {","lastModifiedDate":"2017-01-26"},{"lineNumber":83,"author":{"gitId":"-"},"content":"            return Optional.empty();","lastModifiedDate":"2017-01-26"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        Collection\u003cString\u003e tagSet \u003d tags.size() \u003d\u003d 1 \u0026\u0026 tags.contains(\"\") ? Collections.emptySet() : tags;","lastModifiedDate":"2017-01-26"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        return Optional.of(ParserUtil.parseTags(tagSet));","lastModifiedDate":"2017-01-26"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":89,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26"}],"authorContributionMap":{"rertyy":2,"Jaspertzx":14,"-":73}},{"path":"src/main/java/seedu/address/logic/parser/client/FindCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Jaspertzx"},"content":"package seedu.address.logic.parser.client;","lastModifiedDate":"2024-04-14"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-07-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-01-26"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":7,"author":{"gitId":"Jaspertzx"},"content":"import seedu.address.logic.commands.client.FindCommand;","lastModifiedDate":"2024-04-14"},{"lineNumber":8,"author":{"gitId":"Jaspertzx"},"content":"import seedu.address.logic.parser.Parser;","lastModifiedDate":"2024-04-14"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":10,"author":{"gitId":"Jaspertzx"},"content":"import seedu.address.model.client.NameContainsKeywordsPredicate;","lastModifiedDate":"2024-04-14"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26"},{"lineNumber":13,"author":{"gitId":"rertyy"},"content":" * Parses input arguments and creates a new FindCommand object.","lastModifiedDate":"2024-03-20"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class FindCommandParser implements Parser\u003cFindCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the FindCommand","lastModifiedDate":"2017-01-26"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * and returns a FindCommand object for execution.","lastModifiedDate":"2019-05-11"},{"lineNumber":20,"author":{"gitId":"rertyy"},"content":"     *","lastModifiedDate":"2024-03-20"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public FindCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        String trimmedArgs \u003d args.trim();","lastModifiedDate":"2017-02-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        if (trimmedArgs.isEmpty()) {","lastModifiedDate":"2017-02-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"            throw new ParseException(","lastModifiedDate":"2017-03-11"},{"lineNumber":27,"author":{"gitId":"-"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-01-26"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        String[] nameKeywords \u003d trimmedArgs.split(\"\\\\s+\");","lastModifiedDate":"2017-06-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        return new FindCommand(new NameContainsKeywordsPredicate(Arrays.asList(nameKeywords)));","lastModifiedDate":"2017-06-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":35,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26"}],"authorContributionMap":{"rertyy":2,"Jaspertzx":4,"-":29}},{"path":"src/main/java/seedu/address/logic/parser/order/AddOrderCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Jaspertzx"},"content":"package seedu.address.logic.parser.order;","lastModifiedDate":"2024-04-14"},{"lineNumber":2,"author":{"gitId":"Jaspertzx"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":3,"author":{"gitId":"Jaspertzx"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2024-03-17"},{"lineNumber":4,"author":{"gitId":"Jaspertzx"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2024-03-20"},{"lineNumber":5,"author":{"gitId":"Jaspertzx"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_BY;","lastModifiedDate":"2024-03-17"},{"lineNumber":6,"author":{"gitId":"Jaspertzx"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DETAILS;","lastModifiedDate":"2024-03-17"},{"lineNumber":7,"author":{"gitId":"Jaspertzx"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PRICE;","lastModifiedDate":"2024-03-18"},{"lineNumber":8,"author":{"gitId":"Jaspertzx"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":9,"author":{"gitId":"rertyy"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2024-04-08"},{"lineNumber":10,"author":{"gitId":"Jaspertzx"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":11,"author":{"gitId":"Jaspertzx"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2024-03-20"},{"lineNumber":12,"author":{"gitId":"Jaspertzx"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2024-03-20"},{"lineNumber":13,"author":{"gitId":"rertyy"},"content":"import seedu.address.commons.util.DateTimeUtil;","lastModifiedDate":"2024-03-23"},{"lineNumber":14,"author":{"gitId":"Jaspertzx"},"content":"import seedu.address.logic.commands.order.AddOrderCommand;","lastModifiedDate":"2024-04-14"},{"lineNumber":15,"author":{"gitId":"Jaspertzx"},"content":"import seedu.address.logic.parser.ArgumentMultimap;","lastModifiedDate":"2024-04-14"},{"lineNumber":16,"author":{"gitId":"Jaspertzx"},"content":"import seedu.address.logic.parser.ArgumentTokenizer;","lastModifiedDate":"2024-04-14"},{"lineNumber":17,"author":{"gitId":"Jaspertzx"},"content":"import seedu.address.logic.parser.Parser;","lastModifiedDate":"2024-04-14"},{"lineNumber":18,"author":{"gitId":"Jaspertzx"},"content":"import seedu.address.logic.parser.ParserUtil;","lastModifiedDate":"2024-04-14"},{"lineNumber":19,"author":{"gitId":"Jaspertzx"},"content":"import seedu.address.logic.parser.Prefix;","lastModifiedDate":"2024-04-14"},{"lineNumber":20,"author":{"gitId":"Jaspertzx"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2024-03-17"},{"lineNumber":21,"author":{"gitId":"Jaspertzx"},"content":"import seedu.address.model.order.Deadline;","lastModifiedDate":"2024-03-18"},{"lineNumber":22,"author":{"gitId":"Jaspertzx"},"content":"import seedu.address.model.order.Order;","lastModifiedDate":"2024-03-18"},{"lineNumber":23,"author":{"gitId":"Jaspertzx"},"content":"import seedu.address.model.order.OrderDate;","lastModifiedDate":"2024-03-18"},{"lineNumber":24,"author":{"gitId":"Jaspertzx"},"content":"import seedu.address.model.order.OrderId;","lastModifiedDate":"2024-03-18"},{"lineNumber":25,"author":{"gitId":"kailinteoo"},"content":"import seedu.address.model.order.Price;","lastModifiedDate":"2024-03-28"},{"lineNumber":26,"author":{"gitId":"Jaspertzx"},"content":"import seedu.address.model.order.Remark;","lastModifiedDate":"2024-03-18"},{"lineNumber":27,"author":{"gitId":"Jaspertzx"},"content":"import seedu.address.model.order.Status;","lastModifiedDate":"2024-03-18"},{"lineNumber":28,"author":{"gitId":"Jaspertzx"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":29,"author":{"gitId":"Jaspertzx"},"content":"/**","lastModifiedDate":"2024-03-17"},{"lineNumber":30,"author":{"gitId":"Jaspertzx"},"content":" * Parses input arguments and creates a new AddOrderCommand object.","lastModifiedDate":"2024-03-17"},{"lineNumber":31,"author":{"gitId":"Jaspertzx"},"content":" */","lastModifiedDate":"2024-03-17"},{"lineNumber":32,"author":{"gitId":"Jaspertzx"},"content":"public class AddOrderCommandParser implements Parser\u003cAddOrderCommand\u003e {","lastModifiedDate":"2024-03-17"},{"lineNumber":33,"author":{"gitId":"Jaspertzx"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":34,"author":{"gitId":"rertyy"},"content":"    /**","lastModifiedDate":"2024-04-08"},{"lineNumber":35,"author":{"gitId":"rertyy"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2024-04-08"},{"lineNumber":36,"author":{"gitId":"rertyy"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2024-04-08"},{"lineNumber":37,"author":{"gitId":"rertyy"},"content":"     */","lastModifiedDate":"2024-04-08"},{"lineNumber":38,"author":{"gitId":"rertyy"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2024-04-08"},{"lineNumber":39,"author":{"gitId":"rertyy"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2024-04-08"},{"lineNumber":40,"author":{"gitId":"rertyy"},"content":"    }","lastModifiedDate":"2024-04-08"},{"lineNumber":41,"author":{"gitId":"rertyy"},"content":"","lastModifiedDate":"2024-04-08"},{"lineNumber":42,"author":{"gitId":"Jaspertzx"},"content":"    /**","lastModifiedDate":"2024-03-17"},{"lineNumber":43,"author":{"gitId":"Jaspertzx"},"content":"     * Parses the given {@code String} of arguments in the context of the AddOrderCommand","lastModifiedDate":"2024-03-17"},{"lineNumber":44,"author":{"gitId":"Jaspertzx"},"content":"     * and returns an AddOrderCommand object for execution.","lastModifiedDate":"2024-03-17"},{"lineNumber":45,"author":{"gitId":"Jaspertzx"},"content":"     *","lastModifiedDate":"2024-03-20"},{"lineNumber":46,"author":{"gitId":"Jaspertzx"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2024-03-17"},{"lineNumber":47,"author":{"gitId":"Jaspertzx"},"content":"     */","lastModifiedDate":"2024-03-17"},{"lineNumber":48,"author":{"gitId":"Jaspertzx"},"content":"    public AddOrderCommand parse(String args) throws ParseException {","lastModifiedDate":"2024-03-17"},{"lineNumber":49,"author":{"gitId":"Jaspertzx"},"content":"        requireNonNull(args);","lastModifiedDate":"2024-03-17"},{"lineNumber":50,"author":{"gitId":"Jaspertzx"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args,","lastModifiedDate":"2024-03-17"},{"lineNumber":51,"author":{"gitId":"Jaspertzx"},"content":"                PREFIX_DETAILS, PREFIX_BY, PREFIX_PRICE);","lastModifiedDate":"2024-03-18"},{"lineNumber":52,"author":{"gitId":"Jaspertzx"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":53,"author":{"gitId":"rertyy"},"content":"        String preamble \u003d argMultimap.getPreamble();","lastModifiedDate":"2024-04-08"},{"lineNumber":54,"author":{"gitId":"rertyy"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_DETAILS, PREFIX_BY, PREFIX_PRICE)","lastModifiedDate":"2024-04-08"},{"lineNumber":55,"author":{"gitId":"rertyy"},"content":"                || preamble.isBlank()) {","lastModifiedDate":"2024-04-08"},{"lineNumber":56,"author":{"gitId":"rertyy"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2024-04-08"},{"lineNumber":57,"author":{"gitId":"rertyy"},"content":"                    AddOrderCommand.MESSAGE_USAGE));","lastModifiedDate":"2024-04-08"},{"lineNumber":58,"author":{"gitId":"rertyy"},"content":"        }","lastModifiedDate":"2024-04-08"},{"lineNumber":59,"author":{"gitId":"rertyy"},"content":"","lastModifiedDate":"2024-04-08"},{"lineNumber":60,"author":{"gitId":"Jaspertzx"},"content":"        Index index;","lastModifiedDate":"2024-03-20"},{"lineNumber":61,"author":{"gitId":"Jaspertzx"},"content":"        try {","lastModifiedDate":"2024-03-20"},{"lineNumber":62,"author":{"gitId":"rertyy"},"content":"            index \u003d ParserUtil.parseIndex(preamble);","lastModifiedDate":"2024-04-08"},{"lineNumber":63,"author":{"gitId":"Jaspertzx"},"content":"        } catch (IllegalValueException ive) {","lastModifiedDate":"2024-03-20"},{"lineNumber":64,"author":{"gitId":"Jaspertzx"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2024-03-20"},{"lineNumber":65,"author":{"gitId":"Jaspertzx"},"content":"                    AddOrderCommand.MESSAGE_USAGE), ive);","lastModifiedDate":"2024-03-20"},{"lineNumber":66,"author":{"gitId":"Jaspertzx"},"content":"        }","lastModifiedDate":"2024-03-20"},{"lineNumber":67,"author":{"gitId":"rertyy"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":68,"author":{"gitId":"rertyy"},"content":"        argMultimap.verifyNoDuplicatePrefixesFor(PREFIX_DETAILS, PREFIX_BY, PREFIX_PRICE);","lastModifiedDate":"2024-04-08"},{"lineNumber":69,"author":{"gitId":"Jaspertzx"},"content":"        OrderId orderId \u003d new OrderId();","lastModifiedDate":"2024-03-18"},{"lineNumber":70,"author":{"gitId":"rertyy"},"content":"        OrderDate orderDate \u003d new OrderDate(DateTimeUtil.getCurrentTime());","lastModifiedDate":"2024-03-23"},{"lineNumber":71,"author":{"gitId":"Jaspertzx"},"content":"        Deadline deadline \u003d ParserUtil.parseDeadline(argMultimap.getValue(PREFIX_BY).get());","lastModifiedDate":"2024-04-10"},{"lineNumber":72,"author":{"gitId":"Jaspertzx"},"content":"        Remark remark \u003d ParserUtil.parseRemark(argMultimap.getValue(PREFIX_DETAILS).get());","lastModifiedDate":"2024-04-14"},{"lineNumber":73,"author":{"gitId":"Jaspertzx"},"content":"        Price price \u003d ParserUtil.parsePrice(argMultimap.getValue(PREFIX_PRICE).get());","lastModifiedDate":"2024-04-10"},{"lineNumber":74,"author":{"gitId":"rertyy"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":75,"author":{"gitId":"Jaspertzx"},"content":"        Status status \u003d new Status(\"pending\");","lastModifiedDate":"2024-03-19"},{"lineNumber":76,"author":{"gitId":"kailinteoo"},"content":"        Order order \u003d new Order(orderId, orderDate, deadline, price, remark, status);","lastModifiedDate":"2024-03-28"},{"lineNumber":77,"author":{"gitId":"Jaspertzx"},"content":"        return new AddOrderCommand(index, order);","lastModifiedDate":"2024-03-20"},{"lineNumber":78,"author":{"gitId":"Jaspertzx"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":79,"author":{"gitId":"Jaspertzx"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":80,"author":{"gitId":"Jaspertzx"},"content":"}","lastModifiedDate":"2024-03-17"}],"authorContributionMap":{"kailinteoo":2,"rertyy":22,"Jaspertzx":56}},{"path":"src/main/java/seedu/address/logic/parser/order/DeleteOrderCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Jaspertzx"},"content":"package seedu.address.logic.parser.order;","lastModifiedDate":"2024-04-14"},{"lineNumber":2,"author":{"gitId":"Jaspertzx"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":3,"author":{"gitId":"Jaspertzx"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2024-03-17"},{"lineNumber":4,"author":{"gitId":"Jaspertzx"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":5,"author":{"gitId":"rertyy"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2024-03-23"},{"lineNumber":6,"author":{"gitId":"Jaspertzx"},"content":"import seedu.address.logic.commands.order.DeleteOrderCommand;","lastModifiedDate":"2024-04-14"},{"lineNumber":7,"author":{"gitId":"Jaspertzx"},"content":"import seedu.address.logic.parser.Parser;","lastModifiedDate":"2024-04-14"},{"lineNumber":8,"author":{"gitId":"Jaspertzx"},"content":"import seedu.address.logic.parser.ParserUtil;","lastModifiedDate":"2024-04-14"},{"lineNumber":9,"author":{"gitId":"Jaspertzx"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2024-03-17"},{"lineNumber":10,"author":{"gitId":"Jaspertzx"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":11,"author":{"gitId":"Jaspertzx"},"content":"/**","lastModifiedDate":"2024-03-17"},{"lineNumber":12,"author":{"gitId":"rertyy"},"content":" * Parses input arguments and creates a new DeleteOrderCommand object.","lastModifiedDate":"2024-03-20"},{"lineNumber":13,"author":{"gitId":"Jaspertzx"},"content":" */","lastModifiedDate":"2024-03-17"},{"lineNumber":14,"author":{"gitId":"Jaspertzx"},"content":"public class DeleteOrderCommandParser implements Parser\u003cDeleteOrderCommand\u003e {","lastModifiedDate":"2024-03-17"},{"lineNumber":15,"author":{"gitId":"Jaspertzx"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":16,"author":{"gitId":"Jaspertzx"},"content":"    /**","lastModifiedDate":"2024-03-17"},{"lineNumber":17,"author":{"gitId":"Jaspertzx"},"content":"     * Parses the given {@code String} of arguments in the context of the","lastModifiedDate":"2024-03-17"},{"lineNumber":18,"author":{"gitId":"Jaspertzx"},"content":"     * DeleteOrderCommand and returns a DeleteOrderCommand object for execution.","lastModifiedDate":"2024-03-17"},{"lineNumber":19,"author":{"gitId":"rertyy"},"content":"     *","lastModifiedDate":"2024-03-20"},{"lineNumber":20,"author":{"gitId":"Jaspertzx"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2024-03-17"},{"lineNumber":21,"author":{"gitId":"Jaspertzx"},"content":"     */","lastModifiedDate":"2024-03-17"},{"lineNumber":22,"author":{"gitId":"Jaspertzx"},"content":"    public DeleteOrderCommand parse(String args) throws ParseException {","lastModifiedDate":"2024-03-17"},{"lineNumber":23,"author":{"gitId":"Jaspertzx"},"content":"        try {","lastModifiedDate":"2024-03-17"},{"lineNumber":24,"author":{"gitId":"rertyy"},"content":"            Index index \u003d ParserUtil.parseIndex(args);","lastModifiedDate":"2024-03-23"},{"lineNumber":25,"author":{"gitId":"rertyy"},"content":"            return new DeleteOrderCommand(index);","lastModifiedDate":"2024-03-23"},{"lineNumber":26,"author":{"gitId":"Jaspertzx"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2024-03-17"},{"lineNumber":27,"author":{"gitId":"Jaspertzx"},"content":"            throw new ParseException(","lastModifiedDate":"2024-03-17"},{"lineNumber":28,"author":{"gitId":"rertyy"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteOrderCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2024-03-26"},{"lineNumber":29,"author":{"gitId":"Jaspertzx"},"content":"        }","lastModifiedDate":"2024-03-19"},{"lineNumber":30,"author":{"gitId":"Jaspertzx"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":31,"author":{"gitId":"Jaspertzx"},"content":"}","lastModifiedDate":"2024-03-17"}],"authorContributionMap":{"rertyy":6,"Jaspertzx":25}},{"path":"src/main/java/seedu/address/logic/parser/order/EditOrderCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Jaspertzx"},"content":"package seedu.address.logic.parser.order;","lastModifiedDate":"2024-04-14"},{"lineNumber":2,"author":{"gitId":"shavonneg"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":3,"author":{"gitId":"shavonneg"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2024-03-28"},{"lineNumber":4,"author":{"gitId":"shavonneg"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2024-03-28"},{"lineNumber":5,"author":{"gitId":"shavonneg"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_BY;","lastModifiedDate":"2024-03-28"},{"lineNumber":6,"author":{"gitId":"shavonneg"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DETAILS;","lastModifiedDate":"2024-03-28"},{"lineNumber":7,"author":{"gitId":"shavonneg"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PRICE;","lastModifiedDate":"2024-03-28"},{"lineNumber":8,"author":{"gitId":"shavonneg"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_STATUS;","lastModifiedDate":"2024-03-28"},{"lineNumber":9,"author":{"gitId":"shavonneg"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":10,"author":{"gitId":"shavonneg"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2024-03-28"},{"lineNumber":11,"author":{"gitId":"Jaspertzx"},"content":"import seedu.address.logic.commands.order.EditOrderCommand;","lastModifiedDate":"2024-04-14"},{"lineNumber":12,"author":{"gitId":"Jaspertzx"},"content":"import seedu.address.logic.parser.ArgumentMultimap;","lastModifiedDate":"2024-04-14"},{"lineNumber":13,"author":{"gitId":"Jaspertzx"},"content":"import seedu.address.logic.parser.ArgumentTokenizer;","lastModifiedDate":"2024-04-14"},{"lineNumber":14,"author":{"gitId":"Jaspertzx"},"content":"import seedu.address.logic.parser.Parser;","lastModifiedDate":"2024-04-14"},{"lineNumber":15,"author":{"gitId":"Jaspertzx"},"content":"import seedu.address.logic.parser.ParserUtil;","lastModifiedDate":"2024-04-14"},{"lineNumber":16,"author":{"gitId":"shavonneg"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2024-03-28"},{"lineNumber":17,"author":{"gitId":"shavonneg"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":18,"author":{"gitId":"shavonneg"},"content":"/**","lastModifiedDate":"2024-03-28"},{"lineNumber":19,"author":{"gitId":"shavonneg"},"content":" * Parses input arguments and creates a new EditOrderCommand object.","lastModifiedDate":"2024-03-28"},{"lineNumber":20,"author":{"gitId":"shavonneg"},"content":" */","lastModifiedDate":"2024-03-28"},{"lineNumber":21,"author":{"gitId":"shavonneg"},"content":"public class EditOrderCommandParser implements Parser\u003cEditOrderCommand\u003e {","lastModifiedDate":"2024-03-28"},{"lineNumber":22,"author":{"gitId":"shavonneg"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":23,"author":{"gitId":"shavonneg"},"content":"    /**","lastModifiedDate":"2024-03-28"},{"lineNumber":24,"author":{"gitId":"shavonneg"},"content":"     * Parses the given {@code String} of arguments in the context of the EditOrderCommand","lastModifiedDate":"2024-03-28"},{"lineNumber":25,"author":{"gitId":"shavonneg"},"content":"     * and returns an EditOrderCommand object for execution.","lastModifiedDate":"2024-03-28"},{"lineNumber":26,"author":{"gitId":"shavonneg"},"content":"     *","lastModifiedDate":"2024-03-28"},{"lineNumber":27,"author":{"gitId":"shavonneg"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2024-03-28"},{"lineNumber":28,"author":{"gitId":"shavonneg"},"content":"     */","lastModifiedDate":"2024-03-28"},{"lineNumber":29,"author":{"gitId":"shavonneg"},"content":"    public EditOrderCommand parse(String args) throws ParseException {","lastModifiedDate":"2024-03-28"},{"lineNumber":30,"author":{"gitId":"shavonneg"},"content":"        requireNonNull(args);","lastModifiedDate":"2024-03-28"},{"lineNumber":31,"author":{"gitId":"shavonneg"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2024-03-28"},{"lineNumber":32,"author":{"gitId":"shavonneg"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_BY, PREFIX_PRICE, PREFIX_DETAILS, PREFIX_STATUS);","lastModifiedDate":"2024-03-28"},{"lineNumber":33,"author":{"gitId":"shavonneg"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":34,"author":{"gitId":"shavonneg"},"content":"        Index targetIndex;","lastModifiedDate":"2024-03-28"},{"lineNumber":35,"author":{"gitId":"shavonneg"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":36,"author":{"gitId":"shavonneg"},"content":"        try {","lastModifiedDate":"2024-03-28"},{"lineNumber":37,"author":{"gitId":"shavonneg"},"content":"            targetIndex \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2024-03-28"},{"lineNumber":38,"author":{"gitId":"shavonneg"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2024-03-28"},{"lineNumber":39,"author":{"gitId":"shavonneg"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditOrderCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2024-03-28"},{"lineNumber":40,"author":{"gitId":"shavonneg"},"content":"        }","lastModifiedDate":"2024-03-28"},{"lineNumber":41,"author":{"gitId":"shavonneg"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":42,"author":{"gitId":"shavonneg"},"content":"        argMultimap.verifyNoDuplicatePrefixesFor(PREFIX_BY, PREFIX_PRICE, PREFIX_DETAILS, PREFIX_STATUS);","lastModifiedDate":"2024-03-28"},{"lineNumber":43,"author":{"gitId":"shavonneg"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":44,"author":{"gitId":"shavonneg"},"content":"        EditOrderCommand.EditOrderDescriptor editOrderDescriptor \u003d new EditOrderCommand.EditOrderDescriptor();","lastModifiedDate":"2024-03-28"},{"lineNumber":45,"author":{"gitId":"shavonneg"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":46,"author":{"gitId":"shavonneg"},"content":"        if (argMultimap.getValue(PREFIX_BY).isPresent()) {","lastModifiedDate":"2024-03-28"},{"lineNumber":47,"author":{"gitId":"shavonneg"},"content":"            editOrderDescriptor.setDeadline(ParserUtil.parseDeadline(argMultimap.getValue(PREFIX_BY).get()));","lastModifiedDate":"2024-03-28"},{"lineNumber":48,"author":{"gitId":"shavonneg"},"content":"        }","lastModifiedDate":"2024-03-28"},{"lineNumber":49,"author":{"gitId":"shavonneg"},"content":"        if (argMultimap.getValue(PREFIX_PRICE).isPresent()) {","lastModifiedDate":"2024-03-28"},{"lineNumber":50,"author":{"gitId":"shavonneg"},"content":"            editOrderDescriptor.setPrice(ParserUtil.parsePrice(argMultimap.getValue(PREFIX_PRICE).get()));","lastModifiedDate":"2024-03-29"},{"lineNumber":51,"author":{"gitId":"shavonneg"},"content":"        }","lastModifiedDate":"2024-03-28"},{"lineNumber":52,"author":{"gitId":"shavonneg"},"content":"        if (argMultimap.getValue(PREFIX_DETAILS).isPresent()) {","lastModifiedDate":"2024-03-28"},{"lineNumber":53,"author":{"gitId":"shavonneg"},"content":"            editOrderDescriptor.setRemark(ParserUtil.parseRemark(argMultimap.getValue(PREFIX_DETAILS).get()));","lastModifiedDate":"2024-03-28"},{"lineNumber":54,"author":{"gitId":"shavonneg"},"content":"        }","lastModifiedDate":"2024-03-28"},{"lineNumber":55,"author":{"gitId":"shavonneg"},"content":"        if (argMultimap.getValue(PREFIX_STATUS).isPresent()) {","lastModifiedDate":"2024-03-28"},{"lineNumber":56,"author":{"gitId":"shavonneg"},"content":"            editOrderDescriptor.setStatus(ParserUtil.parseStatus(argMultimap.getValue(PREFIX_STATUS).get()));","lastModifiedDate":"2024-03-28"},{"lineNumber":57,"author":{"gitId":"shavonneg"},"content":"        }","lastModifiedDate":"2024-03-28"},{"lineNumber":58,"author":{"gitId":"shavonneg"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":59,"author":{"gitId":"shavonneg"},"content":"        return new EditOrderCommand(targetIndex, editOrderDescriptor);","lastModifiedDate":"2024-03-28"},{"lineNumber":60,"author":{"gitId":"shavonneg"},"content":"    }","lastModifiedDate":"2024-03-28"},{"lineNumber":61,"author":{"gitId":"shavonneg"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":62,"author":{"gitId":"shavonneg"},"content":"}","lastModifiedDate":"2024-03-28"}],"authorContributionMap":{"shavonneg":56,"Jaspertzx":6}},{"path":"src/main/java/seedu/address/model/BookKeeper.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Jaspertzx"},"content":"package seedu.address.model;","lastModifiedDate":"2024-04-14"},{"lineNumber":2,"author":{"gitId":"Jaspertzx"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":3,"author":{"gitId":"Jaspertzx"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2024-04-14"},{"lineNumber":4,"author":{"gitId":"Jaspertzx"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":5,"author":{"gitId":"Jaspertzx"},"content":"import java.util.List;","lastModifiedDate":"2024-04-14"},{"lineNumber":6,"author":{"gitId":"Jaspertzx"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":7,"author":{"gitId":"Jaspertzx"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2024-04-14"},{"lineNumber":8,"author":{"gitId":"Jaspertzx"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2024-04-14"},{"lineNumber":9,"author":{"gitId":"Jaspertzx"},"content":"import seedu.address.model.client.Client;","lastModifiedDate":"2024-04-14"},{"lineNumber":10,"author":{"gitId":"Jaspertzx"},"content":"import seedu.address.model.client.UniqueClientList;","lastModifiedDate":"2024-04-14"},{"lineNumber":11,"author":{"gitId":"Jaspertzx"},"content":"import seedu.address.model.order.Order;","lastModifiedDate":"2024-04-14"},{"lineNumber":12,"author":{"gitId":"Jaspertzx"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":13,"author":{"gitId":"Jaspertzx"},"content":"/**","lastModifiedDate":"2024-04-14"},{"lineNumber":14,"author":{"gitId":"Jaspertzx"},"content":" * Wraps all data at the application level.","lastModifiedDate":"2024-04-14"},{"lineNumber":15,"author":{"gitId":"Jaspertzx"},"content":" * Duplicates are not allowed (by .isSameClient comparison)","lastModifiedDate":"2024-04-14"},{"lineNumber":16,"author":{"gitId":"Jaspertzx"},"content":" */","lastModifiedDate":"2024-04-14"},{"lineNumber":17,"author":{"gitId":"Jaspertzx"},"content":"public class BookKeeper implements ReadOnlyBookKeeper {","lastModifiedDate":"2024-04-14"},{"lineNumber":18,"author":{"gitId":"Jaspertzx"},"content":"    /*","lastModifiedDate":"2024-04-14"},{"lineNumber":19,"author":{"gitId":"Jaspertzx"},"content":"     * The \u0027unusual\u0027 code block below is a non-static initialization block, sometimes used to avoid duplication","lastModifiedDate":"2024-04-14"},{"lineNumber":20,"author":{"gitId":"Jaspertzx"},"content":"     * between constructors. See https://docs.oracle.com/javase/tutorial/java/javaOO/initial.html","lastModifiedDate":"2024-04-14"},{"lineNumber":21,"author":{"gitId":"Jaspertzx"},"content":"     *","lastModifiedDate":"2024-04-14"},{"lineNumber":22,"author":{"gitId":"Jaspertzx"},"content":"     * Note that non-static init blocks are not recommended to use. There are other ways to avoid duplication","lastModifiedDate":"2024-04-14"},{"lineNumber":23,"author":{"gitId":"Jaspertzx"},"content":"     *   among constructors.","lastModifiedDate":"2024-04-14"},{"lineNumber":24,"author":{"gitId":"Jaspertzx"},"content":"     */","lastModifiedDate":"2024-04-14"},{"lineNumber":25,"author":{"gitId":"Jaspertzx"},"content":"    private final UniqueClientList clients;","lastModifiedDate":"2024-04-14"},{"lineNumber":26,"author":{"gitId":"Jaspertzx"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":27,"author":{"gitId":"Jaspertzx"},"content":"    {","lastModifiedDate":"2024-04-14"},{"lineNumber":28,"author":{"gitId":"Jaspertzx"},"content":"        clients \u003d new UniqueClientList();","lastModifiedDate":"2024-04-14"},{"lineNumber":29,"author":{"gitId":"Jaspertzx"},"content":"    }","lastModifiedDate":"2024-04-14"},{"lineNumber":30,"author":{"gitId":"Jaspertzx"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":31,"author":{"gitId":"Jaspertzx"},"content":"    public BookKeeper() {","lastModifiedDate":"2024-04-14"},{"lineNumber":32,"author":{"gitId":"Jaspertzx"},"content":"    }","lastModifiedDate":"2024-04-14"},{"lineNumber":33,"author":{"gitId":"Jaspertzx"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":34,"author":{"gitId":"Jaspertzx"},"content":"    /**","lastModifiedDate":"2024-04-14"},{"lineNumber":35,"author":{"gitId":"Jaspertzx"},"content":"     * Creates BookKeeper using the Client in the {@code toBeCopied}.","lastModifiedDate":"2024-04-14"},{"lineNumber":36,"author":{"gitId":"Jaspertzx"},"content":"     */","lastModifiedDate":"2024-04-14"},{"lineNumber":37,"author":{"gitId":"Jaspertzx"},"content":"    public BookKeeper(ReadOnlyBookKeeper toBeCopied) {","lastModifiedDate":"2024-04-14"},{"lineNumber":38,"author":{"gitId":"Jaspertzx"},"content":"        this();","lastModifiedDate":"2024-04-14"},{"lineNumber":39,"author":{"gitId":"Jaspertzx"},"content":"        resetData(toBeCopied);","lastModifiedDate":"2024-04-14"},{"lineNumber":40,"author":{"gitId":"Jaspertzx"},"content":"    }","lastModifiedDate":"2024-04-14"},{"lineNumber":41,"author":{"gitId":"Jaspertzx"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":42,"author":{"gitId":"Jaspertzx"},"content":"    //// list overwrite operations","lastModifiedDate":"2024-04-14"},{"lineNumber":43,"author":{"gitId":"Jaspertzx"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":44,"author":{"gitId":"Jaspertzx"},"content":"    /**","lastModifiedDate":"2024-04-14"},{"lineNumber":45,"author":{"gitId":"Jaspertzx"},"content":"     * Replaces the contents of the client list with {@code clients}.","lastModifiedDate":"2024-04-14"},{"lineNumber":46,"author":{"gitId":"Jaspertzx"},"content":"     * {@code clients} must not contain duplicate clients.","lastModifiedDate":"2024-04-14"},{"lineNumber":47,"author":{"gitId":"Jaspertzx"},"content":"     */","lastModifiedDate":"2024-04-14"},{"lineNumber":48,"author":{"gitId":"Jaspertzx"},"content":"    public void setClients(List\u003cClient\u003e clients) {","lastModifiedDate":"2024-04-14"},{"lineNumber":49,"author":{"gitId":"Jaspertzx"},"content":"        this.clients.setClients(clients);","lastModifiedDate":"2024-04-14"},{"lineNumber":50,"author":{"gitId":"Jaspertzx"},"content":"    }","lastModifiedDate":"2024-04-14"},{"lineNumber":51,"author":{"gitId":"Jaspertzx"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":52,"author":{"gitId":"Jaspertzx"},"content":"    /**","lastModifiedDate":"2024-04-14"},{"lineNumber":53,"author":{"gitId":"Jaspertzx"},"content":"     * Resets the existing data of this {@code BookKeeper} with {@code newData}.","lastModifiedDate":"2024-04-14"},{"lineNumber":54,"author":{"gitId":"Jaspertzx"},"content":"     */","lastModifiedDate":"2024-04-14"},{"lineNumber":55,"author":{"gitId":"Jaspertzx"},"content":"    public void resetData(ReadOnlyBookKeeper newData) {","lastModifiedDate":"2024-04-14"},{"lineNumber":56,"author":{"gitId":"Jaspertzx"},"content":"        requireNonNull(newData);","lastModifiedDate":"2024-04-14"},{"lineNumber":57,"author":{"gitId":"Jaspertzx"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":58,"author":{"gitId":"Jaspertzx"},"content":"        setClients(newData.getClientList());","lastModifiedDate":"2024-04-14"},{"lineNumber":59,"author":{"gitId":"Jaspertzx"},"content":"    }","lastModifiedDate":"2024-04-14"},{"lineNumber":60,"author":{"gitId":"Jaspertzx"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":61,"author":{"gitId":"Jaspertzx"},"content":"    //// client-level operations","lastModifiedDate":"2024-04-14"},{"lineNumber":62,"author":{"gitId":"Jaspertzx"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":63,"author":{"gitId":"Jaspertzx"},"content":"    /**","lastModifiedDate":"2024-04-14"},{"lineNumber":64,"author":{"gitId":"Jaspertzx"},"content":"     * Returns true if a client with the same identity as {@code client} exists in Bookkeeper\u0027s client list.","lastModifiedDate":"2024-04-14"},{"lineNumber":65,"author":{"gitId":"Jaspertzx"},"content":"     */","lastModifiedDate":"2024-04-14"},{"lineNumber":66,"author":{"gitId":"Jaspertzx"},"content":"    public boolean hasClient(Client client) {","lastModifiedDate":"2024-04-14"},{"lineNumber":67,"author":{"gitId":"Jaspertzx"},"content":"        requireNonNull(client);","lastModifiedDate":"2024-04-14"},{"lineNumber":68,"author":{"gitId":"Jaspertzx"},"content":"        return clients.contains(client);","lastModifiedDate":"2024-04-14"},{"lineNumber":69,"author":{"gitId":"Jaspertzx"},"content":"    }","lastModifiedDate":"2024-04-14"},{"lineNumber":70,"author":{"gitId":"Jaspertzx"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":71,"author":{"gitId":"Jaspertzx"},"content":"    /**","lastModifiedDate":"2024-04-14"},{"lineNumber":72,"author":{"gitId":"Jaspertzx"},"content":"     * Adds a client to bookkeeper.","lastModifiedDate":"2024-04-14"},{"lineNumber":73,"author":{"gitId":"Jaspertzx"},"content":"     * The client must not already exist in Bookkeeper\u0027s client list.","lastModifiedDate":"2024-04-14"},{"lineNumber":74,"author":{"gitId":"Jaspertzx"},"content":"     */","lastModifiedDate":"2024-04-14"},{"lineNumber":75,"author":{"gitId":"Jaspertzx"},"content":"    public void addClient(Client p) {","lastModifiedDate":"2024-04-14"},{"lineNumber":76,"author":{"gitId":"Jaspertzx"},"content":"        clients.add(p);","lastModifiedDate":"2024-04-14"},{"lineNumber":77,"author":{"gitId":"Jaspertzx"},"content":"    }","lastModifiedDate":"2024-04-14"},{"lineNumber":78,"author":{"gitId":"Jaspertzx"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":79,"author":{"gitId":"Jaspertzx"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":80,"author":{"gitId":"Jaspertzx"},"content":"    /**","lastModifiedDate":"2024-04-14"},{"lineNumber":81,"author":{"gitId":"Jaspertzx"},"content":"     * Replaces the given client {@code target} in the list with {@code editedClient}.","lastModifiedDate":"2024-04-14"},{"lineNumber":82,"author":{"gitId":"Jaspertzx"},"content":"     * {@code target} must exist in Bookkeeper\u0027s client list.","lastModifiedDate":"2024-04-14"},{"lineNumber":83,"author":{"gitId":"Jaspertzx"},"content":"     * The client identity of {@code editedClient} must not be the same as another existing client in bookkeeper.","lastModifiedDate":"2024-04-14"},{"lineNumber":84,"author":{"gitId":"Jaspertzx"},"content":"     */","lastModifiedDate":"2024-04-14"},{"lineNumber":85,"author":{"gitId":"Jaspertzx"},"content":"    public void setClient(Client target, Client editedClient) {","lastModifiedDate":"2024-04-14"},{"lineNumber":86,"author":{"gitId":"Jaspertzx"},"content":"        requireNonNull(editedClient);","lastModifiedDate":"2024-04-14"},{"lineNumber":87,"author":{"gitId":"Jaspertzx"},"content":"        clients.setClient(target, editedClient);","lastModifiedDate":"2024-04-14"},{"lineNumber":88,"author":{"gitId":"Jaspertzx"},"content":"    }","lastModifiedDate":"2024-04-14"},{"lineNumber":89,"author":{"gitId":"Jaspertzx"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":90,"author":{"gitId":"Jaspertzx"},"content":"    /**","lastModifiedDate":"2024-04-14"},{"lineNumber":91,"author":{"gitId":"Jaspertzx"},"content":"     * Replaces the given client {@code target} in the list with {@code editedClient} and adds {@code order}","lastModifiedDate":"2024-04-14"},{"lineNumber":92,"author":{"gitId":"Jaspertzx"},"content":"     * to the OrderList.","lastModifiedDate":"2024-04-14"},{"lineNumber":93,"author":{"gitId":"Jaspertzx"},"content":"     * This method allows updating of the OrderList with the newly added Order.","lastModifiedDate":"2024-04-14"},{"lineNumber":94,"author":{"gitId":"Jaspertzx"},"content":"     * {@code target} must exist in Bookkeeper\u0027s client list.","lastModifiedDate":"2024-04-14"},{"lineNumber":95,"author":{"gitId":"Jaspertzx"},"content":"     * The client identity of {@code editedOrder} must not be the same as another existing client in the address book.","lastModifiedDate":"2024-04-14"},{"lineNumber":96,"author":{"gitId":"Jaspertzx"},"content":"     */","lastModifiedDate":"2024-04-14"},{"lineNumber":97,"author":{"gitId":"Jaspertzx"},"content":"    public void setClientAndAddOrder(Client target, Client editedClient, Order order) {","lastModifiedDate":"2024-04-14"},{"lineNumber":98,"author":{"gitId":"Jaspertzx"},"content":"        requireNonNull(editedClient);","lastModifiedDate":"2024-04-14"},{"lineNumber":99,"author":{"gitId":"Jaspertzx"},"content":"        clients.setClientAndAddOrder(target, editedClient, order);","lastModifiedDate":"2024-04-14"},{"lineNumber":100,"author":{"gitId":"Jaspertzx"},"content":"    }","lastModifiedDate":"2024-04-14"},{"lineNumber":101,"author":{"gitId":"Jaspertzx"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":102,"author":{"gitId":"Jaspertzx"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":103,"author":{"gitId":"Jaspertzx"},"content":"    /**","lastModifiedDate":"2024-04-14"},{"lineNumber":104,"author":{"gitId":"Jaspertzx"},"content":"     * Replaces the given client {@code target} in the list with {@code editedClient} and deletes {@code order}","lastModifiedDate":"2024-04-14"},{"lineNumber":105,"author":{"gitId":"Jaspertzx"},"content":"     * from the OrderList.","lastModifiedDate":"2024-04-14"},{"lineNumber":106,"author":{"gitId":"Jaspertzx"},"content":"     * This method allows updating of the OrderList with the newly added Order.","lastModifiedDate":"2024-04-14"},{"lineNumber":107,"author":{"gitId":"Jaspertzx"},"content":"     * {@code target} must exist in the Bookkeeper\u0027s client list.","lastModifiedDate":"2024-04-14"},{"lineNumber":108,"author":{"gitId":"Jaspertzx"},"content":"     * The client identity of {@code editedOrder} must not be the same as another existing client in the address book.","lastModifiedDate":"2024-04-14"},{"lineNumber":109,"author":{"gitId":"Jaspertzx"},"content":"     */","lastModifiedDate":"2024-04-14"},{"lineNumber":110,"author":{"gitId":"Jaspertzx"},"content":"    public void setClientAndDeleteOrder(Client target, Client editedClient, Order order) {","lastModifiedDate":"2024-04-14"},{"lineNumber":111,"author":{"gitId":"Jaspertzx"},"content":"        requireNonNull(editedClient);","lastModifiedDate":"2024-04-14"},{"lineNumber":112,"author":{"gitId":"Jaspertzx"},"content":"        clients.setClientAndDeleteOrder(target, editedClient, order);","lastModifiedDate":"2024-04-14"},{"lineNumber":113,"author":{"gitId":"Jaspertzx"},"content":"    }","lastModifiedDate":"2024-04-14"},{"lineNumber":114,"author":{"gitId":"Jaspertzx"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":115,"author":{"gitId":"Jaspertzx"},"content":"    /**","lastModifiedDate":"2024-04-14"},{"lineNumber":116,"author":{"gitId":"Jaspertzx"},"content":"     * Replaces the given client {@code target} in the list with {@code editedClient} and replaces {@code order}","lastModifiedDate":"2024-04-14"},{"lineNumber":117,"author":{"gitId":"Jaspertzx"},"content":"     * with {@code editedOrder} in the OrderList.","lastModifiedDate":"2024-04-14"},{"lineNumber":118,"author":{"gitId":"Jaspertzx"},"content":"     * This method allows updating of the OrderList with the newly added Order.","lastModifiedDate":"2024-04-14"},{"lineNumber":119,"author":{"gitId":"Jaspertzx"},"content":"     * {@code target} must exist in Bookkeeper\u0027s client list.","lastModifiedDate":"2024-04-14"},{"lineNumber":120,"author":{"gitId":"Jaspertzx"},"content":"     * The client identity of {@code editedOrder} must not be the same as another existing client in the address book.","lastModifiedDate":"2024-04-14"},{"lineNumber":121,"author":{"gitId":"Jaspertzx"},"content":"     */","lastModifiedDate":"2024-04-14"},{"lineNumber":122,"author":{"gitId":"Jaspertzx"},"content":"    public void setClientAndEditOrder(Client target, Client editedClient, Order order, Order editedOrder) {","lastModifiedDate":"2024-04-14"},{"lineNumber":123,"author":{"gitId":"Jaspertzx"},"content":"        requireNonNull(editedOrder);","lastModifiedDate":"2024-04-14"},{"lineNumber":124,"author":{"gitId":"Jaspertzx"},"content":"        clients.setClientAndEditOrder(target, editedClient, order, editedOrder);","lastModifiedDate":"2024-04-14"},{"lineNumber":125,"author":{"gitId":"Jaspertzx"},"content":"    }","lastModifiedDate":"2024-04-14"},{"lineNumber":126,"author":{"gitId":"Jaspertzx"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":127,"author":{"gitId":"Jaspertzx"},"content":"    /**","lastModifiedDate":"2024-04-14"},{"lineNumber":128,"author":{"gitId":"Jaspertzx"},"content":"     * Removes {@code key} from this {@code BookKeeper}.","lastModifiedDate":"2024-04-14"},{"lineNumber":129,"author":{"gitId":"Jaspertzx"},"content":"     * {@code key} must exist in Bookkeeper\u0027s client list.","lastModifiedDate":"2024-04-14"},{"lineNumber":130,"author":{"gitId":"Jaspertzx"},"content":"     */","lastModifiedDate":"2024-04-14"},{"lineNumber":131,"author":{"gitId":"Jaspertzx"},"content":"    public void removeClient(Client key) {","lastModifiedDate":"2024-04-14"},{"lineNumber":132,"author":{"gitId":"Jaspertzx"},"content":"        clients.remove(key);","lastModifiedDate":"2024-04-14"},{"lineNumber":133,"author":{"gitId":"Jaspertzx"},"content":"    }","lastModifiedDate":"2024-04-14"},{"lineNumber":134,"author":{"gitId":"Jaspertzx"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":135,"author":{"gitId":"Jaspertzx"},"content":"    //// util methods","lastModifiedDate":"2024-04-14"},{"lineNumber":136,"author":{"gitId":"Jaspertzx"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":137,"author":{"gitId":"Jaspertzx"},"content":"    @Override","lastModifiedDate":"2024-04-14"},{"lineNumber":138,"author":{"gitId":"Jaspertzx"},"content":"    public String toString() {","lastModifiedDate":"2024-04-14"},{"lineNumber":139,"author":{"gitId":"Jaspertzx"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2024-04-14"},{"lineNumber":140,"author":{"gitId":"Jaspertzx"},"content":"                .add(\"clients\", clients)","lastModifiedDate":"2024-04-14"},{"lineNumber":141,"author":{"gitId":"Jaspertzx"},"content":"                .toString();","lastModifiedDate":"2024-04-14"},{"lineNumber":142,"author":{"gitId":"Jaspertzx"},"content":"    }","lastModifiedDate":"2024-04-14"},{"lineNumber":143,"author":{"gitId":"Jaspertzx"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":144,"author":{"gitId":"Jaspertzx"},"content":"    @Override","lastModifiedDate":"2024-04-14"},{"lineNumber":145,"author":{"gitId":"Jaspertzx"},"content":"    public ObservableList\u003cClient\u003e getClientList() {","lastModifiedDate":"2024-04-14"},{"lineNumber":146,"author":{"gitId":"Jaspertzx"},"content":"        return clients.asUnmodifiableObservableList();","lastModifiedDate":"2024-04-14"},{"lineNumber":147,"author":{"gitId":"Jaspertzx"},"content":"    }","lastModifiedDate":"2024-04-14"},{"lineNumber":148,"author":{"gitId":"Jaspertzx"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":149,"author":{"gitId":"Jaspertzx"},"content":"    @Override","lastModifiedDate":"2024-04-14"},{"lineNumber":150,"author":{"gitId":"Jaspertzx"},"content":"    public ObservableList\u003cOrder\u003e getOrderList() {","lastModifiedDate":"2024-04-14"},{"lineNumber":151,"author":{"gitId":"Jaspertzx"},"content":"        return clients.asUnmodifiableObservableListOrders();","lastModifiedDate":"2024-04-14"},{"lineNumber":152,"author":{"gitId":"Jaspertzx"},"content":"    }","lastModifiedDate":"2024-04-14"},{"lineNumber":153,"author":{"gitId":"Jaspertzx"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":154,"author":{"gitId":"Jaspertzx"},"content":"    @Override","lastModifiedDate":"2024-04-14"},{"lineNumber":155,"author":{"gitId":"Jaspertzx"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2024-04-14"},{"lineNumber":156,"author":{"gitId":"Jaspertzx"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2024-04-14"},{"lineNumber":157,"author":{"gitId":"Jaspertzx"},"content":"            return true;","lastModifiedDate":"2024-04-14"},{"lineNumber":158,"author":{"gitId":"Jaspertzx"},"content":"        }","lastModifiedDate":"2024-04-14"},{"lineNumber":159,"author":{"gitId":"Jaspertzx"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":160,"author":{"gitId":"Jaspertzx"},"content":"        // instanceof handles nulls","lastModifiedDate":"2024-04-14"},{"lineNumber":161,"author":{"gitId":"Jaspertzx"},"content":"        if (!(other instanceof BookKeeper)) {","lastModifiedDate":"2024-04-14"},{"lineNumber":162,"author":{"gitId":"Jaspertzx"},"content":"            return false;","lastModifiedDate":"2024-04-14"},{"lineNumber":163,"author":{"gitId":"Jaspertzx"},"content":"        }","lastModifiedDate":"2024-04-14"},{"lineNumber":164,"author":{"gitId":"Jaspertzx"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":165,"author":{"gitId":"Jaspertzx"},"content":"        BookKeeper otherBookKeeper \u003d (BookKeeper) other;","lastModifiedDate":"2024-04-14"},{"lineNumber":166,"author":{"gitId":"Jaspertzx"},"content":"        return clients.equals(otherBookKeeper.clients);","lastModifiedDate":"2024-04-14"},{"lineNumber":167,"author":{"gitId":"Jaspertzx"},"content":"    }","lastModifiedDate":"2024-04-14"},{"lineNumber":168,"author":{"gitId":"Jaspertzx"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":169,"author":{"gitId":"Jaspertzx"},"content":"    @Override","lastModifiedDate":"2024-04-14"},{"lineNumber":170,"author":{"gitId":"Jaspertzx"},"content":"    public int hashCode() {","lastModifiedDate":"2024-04-14"},{"lineNumber":171,"author":{"gitId":"Jaspertzx"},"content":"        return clients.hashCode();","lastModifiedDate":"2024-04-14"},{"lineNumber":172,"author":{"gitId":"Jaspertzx"},"content":"    }","lastModifiedDate":"2024-04-14"},{"lineNumber":173,"author":{"gitId":"Jaspertzx"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":174,"author":{"gitId":"Jaspertzx"},"content":"}","lastModifiedDate":"2024-04-14"}],"authorContributionMap":{"Jaspertzx":174}},{"path":"src/main/java/seedu/address/model/Model.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-09-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":8,"author":{"gitId":"Jaspertzx"},"content":"import seedu.address.model.client.Client;","lastModifiedDate":"2024-04-14"},{"lineNumber":9,"author":{"gitId":"shavonneg"},"content":"import seedu.address.model.order.Order;","lastModifiedDate":"2024-03-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * The API of the Model component.","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public interface Model {","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"shavonneg"},"content":"    /**","lastModifiedDate":"2024-03-19"},{"lineNumber":17,"author":{"gitId":"rertyy"},"content":"     * {@code Predicate} that always evaluate to true.","lastModifiedDate":"2024-03-20"},{"lineNumber":18,"author":{"gitId":"shavonneg"},"content":"     */","lastModifiedDate":"2024-03-19"},{"lineNumber":19,"author":{"gitId":"Jaspertzx"},"content":"    Predicate\u003cClient\u003e PREDICATE_SHOW_ALL_CLIENTS \u003d unused -\u003e true;","lastModifiedDate":"2024-04-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":22,"author":{"gitId":"rertyy"},"content":"     * {@code Predicate} that always evaluate to true.","lastModifiedDate":"2024-03-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":24,"author":{"gitId":"shavonneg"},"content":"    Predicate\u003cOrder\u003e PREDICATE_SHOW_ALL_ORDERS \u003d unused -\u003e true;","lastModifiedDate":"2024-03-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * Returns the user prefs.","lastModifiedDate":"2018-11-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    ReadOnlyUserPrefs getUserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":31,"author":{"gitId":"shavonneg"},"content":"    /**","lastModifiedDate":"2024-03-19"},{"lineNumber":32,"author":{"gitId":"shavonneg"},"content":"     * Replaces user prefs data with the data in {@code userPrefs}.","lastModifiedDate":"2024-03-19"},{"lineNumber":33,"author":{"gitId":"shavonneg"},"content":"     */","lastModifiedDate":"2024-03-19"},{"lineNumber":34,"author":{"gitId":"shavonneg"},"content":"    void setUserPrefs(ReadOnlyUserPrefs userPrefs);","lastModifiedDate":"2024-03-19"},{"lineNumber":35,"author":{"gitId":"shavonneg"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * Sets the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    void setGuiSettings(GuiSettings guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"kailinteoo"},"content":"     * Returns the user prefs\u0027 bookkeeper file path.","lastModifiedDate":"2024-04-14"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    Path getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"kailinteoo"},"content":"     * Sets the user prefs\u0027 bookkeeper file path.","lastModifiedDate":"2024-04-14"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    void setAddressBookFilePath(Path addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2024-03-19"},{"lineNumber":57,"author":{"gitId":"kailinteoo"},"content":"     * Returns BookKeeper.","lastModifiedDate":"2024-04-14"},{"lineNumber":58,"author":{"gitId":"shavonneg"},"content":"     */","lastModifiedDate":"2024-03-19"},{"lineNumber":59,"author":{"gitId":"Jaspertzx"},"content":"    ReadOnlyBookKeeper getAddressBook();","lastModifiedDate":"2024-04-14"},{"lineNumber":60,"author":{"gitId":"shavonneg"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"kailinteoo"},"content":"     * Replaces bookkeeper data with the data in {@code addressBook}.","lastModifiedDate":"2024-04-14"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":64,"author":{"gitId":"Jaspertzx"},"content":"    void setAddressBook(ReadOnlyBookKeeper addressBook);","lastModifiedDate":"2024-04-14"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":67,"author":{"gitId":"Jaspertzx"},"content":"     * Returns true if a client with the same identity as {@code client} exists in bookkeeper.","lastModifiedDate":"2024-04-14"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":69,"author":{"gitId":"Jaspertzx"},"content":"    boolean hasClient(Client client);","lastModifiedDate":"2024-04-14"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":72,"author":{"gitId":"Jaspertzx"},"content":"     * Deletes the given client.","lastModifiedDate":"2024-04-14"},{"lineNumber":73,"author":{"gitId":"Jaspertzx"},"content":"     * The client must exist in bookkeeper.","lastModifiedDate":"2024-04-14"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":75,"author":{"gitId":"Jaspertzx"},"content":"    void deleteClient(Client target);","lastModifiedDate":"2024-04-14"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":78,"author":{"gitId":"Jaspertzx"},"content":"     * Adds the given client.","lastModifiedDate":"2024-04-14"},{"lineNumber":79,"author":{"gitId":"Jaspertzx"},"content":"     * {@code client} must not already exist in bookkeeper.","lastModifiedDate":"2024-04-14"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":81,"author":{"gitId":"Jaspertzx"},"content":"    void addClient(Client client);","lastModifiedDate":"2024-04-14"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":84,"author":{"gitId":"Jaspertzx"},"content":"     * Replaces the given client {@code target} with {@code editedClient}.","lastModifiedDate":"2024-04-14"},{"lineNumber":85,"author":{"gitId":"kailinteoo"},"content":"     * {@code target} must exist in bookkeeper.","lastModifiedDate":"2024-04-14"},{"lineNumber":86,"author":{"gitId":"Jaspertzx"},"content":"     * The client identity of {@code editedClient} must not be the same as another existing client in bookkeeper.","lastModifiedDate":"2024-04-14"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":88,"author":{"gitId":"Jaspertzx"},"content":"    void setClient(Client target, Client editedClient);","lastModifiedDate":"2024-04-14"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":90,"author":{"gitId":"Jaspertzx"},"content":"    void setClientAndAddOrder(Client target, Client editedClient, Order order);","lastModifiedDate":"2024-04-14"},{"lineNumber":91,"author":{"gitId":"rertyy"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":92,"author":{"gitId":"Jaspertzx"},"content":"    void setClientAndDeleteOrder(Client target, Client editedClient, Order order);","lastModifiedDate":"2024-04-14"},{"lineNumber":93,"author":{"gitId":"kailinteoo"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":94,"author":{"gitId":"Jaspertzx"},"content":"    void setClientAndEditOrder(Client target, Client editedClient, Order order, Order editedOrder);","lastModifiedDate":"2024-04-14"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2024-03-19"},{"lineNumber":97,"author":{"gitId":"Jaspertzx"},"content":"     * Returns an unmodifiable view of the filtered client list.","lastModifiedDate":"2024-04-14"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2024-03-19"},{"lineNumber":99,"author":{"gitId":"Jaspertzx"},"content":"    ObservableList\u003cClient\u003e getFilteredClientList();","lastModifiedDate":"2024-04-14"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2024-03-19"},{"lineNumber":102,"author":{"gitId":"rertyy"},"content":"     * Returns an unmodifiable view of the filtered order list.","lastModifiedDate":"2024-03-20"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2024-03-19"},{"lineNumber":104,"author":{"gitId":"shavonneg"},"content":"    ObservableList\u003cOrder\u003e getFilteredOrderList();","lastModifiedDate":"2024-03-19"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-05"},{"lineNumber":107,"author":{"gitId":"Jaspertzx"},"content":"     * Updates the filter of the filtered client list to filter by the given {@code predicate}.","lastModifiedDate":"2024-04-14"},{"lineNumber":108,"author":{"gitId":"shavonneg"},"content":"     *","lastModifiedDate":"2024-03-19"},{"lineNumber":109,"author":{"gitId":"-"},"content":"     * @throws NullPointerException if {@code predicate} is null.","lastModifiedDate":"2017-08-05"},{"lineNumber":110,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-05"},{"lineNumber":111,"author":{"gitId":"Jaspertzx"},"content":"    void updateFilteredClientList(Predicate\u003cClient\u003e predicate);","lastModifiedDate":"2024-04-14"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2024-03-17"},{"lineNumber":114,"author":{"gitId":"shavonneg"},"content":"     * Updates the filter of the filtered order list to filter by the given {@code predicate}.","lastModifiedDate":"2024-03-17"},{"lineNumber":115,"author":{"gitId":"shavonneg"},"content":"     *","lastModifiedDate":"2024-03-19"},{"lineNumber":116,"author":{"gitId":"-"},"content":"     * @throws NullPointerException if {@code predicate} is null.","lastModifiedDate":"2024-03-17"},{"lineNumber":117,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2024-03-17"},{"lineNumber":118,"author":{"gitId":"shavonneg"},"content":"    void updateFilteredOrderList(Predicate\u003cOrder\u003e predicate);","lastModifiedDate":"2024-03-17"},{"lineNumber":119,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"kailinteoo":6,"shavonneg":16,"rertyy":4,"Jaspertzx":22,"-":71}},{"path":"src/main/java/seedu/address/model/ModelManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-08-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2017-05-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.collections.transformation.FilteredList;","lastModifiedDate":"2016-08-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-23"},{"lineNumber":14,"author":{"gitId":"Jaspertzx"},"content":"import seedu.address.model.client.Client;","lastModifiedDate":"2024-04-14"},{"lineNumber":15,"author":{"gitId":"shavonneg"},"content":"import seedu.address.model.order.Order;","lastModifiedDate":"2024-03-17"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"kailinteoo"},"content":" * Represents the in-memory model of bookkeeper data.","lastModifiedDate":"2024-04-14"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class ModelManager implements Model {","lastModifiedDate":"2018-12-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(ModelManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"Jaspertzx"},"content":"    private final BookKeeper bookKeeper;","lastModifiedDate":"2024-04-14"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private final UserPrefs userPrefs;","lastModifiedDate":"2018-12-06"},{"lineNumber":25,"author":{"gitId":"Jaspertzx"},"content":"    private final FilteredList\u003cClient\u003e filteredClients;","lastModifiedDate":"2024-04-14"},{"lineNumber":26,"author":{"gitId":"rertyy"},"content":"    private final FilteredList\u003cOrder\u003e filteredOrders;","lastModifiedDate":"2024-03-21"},{"lineNumber":27,"author":{"gitId":"kailinteoo"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"Jaspertzx"},"content":"     * Initializes a ModelManager with the given bookKeeper and userPrefs.","lastModifiedDate":"2024-04-14"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"Jaspertzx"},"content":"    public ModelManager(ReadOnlyBookKeeper addressBook, ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2024-04-14"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        requireAllNonNull(addressBook, userPrefs);","lastModifiedDate":"2017-05-19"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":35,"author":{"gitId":"Jaspertzx"},"content":"        logger.fine(\"Initializing with save file: \" + addressBook + \" and user prefs \" + userPrefs);","lastModifiedDate":"2024-04-10"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"Jaspertzx"},"content":"        this.bookKeeper \u003d new BookKeeper(addressBook);","lastModifiedDate":"2024-04-14"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        this.userPrefs \u003d new UserPrefs(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":39,"author":{"gitId":"Jaspertzx"},"content":"        filteredClients \u003d new FilteredList\u003c\u003e(this.bookKeeper.getClientList());","lastModifiedDate":"2024-04-14"},{"lineNumber":40,"author":{"gitId":"Jaspertzx"},"content":"        filteredOrders \u003d new FilteredList\u003c\u003e(this.bookKeeper.getOrderList());","lastModifiedDate":"2024-04-14"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public ModelManager() {","lastModifiedDate":"2016-09-22"},{"lineNumber":44,"author":{"gitId":"Jaspertzx"},"content":"        this(new BookKeeper(), new UserPrefs());","lastModifiedDate":"2024-04-14"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d UserPrefs \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"shavonneg"},"content":"    public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2024-03-19"},{"lineNumber":51,"author":{"gitId":"shavonneg"},"content":"        return userPrefs;","lastModifiedDate":"2024-03-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"shavonneg"},"content":"    public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2024-03-19"},{"lineNumber":56,"author":{"gitId":"shavonneg"},"content":"        requireNonNull(userPrefs);","lastModifiedDate":"2024-03-19"},{"lineNumber":57,"author":{"gitId":"shavonneg"},"content":"        this.userPrefs.resetData(userPrefs);","lastModifiedDate":"2024-03-19"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        return userPrefs.getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        requireNonNull(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        return userPrefs.getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2018-11-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        requireNonNull(addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        userPrefs.setAddressBookFilePath(addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":82,"author":{"gitId":"Jaspertzx"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d BookKeeper \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2024-04-14"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":85,"author":{"gitId":"Jaspertzx"},"content":"    public ReadOnlyBookKeeper getAddressBook() {","lastModifiedDate":"2024-04-14"},{"lineNumber":86,"author":{"gitId":"Jaspertzx"},"content":"        return bookKeeper;","lastModifiedDate":"2024-04-14"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":90,"author":{"gitId":"Jaspertzx"},"content":"    public void setAddressBook(ReadOnlyBookKeeper addressBook) {","lastModifiedDate":"2024-04-14"},{"lineNumber":91,"author":{"gitId":"Jaspertzx"},"content":"        this.bookKeeper.resetData(addressBook);","lastModifiedDate":"2024-04-14"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-08-06"},{"lineNumber":95,"author":{"gitId":"Jaspertzx"},"content":"    public boolean hasClient(Client client) {","lastModifiedDate":"2024-04-14"},{"lineNumber":96,"author":{"gitId":"Jaspertzx"},"content":"        requireNonNull(client);","lastModifiedDate":"2024-04-14"},{"lineNumber":97,"author":{"gitId":"Jaspertzx"},"content":"        return bookKeeper.hasClient(client);","lastModifiedDate":"2024-04-14"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":101,"author":{"gitId":"Jaspertzx"},"content":"    public void deleteClient(Client target) {","lastModifiedDate":"2024-04-14"},{"lineNumber":102,"author":{"gitId":"Jaspertzx"},"content":"        bookKeeper.removeClient(target);","lastModifiedDate":"2024-04-14"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":106,"author":{"gitId":"Jaspertzx"},"content":"    public void addClient(Client client) {","lastModifiedDate":"2024-04-14"},{"lineNumber":107,"author":{"gitId":"Jaspertzx"},"content":"        bookKeeper.addClient(client);","lastModifiedDate":"2024-04-14"},{"lineNumber":108,"author":{"gitId":"Jaspertzx"},"content":"        updateFilteredClientList(PREDICATE_SHOW_ALL_CLIENTS);","lastModifiedDate":"2024-04-14"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-26"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-26"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-13"},{"lineNumber":112,"author":{"gitId":"Jaspertzx"},"content":"    public void setClient(Client target, Client editedClient) {","lastModifiedDate":"2024-04-14"},{"lineNumber":113,"author":{"gitId":"Jaspertzx"},"content":"        requireAllNonNull(target, editedClient);","lastModifiedDate":"2024-04-14"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":115,"author":{"gitId":"Jaspertzx"},"content":"        bookKeeper.setClient(target, editedClient);","lastModifiedDate":"2024-04-14"},{"lineNumber":116,"author":{"gitId":"kailinteoo"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2024-03-20"},{"lineNumber":120,"author":{"gitId":"Jaspertzx"},"content":"    public void setClientAndAddOrder(Client target, Client editedClient, Order order) {","lastModifiedDate":"2024-04-14"},{"lineNumber":121,"author":{"gitId":"Jaspertzx"},"content":"        requireAllNonNull(target, editedClient);","lastModifiedDate":"2024-04-14"},{"lineNumber":122,"author":{"gitId":"kailinteoo"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":123,"author":{"gitId":"Jaspertzx"},"content":"        bookKeeper.setClientAndAddOrder(target, editedClient, order);","lastModifiedDate":"2024-04-14"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-03-23"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2024-03-23"},{"lineNumber":127,"author":{"gitId":"Jaspertzx"},"content":"    public void setClientAndDeleteOrder(Client target, Client editedClient, Order order) {","lastModifiedDate":"2024-04-14"},{"lineNumber":128,"author":{"gitId":"Jaspertzx"},"content":"        requireAllNonNull(target, editedClient);","lastModifiedDate":"2024-04-14"},{"lineNumber":129,"author":{"gitId":"rertyy"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":130,"author":{"gitId":"Jaspertzx"},"content":"        bookKeeper.setClientAndDeleteOrder(target, editedClient, order);","lastModifiedDate":"2024-04-14"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-13"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2024-03-28"},{"lineNumber":134,"author":{"gitId":"Jaspertzx"},"content":"    public void setClientAndEditOrder(Client target, Client editedClient, Order order, Order editedOrder) {","lastModifiedDate":"2024-04-14"},{"lineNumber":135,"author":{"gitId":"Jaspertzx"},"content":"        requireAllNonNull(target, editedClient, order, editedOrder);","lastModifiedDate":"2024-04-14"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":137,"author":{"gitId":"Jaspertzx"},"content":"        bookKeeper.setClientAndEditOrder(target, editedClient, order, editedOrder);","lastModifiedDate":"2024-04-14"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-03-28"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":140,"author":{"gitId":"shavonneg"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":141,"author":{"gitId":"Jaspertzx"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Order \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2024-03-18"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2024-03-20"},{"lineNumber":144,"author":{"gitId":"Jaspertzx"},"content":"     * Returns an unmodifiable view of the list of {@code Order} backed by the internal list of.","lastModifiedDate":"2024-03-20"},{"lineNumber":145,"author":{"gitId":"-"},"content":"     * {@code versionedAddressBook}","lastModifiedDate":"2024-03-20"},{"lineNumber":146,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2024-03-20"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2024-03-18"},{"lineNumber":148,"author":{"gitId":"Jaspertzx"},"content":"    public ObservableList\u003cOrder\u003e getFilteredOrderList() {","lastModifiedDate":"2024-03-20"},{"lineNumber":149,"author":{"gitId":"Jaspertzx"},"content":"        return filteredOrders;","lastModifiedDate":"2024-03-20"},{"lineNumber":150,"author":{"gitId":"Jaspertzx"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":151,"author":{"gitId":"Jaspertzx"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":152,"author":{"gitId":"Jaspertzx"},"content":"    @Override","lastModifiedDate":"2024-03-18"},{"lineNumber":153,"author":{"gitId":"Jaspertzx"},"content":"    public void updateFilteredOrderList(Predicate\u003cOrder\u003e predicate) {","lastModifiedDate":"2024-03-20"},{"lineNumber":154,"author":{"gitId":"Jaspertzx"},"content":"        requireNonNull(predicate);","lastModifiedDate":"2024-03-20"},{"lineNumber":155,"author":{"gitId":"rertyy"},"content":"        filteredOrders.setPredicate(predicate);","lastModifiedDate":"2024-03-21"},{"lineNumber":156,"author":{"gitId":"Jaspertzx"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":158,"author":{"gitId":"Jaspertzx"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Filtered Client List Accessors \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2024-04-14"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-19"},{"lineNumber":161,"author":{"gitId":"Jaspertzx"},"content":"     * Returns an unmodifiable view of the list of {@code Client} backed by the internal list of","lastModifiedDate":"2024-04-14"},{"lineNumber":162,"author":{"gitId":"rertyy"},"content":"     * {@code versionedAddressBook}.","lastModifiedDate":"2024-03-20"},{"lineNumber":163,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-19"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":165,"author":{"gitId":"Jaspertzx"},"content":"    public ObservableList\u003cClient\u003e getFilteredClientList() {","lastModifiedDate":"2024-04-14"},{"lineNumber":166,"author":{"gitId":"Jaspertzx"},"content":"        return filteredClients;","lastModifiedDate":"2024-04-14"},{"lineNumber":167,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":170,"author":{"gitId":"Jaspertzx"},"content":"    public void updateFilteredClientList(Predicate\u003cClient\u003e predicate) {","lastModifiedDate":"2024-04-14"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        requireNonNull(predicate);","lastModifiedDate":"2017-08-05"},{"lineNumber":172,"author":{"gitId":"Jaspertzx"},"content":"        filteredClients.setPredicate(predicate);","lastModifiedDate":"2024-04-14"},{"lineNumber":173,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-31"},{"lineNumber":176,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-07-13"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":178,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-05-31"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-31"},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-05-31"},{"lineNumber":182,"author":{"gitId":"-"},"content":"        if (!(other instanceof ModelManager)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":183,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-05-31"},{"lineNumber":184,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-31"},{"lineNumber":185,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":186,"author":{"gitId":"-"},"content":"        ModelManager otherModelManager \u003d (ModelManager) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":187,"author":{"gitId":"Jaspertzx"},"content":"        return bookKeeper.equals(otherModelManager.bookKeeper)","lastModifiedDate":"2024-04-14"},{"lineNumber":188,"author":{"gitId":"-"},"content":"                \u0026\u0026 userPrefs.equals(otherModelManager.userPrefs)","lastModifiedDate":"2023-07-13"},{"lineNumber":189,"author":{"gitId":"Jaspertzx"},"content":"                \u0026\u0026 filteredClients.equals(otherModelManager.filteredClients);","lastModifiedDate":"2024-04-14"},{"lineNumber":190,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":191,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"kailinteoo":4,"shavonneg":7,"rertyy":4,"Jaspertzx":53,"-":123}},{"path":"src/main/java/seedu/address/model/ReadOnlyBookKeeper.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"Jaspertzx"},"content":"import seedu.address.model.client.Client;","lastModifiedDate":"2024-04-14"},{"lineNumber":5,"author":{"gitId":"shavonneg"},"content":"import seedu.address.model.order.Order;","lastModifiedDate":"2024-03-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"kailinteoo"},"content":" * Unmodifiable view of a bookkeeper.","lastModifiedDate":"2024-04-14"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"Jaspertzx"},"content":"public interface ReadOnlyBookKeeper {","lastModifiedDate":"2024-04-14"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"Jaspertzx"},"content":"     * Returns an unmodifiable view of the clients list.","lastModifiedDate":"2024-04-14"},{"lineNumber":14,"author":{"gitId":"Jaspertzx"},"content":"     * This list will not contain any duplicate clients.","lastModifiedDate":"2024-04-14"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"Jaspertzx"},"content":"    ObservableList\u003cClient\u003e getClientList();","lastModifiedDate":"2024-04-14"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"shavonneg"},"content":"    /**","lastModifiedDate":"2024-03-18"},{"lineNumber":19,"author":{"gitId":"shavonneg"},"content":"     * Returns an unmodifiable view of the orders list.","lastModifiedDate":"2024-03-18"},{"lineNumber":20,"author":{"gitId":"kailinteoo"},"content":"     * This list will not contain any duplicate orders.","lastModifiedDate":"2024-03-20"},{"lineNumber":21,"author":{"gitId":"shavonneg"},"content":"     */","lastModifiedDate":"2024-03-18"},{"lineNumber":22,"author":{"gitId":"rertyy"},"content":"    ObservableList\u003cOrder\u003e getOrderList();","lastModifiedDate":"2024-03-29"},{"lineNumber":23,"author":{"gitId":"shavonneg"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":24,"author":{"gitId":"shavonneg"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":25,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"kailinteoo":2,"shavonneg":6,"rertyy":1,"Jaspertzx":5,"-":11}},{"path":"src/main/java/seedu/address/model/ReadOnlyUserPrefs.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2018-11-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-11-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Unmodifiable view of user prefs.","lastModifiedDate":"2018-11-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public interface ReadOnlyUserPrefs {","lastModifiedDate":"2018-11-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    Path getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":16,"author":{"gitId":"kailinteoo"},"content":"    Path getOrderBookFilePath();","lastModifiedDate":"2024-03-18"},{"lineNumber":17,"author":{"gitId":"kailinteoo"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":18,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-11-27"}],"authorContributionMap":{"kailinteoo":2,"-":16}},{"path":"src/main/java/seedu/address/model/UserPrefs.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2016-09-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Represents User\u0027s preferences.","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class UserPrefs implements ReadOnlyUserPrefs {","lastModifiedDate":"2018-11-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private GuiSettings guiSettings \u003d new GuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":17,"author":{"gitId":"kailinteoo"},"content":"    private Path addressBookFilePath \u003d Paths.get(\"data\", \"bookkeeper.json\");","lastModifiedDate":"2024-04-14"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"kailinteoo"},"content":"    private Path orderBookFilePath \u003d Paths.get(\"data\", \"bookkeeper.json\");","lastModifiedDate":"2024-04-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-06"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * Creates a {@code UserPrefs} with default values.","lastModifiedDate":"2018-12-06"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-06"},{"lineNumber":24,"author":{"gitId":"kailinteoo"},"content":"    public UserPrefs() {","lastModifiedDate":"2024-04-14"},{"lineNumber":25,"author":{"gitId":"kailinteoo"},"content":"    }","lastModifiedDate":"2024-04-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * Creates a {@code UserPrefs} with the prefs in {@code userPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public UserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        this();","lastModifiedDate":"2018-12-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        resetData(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-06"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-06"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * Resets the existing data of this {@code UserPrefs} with {@code newUserPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-06"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public void resetData(ReadOnlyUserPrefs newUserPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        requireNonNull(newUserPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        setGuiSettings(newUserPrefs.getGuiSettings());","lastModifiedDate":"2018-12-06"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        setAddressBookFilePath(newUserPrefs.getAddressBookFilePath());","lastModifiedDate":"2018-12-06"},{"lineNumber":42,"author":{"gitId":"kailinteoo"},"content":"        setOrderBookFilePath(newUserPrefs.getOrderBookFilePath());","lastModifiedDate":"2024-03-18"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-06"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        return guiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-08-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        requireNonNull(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        this.guiSettings \u003d guiSettings;","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":54,"author":{"gitId":"Jaspertzx"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d BookKeeper methods \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2024-04-14"},{"lineNumber":55,"author":{"gitId":"kailinteoo"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        return addressBookFilePath;","lastModifiedDate":"2017-02-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2018-04-21"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        requireNonNull(addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        this.addressBookFilePath \u003d addressBookFilePath;","lastModifiedDate":"2017-02-25"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-25"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2016-09-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2016-09-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        if (!(other instanceof UserPrefs)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2016-09-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        UserPrefs otherUserPrefs \u003d (UserPrefs) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        return guiSettings.equals(otherUserPrefs.guiSettings)","lastModifiedDate":"2023-07-13"},{"lineNumber":78,"author":{"gitId":"kailinteoo"},"content":"                \u0026\u0026 addressBookFilePath.equals(otherUserPrefs.addressBookFilePath)","lastModifiedDate":"2024-03-18"},{"lineNumber":79,"author":{"gitId":"kailinteoo"},"content":"                \u0026\u0026 orderBookFilePath.equals(otherUserPrefs.orderBookFilePath);","lastModifiedDate":"2024-03-18"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-24"},{"lineNumber":84,"author":{"gitId":"kailinteoo"},"content":"        return Objects.hash(guiSettings, addressBookFilePath, orderBookFilePath);","lastModifiedDate":"2024-03-18"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-09-24"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2017-02-25"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        sb.append(\"Gui Settings : \" + guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        sb.append(\"\\nLocal data file location : \" + addressBookFilePath);","lastModifiedDate":"2017-02-25"},{"lineNumber":92,"author":{"gitId":"kailinteoo"},"content":"        sb.append(\"\\nLocal data file location : \" + orderBookFilePath);","lastModifiedDate":"2024-03-18"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2017-02-25"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":96,"author":{"gitId":"kailinteoo"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d OrderBook methods \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2024-03-18"},{"lineNumber":97,"author":{"gitId":"kailinteoo"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":98,"author":{"gitId":"kailinteoo"},"content":"    public Path getOrderBookFilePath() {","lastModifiedDate":"2024-03-18"},{"lineNumber":99,"author":{"gitId":"kailinteoo"},"content":"        return orderBookFilePath;","lastModifiedDate":"2024-03-18"},{"lineNumber":100,"author":{"gitId":"kailinteoo"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":101,"author":{"gitId":"kailinteoo"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":102,"author":{"gitId":"kailinteoo"},"content":"    public void setOrderBookFilePath(Path orderBookFilePath) {","lastModifiedDate":"2024-03-18"},{"lineNumber":103,"author":{"gitId":"kailinteoo"},"content":"        requireNonNull(orderBookFilePath);","lastModifiedDate":"2024-03-18"},{"lineNumber":104,"author":{"gitId":"kailinteoo"},"content":"        this.orderBookFilePath \u003d orderBookFilePath;","lastModifiedDate":"2024-03-18"},{"lineNumber":105,"author":{"gitId":"kailinteoo"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":106,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"kailinteoo":20,"Jaspertzx":1,"-":85}},{"path":"src/main/java/seedu/address/model/client/Address.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Jaspertzx"},"content":"package seedu.address.model.client;","lastModifiedDate":"2024-04-14"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2017-05-30"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"Jaspertzx"},"content":" * Represents a Client\u0027s address in bookkeeper.","lastModifiedDate":"2024-04-14"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidAddress(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Address {","lastModifiedDate":"2016-09-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Addresses can take any values, and it should not be blank\";","lastModifiedDate":"2018-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2017-01-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * The first character of the address must not be a whitespace,","lastModifiedDate":"2017-01-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2017-01-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d \"[^\\\\s].*\";","lastModifiedDate":"2018-09-22"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public final String value;","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Constructs an {@code Address}.","lastModifiedDate":"2017-05-30"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * @param address A valid address.","lastModifiedDate":"2017-05-30"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public Address(String address) {","lastModifiedDate":"2017-05-30"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        requireNonNull(address);","lastModifiedDate":"2017-05-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        checkArgument(isValidAddress(address), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        value \u003d address;","lastModifiedDate":"2018-08-14"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid email.","lastModifiedDate":"2018-04-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public static boolean isValidAddress(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        return value;","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        if (!(other instanceof Address)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        Address otherAddress \u003d (Address) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        return value.equals(otherAddress.value);","lastModifiedDate":"2023-07-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        return value.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"Jaspertzx":2,"-":63}},{"path":"src/main/java/seedu/address/model/client/Client.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Jaspertzx"},"content":"package seedu.address.model.client;","lastModifiedDate":"2024-04-14"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2017-05-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"Jaspertzx"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-03-20"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-03-07"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-03-26"},{"lineNumber":8,"author":{"gitId":"Jaspertzx"},"content":"import java.util.List;","lastModifiedDate":"2024-03-20"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2019-02-23"},{"lineNumber":13,"author":{"gitId":"Jaspertzx"},"content":"import seedu.address.model.order.Order;","lastModifiedDate":"2024-03-19"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-07"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"Jaspertzx"},"content":" * Represents a Client in bookkeeper.","lastModifiedDate":"2024-04-14"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * Guarantees: details are present and not null, field values are validated, immutable.","lastModifiedDate":"2017-12-20"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"Jaspertzx"},"content":"public class Client {","lastModifiedDate":"2024-04-14"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    // Identity fields","lastModifiedDate":"2018-04-19"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private final Name name;","lastModifiedDate":"2017-12-20"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private final Phone phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private final Email email;","lastModifiedDate":"2017-12-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    // Data fields","lastModifiedDate":"2018-04-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private final Address address;","lastModifiedDate":"2018-04-19"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private final Set\u003cTag\u003e tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2018-03-26"},{"lineNumber":31,"author":{"gitId":"Jaspertzx"},"content":"    private final Set\u003cOrder\u003e orders \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2024-03-19"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"Jaspertzx"},"content":"    /**","lastModifiedDate":"2024-03-19"},{"lineNumber":34,"author":{"gitId":"Jaspertzx"},"content":"     * Every field must be present and not null.","lastModifiedDate":"2024-03-19"},{"lineNumber":35,"author":{"gitId":"Jaspertzx"},"content":"     */","lastModifiedDate":"2024-03-19"},{"lineNumber":36,"author":{"gitId":"Jaspertzx"},"content":"    public Client(Name name, Phone phone, Email email, Address address,","lastModifiedDate":"2024-04-14"},{"lineNumber":37,"author":{"gitId":"Jaspertzx"},"content":"                  Set\u003cTag\u003e tags, Set\u003cOrder\u003e orders) {","lastModifiedDate":"2024-03-19"},{"lineNumber":38,"author":{"gitId":"Jaspertzx"},"content":"        requireAllNonNull(name, phone, email, address, tags, orders);","lastModifiedDate":"2024-03-27"},{"lineNumber":39,"author":{"gitId":"Jaspertzx"},"content":"        this.name \u003d name;","lastModifiedDate":"2024-03-19"},{"lineNumber":40,"author":{"gitId":"Jaspertzx"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2024-03-19"},{"lineNumber":41,"author":{"gitId":"Jaspertzx"},"content":"        this.email \u003d email;","lastModifiedDate":"2024-03-19"},{"lineNumber":42,"author":{"gitId":"Jaspertzx"},"content":"        this.address \u003d address;","lastModifiedDate":"2024-03-19"},{"lineNumber":43,"author":{"gitId":"Jaspertzx"},"content":"        this.tags.addAll(tags);","lastModifiedDate":"2024-03-19"},{"lineNumber":44,"author":{"gitId":"Jaspertzx"},"content":"        this.orders.addAll(orders);","lastModifiedDate":"2024-03-19"},{"lineNumber":45,"author":{"gitId":"Jaspertzx"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":46,"author":{"gitId":"Jaspertzx"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public Name getName() {","lastModifiedDate":"2017-07-12"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        return name;","lastModifiedDate":"2017-12-20"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public Phone getPhone() {","lastModifiedDate":"2017-07-12"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        return phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public Email getEmail() {","lastModifiedDate":"2017-07-12"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        return email;","lastModifiedDate":"2017-12-20"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public Address getAddress() {","lastModifiedDate":"2017-07-12"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        return address;","lastModifiedDate":"2017-12-20"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-12"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-12"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-07"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * Returns an immutable tag set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2017-03-07"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     * if modification is attempted.","lastModifiedDate":"2017-03-07"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-07"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public Set\u003cTag\u003e getTags() {","lastModifiedDate":"2017-03-07"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        return Collections.unmodifiableSet(tags);","lastModifiedDate":"2018-03-26"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":71,"author":{"gitId":"Jaspertzx"},"content":"    /**","lastModifiedDate":"2024-03-19"},{"lineNumber":72,"author":{"gitId":"Jaspertzx"},"content":"     * Returns an immutable order set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2024-03-19"},{"lineNumber":73,"author":{"gitId":"Jaspertzx"},"content":"     * if modification is attempted.","lastModifiedDate":"2024-03-19"},{"lineNumber":74,"author":{"gitId":"Jaspertzx"},"content":"     */","lastModifiedDate":"2024-03-19"},{"lineNumber":75,"author":{"gitId":"Jaspertzx"},"content":"    public Set\u003cOrder\u003e getOrders() {","lastModifiedDate":"2024-03-19"},{"lineNumber":76,"author":{"gitId":"Jaspertzx"},"content":"        return Collections.unmodifiableSet(this.orders);","lastModifiedDate":"2024-03-19"},{"lineNumber":77,"author":{"gitId":"Jaspertzx"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":78,"author":{"gitId":"Jaspertzx"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":79,"author":{"gitId":"Jaspertzx"},"content":"    /**","lastModifiedDate":"2024-04-03"},{"lineNumber":80,"author":{"gitId":"Jaspertzx"},"content":"     * Returns a new Client object, with the specified Order added to the orders object.","lastModifiedDate":"2024-04-14"},{"lineNumber":81,"author":{"gitId":"Jaspertzx"},"content":"     *","lastModifiedDate":"2024-04-03"},{"lineNumber":82,"author":{"gitId":"Jaspertzx"},"content":"     * @param order the order to be added","lastModifiedDate":"2024-04-03"},{"lineNumber":83,"author":{"gitId":"Jaspertzx"},"content":"     * @return new Client object","lastModifiedDate":"2024-04-14"},{"lineNumber":84,"author":{"gitId":"Jaspertzx"},"content":"     */","lastModifiedDate":"2024-04-03"},{"lineNumber":85,"author":{"gitId":"Jaspertzx"},"content":"    public Client addOrder(Order order) {","lastModifiedDate":"2024-04-14"},{"lineNumber":86,"author":{"gitId":"Jaspertzx"},"content":"        Set\u003cOrder\u003e newOrders \u003d new HashSet\u003c\u003e(orders);","lastModifiedDate":"2024-04-03"},{"lineNumber":87,"author":{"gitId":"Jaspertzx"},"content":"        newOrders.add(order);","lastModifiedDate":"2024-04-03"},{"lineNumber":88,"author":{"gitId":"Jaspertzx"},"content":"        return new Client(this.name, this.phone, this.email, this.address, this.getTags(), newOrders);","lastModifiedDate":"2024-04-14"},{"lineNumber":89,"author":{"gitId":"Jaspertzx"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":90,"author":{"gitId":"Jaspertzx"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":91,"author":{"gitId":"Jaspertzx"},"content":"    /**","lastModifiedDate":"2024-04-14"},{"lineNumber":92,"author":{"gitId":"Jaspertzx"},"content":"     * Returns a new Client object, with the specified Order removed to the orders object.","lastModifiedDate":"2024-04-14"},{"lineNumber":93,"author":{"gitId":"Jaspertzx"},"content":"     *","lastModifiedDate":"2024-04-14"},{"lineNumber":94,"author":{"gitId":"Jaspertzx"},"content":"     * @param order the order to be removed","lastModifiedDate":"2024-04-14"},{"lineNumber":95,"author":{"gitId":"Jaspertzx"},"content":"     * @return new Client object","lastModifiedDate":"2024-04-14"},{"lineNumber":96,"author":{"gitId":"Jaspertzx"},"content":"     */","lastModifiedDate":"2024-04-14"},{"lineNumber":97,"author":{"gitId":"Jaspertzx"},"content":"    public Client removeOrder(Order order) {","lastModifiedDate":"2024-04-14"},{"lineNumber":98,"author":{"gitId":"Jaspertzx"},"content":"        Set\u003cOrder\u003e newOrders \u003d new HashSet\u003c\u003e(orders);","lastModifiedDate":"2024-04-14"},{"lineNumber":99,"author":{"gitId":"Jaspertzx"},"content":"        newOrders.remove(order);","lastModifiedDate":"2024-04-14"},{"lineNumber":100,"author":{"gitId":"Jaspertzx"},"content":"        return new Client(this.name, this.phone, this.email, this.address, this.getTags(), newOrders);","lastModifiedDate":"2024-04-14"},{"lineNumber":101,"author":{"gitId":"Jaspertzx"},"content":"    }","lastModifiedDate":"2024-04-14"},{"lineNumber":102,"author":{"gitId":"Jaspertzx"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":103,"author":{"gitId":"Jaspertzx"},"content":"    /**","lastModifiedDate":"2024-04-14"},{"lineNumber":104,"author":{"gitId":"Jaspertzx"},"content":"     * Returns a new Client object, with the specified Order edited accordingly.","lastModifiedDate":"2024-04-14"},{"lineNumber":105,"author":{"gitId":"Jaspertzx"},"content":"     *","lastModifiedDate":"2024-04-14"},{"lineNumber":106,"author":{"gitId":"Jaspertzx"},"content":"     * @param oldOrder the order to be removed","lastModifiedDate":"2024-04-14"},{"lineNumber":107,"author":{"gitId":"Jaspertzx"},"content":"     * @param newOrder the order to be added","lastModifiedDate":"2024-04-14"},{"lineNumber":108,"author":{"gitId":"Jaspertzx"},"content":"     * @return new Client object","lastModifiedDate":"2024-04-14"},{"lineNumber":109,"author":{"gitId":"Jaspertzx"},"content":"     */","lastModifiedDate":"2024-04-14"},{"lineNumber":110,"author":{"gitId":"Jaspertzx"},"content":"    public Client editOrder(Order oldOrder, Order newOrder) {","lastModifiedDate":"2024-04-14"},{"lineNumber":111,"author":{"gitId":"Jaspertzx"},"content":"        Set\u003cOrder\u003e newOrders \u003d new HashSet\u003c\u003e(orders);","lastModifiedDate":"2024-04-14"},{"lineNumber":112,"author":{"gitId":"Jaspertzx"},"content":"        newOrders.remove(oldOrder);","lastModifiedDate":"2024-04-14"},{"lineNumber":113,"author":{"gitId":"Jaspertzx"},"content":"        newOrders.add(newOrder);","lastModifiedDate":"2024-04-14"},{"lineNumber":114,"author":{"gitId":"Jaspertzx"},"content":"        return new Client(this.name, this.phone, this.email, this.address, this.getTags(), newOrders);","lastModifiedDate":"2024-04-14"},{"lineNumber":115,"author":{"gitId":"Jaspertzx"},"content":"    }","lastModifiedDate":"2024-04-14"},{"lineNumber":116,"author":{"gitId":"Jaspertzx"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":118,"author":{"gitId":"Jaspertzx"},"content":"     * Returns true if both clients have the same name.","lastModifiedDate":"2024-04-14"},{"lineNumber":119,"author":{"gitId":"Jaspertzx"},"content":"     * This defines a weaker notion of equality between two clients.","lastModifiedDate":"2024-04-14"},{"lineNumber":120,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":121,"author":{"gitId":"Jaspertzx"},"content":"    public boolean isSameClient(Client otherClient) {","lastModifiedDate":"2024-04-14"},{"lineNumber":122,"author":{"gitId":"Jaspertzx"},"content":"        if (otherClient \u003d\u003d this) {","lastModifiedDate":"2024-04-14"},{"lineNumber":123,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-04-19"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":126,"author":{"gitId":"Jaspertzx"},"content":"        return otherClient !\u003d null","lastModifiedDate":"2024-04-14"},{"lineNumber":127,"author":{"gitId":"Jaspertzx"},"content":"                \u0026\u0026 otherClient.getName().equals(getName());","lastModifiedDate":"2024-04-14"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":130,"author":{"gitId":"Jaspertzx"},"content":"    /**","lastModifiedDate":"2024-03-20"},{"lineNumber":131,"author":{"gitId":"Jaspertzx"},"content":"     * The list of orders in this client.","lastModifiedDate":"2024-04-14"},{"lineNumber":132,"author":{"gitId":"Jaspertzx"},"content":"     */","lastModifiedDate":"2024-03-20"},{"lineNumber":133,"author":{"gitId":"Jaspertzx"},"content":"    public List\u003cOrder\u003e getOrdersList() {","lastModifiedDate":"2024-03-20"},{"lineNumber":134,"author":{"gitId":"Jaspertzx"},"content":"        return new ArrayList\u003c\u003e(orders);","lastModifiedDate":"2024-03-20"},{"lineNumber":135,"author":{"gitId":"Jaspertzx"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":136,"author":{"gitId":"Jaspertzx"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":138,"author":{"gitId":"Jaspertzx"},"content":"     * Returns true if both clients have the same identity and data fields.","lastModifiedDate":"2024-04-14"},{"lineNumber":139,"author":{"gitId":"Jaspertzx"},"content":"     * This defines a stronger notion of equality between two clients.","lastModifiedDate":"2024-04-14"},{"lineNumber":140,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2018-01-10"},{"lineNumber":144,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-01-10"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-01-10"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-10"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":148,"author":{"gitId":"Jaspertzx"},"content":"        if (!(other instanceof Client)) {","lastModifiedDate":"2024-04-14"},{"lineNumber":149,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-01-10"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-01-10"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-10"},{"lineNumber":152,"author":{"gitId":"Jaspertzx"},"content":"        Client otherClient \u003d (Client) other;","lastModifiedDate":"2024-04-14"},{"lineNumber":153,"author":{"gitId":"Jaspertzx"},"content":"        return name.equals(otherClient.name)","lastModifiedDate":"2024-04-14"},{"lineNumber":154,"author":{"gitId":"Jaspertzx"},"content":"                \u0026\u0026 phone.equals(otherClient.phone)","lastModifiedDate":"2024-04-14"},{"lineNumber":155,"author":{"gitId":"Jaspertzx"},"content":"                \u0026\u0026 email.equals(otherClient.email)","lastModifiedDate":"2024-04-14"},{"lineNumber":156,"author":{"gitId":"Jaspertzx"},"content":"                \u0026\u0026 address.equals(otherClient.address)","lastModifiedDate":"2024-04-14"},{"lineNumber":157,"author":{"gitId":"Jaspertzx"},"content":"                \u0026\u0026 tags.equals(otherClient.tags)","lastModifiedDate":"2024-04-14"},{"lineNumber":158,"author":{"gitId":"Jaspertzx"},"content":"                \u0026\u0026 orders.equals(otherClient.orders);","lastModifiedDate":"2024-04-14"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        // use this method for custom fields hashing instead of implementing your own","lastModifiedDate":"2016-08-24"},{"lineNumber":164,"author":{"gitId":"kailinteoo"},"content":"        return Objects.hash(name, phone, email, address, tags, orders);","lastModifiedDate":"2024-03-19"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":167,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23"},{"lineNumber":170,"author":{"gitId":"-"},"content":"                .add(\"name\", name)","lastModifiedDate":"2019-02-23"},{"lineNumber":171,"author":{"gitId":"-"},"content":"                .add(\"phone\", phone)","lastModifiedDate":"2019-02-23"},{"lineNumber":172,"author":{"gitId":"-"},"content":"                .add(\"email\", email)","lastModifiedDate":"2019-02-23"},{"lineNumber":173,"author":{"gitId":"-"},"content":"                .add(\"address\", address)","lastModifiedDate":"2019-02-23"},{"lineNumber":174,"author":{"gitId":"-"},"content":"                .add(\"tags\", tags)","lastModifiedDate":"2019-02-23"},{"lineNumber":175,"author":{"gitId":"kailinteoo"},"content":"                .add(\"orders\", orders)","lastModifiedDate":"2024-03-19"},{"lineNumber":176,"author":{"gitId":"-"},"content":"                .toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":179,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"kailinteoo":2,"Jaspertzx":90,"-":87}},{"path":"src/main/java/seedu/address/model/client/Email.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Jaspertzx"},"content":"package seedu.address.model.client;","lastModifiedDate":"2024-04-14"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2017-05-30"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"Jaspertzx"},"content":" * Represents a Client\u0027s email in bookkeeper.","lastModifiedDate":"2024-04-14"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidEmail(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Email {","lastModifiedDate":"2016-09-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private static final String SPECIAL_CHARACTERS \u003d \"+_.-\";","lastModifiedDate":"2021-07-20"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Emails should be of the format local-part@domain \"","lastModifiedDate":"2018-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"            + \"and adhere to the following constraints:\\n\"","lastModifiedDate":"2018-02-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"            + \"1. The local-part should only contain alphanumeric characters and these special characters, excluding \"","lastModifiedDate":"2018-02-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"            + \"the parentheses, (\" + SPECIAL_CHARACTERS + \"). The local-part may not start or end with any special \"","lastModifiedDate":"2021-07-20"},{"lineNumber":17,"author":{"gitId":"-"},"content":"            + \"characters.\\n\"","lastModifiedDate":"2021-07-20"},{"lineNumber":18,"author":{"gitId":"-"},"content":"            + \"2. This is followed by a \u0027@\u0027 and then a domain name. The domain name is made up of domain labels \"","lastModifiedDate":"2021-07-20"},{"lineNumber":19,"author":{"gitId":"-"},"content":"            + \"separated by periods.\\n\"","lastModifiedDate":"2021-07-20"},{"lineNumber":20,"author":{"gitId":"-"},"content":"            + \"The domain name must:\\n\"","lastModifiedDate":"2018-02-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"            + \"    - end with a domain label at least 2 characters long\\n\"","lastModifiedDate":"2021-07-20"},{"lineNumber":22,"author":{"gitId":"-"},"content":"            + \"    - have each domain label start and end with alphanumeric characters\\n\"","lastModifiedDate":"2021-07-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"            + \"    - have each domain label consist of alphanumeric characters, separated only by hyphens, if any.\";","lastModifiedDate":"2021-07-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    // alphanumeric and special characters","lastModifiedDate":"2018-02-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private static final String ALPHANUMERIC_NO_UNDERSCORE \u003d \"[^\\\\W_]+\"; // alphanumeric characters except underscore","lastModifiedDate":"2021-07-20"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private static final String LOCAL_PART_REGEX \u003d \"^\" + ALPHANUMERIC_NO_UNDERSCORE + \"([\" + SPECIAL_CHARACTERS + \"]\"","lastModifiedDate":"2021-07-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"            + ALPHANUMERIC_NO_UNDERSCORE + \")*\";","lastModifiedDate":"2021-07-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private static final String DOMAIN_PART_REGEX \u003d ALPHANUMERIC_NO_UNDERSCORE","lastModifiedDate":"2021-07-20"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            + \"(-\" + ALPHANUMERIC_NO_UNDERSCORE + \")*\";","lastModifiedDate":"2021-07-20"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private static final String DOMAIN_LAST_PART_REGEX \u003d \"(\" + DOMAIN_PART_REGEX + \"){2,}$\"; // At least two chars","lastModifiedDate":"2021-07-20"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private static final String DOMAIN_REGEX \u003d \"(\" + DOMAIN_PART_REGEX + \"\\\\.)*\" + DOMAIN_LAST_PART_REGEX;","lastModifiedDate":"2021-07-20"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d LOCAL_PART_REGEX + \"@\" + DOMAIN_REGEX;","lastModifiedDate":"2021-07-20"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public final String value;","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * Constructs an {@code Email}.","lastModifiedDate":"2017-05-30"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * @param email A valid email address.","lastModifiedDate":"2017-05-30"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public Email(String email) {","lastModifiedDate":"2017-05-30"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        requireNonNull(email);","lastModifiedDate":"2017-05-15"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        checkArgument(isValidEmail(email), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        value \u003d email;","lastModifiedDate":"2018-08-14"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * Returns if a given string is a valid email.","lastModifiedDate":"2018-04-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public static boolean isValidEmail(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        return value;","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        if (!(other instanceof Email)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        Email otherEmail \u003d (Email) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        return value.equals(otherEmail.value);","lastModifiedDate":"2023-07-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        return value.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"Jaspertzx":2,"-":77}},{"path":"src/main/java/seedu/address/model/client/Name.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Jaspertzx"},"content":"package seedu.address.model.client;","lastModifiedDate":"2024-04-14"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2017-05-30"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"Jaspertzx"},"content":" * Represents a Client\u0027s name in bookkeeper.","lastModifiedDate":"2024-04-14"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidName(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Name {","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2018-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"            \"Names should only contain alphanumeric characters and spaces, and it should not be blank\";","lastModifiedDate":"2018-04-04"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2017-01-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * The first character of the address must not be a whitespace,","lastModifiedDate":"2017-01-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2017-01-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d \"[\\\\p{Alnum}][\\\\p{Alnum} ]*\";","lastModifiedDate":"2018-09-22"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public final String fullName;","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Constructs a {@code Name}.","lastModifiedDate":"2017-05-30"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * @param name A valid name.","lastModifiedDate":"2017-05-30"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public Name(String name) {","lastModifiedDate":"2017-05-30"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        requireNonNull(name);","lastModifiedDate":"2017-05-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        checkArgument(isValidName(name), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        fullName \u003d name;","lastModifiedDate":"2018-08-14"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid name.","lastModifiedDate":"2018-04-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static boolean isValidName(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        return fullName;","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        if (!(other instanceof Name)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        Name otherName \u003d (Name) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        return fullName.equals(otherName.fullName);","lastModifiedDate":"2023-07-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        return fullName.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"Jaspertzx":2,"-":65}},{"path":"src/main/java/seedu/address/model/client/NameContainsKeywordsPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Jaspertzx"},"content":"package seedu.address.model.client;","lastModifiedDate":"2024-04-14"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-12"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2017-06-12"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2019-02-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-12"},{"lineNumber":10,"author":{"gitId":"Jaspertzx"},"content":" * Tests that a {@code Client}\u0027s {@code Name} matches any of the keywords given.","lastModifiedDate":"2024-04-14"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-12"},{"lineNumber":12,"author":{"gitId":"Jaspertzx"},"content":"public class NameContainsKeywordsPredicate implements Predicate\u003cClient\u003e {","lastModifiedDate":"2024-04-14"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    private final List\u003cString\u003e keywords;","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public NameContainsKeywordsPredicate(List\u003cString\u003e keywords) {","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        this.keywords \u003d keywords;","lastModifiedDate":"2017-06-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-12"},{"lineNumber":20,"author":{"gitId":"Jaspertzx"},"content":"    public boolean test(Client client) {","lastModifiedDate":"2024-04-14"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        return keywords.stream()","lastModifiedDate":"2017-06-12"},{"lineNumber":22,"author":{"gitId":"Jaspertzx"},"content":"                .anyMatch(keyword -\u003e StringUtil.containsWordIgnoreCase(client.getName().fullName, keyword));","lastModifiedDate":"2024-04-14"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        if (!(other instanceof NameContainsKeywordsPredicate)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate otherNameContainsKeywordsPredicate \u003d (NameContainsKeywordsPredicate) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        return keywords.equals(otherNameContainsKeywordsPredicate.keywords);","lastModifiedDate":"2023-07-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2019-02-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2019-02-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this).add(\"keywords\", keywords).toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"Jaspertzx":5,"-":39}},{"path":"src/main/java/seedu/address/model/client/Phone.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Jaspertzx"},"content":"package seedu.address.model.client;","lastModifiedDate":"2024-04-14"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2017-05-30"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"Jaspertzx"},"content":" * Represents a Client\u0027s phone number in bookkeeper.","lastModifiedDate":"2024-04-14"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidPhone(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Phone {","lastModifiedDate":"2016-09-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2018-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"            \"Phone numbers should only contain numbers, and it should be at least 3 digits long\";","lastModifiedDate":"2018-04-04"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d \"\\\\d{3,}\";","lastModifiedDate":"2018-09-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public final String value;","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * Constructs a {@code Phone}.","lastModifiedDate":"2017-05-30"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * @param phone A valid phone number.","lastModifiedDate":"2017-05-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public Phone(String phone) {","lastModifiedDate":"2017-05-30"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        requireNonNull(phone);","lastModifiedDate":"2017-05-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        checkArgument(isValidPhone(phone), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        value \u003d phone;","lastModifiedDate":"2018-08-14"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid phone number.","lastModifiedDate":"2018-04-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static boolean isValidPhone(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return value;","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        if (!(other instanceof Phone)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        Phone otherPhone \u003d (Phone) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        return value.equals(otherPhone.value);","lastModifiedDate":"2023-07-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        return value.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"Jaspertzx":2,"-":59}},{"path":"src/main/java/seedu/address/model/client/UniqueClientList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Jaspertzx"},"content":"package seedu.address.model.client;","lastModifiedDate":"2024-04-14"},{"lineNumber":2,"author":{"gitId":"Jaspertzx"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":3,"author":{"gitId":"Jaspertzx"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2024-04-14"},{"lineNumber":4,"author":{"gitId":"Jaspertzx"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2024-04-14"},{"lineNumber":5,"author":{"gitId":"Jaspertzx"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":6,"author":{"gitId":"Jaspertzx"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-04-14"},{"lineNumber":7,"author":{"gitId":"Jaspertzx"},"content":"import java.util.Iterator;","lastModifiedDate":"2024-04-14"},{"lineNumber":8,"author":{"gitId":"Jaspertzx"},"content":"import java.util.List;","lastModifiedDate":"2024-04-14"},{"lineNumber":9,"author":{"gitId":"Jaspertzx"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":10,"author":{"gitId":"Jaspertzx"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2024-04-14"},{"lineNumber":11,"author":{"gitId":"Jaspertzx"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2024-04-14"},{"lineNumber":12,"author":{"gitId":"Jaspertzx"},"content":"import seedu.address.model.client.exceptions.ClientNotFoundException;","lastModifiedDate":"2024-04-14"},{"lineNumber":13,"author":{"gitId":"Jaspertzx"},"content":"import seedu.address.model.client.exceptions.DuplicateClientException;","lastModifiedDate":"2024-04-14"},{"lineNumber":14,"author":{"gitId":"Jaspertzx"},"content":"import seedu.address.model.order.Order;","lastModifiedDate":"2024-04-14"},{"lineNumber":15,"author":{"gitId":"Jaspertzx"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":16,"author":{"gitId":"Jaspertzx"},"content":"/**","lastModifiedDate":"2024-04-14"},{"lineNumber":17,"author":{"gitId":"Jaspertzx"},"content":" * A list of clients that enforces uniqueness between its elements and does not allow nulls.","lastModifiedDate":"2024-04-14"},{"lineNumber":18,"author":{"gitId":"Jaspertzx"},"content":" * A client is considered unique by comparing using {@code Client#isSameClient(Client)}. As such, adding and updating of","lastModifiedDate":"2024-04-14"},{"lineNumber":19,"author":{"gitId":"Jaspertzx"},"content":" * clients uses Client#isSameClient(Client) for equality so as to ensure that the client being added or updated is","lastModifiedDate":"2024-04-14"},{"lineNumber":20,"author":{"gitId":"Jaspertzx"},"content":" * unique in terms of identity in the UniqueClientList. However, the removal of a client uses Client#equals(Object) so","lastModifiedDate":"2024-04-14"},{"lineNumber":21,"author":{"gitId":"Jaspertzx"},"content":" * as to ensure that the client with exactly the same fields will be removed.","lastModifiedDate":"2024-04-14"},{"lineNumber":22,"author":{"gitId":"Jaspertzx"},"content":" * \u003cp\u003e","lastModifiedDate":"2024-04-14"},{"lineNumber":23,"author":{"gitId":"Jaspertzx"},"content":" * Supports a minimal set of list operations.","lastModifiedDate":"2024-04-14"},{"lineNumber":24,"author":{"gitId":"Jaspertzx"},"content":" *","lastModifiedDate":"2024-04-14"},{"lineNumber":25,"author":{"gitId":"Jaspertzx"},"content":" * @see Client#isSameClient(Client)","lastModifiedDate":"2024-04-14"},{"lineNumber":26,"author":{"gitId":"Jaspertzx"},"content":" */","lastModifiedDate":"2024-04-14"},{"lineNumber":27,"author":{"gitId":"Jaspertzx"},"content":"public class UniqueClientList implements Iterable\u003cClient\u003e {","lastModifiedDate":"2024-04-14"},{"lineNumber":28,"author":{"gitId":"Jaspertzx"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":29,"author":{"gitId":"Jaspertzx"},"content":"    private final ObservableList\u003cClient\u003e internalList \u003d FXCollections.observableArrayList();","lastModifiedDate":"2024-04-14"},{"lineNumber":30,"author":{"gitId":"Jaspertzx"},"content":"    private final ObservableList\u003cClient\u003e internalUnmodifiableList \u003d","lastModifiedDate":"2024-04-14"},{"lineNumber":31,"author":{"gitId":"Jaspertzx"},"content":"            FXCollections.unmodifiableObservableList(internalList);","lastModifiedDate":"2024-04-14"},{"lineNumber":32,"author":{"gitId":"Jaspertzx"},"content":"    private final ObservableList\u003cOrder\u003e internalOrderList \u003d FXCollections.observableArrayList();","lastModifiedDate":"2024-04-14"},{"lineNumber":33,"author":{"gitId":"Jaspertzx"},"content":"    private final ObservableList\u003cOrder\u003e internalUnmodifiableListOrder \u003d","lastModifiedDate":"2024-04-14"},{"lineNumber":34,"author":{"gitId":"Jaspertzx"},"content":"            FXCollections.unmodifiableObservableList(internalOrderList);","lastModifiedDate":"2024-04-14"},{"lineNumber":35,"author":{"gitId":"Jaspertzx"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":36,"author":{"gitId":"Jaspertzx"},"content":"    /**","lastModifiedDate":"2024-04-14"},{"lineNumber":37,"author":{"gitId":"Jaspertzx"},"content":"     * Returns true if the list contains an equivalent client as the given argument.","lastModifiedDate":"2024-04-14"},{"lineNumber":38,"author":{"gitId":"Jaspertzx"},"content":"     */","lastModifiedDate":"2024-04-14"},{"lineNumber":39,"author":{"gitId":"Jaspertzx"},"content":"    public boolean contains(Client toCheck) {","lastModifiedDate":"2024-04-14"},{"lineNumber":40,"author":{"gitId":"Jaspertzx"},"content":"        requireNonNull(toCheck);","lastModifiedDate":"2024-04-14"},{"lineNumber":41,"author":{"gitId":"Jaspertzx"},"content":"        return internalList.stream().anyMatch(toCheck::isSameClient);","lastModifiedDate":"2024-04-14"},{"lineNumber":42,"author":{"gitId":"Jaspertzx"},"content":"    }","lastModifiedDate":"2024-04-14"},{"lineNumber":43,"author":{"gitId":"Jaspertzx"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":44,"author":{"gitId":"Jaspertzx"},"content":"    /**","lastModifiedDate":"2024-04-14"},{"lineNumber":45,"author":{"gitId":"Jaspertzx"},"content":"     * Adds a client to the list.","lastModifiedDate":"2024-04-14"},{"lineNumber":46,"author":{"gitId":"Jaspertzx"},"content":"     * The client must not already exist in the list.","lastModifiedDate":"2024-04-14"},{"lineNumber":47,"author":{"gitId":"Jaspertzx"},"content":"     */","lastModifiedDate":"2024-04-14"},{"lineNumber":48,"author":{"gitId":"Jaspertzx"},"content":"    public void add(Client toAdd) {","lastModifiedDate":"2024-04-14"},{"lineNumber":49,"author":{"gitId":"Jaspertzx"},"content":"        requireNonNull(toAdd);","lastModifiedDate":"2024-04-14"},{"lineNumber":50,"author":{"gitId":"Jaspertzx"},"content":"        if (contains(toAdd)) {","lastModifiedDate":"2024-04-14"},{"lineNumber":51,"author":{"gitId":"Jaspertzx"},"content":"            throw new DuplicateClientException();","lastModifiedDate":"2024-04-14"},{"lineNumber":52,"author":{"gitId":"Jaspertzx"},"content":"        }","lastModifiedDate":"2024-04-14"},{"lineNumber":53,"author":{"gitId":"Jaspertzx"},"content":"        internalList.add(toAdd);","lastModifiedDate":"2024-04-14"},{"lineNumber":54,"author":{"gitId":"Jaspertzx"},"content":"    }","lastModifiedDate":"2024-04-14"},{"lineNumber":55,"author":{"gitId":"Jaspertzx"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":56,"author":{"gitId":"Jaspertzx"},"content":"    /**","lastModifiedDate":"2024-04-14"},{"lineNumber":57,"author":{"gitId":"Jaspertzx"},"content":"     * Replaces the client {@code target} in the list with {@code editedClient}.","lastModifiedDate":"2024-04-14"},{"lineNumber":58,"author":{"gitId":"Jaspertzx"},"content":"     * {@code target} must exist in the list.","lastModifiedDate":"2024-04-14"},{"lineNumber":59,"author":{"gitId":"Jaspertzx"},"content":"     * The client identity of {@code editedClient} must not be the same as another existing client in the list.","lastModifiedDate":"2024-04-14"},{"lineNumber":60,"author":{"gitId":"Jaspertzx"},"content":"     */","lastModifiedDate":"2024-04-14"},{"lineNumber":61,"author":{"gitId":"Jaspertzx"},"content":"    public void setClient(Client target, Client editedClient) {","lastModifiedDate":"2024-04-14"},{"lineNumber":62,"author":{"gitId":"Jaspertzx"},"content":"        requireAllNonNull(target, editedClient);","lastModifiedDate":"2024-04-14"},{"lineNumber":63,"author":{"gitId":"Jaspertzx"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":64,"author":{"gitId":"Jaspertzx"},"content":"        int index \u003d internalList.indexOf(target);","lastModifiedDate":"2024-04-14"},{"lineNumber":65,"author":{"gitId":"Jaspertzx"},"content":"        if (index \u003d\u003d -1) {","lastModifiedDate":"2024-04-14"},{"lineNumber":66,"author":{"gitId":"Jaspertzx"},"content":"            throw new ClientNotFoundException();","lastModifiedDate":"2024-04-14"},{"lineNumber":67,"author":{"gitId":"Jaspertzx"},"content":"        }","lastModifiedDate":"2024-04-14"},{"lineNumber":68,"author":{"gitId":"Jaspertzx"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":69,"author":{"gitId":"Jaspertzx"},"content":"        if (!target.isSameClient(editedClient) \u0026\u0026 contains(editedClient)) {","lastModifiedDate":"2024-04-14"},{"lineNumber":70,"author":{"gitId":"Jaspertzx"},"content":"            throw new DuplicateClientException();","lastModifiedDate":"2024-04-14"},{"lineNumber":71,"author":{"gitId":"Jaspertzx"},"content":"        }","lastModifiedDate":"2024-04-14"},{"lineNumber":72,"author":{"gitId":"Jaspertzx"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":73,"author":{"gitId":"Jaspertzx"},"content":"        internalList.set(index, editedClient);","lastModifiedDate":"2024-04-14"},{"lineNumber":74,"author":{"gitId":"Jaspertzx"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":75,"author":{"gitId":"Jaspertzx"},"content":"        // Needed to refresh the OrderList with updated Client Names","lastModifiedDate":"2024-04-14"},{"lineNumber":76,"author":{"gitId":"Jaspertzx"},"content":"        internalOrderList.setAll(new ArrayList\u003c\u003e(internalOrderList));","lastModifiedDate":"2024-04-14"},{"lineNumber":77,"author":{"gitId":"Jaspertzx"},"content":"    }","lastModifiedDate":"2024-04-14"},{"lineNumber":78,"author":{"gitId":"Jaspertzx"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":79,"author":{"gitId":"Jaspertzx"},"content":"    /**","lastModifiedDate":"2024-04-14"},{"lineNumber":80,"author":{"gitId":"Jaspertzx"},"content":"     * Replaces the client {@code target} in the list with {@code editedClient}.","lastModifiedDate":"2024-04-14"},{"lineNumber":81,"author":{"gitId":"Jaspertzx"},"content":"     * Removes the respective Order object from the ObservableList as well.","lastModifiedDate":"2024-04-14"},{"lineNumber":82,"author":{"gitId":"Jaspertzx"},"content":"     *","lastModifiedDate":"2024-04-14"},{"lineNumber":83,"author":{"gitId":"Jaspertzx"},"content":"     * @param target       client to be removed.","lastModifiedDate":"2024-04-14"},{"lineNumber":84,"author":{"gitId":"Jaspertzx"},"content":"     * @param editedClient client to be added.","lastModifiedDate":"2024-04-14"},{"lineNumber":85,"author":{"gitId":"Jaspertzx"},"content":"     * @param order        order to be added.","lastModifiedDate":"2024-04-14"},{"lineNumber":86,"author":{"gitId":"Jaspertzx"},"content":"     */","lastModifiedDate":"2024-04-14"},{"lineNumber":87,"author":{"gitId":"Jaspertzx"},"content":"    public void setClientAndDeleteOrder(Client target, Client editedClient, Order order) {","lastModifiedDate":"2024-04-14"},{"lineNumber":88,"author":{"gitId":"Jaspertzx"},"content":"        setClient(target, editedClient);","lastModifiedDate":"2024-04-14"},{"lineNumber":89,"author":{"gitId":"Jaspertzx"},"content":"        internalOrderList.remove(order);","lastModifiedDate":"2024-04-14"},{"lineNumber":90,"author":{"gitId":"Jaspertzx"},"content":"        sortOrders();","lastModifiedDate":"2024-04-14"},{"lineNumber":91,"author":{"gitId":"Jaspertzx"},"content":"    }","lastModifiedDate":"2024-04-14"},{"lineNumber":92,"author":{"gitId":"Jaspertzx"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":93,"author":{"gitId":"Jaspertzx"},"content":"    /**","lastModifiedDate":"2024-04-14"},{"lineNumber":94,"author":{"gitId":"Jaspertzx"},"content":"     * Replaces the client {@code target} in the list with {@code editedClient}.","lastModifiedDate":"2024-04-14"},{"lineNumber":95,"author":{"gitId":"Jaspertzx"},"content":"     * Adds the Order object to the ObservableList as well.","lastModifiedDate":"2024-04-14"},{"lineNumber":96,"author":{"gitId":"Jaspertzx"},"content":"     *","lastModifiedDate":"2024-04-14"},{"lineNumber":97,"author":{"gitId":"Jaspertzx"},"content":"     * @param target       client to be removed.","lastModifiedDate":"2024-04-14"},{"lineNumber":98,"author":{"gitId":"Jaspertzx"},"content":"     * @param editedClient client to be added.","lastModifiedDate":"2024-04-14"},{"lineNumber":99,"author":{"gitId":"Jaspertzx"},"content":"     * @param order        order to be removed.","lastModifiedDate":"2024-04-14"},{"lineNumber":100,"author":{"gitId":"Jaspertzx"},"content":"     */","lastModifiedDate":"2024-04-14"},{"lineNumber":101,"author":{"gitId":"Jaspertzx"},"content":"    public void setClientAndAddOrder(Client target, Client editedClient, Order order) {","lastModifiedDate":"2024-04-14"},{"lineNumber":102,"author":{"gitId":"Jaspertzx"},"content":"        setClient(target, editedClient);","lastModifiedDate":"2024-04-14"},{"lineNumber":103,"author":{"gitId":"Jaspertzx"},"content":"        internalOrderList.add(order);","lastModifiedDate":"2024-04-14"},{"lineNumber":104,"author":{"gitId":"Jaspertzx"},"content":"        sortOrders();","lastModifiedDate":"2024-04-14"},{"lineNumber":105,"author":{"gitId":"Jaspertzx"},"content":"    }","lastModifiedDate":"2024-04-14"},{"lineNumber":106,"author":{"gitId":"Jaspertzx"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":107,"author":{"gitId":"Jaspertzx"},"content":"    /**","lastModifiedDate":"2024-04-14"},{"lineNumber":108,"author":{"gitId":"Jaspertzx"},"content":"     * Replaces the client {@code target} in the list with {@code editedClient}.","lastModifiedDate":"2024-04-14"},{"lineNumber":109,"author":{"gitId":"Jaspertzx"},"content":"     *","lastModifiedDate":"2024-04-14"},{"lineNumber":110,"author":{"gitId":"Jaspertzx"},"content":"     * @param client        client to be removed.","lastModifiedDate":"2024-04-14"},{"lineNumber":111,"author":{"gitId":"Jaspertzx"},"content":"     * @param editedClient  client to be added.","lastModifiedDate":"2024-04-14"},{"lineNumber":112,"author":{"gitId":"Jaspertzx"},"content":"     * @param orderToDelete order to be removed.","lastModifiedDate":"2024-04-14"},{"lineNumber":113,"author":{"gitId":"Jaspertzx"},"content":"     * @param orderToAdd    order to be added.","lastModifiedDate":"2024-04-14"},{"lineNumber":114,"author":{"gitId":"Jaspertzx"},"content":"     */","lastModifiedDate":"2024-04-14"},{"lineNumber":115,"author":{"gitId":"Jaspertzx"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":116,"author":{"gitId":"Jaspertzx"},"content":"    public void setClientAndEditOrder(Client client, Client editedClient, Order orderToDelete, Order orderToAdd) {","lastModifiedDate":"2024-04-14"},{"lineNumber":117,"author":{"gitId":"Jaspertzx"},"content":"        requireAllNonNull(client, orderToDelete, orderToAdd);","lastModifiedDate":"2024-04-14"},{"lineNumber":118,"author":{"gitId":"Jaspertzx"},"content":"        setClient(client, editedClient);","lastModifiedDate":"2024-04-14"},{"lineNumber":119,"author":{"gitId":"Jaspertzx"},"content":"        int index \u003d internalOrderList.indexOf(orderToDelete);","lastModifiedDate":"2024-04-14"},{"lineNumber":120,"author":{"gitId":"Jaspertzx"},"content":"        internalOrderList.set(index, orderToAdd);","lastModifiedDate":"2024-04-14"},{"lineNumber":121,"author":{"gitId":"Jaspertzx"},"content":"        sortOrders();","lastModifiedDate":"2024-04-14"},{"lineNumber":122,"author":{"gitId":"Jaspertzx"},"content":"    }","lastModifiedDate":"2024-04-14"},{"lineNumber":123,"author":{"gitId":"Jaspertzx"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":124,"author":{"gitId":"Jaspertzx"},"content":"    /**","lastModifiedDate":"2024-04-14"},{"lineNumber":125,"author":{"gitId":"Jaspertzx"},"content":"     * Removes the equivalent client from the list.","lastModifiedDate":"2024-04-14"},{"lineNumber":126,"author":{"gitId":"Jaspertzx"},"content":"     * The client must exist in the list.","lastModifiedDate":"2024-04-14"},{"lineNumber":127,"author":{"gitId":"Jaspertzx"},"content":"     */","lastModifiedDate":"2024-04-14"},{"lineNumber":128,"author":{"gitId":"Jaspertzx"},"content":"    public void remove(Client toRemove) {","lastModifiedDate":"2024-04-14"},{"lineNumber":129,"author":{"gitId":"Jaspertzx"},"content":"        requireNonNull(toRemove);","lastModifiedDate":"2024-04-14"},{"lineNumber":130,"author":{"gitId":"Jaspertzx"},"content":"        if (!internalList.remove(toRemove)) {","lastModifiedDate":"2024-04-14"},{"lineNumber":131,"author":{"gitId":"Jaspertzx"},"content":"            throw new ClientNotFoundException();","lastModifiedDate":"2024-04-14"},{"lineNumber":132,"author":{"gitId":"Jaspertzx"},"content":"        }","lastModifiedDate":"2024-04-14"},{"lineNumber":133,"author":{"gitId":"Jaspertzx"},"content":"        internalOrderList.removeAll(toRemove.getOrdersList());","lastModifiedDate":"2024-04-14"},{"lineNumber":134,"author":{"gitId":"Jaspertzx"},"content":"    }","lastModifiedDate":"2024-04-14"},{"lineNumber":135,"author":{"gitId":"Jaspertzx"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":136,"author":{"gitId":"Jaspertzx"},"content":"    public void setClients(UniqueClientList replacement) {","lastModifiedDate":"2024-04-14"},{"lineNumber":137,"author":{"gitId":"Jaspertzx"},"content":"        requireNonNull(replacement);","lastModifiedDate":"2024-04-14"},{"lineNumber":138,"author":{"gitId":"Jaspertzx"},"content":"        internalList.setAll(replacement.internalList);","lastModifiedDate":"2024-04-14"},{"lineNumber":139,"author":{"gitId":"Jaspertzx"},"content":"    }","lastModifiedDate":"2024-04-14"},{"lineNumber":140,"author":{"gitId":"Jaspertzx"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":141,"author":{"gitId":"Jaspertzx"},"content":"    /**","lastModifiedDate":"2024-04-14"},{"lineNumber":142,"author":{"gitId":"Jaspertzx"},"content":"     * Replaces the contents of this list with {@code clients}.","lastModifiedDate":"2024-04-14"},{"lineNumber":143,"author":{"gitId":"Jaspertzx"},"content":"     * {@code clients} must not contain duplicate clients.","lastModifiedDate":"2024-04-14"},{"lineNumber":144,"author":{"gitId":"Jaspertzx"},"content":"     */","lastModifiedDate":"2024-04-14"},{"lineNumber":145,"author":{"gitId":"Jaspertzx"},"content":"    public void setClients(List\u003cClient\u003e clients) {","lastModifiedDate":"2024-04-14"},{"lineNumber":146,"author":{"gitId":"Jaspertzx"},"content":"        requireAllNonNull(clients);","lastModifiedDate":"2024-04-14"},{"lineNumber":147,"author":{"gitId":"Jaspertzx"},"content":"        if (!clientsAreUnique(clients)) {","lastModifiedDate":"2024-04-14"},{"lineNumber":148,"author":{"gitId":"Jaspertzx"},"content":"            throw new DuplicateClientException();","lastModifiedDate":"2024-04-14"},{"lineNumber":149,"author":{"gitId":"Jaspertzx"},"content":"        }","lastModifiedDate":"2024-04-14"},{"lineNumber":150,"author":{"gitId":"Jaspertzx"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":151,"author":{"gitId":"Jaspertzx"},"content":"        internalList.setAll(clients);","lastModifiedDate":"2024-04-14"},{"lineNumber":152,"author":{"gitId":"Jaspertzx"},"content":"        setOrders();","lastModifiedDate":"2024-04-14"},{"lineNumber":153,"author":{"gitId":"Jaspertzx"},"content":"    }","lastModifiedDate":"2024-04-14"},{"lineNumber":154,"author":{"gitId":"Jaspertzx"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":155,"author":{"gitId":"Jaspertzx"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":156,"author":{"gitId":"Jaspertzx"},"content":"    /**","lastModifiedDate":"2024-04-14"},{"lineNumber":157,"author":{"gitId":"Jaspertzx"},"content":"     * Returns the backing list as an unmodifiable {@code ObservableList}.","lastModifiedDate":"2024-04-14"},{"lineNumber":158,"author":{"gitId":"Jaspertzx"},"content":"     */","lastModifiedDate":"2024-04-14"},{"lineNumber":159,"author":{"gitId":"Jaspertzx"},"content":"    public ObservableList\u003cClient\u003e asUnmodifiableObservableList() {","lastModifiedDate":"2024-04-14"},{"lineNumber":160,"author":{"gitId":"Jaspertzx"},"content":"        return internalUnmodifiableList;","lastModifiedDate":"2024-04-14"},{"lineNumber":161,"author":{"gitId":"Jaspertzx"},"content":"    }","lastModifiedDate":"2024-04-14"},{"lineNumber":162,"author":{"gitId":"Jaspertzx"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":163,"author":{"gitId":"Jaspertzx"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":164,"author":{"gitId":"Jaspertzx"},"content":"    /**","lastModifiedDate":"2024-04-14"},{"lineNumber":165,"author":{"gitId":"Jaspertzx"},"content":"     * Returns the backing list as an unmodifiable {@code ObservableList}.","lastModifiedDate":"2024-04-14"},{"lineNumber":166,"author":{"gitId":"Jaspertzx"},"content":"     */","lastModifiedDate":"2024-04-14"},{"lineNumber":167,"author":{"gitId":"Jaspertzx"},"content":"    public ObservableList\u003cOrder\u003e asUnmodifiableObservableListOrders() {","lastModifiedDate":"2024-04-14"},{"lineNumber":168,"author":{"gitId":"Jaspertzx"},"content":"        return internalUnmodifiableListOrder;","lastModifiedDate":"2024-04-14"},{"lineNumber":169,"author":{"gitId":"Jaspertzx"},"content":"    }","lastModifiedDate":"2024-04-14"},{"lineNumber":170,"author":{"gitId":"Jaspertzx"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":171,"author":{"gitId":"Jaspertzx"},"content":"    private void setOrders() {","lastModifiedDate":"2024-04-14"},{"lineNumber":172,"author":{"gitId":"Jaspertzx"},"content":"        List\u003cOrder\u003e creationOrderList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-04-14"},{"lineNumber":173,"author":{"gitId":"Jaspertzx"},"content":"        for (Client client : internalList) {","lastModifiedDate":"2024-04-14"},{"lineNumber":174,"author":{"gitId":"Jaspertzx"},"content":"            creationOrderList.addAll(client.getOrdersList());","lastModifiedDate":"2024-04-14"},{"lineNumber":175,"author":{"gitId":"Jaspertzx"},"content":"        }","lastModifiedDate":"2024-04-14"},{"lineNumber":176,"author":{"gitId":"Jaspertzx"},"content":"        internalOrderList.setAll(creationOrderList);","lastModifiedDate":"2024-04-14"},{"lineNumber":177,"author":{"gitId":"Jaspertzx"},"content":"    }","lastModifiedDate":"2024-04-14"},{"lineNumber":178,"author":{"gitId":"Jaspertzx"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":179,"author":{"gitId":"Jaspertzx"},"content":"    private void sortOrders() {","lastModifiedDate":"2024-04-14"},{"lineNumber":180,"author":{"gitId":"Jaspertzx"},"content":"        FXCollections.sort(internalOrderList, (order1, order2) -\u003e","lastModifiedDate":"2024-04-14"},{"lineNumber":181,"author":{"gitId":"Jaspertzx"},"content":"                order1.getDeadline().compareTo(order2.getDeadline()));","lastModifiedDate":"2024-04-14"},{"lineNumber":182,"author":{"gitId":"Jaspertzx"},"content":"    }","lastModifiedDate":"2024-04-14"},{"lineNumber":183,"author":{"gitId":"Jaspertzx"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":184,"author":{"gitId":"Jaspertzx"},"content":"    @Override","lastModifiedDate":"2024-04-14"},{"lineNumber":185,"author":{"gitId":"Jaspertzx"},"content":"    public Iterator\u003cClient\u003e iterator() {","lastModifiedDate":"2024-04-14"},{"lineNumber":186,"author":{"gitId":"Jaspertzx"},"content":"        return internalList.iterator();","lastModifiedDate":"2024-04-14"},{"lineNumber":187,"author":{"gitId":"Jaspertzx"},"content":"    }","lastModifiedDate":"2024-04-14"},{"lineNumber":188,"author":{"gitId":"Jaspertzx"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":189,"author":{"gitId":"Jaspertzx"},"content":"    @Override","lastModifiedDate":"2024-04-14"},{"lineNumber":190,"author":{"gitId":"Jaspertzx"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2024-04-14"},{"lineNumber":191,"author":{"gitId":"Jaspertzx"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2024-04-14"},{"lineNumber":192,"author":{"gitId":"Jaspertzx"},"content":"            return true;","lastModifiedDate":"2024-04-14"},{"lineNumber":193,"author":{"gitId":"Jaspertzx"},"content":"        }","lastModifiedDate":"2024-04-14"},{"lineNumber":194,"author":{"gitId":"Jaspertzx"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":195,"author":{"gitId":"Jaspertzx"},"content":"        // instanceof handles nulls","lastModifiedDate":"2024-04-14"},{"lineNumber":196,"author":{"gitId":"Jaspertzx"},"content":"        if (!(other instanceof UniqueClientList)) {","lastModifiedDate":"2024-04-14"},{"lineNumber":197,"author":{"gitId":"Jaspertzx"},"content":"            return false;","lastModifiedDate":"2024-04-14"},{"lineNumber":198,"author":{"gitId":"Jaspertzx"},"content":"        }","lastModifiedDate":"2024-04-14"},{"lineNumber":199,"author":{"gitId":"Jaspertzx"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":200,"author":{"gitId":"Jaspertzx"},"content":"        UniqueClientList otherUniqueClientList \u003d (UniqueClientList) other;","lastModifiedDate":"2024-04-14"},{"lineNumber":201,"author":{"gitId":"Jaspertzx"},"content":"        return internalList.equals(otherUniqueClientList.internalList);","lastModifiedDate":"2024-04-14"},{"lineNumber":202,"author":{"gitId":"Jaspertzx"},"content":"    }","lastModifiedDate":"2024-04-14"},{"lineNumber":203,"author":{"gitId":"Jaspertzx"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":204,"author":{"gitId":"Jaspertzx"},"content":"    @Override","lastModifiedDate":"2024-04-14"},{"lineNumber":205,"author":{"gitId":"Jaspertzx"},"content":"    public int hashCode() {","lastModifiedDate":"2024-04-14"},{"lineNumber":206,"author":{"gitId":"Jaspertzx"},"content":"        return internalList.hashCode();","lastModifiedDate":"2024-04-14"},{"lineNumber":207,"author":{"gitId":"Jaspertzx"},"content":"    }","lastModifiedDate":"2024-04-14"},{"lineNumber":208,"author":{"gitId":"Jaspertzx"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":209,"author":{"gitId":"Jaspertzx"},"content":"    @Override","lastModifiedDate":"2024-04-14"},{"lineNumber":210,"author":{"gitId":"Jaspertzx"},"content":"    public String toString() {","lastModifiedDate":"2024-04-14"},{"lineNumber":211,"author":{"gitId":"Jaspertzx"},"content":"        return internalList.toString();","lastModifiedDate":"2024-04-14"},{"lineNumber":212,"author":{"gitId":"Jaspertzx"},"content":"    }","lastModifiedDate":"2024-04-14"},{"lineNumber":213,"author":{"gitId":"Jaspertzx"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":214,"author":{"gitId":"Jaspertzx"},"content":"    /**","lastModifiedDate":"2024-04-14"},{"lineNumber":215,"author":{"gitId":"Jaspertzx"},"content":"     * Returns true if {@code clients} contains only unique clients.","lastModifiedDate":"2024-04-14"},{"lineNumber":216,"author":{"gitId":"Jaspertzx"},"content":"     */","lastModifiedDate":"2024-04-14"},{"lineNumber":217,"author":{"gitId":"Jaspertzx"},"content":"    private boolean clientsAreUnique(List\u003cClient\u003e clients) {","lastModifiedDate":"2024-04-14"},{"lineNumber":218,"author":{"gitId":"Jaspertzx"},"content":"        for (int i \u003d 0; i \u003c clients.size() - 1; i++) {","lastModifiedDate":"2024-04-14"},{"lineNumber":219,"author":{"gitId":"Jaspertzx"},"content":"            for (int j \u003d i + 1; j \u003c clients.size(); j++) {","lastModifiedDate":"2024-04-14"},{"lineNumber":220,"author":{"gitId":"Jaspertzx"},"content":"                if (clients.get(i).isSameClient(clients.get(j))) {","lastModifiedDate":"2024-04-14"},{"lineNumber":221,"author":{"gitId":"Jaspertzx"},"content":"                    return false;","lastModifiedDate":"2024-04-14"},{"lineNumber":222,"author":{"gitId":"Jaspertzx"},"content":"                }","lastModifiedDate":"2024-04-14"},{"lineNumber":223,"author":{"gitId":"Jaspertzx"},"content":"            }","lastModifiedDate":"2024-04-14"},{"lineNumber":224,"author":{"gitId":"Jaspertzx"},"content":"        }","lastModifiedDate":"2024-04-14"},{"lineNumber":225,"author":{"gitId":"Jaspertzx"},"content":"        return true;","lastModifiedDate":"2024-04-14"},{"lineNumber":226,"author":{"gitId":"Jaspertzx"},"content":"    }","lastModifiedDate":"2024-04-14"},{"lineNumber":227,"author":{"gitId":"Jaspertzx"},"content":"}","lastModifiedDate":"2024-04-14"}],"authorContributionMap":{"Jaspertzx":227}},{"path":"src/main/java/seedu/address/model/client/exceptions/ClientNotFoundException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Jaspertzx"},"content":"package seedu.address.model.client.exceptions;","lastModifiedDate":"2024-04-14"},{"lineNumber":2,"author":{"gitId":"Jaspertzx"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":3,"author":{"gitId":"Jaspertzx"},"content":"/**","lastModifiedDate":"2024-04-14"},{"lineNumber":4,"author":{"gitId":"Jaspertzx"},"content":" * Signals that the operation is unable to find the specified client.","lastModifiedDate":"2024-04-14"},{"lineNumber":5,"author":{"gitId":"Jaspertzx"},"content":" */","lastModifiedDate":"2024-04-14"},{"lineNumber":6,"author":{"gitId":"Jaspertzx"},"content":"public class ClientNotFoundException extends RuntimeException {}","lastModifiedDate":"2024-04-14"}],"authorContributionMap":{"Jaspertzx":6}},{"path":"src/main/java/seedu/address/model/client/exceptions/DuplicateClientException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Jaspertzx"},"content":"package seedu.address.model.client.exceptions;","lastModifiedDate":"2024-04-14"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-09"},{"lineNumber":4,"author":{"gitId":"Jaspertzx"},"content":" * Signals that the operation will result in duplicate Clients (Clients are considered duplicates if they have the same","lastModifiedDate":"2024-04-14"},{"lineNumber":5,"author":{"gitId":"-"},"content":" * identity).","lastModifiedDate":"2018-04-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-09"},{"lineNumber":7,"author":{"gitId":"Jaspertzx"},"content":"public class DuplicateClientException extends RuntimeException {","lastModifiedDate":"2024-04-14"},{"lineNumber":8,"author":{"gitId":"Jaspertzx"},"content":"    public DuplicateClientException() {","lastModifiedDate":"2024-04-14"},{"lineNumber":9,"author":{"gitId":"Jaspertzx"},"content":"        super(\"Operation would result in duplicate clients\");","lastModifiedDate":"2024-04-14"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-09"}],"authorContributionMap":{"Jaspertzx":5,"-":6}},{"path":"src/main/java/seedu/address/model/order/Deadline.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"rertyy"},"content":"package seedu.address.model.order;","lastModifiedDate":"2024-03-17"},{"lineNumber":2,"author":{"gitId":"rertyy"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":3,"author":{"gitId":"rertyy"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2024-03-17"},{"lineNumber":4,"author":{"gitId":"rertyy"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2024-03-17"},{"lineNumber":5,"author":{"gitId":"rertyy"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":6,"author":{"gitId":"rertyy"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-03-17"},{"lineNumber":7,"author":{"gitId":"rertyy"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":8,"author":{"gitId":"rertyy"},"content":"import seedu.address.commons.util.DateTimeUtil;","lastModifiedDate":"2024-03-17"},{"lineNumber":9,"author":{"gitId":"rertyy"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":10,"author":{"gitId":"rertyy"},"content":"/**","lastModifiedDate":"2024-03-17"},{"lineNumber":11,"author":{"gitId":"rertyy"},"content":" * Represents a Deadline that an order must be fulfilled","lastModifiedDate":"2024-03-17"},{"lineNumber":12,"author":{"gitId":"rertyy"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidDeadline(String)}.","lastModifiedDate":"2024-03-17"},{"lineNumber":13,"author":{"gitId":"rertyy"},"content":" */","lastModifiedDate":"2024-03-17"},{"lineNumber":14,"author":{"gitId":"Jaspertzx"},"content":"public class Deadline implements Comparable\u003cDeadline\u003e {","lastModifiedDate":"2024-04-03"},{"lineNumber":15,"author":{"gitId":"rertyy"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":16,"author":{"gitId":"rertyy"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2024-03-17"},{"lineNumber":17,"author":{"gitId":"rertyy"},"content":"            \"A deadline should be in the format of \"","lastModifiedDate":"2024-03-17"},{"lineNumber":18,"author":{"gitId":"rertyy"},"content":"                    + \"DD-MM-YYYY HH:MM, e.g. 01-01-2024 23:59\";","lastModifiedDate":"2024-03-17"},{"lineNumber":19,"author":{"gitId":"rertyy"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":20,"author":{"gitId":"rertyy"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":21,"author":{"gitId":"rertyy"},"content":"    public final LocalDateTime deadline;","lastModifiedDate":"2024-03-17"},{"lineNumber":22,"author":{"gitId":"rertyy"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":23,"author":{"gitId":"rertyy"},"content":"    /**","lastModifiedDate":"2024-03-17"},{"lineNumber":24,"author":{"gitId":"rertyy"},"content":"     * Constructs a {@code deadline}.","lastModifiedDate":"2024-03-17"},{"lineNumber":25,"author":{"gitId":"rertyy"},"content":"     *","lastModifiedDate":"2024-03-17"},{"lineNumber":26,"author":{"gitId":"rertyy"},"content":"     * @param deadline A valid deadline.","lastModifiedDate":"2024-03-17"},{"lineNumber":27,"author":{"gitId":"rertyy"},"content":"     */","lastModifiedDate":"2024-03-17"},{"lineNumber":28,"author":{"gitId":"rertyy"},"content":"    public Deadline(String deadline) {","lastModifiedDate":"2024-03-17"},{"lineNumber":29,"author":{"gitId":"rertyy"},"content":"        requireNonNull(deadline);","lastModifiedDate":"2024-03-17"},{"lineNumber":30,"author":{"gitId":"rertyy"},"content":"        checkArgument(isValidDeadline(deadline), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-17"},{"lineNumber":31,"author":{"gitId":"rertyy"},"content":"        this.deadline \u003d DateTimeUtil.parseDateTime(deadline);","lastModifiedDate":"2024-03-17"},{"lineNumber":32,"author":{"gitId":"rertyy"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":33,"author":{"gitId":"rertyy"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":34,"author":{"gitId":"rertyy"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":35,"author":{"gitId":"rertyy"},"content":"    /**","lastModifiedDate":"2024-03-17"},{"lineNumber":36,"author":{"gitId":"rertyy"},"content":"     * Returns true if a given string is a valid deadline.","lastModifiedDate":"2024-03-17"},{"lineNumber":37,"author":{"gitId":"rertyy"},"content":"     */","lastModifiedDate":"2024-03-17"},{"lineNumber":38,"author":{"gitId":"rertyy"},"content":"    public static boolean isValidDeadline(String test) {","lastModifiedDate":"2024-03-17"},{"lineNumber":39,"author":{"gitId":"rertyy"},"content":"        return DateTimeUtil.isValidDate(test);","lastModifiedDate":"2024-03-17"},{"lineNumber":40,"author":{"gitId":"rertyy"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":41,"author":{"gitId":"rertyy"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":42,"author":{"gitId":"Jaspertzx"},"content":"    @Override","lastModifiedDate":"2024-04-03"},{"lineNumber":43,"author":{"gitId":"Jaspertzx"},"content":"    public int compareTo(Deadline other) {","lastModifiedDate":"2024-04-03"},{"lineNumber":44,"author":{"gitId":"Jaspertzx"},"content":"        return this.deadline.compareTo(other.deadline);","lastModifiedDate":"2024-04-03"},{"lineNumber":45,"author":{"gitId":"Jaspertzx"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":46,"author":{"gitId":"rertyy"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":47,"author":{"gitId":"rertyy"},"content":"    @Override","lastModifiedDate":"2024-03-17"},{"lineNumber":48,"author":{"gitId":"rertyy"},"content":"    public String toString() {","lastModifiedDate":"2024-03-17"},{"lineNumber":49,"author":{"gitId":"rertyy"},"content":"        return DateTimeUtil.formatDateTime(deadline);","lastModifiedDate":"2024-03-20"},{"lineNumber":50,"author":{"gitId":"rertyy"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":51,"author":{"gitId":"rertyy"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":52,"author":{"gitId":"rertyy"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":53,"author":{"gitId":"rertyy"},"content":"    @Override","lastModifiedDate":"2024-03-17"},{"lineNumber":54,"author":{"gitId":"rertyy"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2024-03-17"},{"lineNumber":55,"author":{"gitId":"rertyy"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2024-03-17"},{"lineNumber":56,"author":{"gitId":"rertyy"},"content":"            return true;","lastModifiedDate":"2024-03-17"},{"lineNumber":57,"author":{"gitId":"rertyy"},"content":"        }","lastModifiedDate":"2024-03-17"},{"lineNumber":58,"author":{"gitId":"rertyy"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":59,"author":{"gitId":"rertyy"},"content":"        // instanceof handles nulls","lastModifiedDate":"2024-03-17"},{"lineNumber":60,"author":{"gitId":"rertyy"},"content":"        if (!(other instanceof Deadline)) {","lastModifiedDate":"2024-03-17"},{"lineNumber":61,"author":{"gitId":"rertyy"},"content":"            return false;","lastModifiedDate":"2024-03-17"},{"lineNumber":62,"author":{"gitId":"rertyy"},"content":"        }","lastModifiedDate":"2024-03-17"},{"lineNumber":63,"author":{"gitId":"rertyy"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":64,"author":{"gitId":"rertyy"},"content":"        Deadline otherDeadline \u003d (Deadline) other;","lastModifiedDate":"2024-03-17"},{"lineNumber":65,"author":{"gitId":"rertyy"},"content":"        return deadline.equals(otherDeadline.deadline);","lastModifiedDate":"2024-03-17"},{"lineNumber":66,"author":{"gitId":"rertyy"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":67,"author":{"gitId":"rertyy"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":68,"author":{"gitId":"rertyy"},"content":"    @Override","lastModifiedDate":"2024-03-17"},{"lineNumber":69,"author":{"gitId":"rertyy"},"content":"    public int hashCode() {","lastModifiedDate":"2024-03-17"},{"lineNumber":70,"author":{"gitId":"rertyy"},"content":"        return deadline.hashCode();","lastModifiedDate":"2024-03-17"},{"lineNumber":71,"author":{"gitId":"rertyy"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":72,"author":{"gitId":"rertyy"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":73,"author":{"gitId":"rertyy"},"content":"}","lastModifiedDate":"2024-03-17"}],"authorContributionMap":{"rertyy":68,"Jaspertzx":5}},{"path":"src/main/java/seedu/address/model/order/Order.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"rertyy"},"content":"package seedu.address.model.order;","lastModifiedDate":"2024-03-17"},{"lineNumber":2,"author":{"gitId":"rertyy"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":3,"author":{"gitId":"rertyy"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2024-03-29"},{"lineNumber":4,"author":{"gitId":"rertyy"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2024-03-23"},{"lineNumber":5,"author":{"gitId":"rertyy"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":6,"author":{"gitId":"rertyy"},"content":"import java.util.Objects;","lastModifiedDate":"2024-03-17"},{"lineNumber":7,"author":{"gitId":"rertyy"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":8,"author":{"gitId":"rertyy"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2024-03-17"},{"lineNumber":9,"author":{"gitId":"Jaspertzx"},"content":"import seedu.address.model.client.Client;","lastModifiedDate":"2024-04-14"},{"lineNumber":10,"author":{"gitId":"rertyy"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":11,"author":{"gitId":"rertyy"},"content":"/**","lastModifiedDate":"2024-03-17"},{"lineNumber":12,"author":{"gitId":"rertyy"},"content":" * Represents an Order.","lastModifiedDate":"2024-03-17"},{"lineNumber":13,"author":{"gitId":"rertyy"},"content":" */","lastModifiedDate":"2024-03-17"},{"lineNumber":14,"author":{"gitId":"rertyy"},"content":"public class Order {","lastModifiedDate":"2024-03-17"},{"lineNumber":15,"author":{"gitId":"rertyy"},"content":"    private final OrderId orderId;","lastModifiedDate":"2024-03-17"},{"lineNumber":16,"author":{"gitId":"rertyy"},"content":"    private final OrderDate orderDate;","lastModifiedDate":"2024-03-17"},{"lineNumber":17,"author":{"gitId":"rertyy"},"content":"    private final Deadline deadline;","lastModifiedDate":"2024-03-17"},{"lineNumber":18,"author":{"gitId":"kailinteoo"},"content":"    private final Price price;","lastModifiedDate":"2024-03-28"},{"lineNumber":19,"author":{"gitId":"rertyy"},"content":"    private final Remark remark;","lastModifiedDate":"2024-03-17"},{"lineNumber":20,"author":{"gitId":"rertyy"},"content":"    private final Status status;","lastModifiedDate":"2024-03-17"},{"lineNumber":21,"author":{"gitId":"Jaspertzx"},"content":"    private Client client;","lastModifiedDate":"2024-04-14"},{"lineNumber":22,"author":{"gitId":"rertyy"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":23,"author":{"gitId":"rertyy"},"content":"    /**","lastModifiedDate":"2024-03-17"},{"lineNumber":24,"author":{"gitId":"rertyy"},"content":"     * Every field must be present and not null.","lastModifiedDate":"2024-03-17"},{"lineNumber":25,"author":{"gitId":"rertyy"},"content":"     */","lastModifiedDate":"2024-03-17"},{"lineNumber":26,"author":{"gitId":"rertyy"},"content":"    public Order(OrderId orderId, OrderDate orderDate, Deadline deadline,","lastModifiedDate":"2024-03-17"},{"lineNumber":27,"author":{"gitId":"kailinteoo"},"content":"                 Price price, Remark remark, Status status","lastModifiedDate":"2024-03-28"},{"lineNumber":28,"author":{"gitId":"rertyy"},"content":"    ) {","lastModifiedDate":"2024-03-17"},{"lineNumber":29,"author":{"gitId":"kailinteoo"},"content":"        requireAllNonNull(orderId, orderDate, deadline, price, remark, status);","lastModifiedDate":"2024-03-28"},{"lineNumber":30,"author":{"gitId":"rertyy"},"content":"        this.orderId \u003d orderId;","lastModifiedDate":"2024-03-17"},{"lineNumber":31,"author":{"gitId":"rertyy"},"content":"        this.orderDate \u003d orderDate;","lastModifiedDate":"2024-03-17"},{"lineNumber":32,"author":{"gitId":"rertyy"},"content":"        this.deadline \u003d deadline;","lastModifiedDate":"2024-03-17"},{"lineNumber":33,"author":{"gitId":"kailinteoo"},"content":"        this.price \u003d price;","lastModifiedDate":"2024-03-28"},{"lineNumber":34,"author":{"gitId":"rertyy"},"content":"        this.remark \u003d remark;","lastModifiedDate":"2024-03-17"},{"lineNumber":35,"author":{"gitId":"rertyy"},"content":"        this.status \u003d status;","lastModifiedDate":"2024-03-17"},{"lineNumber":36,"author":{"gitId":"rertyy"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":37,"author":{"gitId":"rertyy"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":38,"author":{"gitId":"rertyy"},"content":"    /**","lastModifiedDate":"2024-03-29"},{"lineNumber":39,"author":{"gitId":"rertyy"},"content":"     * Every field must be present and not null.","lastModifiedDate":"2024-03-29"},{"lineNumber":40,"author":{"gitId":"rertyy"},"content":"     */","lastModifiedDate":"2024-03-29"},{"lineNumber":41,"author":{"gitId":"rertyy"},"content":"    public Order(OrderId orderId, OrderDate orderDate, Deadline deadline,","lastModifiedDate":"2024-03-29"},{"lineNumber":42,"author":{"gitId":"Jaspertzx"},"content":"                 Price price, Remark remark, Status status, Client client) {","lastModifiedDate":"2024-04-14"},{"lineNumber":43,"author":{"gitId":"Jaspertzx"},"content":"        requireAllNonNull(orderId, orderDate, deadline, price, remark, status, client);","lastModifiedDate":"2024-04-14"},{"lineNumber":44,"author":{"gitId":"rertyy"},"content":"        this.orderId \u003d orderId;","lastModifiedDate":"2024-03-29"},{"lineNumber":45,"author":{"gitId":"rertyy"},"content":"        this.orderDate \u003d orderDate;","lastModifiedDate":"2024-03-29"},{"lineNumber":46,"author":{"gitId":"rertyy"},"content":"        this.deadline \u003d deadline;","lastModifiedDate":"2024-03-29"},{"lineNumber":47,"author":{"gitId":"rertyy"},"content":"        this.price \u003d price;","lastModifiedDate":"2024-03-29"},{"lineNumber":48,"author":{"gitId":"rertyy"},"content":"        this.remark \u003d remark;","lastModifiedDate":"2024-03-29"},{"lineNumber":49,"author":{"gitId":"rertyy"},"content":"        this.status \u003d status;","lastModifiedDate":"2024-03-29"},{"lineNumber":50,"author":{"gitId":"Jaspertzx"},"content":"        this.client \u003d client;","lastModifiedDate":"2024-04-14"},{"lineNumber":51,"author":{"gitId":"rertyy"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":52,"author":{"gitId":"rertyy"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":53,"author":{"gitId":"rertyy"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":54,"author":{"gitId":"rertyy"},"content":"    public OrderId getOrderId() {","lastModifiedDate":"2024-03-17"},{"lineNumber":55,"author":{"gitId":"rertyy"},"content":"        return orderId;","lastModifiedDate":"2024-03-17"},{"lineNumber":56,"author":{"gitId":"rertyy"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":57,"author":{"gitId":"rertyy"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":58,"author":{"gitId":"rertyy"},"content":"    public OrderDate getOrderDate() {","lastModifiedDate":"2024-03-17"},{"lineNumber":59,"author":{"gitId":"rertyy"},"content":"        return orderDate;","lastModifiedDate":"2024-03-17"},{"lineNumber":60,"author":{"gitId":"rertyy"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":61,"author":{"gitId":"rertyy"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":62,"author":{"gitId":"rertyy"},"content":"    public Deadline getDeadline() {","lastModifiedDate":"2024-03-17"},{"lineNumber":63,"author":{"gitId":"rertyy"},"content":"        return deadline;","lastModifiedDate":"2024-03-17"},{"lineNumber":64,"author":{"gitId":"rertyy"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":65,"author":{"gitId":"rertyy"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":66,"author":{"gitId":"kailinteoo"},"content":"    public Price getPrice() {","lastModifiedDate":"2024-03-28"},{"lineNumber":67,"author":{"gitId":"kailinteoo"},"content":"        return price;","lastModifiedDate":"2024-03-28"},{"lineNumber":68,"author":{"gitId":"rertyy"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":69,"author":{"gitId":"rertyy"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":70,"author":{"gitId":"rertyy"},"content":"    public Remark getRemark() {","lastModifiedDate":"2024-03-17"},{"lineNumber":71,"author":{"gitId":"rertyy"},"content":"        return remark;","lastModifiedDate":"2024-03-17"},{"lineNumber":72,"author":{"gitId":"rertyy"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":73,"author":{"gitId":"rertyy"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":74,"author":{"gitId":"rertyy"},"content":"    public Status getStatus() {","lastModifiedDate":"2024-03-17"},{"lineNumber":75,"author":{"gitId":"rertyy"},"content":"        return status;","lastModifiedDate":"2024-03-17"},{"lineNumber":76,"author":{"gitId":"rertyy"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":77,"author":{"gitId":"rertyy"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":78,"author":{"gitId":"Jaspertzx"},"content":"    public boolean checkId(OrderId orderId) {","lastModifiedDate":"2024-03-20"},{"lineNumber":79,"author":{"gitId":"Jaspertzx"},"content":"        return this.getOrderId().equals(orderId);","lastModifiedDate":"2024-03-20"},{"lineNumber":80,"author":{"gitId":"Jaspertzx"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":81,"author":{"gitId":"Jaspertzx"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":82,"author":{"gitId":"Jaspertzx"},"content":"    public Client getClient() {","lastModifiedDate":"2024-04-14"},{"lineNumber":83,"author":{"gitId":"Jaspertzx"},"content":"        return client;","lastModifiedDate":"2024-04-14"},{"lineNumber":84,"author":{"gitId":"rertyy"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":85,"author":{"gitId":"rertyy"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":86,"author":{"gitId":"Jaspertzx"},"content":"    public void setClient(Client client) {","lastModifiedDate":"2024-04-14"},{"lineNumber":87,"author":{"gitId":"Jaspertzx"},"content":"        requireNonNull(client);","lastModifiedDate":"2024-04-14"},{"lineNumber":88,"author":{"gitId":"Jaspertzx"},"content":"        this.client \u003d client;","lastModifiedDate":"2024-04-14"},{"lineNumber":89,"author":{"gitId":"rertyy"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":90,"author":{"gitId":"rertyy"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":91,"author":{"gitId":"rertyy"},"content":"    @Override","lastModifiedDate":"2024-03-17"},{"lineNumber":92,"author":{"gitId":"rertyy"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2024-03-17"},{"lineNumber":93,"author":{"gitId":"rertyy"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2024-03-17"},{"lineNumber":94,"author":{"gitId":"rertyy"},"content":"            return true;","lastModifiedDate":"2024-03-17"},{"lineNumber":95,"author":{"gitId":"rertyy"},"content":"        }","lastModifiedDate":"2024-03-17"},{"lineNumber":96,"author":{"gitId":"rertyy"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":97,"author":{"gitId":"rertyy"},"content":"        if (!(other instanceof Order)) {","lastModifiedDate":"2024-03-17"},{"lineNumber":98,"author":{"gitId":"rertyy"},"content":"            return false;","lastModifiedDate":"2024-03-17"},{"lineNumber":99,"author":{"gitId":"rertyy"},"content":"        }","lastModifiedDate":"2024-03-17"},{"lineNumber":100,"author":{"gitId":"rertyy"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":101,"author":{"gitId":"rertyy"},"content":"        Order otherOrder \u003d (Order) other;","lastModifiedDate":"2024-03-17"},{"lineNumber":102,"author":{"gitId":"rertyy"},"content":"        return otherOrder.getOrderId().equals(getOrderId())","lastModifiedDate":"2024-03-17"},{"lineNumber":103,"author":{"gitId":"rertyy"},"content":"                \u0026\u0026 otherOrder.getOrderDate().equals(getOrderDate())","lastModifiedDate":"2024-03-17"},{"lineNumber":104,"author":{"gitId":"rertyy"},"content":"                \u0026\u0026 otherOrder.getDeadline().equals(getDeadline())","lastModifiedDate":"2024-03-17"},{"lineNumber":105,"author":{"gitId":"kailinteoo"},"content":"                \u0026\u0026 otherOrder.getPrice().equals(getPrice())","lastModifiedDate":"2024-03-28"},{"lineNumber":106,"author":{"gitId":"rertyy"},"content":"                \u0026\u0026 otherOrder.getRemark().equals(getRemark())","lastModifiedDate":"2024-03-17"},{"lineNumber":107,"author":{"gitId":"rertyy"},"content":"                \u0026\u0026 otherOrder.getStatus().equals(getStatus())","lastModifiedDate":"2024-03-29"},{"lineNumber":108,"author":{"gitId":"Jaspertzx"},"content":"                \u0026\u0026 Objects.equals(otherOrder.getClient(), getClient());","lastModifiedDate":"2024-04-14"},{"lineNumber":109,"author":{"gitId":"rertyy"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":110,"author":{"gitId":"rertyy"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":111,"author":{"gitId":"rertyy"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":112,"author":{"gitId":"rertyy"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":113,"author":{"gitId":"rertyy"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":114,"author":{"gitId":"rertyy"},"content":"    @Override","lastModifiedDate":"2024-03-17"},{"lineNumber":115,"author":{"gitId":"rertyy"},"content":"    public int hashCode() {","lastModifiedDate":"2024-03-17"},{"lineNumber":116,"author":{"gitId":"kailinteoo"},"content":"        return Objects.hash(orderId, orderDate, deadline, price, remark, status);","lastModifiedDate":"2024-03-28"},{"lineNumber":117,"author":{"gitId":"rertyy"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":118,"author":{"gitId":"rertyy"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":119,"author":{"gitId":"rertyy"},"content":"    @Override","lastModifiedDate":"2024-03-17"},{"lineNumber":120,"author":{"gitId":"rertyy"},"content":"    public String toString() {","lastModifiedDate":"2024-03-17"},{"lineNumber":121,"author":{"gitId":"Jaspertzx"},"content":"        // Intentionally do not include Client within the order to prevent infinite loop","lastModifiedDate":"2024-04-14"},{"lineNumber":122,"author":{"gitId":"rertyy"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2024-03-17"},{"lineNumber":123,"author":{"gitId":"rertyy"},"content":"                .add(\"orderId\", orderId)","lastModifiedDate":"2024-03-17"},{"lineNumber":124,"author":{"gitId":"rertyy"},"content":"                .add(\"orderDate\", orderDate)","lastModifiedDate":"2024-03-17"},{"lineNumber":125,"author":{"gitId":"rertyy"},"content":"                .add(\"deadline\", deadline)","lastModifiedDate":"2024-03-17"},{"lineNumber":126,"author":{"gitId":"kailinteoo"},"content":"                .add(\"price\", price)","lastModifiedDate":"2024-03-28"},{"lineNumber":127,"author":{"gitId":"rertyy"},"content":"                .add(\"remark\", remark)","lastModifiedDate":"2024-03-17"},{"lineNumber":128,"author":{"gitId":"rertyy"},"content":"                .add(\"status\", status)","lastModifiedDate":"2024-03-17"},{"lineNumber":129,"author":{"gitId":"rertyy"},"content":"                .toString();","lastModifiedDate":"2024-03-17"},{"lineNumber":130,"author":{"gitId":"rertyy"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":131,"author":{"gitId":"kailinteoo"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":132,"author":{"gitId":"rertyy"},"content":"}","lastModifiedDate":"2024-03-17"}],"authorContributionMap":{"kailinteoo":10,"rertyy":106,"Jaspertzx":16}},{"path":"src/main/java/seedu/address/model/order/OrderDate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"rertyy"},"content":"package seedu.address.model.order;","lastModifiedDate":"2024-03-17"},{"lineNumber":2,"author":{"gitId":"rertyy"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":3,"author":{"gitId":"rertyy"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2024-03-17"},{"lineNumber":4,"author":{"gitId":"rertyy"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2024-03-17"},{"lineNumber":5,"author":{"gitId":"rertyy"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":6,"author":{"gitId":"rertyy"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-03-17"},{"lineNumber":7,"author":{"gitId":"rertyy"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":8,"author":{"gitId":"rertyy"},"content":"import seedu.address.commons.util.DateTimeUtil;","lastModifiedDate":"2024-03-17"},{"lineNumber":9,"author":{"gitId":"rertyy"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":10,"author":{"gitId":"rertyy"},"content":"/**","lastModifiedDate":"2024-03-17"},{"lineNumber":11,"author":{"gitId":"rertyy"},"content":" * Represents the date an order was placed.","lastModifiedDate":"2024-03-17"},{"lineNumber":12,"author":{"gitId":"rertyy"},"content":" */","lastModifiedDate":"2024-03-17"},{"lineNumber":13,"author":{"gitId":"rertyy"},"content":"public class OrderDate {","lastModifiedDate":"2024-03-17"},{"lineNumber":14,"author":{"gitId":"kailinteoo"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2024-03-18"},{"lineNumber":15,"author":{"gitId":"rertyy"},"content":"            \"Order date should be in the format of DD-MM-YYYY HH:MM, e.g. 01-01-2024 23:59\";","lastModifiedDate":"2024-03-17"},{"lineNumber":16,"author":{"gitId":"rertyy"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":17,"author":{"gitId":"kailinteoo"},"content":"    private final LocalDateTime orderDate;","lastModifiedDate":"2024-03-18"},{"lineNumber":18,"author":{"gitId":"rertyy"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":19,"author":{"gitId":"rertyy"},"content":"    /**","lastModifiedDate":"2024-03-17"},{"lineNumber":20,"author":{"gitId":"rertyy"},"content":"     * Constructs a {@code OrderDate}.","lastModifiedDate":"2024-03-17"},{"lineNumber":21,"author":{"gitId":"rertyy"},"content":"     *","lastModifiedDate":"2024-03-17"},{"lineNumber":22,"author":{"gitId":"rertyy"},"content":"     * @param orderDate A valid order date.","lastModifiedDate":"2024-03-17"},{"lineNumber":23,"author":{"gitId":"rertyy"},"content":"     */","lastModifiedDate":"2024-03-17"},{"lineNumber":24,"author":{"gitId":"rertyy"},"content":"    public OrderDate(String orderDate) {","lastModifiedDate":"2024-03-17"},{"lineNumber":25,"author":{"gitId":"rertyy"},"content":"        requireNonNull(orderDate);","lastModifiedDate":"2024-03-17"},{"lineNumber":26,"author":{"gitId":"rertyy"},"content":"        checkArgument(isValidOrderDate(orderDate), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-17"},{"lineNumber":27,"author":{"gitId":"rertyy"},"content":"        this.orderDate \u003d DateTimeUtil.parseDateTime(orderDate);","lastModifiedDate":"2024-03-17"},{"lineNumber":28,"author":{"gitId":"rertyy"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":29,"author":{"gitId":"rertyy"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":30,"author":{"gitId":"rertyy"},"content":"    public static boolean isValidOrderDate(String orderDate) {","lastModifiedDate":"2024-03-17"},{"lineNumber":31,"author":{"gitId":"rertyy"},"content":"        return DateTimeUtil.isValidDate(orderDate);","lastModifiedDate":"2024-03-17"},{"lineNumber":32,"author":{"gitId":"rertyy"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":33,"author":{"gitId":"rertyy"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":34,"author":{"gitId":"rertyy"},"content":"    @Override","lastModifiedDate":"2024-03-17"},{"lineNumber":35,"author":{"gitId":"rertyy"},"content":"    public String toString() {","lastModifiedDate":"2024-03-17"},{"lineNumber":36,"author":{"gitId":"rertyy"},"content":"        return DateTimeUtil.formatDateTime(orderDate);","lastModifiedDate":"2024-03-20"},{"lineNumber":37,"author":{"gitId":"rertyy"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":38,"author":{"gitId":"rertyy"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":39,"author":{"gitId":"rertyy"},"content":"    @Override","lastModifiedDate":"2024-03-17"},{"lineNumber":40,"author":{"gitId":"rertyy"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2024-03-17"},{"lineNumber":41,"author":{"gitId":"rertyy"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2024-03-17"},{"lineNumber":42,"author":{"gitId":"rertyy"},"content":"            return true;","lastModifiedDate":"2024-03-17"},{"lineNumber":43,"author":{"gitId":"rertyy"},"content":"        }","lastModifiedDate":"2024-03-17"},{"lineNumber":44,"author":{"gitId":"rertyy"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":45,"author":{"gitId":"rertyy"},"content":"        if (!(other instanceof OrderDate)) {","lastModifiedDate":"2024-03-17"},{"lineNumber":46,"author":{"gitId":"rertyy"},"content":"            return false;","lastModifiedDate":"2024-03-17"},{"lineNumber":47,"author":{"gitId":"rertyy"},"content":"        }","lastModifiedDate":"2024-03-17"},{"lineNumber":48,"author":{"gitId":"rertyy"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":49,"author":{"gitId":"rertyy"},"content":"        OrderDate otherOrderDate \u003d (OrderDate) other;","lastModifiedDate":"2024-03-17"},{"lineNumber":50,"author":{"gitId":"rertyy"},"content":"        return orderDate.equals(otherOrderDate.orderDate);","lastModifiedDate":"2024-03-17"},{"lineNumber":51,"author":{"gitId":"rertyy"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":52,"author":{"gitId":"rertyy"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":53,"author":{"gitId":"rertyy"},"content":"    @Override","lastModifiedDate":"2024-03-17"},{"lineNumber":54,"author":{"gitId":"rertyy"},"content":"    public int hashCode() {","lastModifiedDate":"2024-03-17"},{"lineNumber":55,"author":{"gitId":"rertyy"},"content":"        return orderDate.hashCode();","lastModifiedDate":"2024-03-17"},{"lineNumber":56,"author":{"gitId":"rertyy"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":57,"author":{"gitId":"rertyy"},"content":"}","lastModifiedDate":"2024-03-17"}],"authorContributionMap":{"kailinteoo":2,"rertyy":55}},{"path":"src/main/java/seedu/address/model/order/OrderId.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"rertyy"},"content":"package seedu.address.model.order;","lastModifiedDate":"2024-03-17"},{"lineNumber":2,"author":{"gitId":"rertyy"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":3,"author":{"gitId":"rertyy"},"content":"import java.util.UUID;","lastModifiedDate":"2024-03-17"},{"lineNumber":4,"author":{"gitId":"rertyy"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":5,"author":{"gitId":"rertyy"},"content":"/**","lastModifiedDate":"2024-03-17"},{"lineNumber":6,"author":{"gitId":"rertyy"},"content":" * Represents an Order\u0027s ID in the order book.","lastModifiedDate":"2024-03-17"},{"lineNumber":7,"author":{"gitId":"rertyy"},"content":" * Guarantees: immutable.","lastModifiedDate":"2024-03-17"},{"lineNumber":8,"author":{"gitId":"rertyy"},"content":" */","lastModifiedDate":"2024-03-17"},{"lineNumber":9,"author":{"gitId":"rertyy"},"content":"public class OrderId {","lastModifiedDate":"2024-03-17"},{"lineNumber":10,"author":{"gitId":"kailinteoo"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":11,"author":{"gitId":"kailinteoo"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Order ID should be a valid UUID\";","lastModifiedDate":"2024-03-19"},{"lineNumber":12,"author":{"gitId":"kailinteoo"},"content":"    private final UUID id;","lastModifiedDate":"2024-03-18"},{"lineNumber":13,"author":{"gitId":"rertyy"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":14,"author":{"gitId":"rertyy"},"content":"    /**","lastModifiedDate":"2024-03-17"},{"lineNumber":15,"author":{"gitId":"rertyy"},"content":"     * Constructs an {@code OrderId}.","lastModifiedDate":"2024-03-17"},{"lineNumber":16,"author":{"gitId":"rertyy"},"content":"     */","lastModifiedDate":"2024-03-17"},{"lineNumber":17,"author":{"gitId":"rertyy"},"content":"    public OrderId() {","lastModifiedDate":"2024-03-17"},{"lineNumber":18,"author":{"gitId":"rertyy"},"content":"        this.id \u003d UUID.randomUUID();","lastModifiedDate":"2024-03-17"},{"lineNumber":19,"author":{"gitId":"rertyy"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":20,"author":{"gitId":"rertyy"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":21,"author":{"gitId":"rertyy"},"content":"    /**","lastModifiedDate":"2024-03-17"},{"lineNumber":22,"author":{"gitId":"rertyy"},"content":"     * Constructs an {@code OrderId} from a UUID.","lastModifiedDate":"2024-03-17"},{"lineNumber":23,"author":{"gitId":"rertyy"},"content":"     *","lastModifiedDate":"2024-03-17"},{"lineNumber":24,"author":{"gitId":"rertyy"},"content":"     * @param id UUID to be used as the OrderId.","lastModifiedDate":"2024-03-17"},{"lineNumber":25,"author":{"gitId":"rertyy"},"content":"     */","lastModifiedDate":"2024-03-17"},{"lineNumber":26,"author":{"gitId":"kailinteoo"},"content":"    public OrderId(String id) throws IllegalArgumentException {","lastModifiedDate":"2024-03-19"},{"lineNumber":27,"author":{"gitId":"rertyy"},"content":"        this.id \u003d UUID.fromString(id);","lastModifiedDate":"2024-03-17"},{"lineNumber":28,"author":{"gitId":"rertyy"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":29,"author":{"gitId":"rertyy"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":30,"author":{"gitId":"kailinteoo"},"content":"    /**","lastModifiedDate":"2024-03-19"},{"lineNumber":31,"author":{"gitId":"Jaspertzx"},"content":"     * Checks whether a OrderId string is valid.","lastModifiedDate":"2024-03-20"},{"lineNumber":32,"author":{"gitId":"kailinteoo"},"content":"     *","lastModifiedDate":"2024-03-19"},{"lineNumber":33,"author":{"gitId":"kailinteoo"},"content":"     * @param test String to be tested.","lastModifiedDate":"2024-03-19"},{"lineNumber":34,"author":{"gitId":"kailinteoo"},"content":"     * @return true if the string is a valid UUID, false otherwise.","lastModifiedDate":"2024-03-19"},{"lineNumber":35,"author":{"gitId":"kailinteoo"},"content":"     */","lastModifiedDate":"2024-03-19"},{"lineNumber":36,"author":{"gitId":"kailinteoo"},"content":"    public static boolean isValidOrderId(String test) {","lastModifiedDate":"2024-03-19"},{"lineNumber":37,"author":{"gitId":"kailinteoo"},"content":"        try {","lastModifiedDate":"2024-03-19"},{"lineNumber":38,"author":{"gitId":"kailinteoo"},"content":"            UUID.fromString(test);","lastModifiedDate":"2024-03-19"},{"lineNumber":39,"author":{"gitId":"kailinteoo"},"content":"            return true;","lastModifiedDate":"2024-03-19"},{"lineNumber":40,"author":{"gitId":"kailinteoo"},"content":"        } catch (IllegalArgumentException e) {","lastModifiedDate":"2024-03-19"},{"lineNumber":41,"author":{"gitId":"kailinteoo"},"content":"            return false;","lastModifiedDate":"2024-03-19"},{"lineNumber":42,"author":{"gitId":"kailinteoo"},"content":"        }","lastModifiedDate":"2024-03-19"},{"lineNumber":43,"author":{"gitId":"kailinteoo"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":44,"author":{"gitId":"kailinteoo"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":45,"author":{"gitId":"kailinteoo"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":46,"author":{"gitId":"rertyy"},"content":"    @Override","lastModifiedDate":"2024-03-17"},{"lineNumber":47,"author":{"gitId":"rertyy"},"content":"    public String toString() {","lastModifiedDate":"2024-03-17"},{"lineNumber":48,"author":{"gitId":"rertyy"},"content":"        return id.toString();","lastModifiedDate":"2024-03-17"},{"lineNumber":49,"author":{"gitId":"rertyy"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":50,"author":{"gitId":"rertyy"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":51,"author":{"gitId":"rertyy"},"content":"    @Override","lastModifiedDate":"2024-03-17"},{"lineNumber":52,"author":{"gitId":"rertyy"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2024-03-17"},{"lineNumber":53,"author":{"gitId":"rertyy"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2024-03-17"},{"lineNumber":54,"author":{"gitId":"rertyy"},"content":"            return true;","lastModifiedDate":"2024-03-17"},{"lineNumber":55,"author":{"gitId":"rertyy"},"content":"        }","lastModifiedDate":"2024-03-17"},{"lineNumber":56,"author":{"gitId":"rertyy"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":57,"author":{"gitId":"rertyy"},"content":"        if (other instanceof String) {","lastModifiedDate":"2024-03-17"},{"lineNumber":58,"author":{"gitId":"rertyy"},"content":"            return id.toString().equals(other);","lastModifiedDate":"2024-03-17"},{"lineNumber":59,"author":{"gitId":"rertyy"},"content":"        }","lastModifiedDate":"2024-03-17"},{"lineNumber":60,"author":{"gitId":"rertyy"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":61,"author":{"gitId":"rertyy"},"content":"        if (other instanceof OrderId) {","lastModifiedDate":"2024-03-17"},{"lineNumber":62,"author":{"gitId":"rertyy"},"content":"            OrderId otherOrderId \u003d (OrderId) other;","lastModifiedDate":"2024-03-17"},{"lineNumber":63,"author":{"gitId":"rertyy"},"content":"            return id.equals(otherOrderId.id);","lastModifiedDate":"2024-03-17"},{"lineNumber":64,"author":{"gitId":"rertyy"},"content":"        }","lastModifiedDate":"2024-03-17"},{"lineNumber":65,"author":{"gitId":"rertyy"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":66,"author":{"gitId":"rertyy"},"content":"        return false;","lastModifiedDate":"2024-03-17"},{"lineNumber":67,"author":{"gitId":"rertyy"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":68,"author":{"gitId":"rertyy"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":69,"author":{"gitId":"rertyy"},"content":"    @Override","lastModifiedDate":"2024-03-17"},{"lineNumber":70,"author":{"gitId":"rertyy"},"content":"    public int hashCode() {","lastModifiedDate":"2024-03-17"},{"lineNumber":71,"author":{"gitId":"rertyy"},"content":"        return id.hashCode();","lastModifiedDate":"2024-03-17"},{"lineNumber":72,"author":{"gitId":"rertyy"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":73,"author":{"gitId":"rertyy"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":74,"author":{"gitId":"rertyy"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":75,"author":{"gitId":"rertyy"},"content":"}","lastModifiedDate":"2024-03-17"}],"authorContributionMap":{"kailinteoo":19,"rertyy":55,"Jaspertzx":1}},{"path":"src/main/java/seedu/address/model/order/OrderNameContainsKeywordsPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"shavonneg"},"content":"package seedu.address.model.order;","lastModifiedDate":"2024-03-19"},{"lineNumber":2,"author":{"gitId":"shavonneg"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":3,"author":{"gitId":"shavonneg"},"content":"import java.util.List;","lastModifiedDate":"2024-03-19"},{"lineNumber":4,"author":{"gitId":"shavonneg"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2024-03-19"},{"lineNumber":5,"author":{"gitId":"shavonneg"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":6,"author":{"gitId":"shavonneg"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2024-03-19"},{"lineNumber":7,"author":{"gitId":"shavonneg"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2024-03-19"},{"lineNumber":8,"author":{"gitId":"shavonneg"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":9,"author":{"gitId":"shavonneg"},"content":"/**","lastModifiedDate":"2024-03-19"},{"lineNumber":10,"author":{"gitId":"shavonneg"},"content":" * Tests that an {@code Order}\u0027s name matches any of the keywords given.","lastModifiedDate":"2024-03-19"},{"lineNumber":11,"author":{"gitId":"shavonneg"},"content":" */","lastModifiedDate":"2024-03-19"},{"lineNumber":12,"author":{"gitId":"shavonneg"},"content":"public class OrderNameContainsKeywordsPredicate implements Predicate\u003cOrder\u003e {","lastModifiedDate":"2024-03-19"},{"lineNumber":13,"author":{"gitId":"shavonneg"},"content":"    private final List\u003cString\u003e keywords;","lastModifiedDate":"2024-03-19"},{"lineNumber":14,"author":{"gitId":"shavonneg"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":15,"author":{"gitId":"shavonneg"},"content":"    public OrderNameContainsKeywordsPredicate(List\u003cString\u003e keywords) {","lastModifiedDate":"2024-03-19"},{"lineNumber":16,"author":{"gitId":"shavonneg"},"content":"        this.keywords \u003d keywords;","lastModifiedDate":"2024-03-19"},{"lineNumber":17,"author":{"gitId":"shavonneg"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":18,"author":{"gitId":"shavonneg"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":19,"author":{"gitId":"shavonneg"},"content":"    @Override","lastModifiedDate":"2024-03-19"},{"lineNumber":20,"author":{"gitId":"shavonneg"},"content":"    public boolean test(Order order) {","lastModifiedDate":"2024-03-19"},{"lineNumber":21,"author":{"gitId":"shavonneg"},"content":"        return keywords.stream()","lastModifiedDate":"2024-03-19"},{"lineNumber":22,"author":{"gitId":"shavonneg"},"content":"                .anyMatch(keyword -\u003e StringUtil.containsWordIgnoreCase(order.getRemark().toString(), keyword));","lastModifiedDate":"2024-03-19"},{"lineNumber":23,"author":{"gitId":"shavonneg"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":24,"author":{"gitId":"shavonneg"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":25,"author":{"gitId":"shavonneg"},"content":"    @Override","lastModifiedDate":"2024-03-19"},{"lineNumber":26,"author":{"gitId":"shavonneg"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2024-03-19"},{"lineNumber":27,"author":{"gitId":"shavonneg"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2024-03-19"},{"lineNumber":28,"author":{"gitId":"shavonneg"},"content":"            return true;","lastModifiedDate":"2024-03-19"},{"lineNumber":29,"author":{"gitId":"shavonneg"},"content":"        }","lastModifiedDate":"2024-03-19"},{"lineNumber":30,"author":{"gitId":"shavonneg"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":31,"author":{"gitId":"shavonneg"},"content":"        if (!(other instanceof OrderNameContainsKeywordsPredicate)) {","lastModifiedDate":"2024-03-19"},{"lineNumber":32,"author":{"gitId":"shavonneg"},"content":"            return false;","lastModifiedDate":"2024-03-19"},{"lineNumber":33,"author":{"gitId":"shavonneg"},"content":"        }","lastModifiedDate":"2024-03-19"},{"lineNumber":34,"author":{"gitId":"shavonneg"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":35,"author":{"gitId":"shavonneg"},"content":"        OrderNameContainsKeywordsPredicate otherPredicate \u003d (OrderNameContainsKeywordsPredicate) other;","lastModifiedDate":"2024-03-19"},{"lineNumber":36,"author":{"gitId":"shavonneg"},"content":"        return keywords.equals(otherPredicate.keywords);","lastModifiedDate":"2024-03-19"},{"lineNumber":37,"author":{"gitId":"shavonneg"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":38,"author":{"gitId":"shavonneg"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":39,"author":{"gitId":"shavonneg"},"content":"    @Override","lastModifiedDate":"2024-03-19"},{"lineNumber":40,"author":{"gitId":"shavonneg"},"content":"    public String toString() {","lastModifiedDate":"2024-03-19"},{"lineNumber":41,"author":{"gitId":"shavonneg"},"content":"        return new ToStringBuilder(this).add(\"keywords\", keywords).toString();","lastModifiedDate":"2024-03-19"},{"lineNumber":42,"author":{"gitId":"shavonneg"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":43,"author":{"gitId":"shavonneg"},"content":"}","lastModifiedDate":"2024-03-19"}],"authorContributionMap":{"shavonneg":43}},{"path":"src/main/java/seedu/address/model/order/Price.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"rertyy"},"content":"package seedu.address.model.order;","lastModifiedDate":"2024-03-17"},{"lineNumber":2,"author":{"gitId":"rertyy"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":3,"author":{"gitId":"rertyy"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2024-03-17"},{"lineNumber":4,"author":{"gitId":"rertyy"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2024-03-17"},{"lineNumber":5,"author":{"gitId":"rertyy"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":6,"author":{"gitId":"kailinteoo"},"content":"import java.text.DecimalFormat;","lastModifiedDate":"2024-03-29"},{"lineNumber":7,"author":{"gitId":"kailinteoo"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":8,"author":{"gitId":"kailinteoo"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":9,"author":{"gitId":"rertyy"},"content":"/**","lastModifiedDate":"2024-03-17"},{"lineNumber":10,"author":{"gitId":"kailinteoo"},"content":" * Represents the price of items for the order in the order book.","lastModifiedDate":"2024-03-28"},{"lineNumber":11,"author":{"gitId":"kailinteoo"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidPrice(String)}","lastModifiedDate":"2024-03-28"},{"lineNumber":12,"author":{"gitId":"rertyy"},"content":" */","lastModifiedDate":"2024-03-17"},{"lineNumber":13,"author":{"gitId":"kailinteoo"},"content":"public class Price {","lastModifiedDate":"2024-03-28"},{"lineNumber":14,"author":{"gitId":"rertyy"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":15,"author":{"gitId":"rertyy"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2024-03-17"},{"lineNumber":16,"author":{"gitId":"rertyy"},"content":"            \"Price must be a positive number and can only include up to two decimal places\";","lastModifiedDate":"2024-04-13"},{"lineNumber":17,"author":{"gitId":"kailinteoo"},"content":"    public final double value;","lastModifiedDate":"2024-03-29"},{"lineNumber":18,"author":{"gitId":"rertyy"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":19,"author":{"gitId":"rertyy"},"content":"    /**","lastModifiedDate":"2024-03-17"},{"lineNumber":20,"author":{"gitId":"kailinteoo"},"content":"     * Constructs a {@code Price}.","lastModifiedDate":"2024-03-28"},{"lineNumber":21,"author":{"gitId":"rertyy"},"content":"     *","lastModifiedDate":"2024-03-17"},{"lineNumber":22,"author":{"gitId":"kailinteoo"},"content":"     * @param value A valid price.","lastModifiedDate":"2024-03-28"},{"lineNumber":23,"author":{"gitId":"rertyy"},"content":"     */","lastModifiedDate":"2024-03-17"},{"lineNumber":24,"author":{"gitId":"kailinteoo"},"content":"    public Price(String value) {","lastModifiedDate":"2024-03-28"},{"lineNumber":25,"author":{"gitId":"rertyy"},"content":"        requireNonNull(value);","lastModifiedDate":"2024-03-17"},{"lineNumber":26,"author":{"gitId":"kailinteoo"},"content":"        checkArgument(isValidPrice(value), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-28"},{"lineNumber":27,"author":{"gitId":"kailinteoo"},"content":"        this.value \u003d truncateToTwoDecimalPlaces(Double.parseDouble(value));","lastModifiedDate":"2024-03-29"},{"lineNumber":28,"author":{"gitId":"rertyy"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":29,"author":{"gitId":"rertyy"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":30,"author":{"gitId":"rertyy"},"content":"    /**","lastModifiedDate":"2024-03-17"},{"lineNumber":31,"author":{"gitId":"kailinteoo"},"content":"     * Returns true if a given double is a valid price.","lastModifiedDate":"2024-03-28"},{"lineNumber":32,"author":{"gitId":"rertyy"},"content":"     *","lastModifiedDate":"2024-03-17"},{"lineNumber":33,"author":{"gitId":"kailinteoo"},"content":"     * @param test the price to be tested","lastModifiedDate":"2024-03-28"},{"lineNumber":34,"author":{"gitId":"kailinteoo"},"content":"     * @return true if the price is valid","lastModifiedDate":"2024-03-28"},{"lineNumber":35,"author":{"gitId":"rertyy"},"content":"     */","lastModifiedDate":"2024-03-17"},{"lineNumber":36,"author":{"gitId":"kailinteoo"},"content":"    public static boolean isValidPrice(String test) {","lastModifiedDate":"2024-03-28"},{"lineNumber":37,"author":{"gitId":"Jaspertzx"},"content":"        return (!test.isEmpty()) \u0026\u0026 Double.parseDouble(test) \u003e\u003d 0;","lastModifiedDate":"2024-04-14"},{"lineNumber":38,"author":{"gitId":"kailinteoo"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":39,"author":{"gitId":"kailinteoo"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":40,"author":{"gitId":"kailinteoo"},"content":"    /**","lastModifiedDate":"2024-03-29"},{"lineNumber":41,"author":{"gitId":"kailinteoo"},"content":"     * Truncates a double value to two decimal places.","lastModifiedDate":"2024-03-29"},{"lineNumber":42,"author":{"gitId":"kailinteoo"},"content":"     *","lastModifiedDate":"2024-03-29"},{"lineNumber":43,"author":{"gitId":"kailinteoo"},"content":"     * @param value the double value to be truncated","lastModifiedDate":"2024-03-29"},{"lineNumber":44,"author":{"gitId":"kailinteoo"},"content":"     * @return the truncated value","lastModifiedDate":"2024-03-29"},{"lineNumber":45,"author":{"gitId":"kailinteoo"},"content":"     */","lastModifiedDate":"2024-03-29"},{"lineNumber":46,"author":{"gitId":"kailinteoo"},"content":"    private double truncateToTwoDecimalPlaces(double value) {","lastModifiedDate":"2024-03-29"},{"lineNumber":47,"author":{"gitId":"kailinteoo"},"content":"        DecimalFormat df \u003d new DecimalFormat(\"#.##\");","lastModifiedDate":"2024-03-29"},{"lineNumber":48,"author":{"gitId":"kailinteoo"},"content":"        return Double.parseDouble(df.format(value));","lastModifiedDate":"2024-03-29"},{"lineNumber":49,"author":{"gitId":"rertyy"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":50,"author":{"gitId":"rertyy"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":51,"author":{"gitId":"rertyy"},"content":"    @Override","lastModifiedDate":"2024-03-17"},{"lineNumber":52,"author":{"gitId":"rertyy"},"content":"    public String toString() {","lastModifiedDate":"2024-03-17"},{"lineNumber":53,"author":{"gitId":"Jaspertzx"},"content":"        return String.format(\"%.2f\", value);","lastModifiedDate":"2024-04-08"},{"lineNumber":54,"author":{"gitId":"rertyy"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":55,"author":{"gitId":"rertyy"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":56,"author":{"gitId":"rertyy"},"content":"    @Override","lastModifiedDate":"2024-03-17"},{"lineNumber":57,"author":{"gitId":"rertyy"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2024-03-17"},{"lineNumber":58,"author":{"gitId":"rertyy"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2024-03-17"},{"lineNumber":59,"author":{"gitId":"rertyy"},"content":"            return true;","lastModifiedDate":"2024-03-17"},{"lineNumber":60,"author":{"gitId":"rertyy"},"content":"        }","lastModifiedDate":"2024-03-17"},{"lineNumber":61,"author":{"gitId":"rertyy"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":62,"author":{"gitId":"kailinteoo"},"content":"        if (!(other instanceof Price)) {","lastModifiedDate":"2024-03-28"},{"lineNumber":63,"author":{"gitId":"rertyy"},"content":"            return false;","lastModifiedDate":"2024-03-17"},{"lineNumber":64,"author":{"gitId":"rertyy"},"content":"        }","lastModifiedDate":"2024-03-17"},{"lineNumber":65,"author":{"gitId":"rertyy"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":66,"author":{"gitId":"kailinteoo"},"content":"        Price otherPrice \u003d (Price) other;","lastModifiedDate":"2024-03-28"},{"lineNumber":67,"author":{"gitId":"kailinteoo"},"content":"        return value \u003d\u003d otherPrice.value;","lastModifiedDate":"2024-03-28"},{"lineNumber":68,"author":{"gitId":"rertyy"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":69,"author":{"gitId":"rertyy"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":70,"author":{"gitId":"rertyy"},"content":"    @Override","lastModifiedDate":"2024-03-17"},{"lineNumber":71,"author":{"gitId":"rertyy"},"content":"    public int hashCode() {","lastModifiedDate":"2024-03-17"},{"lineNumber":72,"author":{"gitId":"kailinteoo"},"content":"        return Double.hashCode(value);","lastModifiedDate":"2024-03-29"},{"lineNumber":73,"author":{"gitId":"rertyy"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":74,"author":{"gitId":"rertyy"},"content":"}","lastModifiedDate":"2024-03-17"}],"authorContributionMap":{"kailinteoo":31,"rertyy":41,"Jaspertzx":2}},{"path":"src/main/java/seedu/address/model/order/Remark.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"rertyy"},"content":"package seedu.address.model.order;","lastModifiedDate":"2024-03-17"},{"lineNumber":2,"author":{"gitId":"rertyy"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":3,"author":{"gitId":"rertyy"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":4,"author":{"gitId":"rertyy"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2024-03-17"},{"lineNumber":5,"author":{"gitId":"rertyy"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2024-03-17"},{"lineNumber":6,"author":{"gitId":"rertyy"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":7,"author":{"gitId":"rertyy"},"content":"/**","lastModifiedDate":"2024-03-17"},{"lineNumber":8,"author":{"gitId":"rertyy"},"content":" * Represents the remark of an order in the order book.","lastModifiedDate":"2024-03-17"},{"lineNumber":9,"author":{"gitId":"rertyy"},"content":" */","lastModifiedDate":"2024-03-17"},{"lineNumber":10,"author":{"gitId":"rertyy"},"content":"public class Remark {","lastModifiedDate":"2024-03-17"},{"lineNumber":11,"author":{"gitId":"rertyy"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Description can take any values, and it should not be blank\";","lastModifiedDate":"2024-04-13"},{"lineNumber":12,"author":{"gitId":"rertyy"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":13,"author":{"gitId":"rertyy"},"content":"    /**","lastModifiedDate":"2024-03-17"},{"lineNumber":14,"author":{"gitId":"rertyy"},"content":"     * The first character of the remark must not be a whitespace,","lastModifiedDate":"2024-03-17"},{"lineNumber":15,"author":{"gitId":"rertyy"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2024-03-17"},{"lineNumber":16,"author":{"gitId":"rertyy"},"content":"     */","lastModifiedDate":"2024-03-17"},{"lineNumber":17,"author":{"gitId":"rertyy"},"content":"    public static final String VALIDATION_REGEX \u003d \"[^\\\\s].*\";","lastModifiedDate":"2024-03-17"},{"lineNumber":18,"author":{"gitId":"rertyy"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":19,"author":{"gitId":"rertyy"},"content":"    public final String value;","lastModifiedDate":"2024-03-17"},{"lineNumber":20,"author":{"gitId":"rertyy"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":21,"author":{"gitId":"rertyy"},"content":"    /**","lastModifiedDate":"2024-03-17"},{"lineNumber":22,"author":{"gitId":"rertyy"},"content":"     * Constructs a {@code Remark}.","lastModifiedDate":"2024-03-17"},{"lineNumber":23,"author":{"gitId":"rertyy"},"content":"     *","lastModifiedDate":"2024-03-17"},{"lineNumber":24,"author":{"gitId":"rertyy"},"content":"     * @param remark A valid remark.","lastModifiedDate":"2024-03-17"},{"lineNumber":25,"author":{"gitId":"rertyy"},"content":"     */","lastModifiedDate":"2024-03-17"},{"lineNumber":26,"author":{"gitId":"rertyy"},"content":"    public Remark(String remark) {","lastModifiedDate":"2024-03-17"},{"lineNumber":27,"author":{"gitId":"rertyy"},"content":"        requireNonNull(remark);","lastModifiedDate":"2024-03-17"},{"lineNumber":28,"author":{"gitId":"rertyy"},"content":"        checkArgument(isValidRemark(remark), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-17"},{"lineNumber":29,"author":{"gitId":"rertyy"},"content":"        this.value \u003d remark;","lastModifiedDate":"2024-03-17"},{"lineNumber":30,"author":{"gitId":"rertyy"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":31,"author":{"gitId":"rertyy"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":32,"author":{"gitId":"rertyy"},"content":"    /**","lastModifiedDate":"2024-03-17"},{"lineNumber":33,"author":{"gitId":"rertyy"},"content":"     * Returns true if a given string is a valid remark.","lastModifiedDate":"2024-03-17"},{"lineNumber":34,"author":{"gitId":"rertyy"},"content":"     *","lastModifiedDate":"2024-03-17"},{"lineNumber":35,"author":{"gitId":"rertyy"},"content":"     * @param test the remark to be tested.","lastModifiedDate":"2024-03-17"},{"lineNumber":36,"author":{"gitId":"rertyy"},"content":"     * @return true if the remark is valid.","lastModifiedDate":"2024-03-17"},{"lineNumber":37,"author":{"gitId":"rertyy"},"content":"     */","lastModifiedDate":"2024-03-17"},{"lineNumber":38,"author":{"gitId":"rertyy"},"content":"    public static boolean isValidRemark(String test) {","lastModifiedDate":"2024-03-17"},{"lineNumber":39,"author":{"gitId":"Jaspertzx"},"content":"        return test.matches(VALIDATION_REGEX) \u0026\u0026 (!test.isEmpty());","lastModifiedDate":"2024-04-14"},{"lineNumber":40,"author":{"gitId":"rertyy"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":41,"author":{"gitId":"rertyy"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":42,"author":{"gitId":"rertyy"},"content":"    @Override","lastModifiedDate":"2024-03-17"},{"lineNumber":43,"author":{"gitId":"rertyy"},"content":"    public String toString() {","lastModifiedDate":"2024-03-17"},{"lineNumber":44,"author":{"gitId":"rertyy"},"content":"        return value;","lastModifiedDate":"2024-03-17"},{"lineNumber":45,"author":{"gitId":"rertyy"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":46,"author":{"gitId":"rertyy"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":47,"author":{"gitId":"rertyy"},"content":"    @Override","lastModifiedDate":"2024-03-17"},{"lineNumber":48,"author":{"gitId":"rertyy"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2024-03-17"},{"lineNumber":49,"author":{"gitId":"rertyy"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2024-03-17"},{"lineNumber":50,"author":{"gitId":"rertyy"},"content":"            return true;","lastModifiedDate":"2024-03-17"},{"lineNumber":51,"author":{"gitId":"rertyy"},"content":"        }","lastModifiedDate":"2024-03-17"},{"lineNumber":52,"author":{"gitId":"rertyy"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":53,"author":{"gitId":"rertyy"},"content":"        if (!(other instanceof Remark)) {","lastModifiedDate":"2024-03-17"},{"lineNumber":54,"author":{"gitId":"rertyy"},"content":"            return false;","lastModifiedDate":"2024-03-17"},{"lineNumber":55,"author":{"gitId":"rertyy"},"content":"        }","lastModifiedDate":"2024-03-17"},{"lineNumber":56,"author":{"gitId":"rertyy"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":57,"author":{"gitId":"rertyy"},"content":"        Remark otherRemark \u003d (Remark) other;","lastModifiedDate":"2024-03-17"},{"lineNumber":58,"author":{"gitId":"rertyy"},"content":"        return otherRemark.value.equals(this.value);","lastModifiedDate":"2024-03-17"},{"lineNumber":59,"author":{"gitId":"rertyy"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":60,"author":{"gitId":"rertyy"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":61,"author":{"gitId":"rertyy"},"content":"    @Override","lastModifiedDate":"2024-03-17"},{"lineNumber":62,"author":{"gitId":"rertyy"},"content":"    public int hashCode() {","lastModifiedDate":"2024-03-17"},{"lineNumber":63,"author":{"gitId":"rertyy"},"content":"        return value.hashCode();","lastModifiedDate":"2024-03-17"},{"lineNumber":64,"author":{"gitId":"rertyy"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":65,"author":{"gitId":"rertyy"},"content":"}","lastModifiedDate":"2024-03-17"}],"authorContributionMap":{"rertyy":64,"Jaspertzx":1}},{"path":"src/main/java/seedu/address/model/order/Status.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"rertyy"},"content":"package seedu.address.model.order;","lastModifiedDate":"2024-03-17"},{"lineNumber":2,"author":{"gitId":"rertyy"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":3,"author":{"gitId":"rertyy"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":4,"author":{"gitId":"rertyy"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2024-03-17"},{"lineNumber":5,"author":{"gitId":"rertyy"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2024-03-17"},{"lineNumber":6,"author":{"gitId":"rertyy"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":7,"author":{"gitId":"rertyy"},"content":"import java.util.Arrays;","lastModifiedDate":"2024-03-17"},{"lineNumber":8,"author":{"gitId":"rertyy"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":9,"author":{"gitId":"rertyy"},"content":"/**","lastModifiedDate":"2024-03-17"},{"lineNumber":10,"author":{"gitId":"rertyy"},"content":" * Represents an Order\u0027s status in the order book.","lastModifiedDate":"2024-03-17"},{"lineNumber":11,"author":{"gitId":"rertyy"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidStatus(String)}","lastModifiedDate":"2024-03-17"},{"lineNumber":12,"author":{"gitId":"rertyy"},"content":" */","lastModifiedDate":"2024-03-17"},{"lineNumber":13,"author":{"gitId":"rertyy"},"content":"public class Status {","lastModifiedDate":"2024-03-17"},{"lineNumber":14,"author":{"gitId":"rertyy"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":15,"author":{"gitId":"rertyy"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2024-03-17"},{"lineNumber":16,"author":{"gitId":"rertyy"},"content":"            \"Status can only be either \u0027pending\u0027, \u0027completed\u0027 or \u0027canceled\u0027\";","lastModifiedDate":"2024-03-17"},{"lineNumber":17,"author":{"gitId":"rertyy"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":18,"author":{"gitId":"rertyy"},"content":"    private final StatusEnum statusEnum;","lastModifiedDate":"2024-04-08"},{"lineNumber":19,"author":{"gitId":"rertyy"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":20,"author":{"gitId":"rertyy"},"content":"    /**","lastModifiedDate":"2024-03-17"},{"lineNumber":21,"author":{"gitId":"rertyy"},"content":"     * Constructs a {@code Status}.","lastModifiedDate":"2024-03-17"},{"lineNumber":22,"author":{"gitId":"rertyy"},"content":"     *","lastModifiedDate":"2024-03-17"},{"lineNumber":23,"author":{"gitId":"rertyy"},"content":"     * @param status A valid status.","lastModifiedDate":"2024-03-17"},{"lineNumber":24,"author":{"gitId":"rertyy"},"content":"     */","lastModifiedDate":"2024-03-17"},{"lineNumber":25,"author":{"gitId":"rertyy"},"content":"    public Status(String status) {","lastModifiedDate":"2024-03-17"},{"lineNumber":26,"author":{"gitId":"rertyy"},"content":"        requireNonNull(status);","lastModifiedDate":"2024-03-17"},{"lineNumber":27,"author":{"gitId":"rertyy"},"content":"        checkArgument(isValidStatus(status), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-17"},{"lineNumber":28,"author":{"gitId":"rertyy"},"content":"        this.statusEnum \u003d StatusEnum.valueOf(status.toUpperCase());","lastModifiedDate":"2024-04-08"},{"lineNumber":29,"author":{"gitId":"rertyy"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":30,"author":{"gitId":"rertyy"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":31,"author":{"gitId":"rertyy"},"content":"    /**","lastModifiedDate":"2024-03-17"},{"lineNumber":32,"author":{"gitId":"rertyy"},"content":"     * Returns true if a given string is a valid status.","lastModifiedDate":"2024-03-17"},{"lineNumber":33,"author":{"gitId":"rertyy"},"content":"     */","lastModifiedDate":"2024-03-17"},{"lineNumber":34,"author":{"gitId":"rertyy"},"content":"    public static boolean isValidStatus(String test) {","lastModifiedDate":"2024-03-17"},{"lineNumber":35,"author":{"gitId":"rertyy"},"content":"        return !test.isBlank()","lastModifiedDate":"2024-03-17"},{"lineNumber":36,"author":{"gitId":"rertyy"},"content":"                \u0026\u0026 Arrays.stream(StatusEnum.values())","lastModifiedDate":"2024-03-17"},{"lineNumber":37,"author":{"gitId":"rertyy"},"content":"                .anyMatch(status -\u003e status.name().equalsIgnoreCase(test));","lastModifiedDate":"2024-03-17"},{"lineNumber":38,"author":{"gitId":"rertyy"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":39,"author":{"gitId":"rertyy"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":40,"author":{"gitId":"shavonneg"},"content":"    /**","lastModifiedDate":"2024-03-29"},{"lineNumber":41,"author":{"gitId":"shavonneg"},"content":"     * Returns the status enum value.","lastModifiedDate":"2024-03-29"},{"lineNumber":42,"author":{"gitId":"shavonneg"},"content":"     */","lastModifiedDate":"2024-03-29"},{"lineNumber":43,"author":{"gitId":"shavonneg"},"content":"    public StatusEnum getStatusEnum() {","lastModifiedDate":"2024-03-29"},{"lineNumber":44,"author":{"gitId":"rertyy"},"content":"        return statusEnum;","lastModifiedDate":"2024-04-08"},{"lineNumber":45,"author":{"gitId":"shavonneg"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":46,"author":{"gitId":"shavonneg"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":47,"author":{"gitId":"rertyy"},"content":"    @Override","lastModifiedDate":"2024-03-17"},{"lineNumber":48,"author":{"gitId":"rertyy"},"content":"    public String toString() {","lastModifiedDate":"2024-03-17"},{"lineNumber":49,"author":{"gitId":"rertyy"},"content":"        return statusEnum.name();","lastModifiedDate":"2024-04-08"},{"lineNumber":50,"author":{"gitId":"rertyy"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":51,"author":{"gitId":"rertyy"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":52,"author":{"gitId":"rertyy"},"content":"    @Override","lastModifiedDate":"2024-03-17"},{"lineNumber":53,"author":{"gitId":"rertyy"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2024-03-17"},{"lineNumber":54,"author":{"gitId":"rertyy"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2024-03-17"},{"lineNumber":55,"author":{"gitId":"rertyy"},"content":"            return true;","lastModifiedDate":"2024-03-17"},{"lineNumber":56,"author":{"gitId":"rertyy"},"content":"        }","lastModifiedDate":"2024-03-17"},{"lineNumber":57,"author":{"gitId":"rertyy"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":58,"author":{"gitId":"rertyy"},"content":"        if (!(other instanceof Status)) {","lastModifiedDate":"2024-03-17"},{"lineNumber":59,"author":{"gitId":"rertyy"},"content":"            return false;","lastModifiedDate":"2024-03-17"},{"lineNumber":60,"author":{"gitId":"rertyy"},"content":"        }","lastModifiedDate":"2024-03-17"},{"lineNumber":61,"author":{"gitId":"rertyy"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":62,"author":{"gitId":"rertyy"},"content":"        Status otherStatus \u003d (Status) other;","lastModifiedDate":"2024-03-17"},{"lineNumber":63,"author":{"gitId":"rertyy"},"content":"        return otherStatus.statusEnum.equals(this.statusEnum);","lastModifiedDate":"2024-04-08"},{"lineNumber":64,"author":{"gitId":"rertyy"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":65,"author":{"gitId":"rertyy"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":66,"author":{"gitId":"rertyy"},"content":"    @Override","lastModifiedDate":"2024-03-17"},{"lineNumber":67,"author":{"gitId":"rertyy"},"content":"    public int hashCode() {","lastModifiedDate":"2024-03-17"},{"lineNumber":68,"author":{"gitId":"rertyy"},"content":"        return statusEnum.hashCode();","lastModifiedDate":"2024-04-08"},{"lineNumber":69,"author":{"gitId":"rertyy"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":70,"author":{"gitId":"rertyy"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":71,"author":{"gitId":"rertyy"},"content":"    /**","lastModifiedDate":"2024-03-17"},{"lineNumber":72,"author":{"gitId":"rertyy"},"content":"     * Represents the statuses an order can take in the order book.","lastModifiedDate":"2024-03-17"},{"lineNumber":73,"author":{"gitId":"rertyy"},"content":"     */","lastModifiedDate":"2024-03-17"},{"lineNumber":74,"author":{"gitId":"rertyy"},"content":"    public enum StatusEnum {","lastModifiedDate":"2024-03-17"},{"lineNumber":75,"author":{"gitId":"rertyy"},"content":"        PENDING, COMPLETED, CANCELED","lastModifiedDate":"2024-03-17"},{"lineNumber":76,"author":{"gitId":"rertyy"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":77,"author":{"gitId":"rertyy"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":78,"author":{"gitId":"rertyy"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":79,"author":{"gitId":"rertyy"},"content":"}","lastModifiedDate":"2024-03-17"}],"authorContributionMap":{"shavonneg":6,"rertyy":73}},{"path":"src/main/java/seedu/address/model/order/exceptions/OrderNotFoundException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"rertyy"},"content":"package seedu.address.model.order.exceptions;","lastModifiedDate":"2024-03-17"},{"lineNumber":2,"author":{"gitId":"rertyy"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":3,"author":{"gitId":"rertyy"},"content":"/**","lastModifiedDate":"2024-03-17"},{"lineNumber":4,"author":{"gitId":"rertyy"},"content":" * Signals that the operation is unable to find the specified Order.","lastModifiedDate":"2024-03-17"},{"lineNumber":5,"author":{"gitId":"rertyy"},"content":" */","lastModifiedDate":"2024-03-17"},{"lineNumber":6,"author":{"gitId":"rertyy"},"content":"public class OrderNotFoundException extends RuntimeException {","lastModifiedDate":"2024-03-17"},{"lineNumber":7,"author":{"gitId":"rertyy"},"content":"}","lastModifiedDate":"2024-03-17"}],"authorContributionMap":{"rertyy":7}},{"path":"src/main/java/seedu/address/model/tag/Tag.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.tag;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2017-05-30"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"kailinteoo"},"content":" * Represents a Tag in bookkeeper.","lastModifiedDate":"2024-04-14"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; name is valid as declared in {@link #isValidTagName(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Tag {","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Tags names should be alphanumeric\";","lastModifiedDate":"2024-04-10"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d \"\\\\p{Alnum}+\";","lastModifiedDate":"2018-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public final String tagName;","lastModifiedDate":"2016-10-19"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * Constructs a {@code Tag}.","lastModifiedDate":"2017-05-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * @param tagName A valid tag name.","lastModifiedDate":"2017-05-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public Tag(String tagName) {","lastModifiedDate":"2017-05-30"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        requireNonNull(tagName);","lastModifiedDate":"2017-05-30"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        checkArgument(isValidTagName(tagName), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        this.tagName \u003d tagName;","lastModifiedDate":"2017-05-30"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid tag name.","lastModifiedDate":"2016-09-22"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public static boolean isValidTagName(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        if (!(other instanceof Tag)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        Tag otherTag \u003d (Tag) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        return tagName.equals(otherTag.tagName);","lastModifiedDate":"2023-07-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        return tagName.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * Format state as text for viewing.","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        return \u0027[\u0027 + tagName + \u0027]\u0027;","lastModifiedDate":"2016-08-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"kailinteoo":1,"-":61}},{"path":"src/main/java/seedu/address/model/util/SampleDataUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.util;","lastModifiedDate":"2016-12-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-14"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-01-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":7,"author":{"gitId":"Jaspertzx"},"content":"import seedu.address.model.BookKeeper;","lastModifiedDate":"2024-04-14"},{"lineNumber":8,"author":{"gitId":"Jaspertzx"},"content":"import seedu.address.model.ReadOnlyBookKeeper;","lastModifiedDate":"2024-04-14"},{"lineNumber":9,"author":{"gitId":"Jaspertzx"},"content":"import seedu.address.model.client.Address;","lastModifiedDate":"2024-04-14"},{"lineNumber":10,"author":{"gitId":"Jaspertzx"},"content":"import seedu.address.model.client.Client;","lastModifiedDate":"2024-04-14"},{"lineNumber":11,"author":{"gitId":"Jaspertzx"},"content":"import seedu.address.model.client.Email;","lastModifiedDate":"2024-04-14"},{"lineNumber":12,"author":{"gitId":"Jaspertzx"},"content":"import seedu.address.model.client.Name;","lastModifiedDate":"2024-04-14"},{"lineNumber":13,"author":{"gitId":"Jaspertzx"},"content":"import seedu.address.model.client.Phone;","lastModifiedDate":"2024-04-14"},{"lineNumber":14,"author":{"gitId":"kailinteoo"},"content":"import seedu.address.model.order.Deadline;","lastModifiedDate":"2024-03-20"},{"lineNumber":15,"author":{"gitId":"kailinteoo"},"content":"import seedu.address.model.order.Order;","lastModifiedDate":"2024-03-20"},{"lineNumber":16,"author":{"gitId":"kailinteoo"},"content":"import seedu.address.model.order.OrderDate;","lastModifiedDate":"2024-03-20"},{"lineNumber":17,"author":{"gitId":"kailinteoo"},"content":"import seedu.address.model.order.OrderId;","lastModifiedDate":"2024-03-20"},{"lineNumber":18,"author":{"gitId":"kailinteoo"},"content":"import seedu.address.model.order.Price;","lastModifiedDate":"2024-03-28"},{"lineNumber":19,"author":{"gitId":"kailinteoo"},"content":"import seedu.address.model.order.Remark;","lastModifiedDate":"2024-03-20"},{"lineNumber":20,"author":{"gitId":"kailinteoo"},"content":"import seedu.address.model.order.Status;","lastModifiedDate":"2024-03-20"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-14"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":24,"author":{"gitId":"Jaspertzx"},"content":" * Contains utility methods for populating {@code BookKeeper} with sample data.","lastModifiedDate":"2024-04-14"},{"lineNumber":25,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":26,"author":{"gitId":"-"},"content":"public class SampleDataUtil {","lastModifiedDate":"2016-12-20"},{"lineNumber":27,"author":{"gitId":"rertyy"},"content":"    private SampleDataUtil() {","lastModifiedDate":"2024-03-29"},{"lineNumber":28,"author":{"gitId":"rertyy"},"content":"    } //","lastModifiedDate":"2024-03-29"},{"lineNumber":29,"author":{"gitId":"rertyy"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":30,"author":{"gitId":"Jaspertzx"},"content":"    public static Client[] getSamplePersons() {","lastModifiedDate":"2024-04-14"},{"lineNumber":31,"author":{"gitId":"rertyy"},"content":"        Set\u003cOrder\u003e s1 \u003d Set.of(","lastModifiedDate":"2024-03-27"},{"lineNumber":32,"author":{"gitId":"rertyy"},"content":"                new Order(new OrderId(\"69c25c8d-9e34-4d9d-8bad-e378f203ae73\"),","lastModifiedDate":"2024-03-27"},{"lineNumber":33,"author":{"gitId":"rertyy"},"content":"                        new OrderDate(\"01-03-2024 23:59\"), new Deadline(\"01-03-2024 23:59\"),","lastModifiedDate":"2024-03-27"},{"lineNumber":34,"author":{"gitId":"kailinteoo"},"content":"                        new Price(\"50\"), new Remark(\"No remark\"), new Status(\"PENDING\")),","lastModifiedDate":"2024-03-28"},{"lineNumber":35,"author":{"gitId":"rertyy"},"content":"                new Order(new OrderId(\"b7d063c5-f803-4f75-b2ad-777ec679b75e\"),","lastModifiedDate":"2024-03-27"},{"lineNumber":36,"author":{"gitId":"rertyy"},"content":"                        new OrderDate(\"10-02-2024 11:33\"), new Deadline(\"14-02-2024 10:59\"),","lastModifiedDate":"2024-03-27"},{"lineNumber":37,"author":{"gitId":"rertyy"},"content":"                        new Price(\"20\"), new Remark(\"No remark\"), new Status(\"COMPLETED\")));","lastModifiedDate":"2024-03-29"},{"lineNumber":38,"author":{"gitId":"rertyy"},"content":"        Set\u003cOrder\u003e s2 \u003d Set.of(","lastModifiedDate":"2024-03-27"},{"lineNumber":39,"author":{"gitId":"rertyy"},"content":"                new Order(new OrderId(\"fc64826c-369b-4f45-97c0-f98e2edfa006\"),","lastModifiedDate":"2024-03-27"},{"lineNumber":40,"author":{"gitId":"rertyy"},"content":"                        new OrderDate(\"10-10-2024 01:50\"), new Deadline(\"15-10-2024 13:50\"),","lastModifiedDate":"2024-03-27"},{"lineNumber":41,"author":{"gitId":"kailinteoo"},"content":"                        new Price(\"30\"), new Remark(\"No remark\"), new Status(\"CANCELED\")),","lastModifiedDate":"2024-03-28"},{"lineNumber":42,"author":{"gitId":"rertyy"},"content":"                new Order(new OrderId(\"cd7e3cb4-c310-4692-ba68-a779f6e09d68\"),","lastModifiedDate":"2024-03-27"},{"lineNumber":43,"author":{"gitId":"rertyy"},"content":"                        new OrderDate(\"10-02-2024 11:33\"), new Deadline(\"14-02-2024 10:59\"),","lastModifiedDate":"2024-03-27"},{"lineNumber":44,"author":{"gitId":"rertyy"},"content":"                        new Price(\"20\"), new Remark(\"No remark\"), new Status(\"CANCELED\")));","lastModifiedDate":"2024-03-29"},{"lineNumber":45,"author":{"gitId":"Jaspertzx"},"content":"        Client p1 \u003d new Client(new Name(\"Alex Yeoh\"), new Phone(\"87438807\"),","lastModifiedDate":"2024-04-14"},{"lineNumber":46,"author":{"gitId":"rertyy"},"content":"                new Email(\"alexyeoh@example.com\"), new Address(\"Blk 30 Geylang Street 29, #06-40\"),","lastModifiedDate":"2024-03-27"},{"lineNumber":47,"author":{"gitId":"rertyy"},"content":"                getTagSet(\"friends\"), s1);","lastModifiedDate":"2024-03-27"},{"lineNumber":48,"author":{"gitId":"Jaspertzx"},"content":"        p1.getOrders().forEach(order -\u003e order.setClient(p1));","lastModifiedDate":"2024-04-14"},{"lineNumber":49,"author":{"gitId":"Jaspertzx"},"content":"        Client p2 \u003d new Client(new Name(\"Bernice Yu\"), new Phone(\"99272758\"),","lastModifiedDate":"2024-04-14"},{"lineNumber":50,"author":{"gitId":"rertyy"},"content":"                new Email(\"berniceyu@example.com\"), new Address(\"Blk 30 Lorong 3 Serangoon Gardens, #07-18\"),","lastModifiedDate":"2024-03-27"},{"lineNumber":51,"author":{"gitId":"rertyy"},"content":"                getTagSet(\"colleagues\", \"friends\"), s2);","lastModifiedDate":"2024-03-27"},{"lineNumber":52,"author":{"gitId":"Jaspertzx"},"content":"        p2.getOrders().forEach(order -\u003e order.setClient(p2));","lastModifiedDate":"2024-04-14"},{"lineNumber":53,"author":{"gitId":"Jaspertzx"},"content":"        Client p3 \u003d new Client(new Name(\"Charlotte Oliveiro\"), new Phone(\"93210283\"),","lastModifiedDate":"2024-04-14"},{"lineNumber":54,"author":{"gitId":"rertyy"},"content":"                new Email(\"charlotte@example.com\"), new Address(\"Blk 11 Ang Mo Kio Street 74, #11-04\"),","lastModifiedDate":"2024-03-27"},{"lineNumber":55,"author":{"gitId":"rertyy"},"content":"                getTagSet(\"neighbours\"), Set.of());","lastModifiedDate":"2024-03-27"},{"lineNumber":56,"author":{"gitId":"Jaspertzx"},"content":"        Client p4 \u003d new Client(new Name(\"David Li\"), new Phone(\"91031282\"),","lastModifiedDate":"2024-04-14"},{"lineNumber":57,"author":{"gitId":"rertyy"},"content":"                new Email(\"lidavid@example.com\"), new Address(\"Blk 436 Serangoon Gardens Street 26, #16-43\"),","lastModifiedDate":"2024-03-27"},{"lineNumber":58,"author":{"gitId":"rertyy"},"content":"                getTagSet(\"family\"), Set.of());","lastModifiedDate":"2024-03-27"},{"lineNumber":59,"author":{"gitId":"Jaspertzx"},"content":"        Client p5 \u003d new Client(new Name(\"Irfan Ibrahim\"), new Phone(\"92492021\"),","lastModifiedDate":"2024-04-14"},{"lineNumber":60,"author":{"gitId":"rertyy"},"content":"                new Email(\"irfan@example.com\"), new Address(\"Blk 47 Tampines Street 20, #17-35\"),","lastModifiedDate":"2024-03-27"},{"lineNumber":61,"author":{"gitId":"rertyy"},"content":"                getTagSet(\"classmates\"), Set.of());","lastModifiedDate":"2024-03-27"},{"lineNumber":62,"author":{"gitId":"Jaspertzx"},"content":"        Client p6 \u003d new Client(new Name(\"Roy Balakrishnan\"), new Phone(\"92624417\"),","lastModifiedDate":"2024-04-14"},{"lineNumber":63,"author":{"gitId":"rertyy"},"content":"                new Email(\"royb@example.com\"), new Address(\"Blk 45 Aljunied Street 85, #11-31\"),","lastModifiedDate":"2024-03-27"},{"lineNumber":64,"author":{"gitId":"rertyy"},"content":"                getTagSet(\"colleagues\"), Set.of());","lastModifiedDate":"2024-03-27"},{"lineNumber":65,"author":{"gitId":"Jaspertzx"},"content":"        return new Client[]{p1, p2, p3, p4, p5, p6};","lastModifiedDate":"2024-04-14"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-20"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":68,"author":{"gitId":"Jaspertzx"},"content":"    public static ReadOnlyBookKeeper getSampleAddressBook() {","lastModifiedDate":"2024-04-14"},{"lineNumber":69,"author":{"gitId":"Jaspertzx"},"content":"        BookKeeper sampleAb \u003d new BookKeeper();","lastModifiedDate":"2024-04-14"},{"lineNumber":70,"author":{"gitId":"Jaspertzx"},"content":"        for (Client sampleClient : getSamplePersons()) {","lastModifiedDate":"2024-04-14"},{"lineNumber":71,"author":{"gitId":"Jaspertzx"},"content":"            sampleAb.addClient(sampleClient);","lastModifiedDate":"2024-04-14"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-20"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        return sampleAb;","lastModifiedDate":"2017-04-07"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-20"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-14"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     * Returns a tag set containing the list of strings given.","lastModifiedDate":"2017-03-14"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-14"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public static Set\u003cTag\u003e getTagSet(String... strings) {","lastModifiedDate":"2017-05-30"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        return Arrays.stream(strings)","lastModifiedDate":"2018-01-21"},{"lineNumber":81,"author":{"gitId":"-"},"content":"                .map(Tag::new)","lastModifiedDate":"2018-01-21"},{"lineNumber":82,"author":{"gitId":"-"},"content":"                .collect(Collectors.toSet());","lastModifiedDate":"2018-01-21"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-14"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":85,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-20"}],"authorContributionMap":{"kailinteoo":9,"rertyy":27,"Jaspertzx":22,"-":27}},{"path":"src/main/java/seedu/address/storage/BookKeeperStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Jaspertzx"},"content":"package seedu.address.storage;","lastModifiedDate":"2024-04-14"},{"lineNumber":2,"author":{"gitId":"Jaspertzx"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":3,"author":{"gitId":"Jaspertzx"},"content":"import java.io.IOException;","lastModifiedDate":"2024-04-14"},{"lineNumber":4,"author":{"gitId":"Jaspertzx"},"content":"import java.nio.file.Path;","lastModifiedDate":"2024-04-14"},{"lineNumber":5,"author":{"gitId":"Jaspertzx"},"content":"import java.util.Optional;","lastModifiedDate":"2024-04-14"},{"lineNumber":6,"author":{"gitId":"Jaspertzx"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":7,"author":{"gitId":"Jaspertzx"},"content":"import seedu.address.commons.exceptions.DataLoadingException;","lastModifiedDate":"2024-04-14"},{"lineNumber":8,"author":{"gitId":"Jaspertzx"},"content":"import seedu.address.model.BookKeeper;","lastModifiedDate":"2024-04-14"},{"lineNumber":9,"author":{"gitId":"Jaspertzx"},"content":"import seedu.address.model.ReadOnlyBookKeeper;","lastModifiedDate":"2024-04-14"},{"lineNumber":10,"author":{"gitId":"Jaspertzx"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":11,"author":{"gitId":"Jaspertzx"},"content":"/**","lastModifiedDate":"2024-04-14"},{"lineNumber":12,"author":{"gitId":"Jaspertzx"},"content":" * Represents a storage for {@link BookKeeper}.","lastModifiedDate":"2024-04-14"},{"lineNumber":13,"author":{"gitId":"Jaspertzx"},"content":" */","lastModifiedDate":"2024-04-14"},{"lineNumber":14,"author":{"gitId":"Jaspertzx"},"content":"public interface BookKeeperStorage {","lastModifiedDate":"2024-04-14"},{"lineNumber":15,"author":{"gitId":"Jaspertzx"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":16,"author":{"gitId":"Jaspertzx"},"content":"    /**","lastModifiedDate":"2024-04-14"},{"lineNumber":17,"author":{"gitId":"Jaspertzx"},"content":"     * Returns the file path of the data file.","lastModifiedDate":"2024-04-14"},{"lineNumber":18,"author":{"gitId":"Jaspertzx"},"content":"     */","lastModifiedDate":"2024-04-14"},{"lineNumber":19,"author":{"gitId":"Jaspertzx"},"content":"    Path getBookKeeperFilePath();","lastModifiedDate":"2024-04-14"},{"lineNumber":20,"author":{"gitId":"Jaspertzx"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":21,"author":{"gitId":"Jaspertzx"},"content":"    /**","lastModifiedDate":"2024-04-14"},{"lineNumber":22,"author":{"gitId":"Jaspertzx"},"content":"     * Returns BookKeeper(client) data as a {@link ReadOnlyBookKeeper}.","lastModifiedDate":"2024-04-14"},{"lineNumber":23,"author":{"gitId":"Jaspertzx"},"content":"     * Returns {@code Optional.empty()} if storage file is not found.","lastModifiedDate":"2024-04-14"},{"lineNumber":24,"author":{"gitId":"Jaspertzx"},"content":"     *","lastModifiedDate":"2024-04-14"},{"lineNumber":25,"author":{"gitId":"Jaspertzx"},"content":"     * @throws DataLoadingException if loading the data from storage failed.","lastModifiedDate":"2024-04-14"},{"lineNumber":26,"author":{"gitId":"Jaspertzx"},"content":"     */","lastModifiedDate":"2024-04-14"},{"lineNumber":27,"author":{"gitId":"Jaspertzx"},"content":"    Optional\u003cReadOnlyBookKeeper\u003e readAddressBook() throws DataLoadingException;","lastModifiedDate":"2024-04-14"},{"lineNumber":28,"author":{"gitId":"Jaspertzx"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":29,"author":{"gitId":"Jaspertzx"},"content":"    /**","lastModifiedDate":"2024-04-14"},{"lineNumber":30,"author":{"gitId":"Jaspertzx"},"content":"     * @see #getBookKeeperFilePath()","lastModifiedDate":"2024-04-14"},{"lineNumber":31,"author":{"gitId":"Jaspertzx"},"content":"     */","lastModifiedDate":"2024-04-14"},{"lineNumber":32,"author":{"gitId":"Jaspertzx"},"content":"    Optional\u003cReadOnlyBookKeeper\u003e readAddressBook(Path filePath) throws DataLoadingException;","lastModifiedDate":"2024-04-14"},{"lineNumber":33,"author":{"gitId":"Jaspertzx"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":34,"author":{"gitId":"Jaspertzx"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":35,"author":{"gitId":"Jaspertzx"},"content":"    /**","lastModifiedDate":"2024-04-14"},{"lineNumber":36,"author":{"gitId":"Jaspertzx"},"content":"     * Saves the given {@link ReadOnlyBookKeeper} to the storage.","lastModifiedDate":"2024-04-14"},{"lineNumber":37,"author":{"gitId":"Jaspertzx"},"content":"     * @param addressBook cannot be null.","lastModifiedDate":"2024-04-14"},{"lineNumber":38,"author":{"gitId":"Jaspertzx"},"content":"     * @throws IOException if there was any problem writing to the file.","lastModifiedDate":"2024-04-14"},{"lineNumber":39,"author":{"gitId":"Jaspertzx"},"content":"     */","lastModifiedDate":"2024-04-14"},{"lineNumber":40,"author":{"gitId":"Jaspertzx"},"content":"    void saveAddressBook(ReadOnlyBookKeeper addressBook) throws IOException;","lastModifiedDate":"2024-04-14"},{"lineNumber":41,"author":{"gitId":"Jaspertzx"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":42,"author":{"gitId":"Jaspertzx"},"content":"    /**","lastModifiedDate":"2024-04-14"},{"lineNumber":43,"author":{"gitId":"Jaspertzx"},"content":"     * @see #saveAddressBook(ReadOnlyBookKeeper)","lastModifiedDate":"2024-04-14"},{"lineNumber":44,"author":{"gitId":"Jaspertzx"},"content":"     */","lastModifiedDate":"2024-04-14"},{"lineNumber":45,"author":{"gitId":"Jaspertzx"},"content":"    void saveAddressBook(ReadOnlyBookKeeper addressBook, Path filePath) throws IOException;","lastModifiedDate":"2024-04-14"},{"lineNumber":46,"author":{"gitId":"Jaspertzx"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":47,"author":{"gitId":"Jaspertzx"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":48,"author":{"gitId":"Jaspertzx"},"content":"}","lastModifiedDate":"2024-04-14"}],"authorContributionMap":{"Jaspertzx":48}},{"path":"src/main/java/seedu/address/storage/JsonAdaptedClient.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"Jaspertzx"},"content":"import seedu.address.model.client.Address;","lastModifiedDate":"2024-04-14"},{"lineNumber":14,"author":{"gitId":"Jaspertzx"},"content":"import seedu.address.model.client.Client;","lastModifiedDate":"2024-04-14"},{"lineNumber":15,"author":{"gitId":"Jaspertzx"},"content":"import seedu.address.model.client.Email;","lastModifiedDate":"2024-04-14"},{"lineNumber":16,"author":{"gitId":"Jaspertzx"},"content":"import seedu.address.model.client.Name;","lastModifiedDate":"2024-04-14"},{"lineNumber":17,"author":{"gitId":"Jaspertzx"},"content":"import seedu.address.model.client.Phone;","lastModifiedDate":"2024-04-14"},{"lineNumber":18,"author":{"gitId":"kailinteoo"},"content":"import seedu.address.model.order.Order;","lastModifiedDate":"2024-03-19"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"Jaspertzx"},"content":" * Jackson-friendly version of {@link Client}.","lastModifiedDate":"2024-04-14"},{"lineNumber":23,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"Jaspertzx"},"content":"class JsonAdaptedClient {","lastModifiedDate":"2024-04-14"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"Jaspertzx"},"content":"    public static final String MISSING_FIELD_MESSAGE_FORMAT \u003d \"Client\u0027s %s field is missing!\";","lastModifiedDate":"2024-04-14"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final String name;","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private final String phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private final String email;","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private final String address;","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private final List\u003cJsonAdaptedTag\u003e tags \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-01-09"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"kailinteoo"},"content":"    private final List\u003cJsonAdaptedOrder\u003e orders \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-03-19"},{"lineNumber":35,"author":{"gitId":"kailinteoo"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"Jaspertzx"},"content":"     * Constructs a {@code JsonAdaptedClient} with the given client details.","lastModifiedDate":"2024-04-14"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"Jaspertzx"},"content":"    public JsonAdaptedClient(@JsonProperty(\"name\") String name, @JsonProperty(\"phone\") String phone,","lastModifiedDate":"2024-04-14"},{"lineNumber":41,"author":{"gitId":"-"},"content":"                             @JsonProperty(\"email\") String email, @JsonProperty(\"address\") String address,","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"kailinteoo"},"content":"                             @JsonProperty(\"tags\") List\u003cJsonAdaptedTag\u003e tags,","lastModifiedDate":"2024-03-19"},{"lineNumber":43,"author":{"gitId":"kailinteoo"},"content":"                             @JsonProperty(\"orders\") List\u003cJsonAdaptedOrder\u003e orders) {","lastModifiedDate":"2024-03-19"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        this.name \u003d name;","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        this.email \u003d email;","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        this.address \u003d address;","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        if (tags !\u003d null) {","lastModifiedDate":"2023-01-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            this.tags.addAll(tags);","lastModifiedDate":"2023-01-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":51,"author":{"gitId":"kailinteoo"},"content":"        if (orders !\u003d null) {","lastModifiedDate":"2024-03-19"},{"lineNumber":52,"author":{"gitId":"kailinteoo"},"content":"            this.orders.addAll(orders);","lastModifiedDate":"2024-03-19"},{"lineNumber":53,"author":{"gitId":"kailinteoo"},"content":"        }","lastModifiedDate":"2024-03-19"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"Jaspertzx"},"content":"     * Converts a given {@code Client} into this class for Jackson use.","lastModifiedDate":"2024-04-14"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"Jaspertzx"},"content":"    public JsonAdaptedClient(Client source) {","lastModifiedDate":"2024-04-14"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        name \u003d source.getName().fullName;","lastModifiedDate":"2018-08-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        phone \u003d source.getPhone().value;","lastModifiedDate":"2018-08-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        email \u003d source.getEmail().value;","lastModifiedDate":"2018-08-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        address \u003d source.getAddress().value;","lastModifiedDate":"2018-08-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        tags.addAll(source.getTags().stream()","lastModifiedDate":"2023-01-09"},{"lineNumber":65,"author":{"gitId":"-"},"content":"                .map(JsonAdaptedTag::new)","lastModifiedDate":"2018-08-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"                .collect(Collectors.toList()));","lastModifiedDate":"2018-08-13"},{"lineNumber":67,"author":{"gitId":"kailinteoo"},"content":"        orders.addAll(source.getOrders().stream()","lastModifiedDate":"2024-03-19"},{"lineNumber":68,"author":{"gitId":"kailinteoo"},"content":"                .map(JsonAdaptedOrder::new)","lastModifiedDate":"2024-03-19"},{"lineNumber":69,"author":{"gitId":"kailinteoo"},"content":"                .collect(Collectors.toList()));","lastModifiedDate":"2024-03-19"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":72,"author":{"gitId":"kailinteoo"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":74,"author":{"gitId":"Jaspertzx"},"content":"     * Converts this Jackson-friendly adapted client object into the model\u0027s {@code Client} object.","lastModifiedDate":"2024-04-14"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":76,"author":{"gitId":"Jaspertzx"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted client.","lastModifiedDate":"2024-04-14"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":78,"author":{"gitId":"Jaspertzx"},"content":"    public Client toModelType() throws IllegalValueException {","lastModifiedDate":"2024-04-14"},{"lineNumber":79,"author":{"gitId":"Jaspertzx"},"content":"        final List\u003cTag\u003e clientTags \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-04-14"},{"lineNumber":80,"author":{"gitId":"Jaspertzx"},"content":"        final List\u003cOrder\u003e clientOrders \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-04-14"},{"lineNumber":81,"author":{"gitId":"kailinteoo"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        for (JsonAdaptedTag tag : tags) {","lastModifiedDate":"2023-01-09"},{"lineNumber":83,"author":{"gitId":"Jaspertzx"},"content":"            clientTags.add(tag.toModelType());","lastModifiedDate":"2024-04-14"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":86,"author":{"gitId":"kailinteoo"},"content":"        for (JsonAdaptedOrder order : orders) {","lastModifiedDate":"2024-03-19"},{"lineNumber":87,"author":{"gitId":"Jaspertzx"},"content":"            clientOrders.add(order.toModelType());","lastModifiedDate":"2024-04-14"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2024-03-19"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        if (name \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":91,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        if (!Name.isValidName(name)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":94,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        final Name modelName \u003d new Name(name);","lastModifiedDate":"2018-08-13"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        if (phone \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":99,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Phone.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        if (!Phone.isValidPhone(phone)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":102,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        final Phone modelPhone \u003d new Phone(phone);","lastModifiedDate":"2018-08-13"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        if (email \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":107,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Email.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        if (!Email.isValidEmail(email)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":110,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        final Email modelEmail \u003d new Email(email);","lastModifiedDate":"2018-08-13"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        if (address \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":115,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Address.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        if (!Address.isValidAddress(address)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":118,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        final Address modelAddress \u003d new Address(address);","lastModifiedDate":"2018-08-13"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":122,"author":{"gitId":"Jaspertzx"},"content":"        final Set\u003cTag\u003e modelTags \u003d new HashSet\u003c\u003e(clientTags);","lastModifiedDate":"2024-04-14"},{"lineNumber":123,"author":{"gitId":"Jaspertzx"},"content":"        final Set\u003cOrder\u003e modelOrders \u003d new HashSet\u003c\u003e(clientOrders);","lastModifiedDate":"2024-04-14"},{"lineNumber":124,"author":{"gitId":"Jaspertzx"},"content":"        Client newClient \u003d new Client(modelName, modelPhone, modelEmail, modelAddress, modelTags, modelOrders);","lastModifiedDate":"2024-04-14"},{"lineNumber":125,"author":{"gitId":"Jaspertzx"},"content":"        newClient.getOrders().forEach(order -\u003e order.setClient(newClient));","lastModifiedDate":"2024-04-14"},{"lineNumber":126,"author":{"gitId":"Jaspertzx"},"content":"        return newClient;","lastModifiedDate":"2024-04-14"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":129,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"kailinteoo":14,"Jaspertzx":24,"-":91}},{"path":"src/main/java/seedu/address/storage/JsonAdaptedOrder.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kailinteoo"},"content":"package seedu.address.storage;","lastModifiedDate":"2024-03-17"},{"lineNumber":2,"author":{"gitId":"kailinteoo"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":3,"author":{"gitId":"kailinteoo"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2024-03-17"},{"lineNumber":4,"author":{"gitId":"kailinteoo"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2024-03-19"},{"lineNumber":5,"author":{"gitId":"kailinteoo"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":6,"author":{"gitId":"kailinteoo"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2024-03-17"},{"lineNumber":7,"author":{"gitId":"kailinteoo"},"content":"import seedu.address.model.order.Deadline;","lastModifiedDate":"2024-03-17"},{"lineNumber":8,"author":{"gitId":"kailinteoo"},"content":"import seedu.address.model.order.Order;","lastModifiedDate":"2024-03-17"},{"lineNumber":9,"author":{"gitId":"kailinteoo"},"content":"import seedu.address.model.order.OrderDate;","lastModifiedDate":"2024-03-17"},{"lineNumber":10,"author":{"gitId":"kailinteoo"},"content":"import seedu.address.model.order.OrderId;","lastModifiedDate":"2024-03-18"},{"lineNumber":11,"author":{"gitId":"kailinteoo"},"content":"import seedu.address.model.order.Price;","lastModifiedDate":"2024-03-28"},{"lineNumber":12,"author":{"gitId":"kailinteoo"},"content":"import seedu.address.model.order.Remark;","lastModifiedDate":"2024-03-18"},{"lineNumber":13,"author":{"gitId":"kailinteoo"},"content":"import seedu.address.model.order.Status;","lastModifiedDate":"2024-03-17"},{"lineNumber":14,"author":{"gitId":"kailinteoo"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":15,"author":{"gitId":"kailinteoo"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":16,"author":{"gitId":"kailinteoo"},"content":"/**","lastModifiedDate":"2024-03-17"},{"lineNumber":17,"author":{"gitId":"kailinteoo"},"content":" * Jackson-friendly version of {@link Order}.","lastModifiedDate":"2024-03-17"},{"lineNumber":18,"author":{"gitId":"kailinteoo"},"content":" */","lastModifiedDate":"2024-03-17"},{"lineNumber":19,"author":{"gitId":"kailinteoo"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":20,"author":{"gitId":"kailinteoo"},"content":"public class JsonAdaptedOrder {","lastModifiedDate":"2024-03-17"},{"lineNumber":21,"author":{"gitId":"kailinteoo"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":22,"author":{"gitId":"kailinteoo"},"content":"    public static final String MISSING_FIELD_MESSAGE_FORMAT \u003d \"Order\u0027s %s field is missing!\";","lastModifiedDate":"2024-03-17"},{"lineNumber":23,"author":{"gitId":"kailinteoo"},"content":"    private final String orderId;","lastModifiedDate":"2024-03-17"},{"lineNumber":24,"author":{"gitId":"kailinteoo"},"content":"    private final String orderDate;","lastModifiedDate":"2024-03-17"},{"lineNumber":25,"author":{"gitId":"kailinteoo"},"content":"    private final String deadline;","lastModifiedDate":"2024-03-17"},{"lineNumber":26,"author":{"gitId":"kailinteoo"},"content":"    private final String price;","lastModifiedDate":"2024-03-28"},{"lineNumber":27,"author":{"gitId":"kailinteoo"},"content":"    private final String remark;","lastModifiedDate":"2024-03-18"},{"lineNumber":28,"author":{"gitId":"kailinteoo"},"content":"    private final String status;","lastModifiedDate":"2024-03-17"},{"lineNumber":29,"author":{"gitId":"kailinteoo"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":30,"author":{"gitId":"kailinteoo"},"content":"    /**","lastModifiedDate":"2024-03-17"},{"lineNumber":31,"author":{"gitId":"Jaspertzx"},"content":"     * Constructs a {@code JsonAdaptedOrder} with the given order details.","lastModifiedDate":"2024-03-20"},{"lineNumber":32,"author":{"gitId":"kailinteoo"},"content":"     */","lastModifiedDate":"2024-03-17"},{"lineNumber":33,"author":{"gitId":"kailinteoo"},"content":"    @JsonCreator","lastModifiedDate":"2024-03-17"},{"lineNumber":34,"author":{"gitId":"kailinteoo"},"content":"    public JsonAdaptedOrder(@JsonProperty(\"orderId\") String orderId, @JsonProperty(\"orderDate\") String orderDate,","lastModifiedDate":"2024-03-19"},{"lineNumber":35,"author":{"gitId":"kailinteoo"},"content":"                            @JsonProperty(\"deadline\") String deadline, @JsonProperty(\"price\") String price,","lastModifiedDate":"2024-03-28"},{"lineNumber":36,"author":{"gitId":"kailinteoo"},"content":"                            @JsonProperty(\"remark\") String remark, @JsonProperty(\"status\") String status) {","lastModifiedDate":"2024-03-19"},{"lineNumber":37,"author":{"gitId":"kailinteoo"},"content":"        this.orderId \u003d orderId;","lastModifiedDate":"2024-03-17"},{"lineNumber":38,"author":{"gitId":"kailinteoo"},"content":"        this.orderDate \u003d orderDate;","lastModifiedDate":"2024-03-17"},{"lineNumber":39,"author":{"gitId":"kailinteoo"},"content":"        this.deadline \u003d deadline;","lastModifiedDate":"2024-03-17"},{"lineNumber":40,"author":{"gitId":"kailinteoo"},"content":"        this.price \u003d price;","lastModifiedDate":"2024-03-28"},{"lineNumber":41,"author":{"gitId":"kailinteoo"},"content":"        this.remark \u003d remark;","lastModifiedDate":"2024-03-18"},{"lineNumber":42,"author":{"gitId":"kailinteoo"},"content":"        this.status \u003d status;","lastModifiedDate":"2024-03-17"},{"lineNumber":43,"author":{"gitId":"kailinteoo"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":44,"author":{"gitId":"kailinteoo"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":45,"author":{"gitId":"kailinteoo"},"content":"    /**","lastModifiedDate":"2024-03-17"},{"lineNumber":46,"author":{"gitId":"kailinteoo"},"content":"     * Converts a given {code Order} into this class for Jackson use.","lastModifiedDate":"2024-03-17"},{"lineNumber":47,"author":{"gitId":"kailinteoo"},"content":"     */","lastModifiedDate":"2024-03-17"},{"lineNumber":48,"author":{"gitId":"kailinteoo"},"content":"    public JsonAdaptedOrder(Order source) {","lastModifiedDate":"2024-03-17"},{"lineNumber":49,"author":{"gitId":"kailinteoo"},"content":"        orderId \u003d source.getOrderId().toString();","lastModifiedDate":"2024-03-18"},{"lineNumber":50,"author":{"gitId":"kailinteoo"},"content":"        orderDate \u003d source.getOrderDate().toString();","lastModifiedDate":"2024-03-18"},{"lineNumber":51,"author":{"gitId":"kailinteoo"},"content":"        deadline \u003d source.getDeadline().toString();","lastModifiedDate":"2024-03-18"},{"lineNumber":52,"author":{"gitId":"kailinteoo"},"content":"        price \u003d source.getPrice().toString();","lastModifiedDate":"2024-03-28"},{"lineNumber":53,"author":{"gitId":"kailinteoo"},"content":"        remark \u003d source.getRemark().toString();","lastModifiedDate":"2024-03-18"},{"lineNumber":54,"author":{"gitId":"kailinteoo"},"content":"        status \u003d source.getStatus().toString();","lastModifiedDate":"2024-03-18"},{"lineNumber":55,"author":{"gitId":"kailinteoo"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":56,"author":{"gitId":"kailinteoo"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":57,"author":{"gitId":"kailinteoo"},"content":"    /**","lastModifiedDate":"2024-03-17"},{"lineNumber":58,"author":{"gitId":"kailinteoo"},"content":"     * Converts this Jackson-friendly adapted order object into the model\u0027s {@code Order} object.","lastModifiedDate":"2024-03-17"},{"lineNumber":59,"author":{"gitId":"kailinteoo"},"content":"     *","lastModifiedDate":"2024-03-17"},{"lineNumber":60,"author":{"gitId":"kailinteoo"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted order.","lastModifiedDate":"2024-03-17"},{"lineNumber":61,"author":{"gitId":"kailinteoo"},"content":"     */","lastModifiedDate":"2024-03-17"},{"lineNumber":62,"author":{"gitId":"kailinteoo"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":63,"author":{"gitId":"kailinteoo"},"content":"    public Order toModelType() throws IllegalValueException {","lastModifiedDate":"2024-03-17"},{"lineNumber":64,"author":{"gitId":"kailinteoo"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":65,"author":{"gitId":"kailinteoo"},"content":"        if (orderId \u003d\u003d null) {","lastModifiedDate":"2024-03-19"},{"lineNumber":66,"author":{"gitId":"kailinteoo"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT,","lastModifiedDate":"2024-03-19"},{"lineNumber":67,"author":{"gitId":"kailinteoo"},"content":"                    OrderId.class.getSimpleName()));","lastModifiedDate":"2024-03-19"},{"lineNumber":68,"author":{"gitId":"kailinteoo"},"content":"        }","lastModifiedDate":"2024-03-19"},{"lineNumber":69,"author":{"gitId":"kailinteoo"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":70,"author":{"gitId":"kailinteoo"},"content":"        if (!OrderId.isValidOrderId(orderId)) {","lastModifiedDate":"2024-03-19"},{"lineNumber":71,"author":{"gitId":"kailinteoo"},"content":"            throw new IllegalValueException(OrderId.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-19"},{"lineNumber":72,"author":{"gitId":"kailinteoo"},"content":"        }","lastModifiedDate":"2024-03-17"},{"lineNumber":73,"author":{"gitId":"kailinteoo"},"content":"        final OrderId modelOrderId \u003d new OrderId(orderId);","lastModifiedDate":"2024-03-17"},{"lineNumber":74,"author":{"gitId":"kailinteoo"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":75,"author":{"gitId":"kailinteoo"},"content":"        if (orderDate \u003d\u003d null) {","lastModifiedDate":"2024-03-17"},{"lineNumber":76,"author":{"gitId":"kailinteoo"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT,","lastModifiedDate":"2024-03-18"},{"lineNumber":77,"author":{"gitId":"kailinteoo"},"content":"                    OrderDate.class.getSimpleName()));","lastModifiedDate":"2024-03-18"},{"lineNumber":78,"author":{"gitId":"kailinteoo"},"content":"        }","lastModifiedDate":"2024-03-17"},{"lineNumber":79,"author":{"gitId":"kailinteoo"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":80,"author":{"gitId":"kailinteoo"},"content":"        if (!OrderDate.isValidOrderDate(orderDate)) {","lastModifiedDate":"2024-03-19"},{"lineNumber":81,"author":{"gitId":"kailinteoo"},"content":"            throw new IllegalValueException(OrderDate.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-17"},{"lineNumber":82,"author":{"gitId":"kailinteoo"},"content":"        }","lastModifiedDate":"2024-03-17"},{"lineNumber":83,"author":{"gitId":"kailinteoo"},"content":"        final OrderDate modelOrderDate \u003d new OrderDate(orderDate);","lastModifiedDate":"2024-03-17"},{"lineNumber":84,"author":{"gitId":"kailinteoo"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":85,"author":{"gitId":"kailinteoo"},"content":"        if (deadline \u003d\u003d null) {","lastModifiedDate":"2024-03-17"},{"lineNumber":86,"author":{"gitId":"kailinteoo"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT,","lastModifiedDate":"2024-03-18"},{"lineNumber":87,"author":{"gitId":"kailinteoo"},"content":"                    Deadline.class.getSimpleName()));","lastModifiedDate":"2024-03-18"},{"lineNumber":88,"author":{"gitId":"kailinteoo"},"content":"        }","lastModifiedDate":"2024-03-17"},{"lineNumber":89,"author":{"gitId":"kailinteoo"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":90,"author":{"gitId":"kailinteoo"},"content":"        if (!Deadline.isValidDeadline(deadline)) {","lastModifiedDate":"2024-03-17"},{"lineNumber":91,"author":{"gitId":"kailinteoo"},"content":"            throw new IllegalValueException(Deadline.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-17"},{"lineNumber":92,"author":{"gitId":"kailinteoo"},"content":"        }","lastModifiedDate":"2024-03-17"},{"lineNumber":93,"author":{"gitId":"kailinteoo"},"content":"        final Deadline modelDeadline \u003d new Deadline(deadline);","lastModifiedDate":"2024-03-17"},{"lineNumber":94,"author":{"gitId":"kailinteoo"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":95,"author":{"gitId":"kailinteoo"},"content":"        if (price \u003d\u003d null) {","lastModifiedDate":"2024-03-28"},{"lineNumber":96,"author":{"gitId":"kailinteoo"},"content":"            throw new NumberFormatException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Price.class.getSimpleName()));","lastModifiedDate":"2024-03-28"},{"lineNumber":97,"author":{"gitId":"kailinteoo"},"content":"        }","lastModifiedDate":"2024-03-17"},{"lineNumber":98,"author":{"gitId":"kailinteoo"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":99,"author":{"gitId":"kailinteoo"},"content":"        if (!Price.isValidPrice(price)) {","lastModifiedDate":"2024-03-28"},{"lineNumber":100,"author":{"gitId":"kailinteoo"},"content":"            throw new NumberFormatException(Price.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-28"},{"lineNumber":101,"author":{"gitId":"kailinteoo"},"content":"        }","lastModifiedDate":"2024-03-17"},{"lineNumber":102,"author":{"gitId":"rertyy"},"content":"        final Price modelPrice \u003d new Price(price);","lastModifiedDate":"2024-03-29"},{"lineNumber":103,"author":{"gitId":"kailinteoo"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":104,"author":{"gitId":"kailinteoo"},"content":"        if (remark \u003d\u003d null) {","lastModifiedDate":"2024-03-18"},{"lineNumber":105,"author":{"gitId":"kailinteoo"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Remark.class.getSimpleName()));","lastModifiedDate":"2024-03-18"},{"lineNumber":106,"author":{"gitId":"kailinteoo"},"content":"        }","lastModifiedDate":"2024-03-17"},{"lineNumber":107,"author":{"gitId":"kailinteoo"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":108,"author":{"gitId":"kailinteoo"},"content":"        if (!Remark.isValidRemark(remark)) {","lastModifiedDate":"2024-03-18"},{"lineNumber":109,"author":{"gitId":"kailinteoo"},"content":"            throw new IllegalValueException(Remark.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-18"},{"lineNumber":110,"author":{"gitId":"kailinteoo"},"content":"        }","lastModifiedDate":"2024-03-17"},{"lineNumber":111,"author":{"gitId":"kailinteoo"},"content":"        final Remark modelRemarks \u003d new Remark(remark);","lastModifiedDate":"2024-03-18"},{"lineNumber":112,"author":{"gitId":"kailinteoo"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":113,"author":{"gitId":"kailinteoo"},"content":"        if (status \u003d\u003d null) {","lastModifiedDate":"2024-03-17"},{"lineNumber":114,"author":{"gitId":"kailinteoo"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Status.class.getSimpleName()));","lastModifiedDate":"2024-03-17"},{"lineNumber":115,"author":{"gitId":"kailinteoo"},"content":"        }","lastModifiedDate":"2024-03-17"},{"lineNumber":116,"author":{"gitId":"kailinteoo"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":117,"author":{"gitId":"kailinteoo"},"content":"        if (!Status.isValidStatus(status)) {","lastModifiedDate":"2024-03-17"},{"lineNumber":118,"author":{"gitId":"kailinteoo"},"content":"            throw new IllegalValueException(Status.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-17"},{"lineNumber":119,"author":{"gitId":"kailinteoo"},"content":"        }","lastModifiedDate":"2024-03-17"},{"lineNumber":120,"author":{"gitId":"kailinteoo"},"content":"        final Status modelStatus \u003d new Status(status);","lastModifiedDate":"2024-03-17"},{"lineNumber":121,"author":{"gitId":"kailinteoo"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":122,"author":{"gitId":"kailinteoo"},"content":"        return new Order(modelOrderId, modelOrderDate, modelDeadline, modelPrice, modelRemarks, modelStatus);","lastModifiedDate":"2024-03-28"},{"lineNumber":123,"author":{"gitId":"kailinteoo"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":124,"author":{"gitId":"kailinteoo"},"content":"}","lastModifiedDate":"2024-03-17"}],"authorContributionMap":{"kailinteoo":122,"rertyy":1,"Jaspertzx":1}},{"path":"src/main/java/seedu/address/storage/JsonBookKeeperStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.DataLoadingException;","lastModifiedDate":"2023-06-14"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.FileUtil;","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.JsonUtil;","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"Jaspertzx"},"content":"import seedu.address.model.ReadOnlyBookKeeper;","lastModifiedDate":"2024-04-14"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"kailinteoo"},"content":" * A class to access BookKeeper data stored as a json file on the hard disk.","lastModifiedDate":"2024-04-14"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"Jaspertzx"},"content":"public class JsonBookKeeperStorage implements BookKeeperStorage {","lastModifiedDate":"2024-04-14"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"Jaspertzx"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(JsonBookKeeperStorage.class);","lastModifiedDate":"2024-04-14"},{"lineNumber":23,"author":{"gitId":"Jaspertzx"},"content":"    private final Path bookKeeperFilePath;","lastModifiedDate":"2024-04-14"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"kailinteoo"},"content":"    /**","lastModifiedDate":"2024-03-18"},{"lineNumber":26,"author":{"gitId":"Jaspertzx"},"content":"     * Constructs a {@code JsonBookKeeperStorage} with the specified file paths.","lastModifiedDate":"2024-04-14"},{"lineNumber":27,"author":{"gitId":"kailinteoo"},"content":"     *","lastModifiedDate":"2024-03-18"},{"lineNumber":28,"author":{"gitId":"Jaspertzx"},"content":"     * @param bookKeeperFilePath The file path for bookkeeper data.","lastModifiedDate":"2024-04-14"},{"lineNumber":29,"author":{"gitId":"kailinteoo"},"content":"     */","lastModifiedDate":"2024-03-18"},{"lineNumber":30,"author":{"gitId":"Jaspertzx"},"content":"    public JsonBookKeeperStorage(Path bookKeeperFilePath) {","lastModifiedDate":"2024-04-14"},{"lineNumber":31,"author":{"gitId":"Jaspertzx"},"content":"        this.bookKeeperFilePath \u003d bookKeeperFilePath;","lastModifiedDate":"2024-04-14"},{"lineNumber":32,"author":{"gitId":"kailinteoo"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":33,"author":{"gitId":"kailinteoo"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"Jaspertzx"},"content":"    public Path getBookKeeperFilePath() {","lastModifiedDate":"2024-04-14"},{"lineNumber":36,"author":{"gitId":"Jaspertzx"},"content":"        return bookKeeperFilePath;","lastModifiedDate":"2024-04-14"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"kailinteoo"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"Jaspertzx"},"content":"    public Optional\u003cReadOnlyBookKeeper\u003e readAddressBook() throws DataLoadingException {","lastModifiedDate":"2024-04-14"},{"lineNumber":42,"author":{"gitId":"Jaspertzx"},"content":"        return readAddressBook(bookKeeperFilePath);","lastModifiedDate":"2024-04-14"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     * Similar to {@link #readAddressBook()}.","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * @param filePath location of the data. Cannot be null.","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     * @throws DataLoadingException if loading the data from storage failed.","lastModifiedDate":"2023-06-15"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":51,"author":{"gitId":"Jaspertzx"},"content":"    public Optional\u003cReadOnlyBookKeeper\u003e readAddressBook(Path filePath) throws DataLoadingException {","lastModifiedDate":"2024-04-14"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"Jaspertzx"},"content":"        Optional\u003cJsonSerializableBookKeeper\u003e jsonAddressBook \u003d JsonUtil.readJsonFile(","lastModifiedDate":"2024-04-14"},{"lineNumber":55,"author":{"gitId":"Jaspertzx"},"content":"                filePath, JsonSerializableBookKeeper.class);","lastModifiedDate":"2024-04-14"},{"lineNumber":56,"author":{"gitId":"Jaspertzx"},"content":"        if (jsonAddressBook.isEmpty()) {","lastModifiedDate":"2024-04-14"},{"lineNumber":57,"author":{"gitId":"-"},"content":"            return Optional.empty();","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-08-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"            return Optional.of(jsonAddressBook.get().toModelType());","lastModifiedDate":"2018-08-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        } catch (IllegalValueException ive) {","lastModifiedDate":"2018-08-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"            logger.info(\"Illegal values found in \" + filePath + \": \" + ive.getMessage());","lastModifiedDate":"2018-08-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"            throw new DataLoadingException(ive);","lastModifiedDate":"2023-06-14"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":68,"author":{"gitId":"kailinteoo"},"content":"    @Override","lastModifiedDate":"2024-03-18"},{"lineNumber":69,"author":{"gitId":"Jaspertzx"},"content":"    public void saveAddressBook(ReadOnlyBookKeeper addressBook) throws IOException {","lastModifiedDate":"2024-04-14"},{"lineNumber":70,"author":{"gitId":"Jaspertzx"},"content":"        saveAddressBook(addressBook, bookKeeperFilePath);","lastModifiedDate":"2024-04-14"},{"lineNumber":71,"author":{"gitId":"kailinteoo"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":72,"author":{"gitId":"kailinteoo"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":73,"author":{"gitId":"kailinteoo"},"content":"    /**","lastModifiedDate":"2024-03-18"},{"lineNumber":74,"author":{"gitId":"Jaspertzx"},"content":"     * Similar to {@link #saveAddressBook(ReadOnlyBookKeeper)}.","lastModifiedDate":"2024-04-14"},{"lineNumber":75,"author":{"gitId":"kailinteoo"},"content":"     *","lastModifiedDate":"2024-03-18"},{"lineNumber":76,"author":{"gitId":"kailinteoo"},"content":"     * @param filePath location of the data. Cannot be null.","lastModifiedDate":"2024-03-18"},{"lineNumber":77,"author":{"gitId":"kailinteoo"},"content":"     */","lastModifiedDate":"2024-03-18"},{"lineNumber":78,"author":{"gitId":"Jaspertzx"},"content":"    public void saveAddressBook(ReadOnlyBookKeeper addressBook, Path filePath) throws IOException {","lastModifiedDate":"2024-04-14"},{"lineNumber":79,"author":{"gitId":"kailinteoo"},"content":"        requireNonNull(addressBook);","lastModifiedDate":"2024-03-18"},{"lineNumber":80,"author":{"gitId":"kailinteoo"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2024-03-18"},{"lineNumber":81,"author":{"gitId":"kailinteoo"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":82,"author":{"gitId":"kailinteoo"},"content":"        FileUtil.createIfMissing(filePath);","lastModifiedDate":"2024-03-18"},{"lineNumber":83,"author":{"gitId":"Jaspertzx"},"content":"        JsonUtil.saveJsonFile(new JsonSerializableBookKeeper(addressBook), filePath);","lastModifiedDate":"2024-04-14"},{"lineNumber":84,"author":{"gitId":"kailinteoo"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":85,"author":{"gitId":"kailinteoo"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":86,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"kailinteoo":20,"Jaspertzx":21,"-":45}},{"path":"src/main/java/seedu/address/storage/JsonSerializableBookKeeper.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Jaspertzx"},"content":"package seedu.address.storage;","lastModifiedDate":"2024-04-14"},{"lineNumber":2,"author":{"gitId":"Jaspertzx"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":3,"author":{"gitId":"Jaspertzx"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-04-14"},{"lineNumber":4,"author":{"gitId":"Jaspertzx"},"content":"import java.util.List;","lastModifiedDate":"2024-04-14"},{"lineNumber":5,"author":{"gitId":"Jaspertzx"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2024-04-14"},{"lineNumber":6,"author":{"gitId":"Jaspertzx"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":7,"author":{"gitId":"Jaspertzx"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2024-04-14"},{"lineNumber":8,"author":{"gitId":"Jaspertzx"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2024-04-14"},{"lineNumber":9,"author":{"gitId":"Jaspertzx"},"content":"import com.fasterxml.jackson.annotation.JsonRootName;","lastModifiedDate":"2024-04-14"},{"lineNumber":10,"author":{"gitId":"Jaspertzx"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":11,"author":{"gitId":"Jaspertzx"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2024-04-14"},{"lineNumber":12,"author":{"gitId":"Jaspertzx"},"content":"import seedu.address.model.BookKeeper;","lastModifiedDate":"2024-04-14"},{"lineNumber":13,"author":{"gitId":"Jaspertzx"},"content":"import seedu.address.model.ReadOnlyBookKeeper;","lastModifiedDate":"2024-04-14"},{"lineNumber":14,"author":{"gitId":"Jaspertzx"},"content":"import seedu.address.model.client.Client;","lastModifiedDate":"2024-04-14"},{"lineNumber":15,"author":{"gitId":"Jaspertzx"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":16,"author":{"gitId":"Jaspertzx"},"content":"/**","lastModifiedDate":"2024-04-14"},{"lineNumber":17,"author":{"gitId":"Jaspertzx"},"content":" * An Immutable BookKeeper that is serializable to JSON format.","lastModifiedDate":"2024-04-14"},{"lineNumber":18,"author":{"gitId":"Jaspertzx"},"content":" */","lastModifiedDate":"2024-04-14"},{"lineNumber":19,"author":{"gitId":"Jaspertzx"},"content":"@JsonRootName(value \u003d \"addressbook\")","lastModifiedDate":"2024-04-14"},{"lineNumber":20,"author":{"gitId":"Jaspertzx"},"content":"class JsonSerializableBookKeeper {","lastModifiedDate":"2024-04-14"},{"lineNumber":21,"author":{"gitId":"Jaspertzx"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":22,"author":{"gitId":"Jaspertzx"},"content":"    public static final String MESSAGE_DUPLICATE_CLIENT \u003d \"Client list contains duplicate client(s).\";","lastModifiedDate":"2024-04-14"},{"lineNumber":23,"author":{"gitId":"Jaspertzx"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":24,"author":{"gitId":"Jaspertzx"},"content":"    private final List\u003cJsonAdaptedClient\u003e clients \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-04-14"},{"lineNumber":25,"author":{"gitId":"Jaspertzx"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":26,"author":{"gitId":"Jaspertzx"},"content":"    /**","lastModifiedDate":"2024-04-14"},{"lineNumber":27,"author":{"gitId":"Jaspertzx"},"content":"     * Constructs a {@code JsonSerializableBookKeeper} with the given persons.","lastModifiedDate":"2024-04-14"},{"lineNumber":28,"author":{"gitId":"Jaspertzx"},"content":"     */","lastModifiedDate":"2024-04-14"},{"lineNumber":29,"author":{"gitId":"Jaspertzx"},"content":"    @JsonCreator","lastModifiedDate":"2024-04-14"},{"lineNumber":30,"author":{"gitId":"Jaspertzx"},"content":"    public JsonSerializableBookKeeper(@JsonProperty(\"clients\") List\u003cJsonAdaptedClient\u003e clients) {","lastModifiedDate":"2024-04-14"},{"lineNumber":31,"author":{"gitId":"Jaspertzx"},"content":"        this.clients.addAll(clients);","lastModifiedDate":"2024-04-14"},{"lineNumber":32,"author":{"gitId":"Jaspertzx"},"content":"    }","lastModifiedDate":"2024-04-14"},{"lineNumber":33,"author":{"gitId":"Jaspertzx"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":34,"author":{"gitId":"Jaspertzx"},"content":"    /**","lastModifiedDate":"2024-04-14"},{"lineNumber":35,"author":{"gitId":"Jaspertzx"},"content":"     * Converts a given {@code ReadOnlyBookKeeper} into this class for Jackson use.","lastModifiedDate":"2024-04-14"},{"lineNumber":36,"author":{"gitId":"Jaspertzx"},"content":"     *","lastModifiedDate":"2024-04-14"},{"lineNumber":37,"author":{"gitId":"Jaspertzx"},"content":"     * @param source future changes to this will not affect the created {@code JsonSerializableBookKeeper}.","lastModifiedDate":"2024-04-14"},{"lineNumber":38,"author":{"gitId":"Jaspertzx"},"content":"     */","lastModifiedDate":"2024-04-14"},{"lineNumber":39,"author":{"gitId":"Jaspertzx"},"content":"    public JsonSerializableBookKeeper(ReadOnlyBookKeeper source) {","lastModifiedDate":"2024-04-14"},{"lineNumber":40,"author":{"gitId":"Jaspertzx"},"content":"        clients.addAll(source.getClientList().stream().map(JsonAdaptedClient::new).collect(Collectors.toList()));","lastModifiedDate":"2024-04-14"},{"lineNumber":41,"author":{"gitId":"Jaspertzx"},"content":"    }","lastModifiedDate":"2024-04-14"},{"lineNumber":42,"author":{"gitId":"Jaspertzx"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":43,"author":{"gitId":"Jaspertzx"},"content":"    /**","lastModifiedDate":"2024-04-14"},{"lineNumber":44,"author":{"gitId":"Jaspertzx"},"content":"     * Converts this bookkeeper into the model\u0027s {@code BookKeeper} object.","lastModifiedDate":"2024-04-14"},{"lineNumber":45,"author":{"gitId":"Jaspertzx"},"content":"     *","lastModifiedDate":"2024-04-14"},{"lineNumber":46,"author":{"gitId":"Jaspertzx"},"content":"     * @throws IllegalValueException if there were any data constraints violated.","lastModifiedDate":"2024-04-14"},{"lineNumber":47,"author":{"gitId":"Jaspertzx"},"content":"     */","lastModifiedDate":"2024-04-14"},{"lineNumber":48,"author":{"gitId":"Jaspertzx"},"content":"    public BookKeeper toModelType() throws IllegalValueException {","lastModifiedDate":"2024-04-14"},{"lineNumber":49,"author":{"gitId":"Jaspertzx"},"content":"        BookKeeper bookKeeper \u003d new BookKeeper();","lastModifiedDate":"2024-04-14"},{"lineNumber":50,"author":{"gitId":"Jaspertzx"},"content":"        for (JsonAdaptedClient jsonAdaptedClient : clients) {","lastModifiedDate":"2024-04-14"},{"lineNumber":51,"author":{"gitId":"Jaspertzx"},"content":"            Client client \u003d jsonAdaptedClient.toModelType();","lastModifiedDate":"2024-04-14"},{"lineNumber":52,"author":{"gitId":"Jaspertzx"},"content":"            if (bookKeeper.hasClient(client)) {","lastModifiedDate":"2024-04-14"},{"lineNumber":53,"author":{"gitId":"Jaspertzx"},"content":"                throw new IllegalValueException(MESSAGE_DUPLICATE_CLIENT);","lastModifiedDate":"2024-04-14"},{"lineNumber":54,"author":{"gitId":"Jaspertzx"},"content":"            }","lastModifiedDate":"2024-04-14"},{"lineNumber":55,"author":{"gitId":"Jaspertzx"},"content":"            bookKeeper.addClient(client);","lastModifiedDate":"2024-04-14"},{"lineNumber":56,"author":{"gitId":"Jaspertzx"},"content":"        }","lastModifiedDate":"2024-04-14"},{"lineNumber":57,"author":{"gitId":"Jaspertzx"},"content":"        return bookKeeper;","lastModifiedDate":"2024-04-14"},{"lineNumber":58,"author":{"gitId":"Jaspertzx"},"content":"    }","lastModifiedDate":"2024-04-14"},{"lineNumber":59,"author":{"gitId":"Jaspertzx"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":60,"author":{"gitId":"Jaspertzx"},"content":"}","lastModifiedDate":"2024-04-14"}],"authorContributionMap":{"Jaspertzx":60}},{"path":"src/main/java/seedu/address/storage/JsonUserPrefsStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2016-09-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.DataLoadingException;","lastModifiedDate":"2023-06-14"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.JsonUtil;","lastModifiedDate":"2016-10-07"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-24"},{"lineNumber":13,"author":{"gitId":"rertyy"},"content":" * A class to access UserPrefs stored in the hard disk as a json file.","lastModifiedDate":"2024-03-20"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class JsonUserPrefsStorage implements UserPrefsStorage {","lastModifiedDate":"2016-10-01"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private Path filePath;","lastModifiedDate":"2018-04-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public JsonUserPrefsStorage(Path filePath) {","lastModifiedDate":"2018-04-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2016-09-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-02-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public Path getUserPrefsFilePath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        return filePath;","lastModifiedDate":"2017-02-15"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-15"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public Optional\u003cUserPrefs\u003e readUserPrefs() throws DataLoadingException {","lastModifiedDate":"2023-06-14"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        return readUserPrefs(filePath);","lastModifiedDate":"2016-09-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-24"},{"lineNumber":34,"author":{"gitId":"rertyy"},"content":"     * Similar to {@link #readUserPrefs()}.","lastModifiedDate":"2024-03-20"},{"lineNumber":35,"author":{"gitId":"rertyy"},"content":"     *","lastModifiedDate":"2024-03-20"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * @param prefsFilePath location of the data. Cannot be null.","lastModifiedDate":"2016-09-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * @throws DataLoadingException if the file format is not as expected.","lastModifiedDate":"2023-06-14"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public Optional\u003cUserPrefs\u003e readUserPrefs(Path prefsFilePath) throws DataLoadingException {","lastModifiedDate":"2023-06-14"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        return JsonUtil.readJsonFile(prefsFilePath, UserPrefs.class);","lastModifiedDate":"2016-10-07"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-10-07"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public void saveUserPrefs(ReadOnlyUserPrefs userPrefs) throws IOException {","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        JsonUtil.saveJsonFile(userPrefs, filePath);","lastModifiedDate":"2016-10-07"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-24"}],"authorContributionMap":{"rertyy":3,"-":45}},{"path":"src/main/java/seedu/address/storage/Storage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2016-09-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.DataLoadingException;","lastModifiedDate":"2023-06-14"},{"lineNumber":8,"author":{"gitId":"Jaspertzx"},"content":"import seedu.address.model.ReadOnlyBookKeeper;","lastModifiedDate":"2024-04-14"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2016-09-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"rertyy"},"content":" * API of the Storage component.","lastModifiedDate":"2024-03-20"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":15,"author":{"gitId":"Jaspertzx"},"content":"public interface Storage extends BookKeeperStorage, UserPrefsStorage {","lastModifiedDate":"2024-04-14"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    Optional\u003cUserPrefs\u003e readUserPrefs() throws DataLoadingException;","lastModifiedDate":"2023-06-15"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    void saveUserPrefs(ReadOnlyUserPrefs userPrefs) throws IOException;","lastModifiedDate":"2018-11-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":24,"author":{"gitId":"Jaspertzx"},"content":"    Path getBookKeeperFilePath();","lastModifiedDate":"2024-04-14"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":27,"author":{"gitId":"Jaspertzx"},"content":"    Optional\u003cReadOnlyBookKeeper\u003e readAddressBook() throws DataLoadingException;","lastModifiedDate":"2024-04-14"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":30,"author":{"gitId":"Jaspertzx"},"content":"    void saveAddressBook(ReadOnlyBookKeeper addressBook) throws IOException;","lastModifiedDate":"2024-04-14"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-26"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":33,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"rertyy":1,"Jaspertzx":5,"-":27}},{"path":"src/main/java/seedu/address/storage/StorageManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.DataLoadingException;","lastModifiedDate":"2023-06-14"},{"lineNumber":10,"author":{"gitId":"Jaspertzx"},"content":"import seedu.address.model.ReadOnlyBookKeeper;","lastModifiedDate":"2024-04-14"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"Jaspertzx"},"content":" * Manages storage of BookKeeper data in local storage.","lastModifiedDate":"2024-04-14"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public class StorageManager implements Storage {","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(StorageManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":20,"author":{"gitId":"Jaspertzx"},"content":"    private final BookKeeperStorage bookKeeperStorage;","lastModifiedDate":"2024-04-14"},{"lineNumber":21,"author":{"gitId":"Jaspertzx"},"content":"    private final UserPrefsStorage userPrefsStorage;","lastModifiedDate":"2024-04-14"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":24,"author":{"gitId":"Jaspertzx"},"content":"     * Creates a {@code StorageManager} with the given {@code BookKeeperStorage} and {@code UserPrefStorage}.","lastModifiedDate":"2024-04-14"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":26,"author":{"gitId":"Jaspertzx"},"content":"    public StorageManager(BookKeeperStorage bookKeeperStorage, UserPrefsStorage userPrefsStorage) {","lastModifiedDate":"2024-04-14"},{"lineNumber":27,"author":{"gitId":"Jaspertzx"},"content":"        this.bookKeeperStorage \u003d bookKeeperStorage;","lastModifiedDate":"2024-04-14"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        this.userPrefsStorage \u003d userPrefsStorage;","lastModifiedDate":"2016-10-01"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-01"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d UserPrefs methods \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2016-09-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-02-15"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public Path getUserPrefsFilePath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        return userPrefsStorage.getUserPrefsFilePath();","lastModifiedDate":"2017-02-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-15"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public Optional\u003cUserPrefs\u003e readUserPrefs() throws DataLoadingException {","lastModifiedDate":"2023-06-15"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        return userPrefsStorage.readUserPrefs();","lastModifiedDate":"2016-10-01"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public void saveUserPrefs(ReadOnlyUserPrefs userPrefs) throws IOException {","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        userPrefsStorage.saveUserPrefs(userPrefs);","lastModifiedDate":"2016-10-01"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"Jaspertzx"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d BookKeeper methods \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2024-04-14"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":52,"author":{"gitId":"Jaspertzx"},"content":"    public Path getBookKeeperFilePath() {","lastModifiedDate":"2024-04-14"},{"lineNumber":53,"author":{"gitId":"Jaspertzx"},"content":"        return bookKeeperStorage.getBookKeeperFilePath();","lastModifiedDate":"2024-04-14"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":57,"author":{"gitId":"Jaspertzx"},"content":"    public Optional\u003cReadOnlyBookKeeper\u003e readAddressBook() throws DataLoadingException {","lastModifiedDate":"2024-04-14"},{"lineNumber":58,"author":{"gitId":"Jaspertzx"},"content":"        return readAddressBook(bookKeeperStorage.getBookKeeperFilePath());","lastModifiedDate":"2024-04-14"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-10-01"},{"lineNumber":62,"author":{"gitId":"Jaspertzx"},"content":"    public Optional\u003cReadOnlyBookKeeper\u003e readAddressBook(Path filePath) throws DataLoadingException {","lastModifiedDate":"2024-04-14"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        logger.fine(\"Attempting to read data from file: \" + filePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":64,"author":{"gitId":"Jaspertzx"},"content":"        return bookKeeperStorage.readAddressBook(filePath);","lastModifiedDate":"2024-04-14"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":68,"author":{"gitId":"Jaspertzx"},"content":"    public void saveAddressBook(ReadOnlyBookKeeper addressBook) throws IOException {","lastModifiedDate":"2024-04-14"},{"lineNumber":69,"author":{"gitId":"Jaspertzx"},"content":"        saveAddressBook(addressBook, bookKeeperStorage.getBookKeeperFilePath());","lastModifiedDate":"2024-04-14"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-01"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-10-01"},{"lineNumber":73,"author":{"gitId":"Jaspertzx"},"content":"    public void saveAddressBook(ReadOnlyBookKeeper addressBook, Path filePath) throws IOException {","lastModifiedDate":"2024-04-14"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        logger.fine(\"Attempting to write to data file: \" + filePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":75,"author":{"gitId":"Jaspertzx"},"content":"        bookKeeperStorage.saveAddressBook(addressBook, filePath);","lastModifiedDate":"2024-04-14"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"Jaspertzx":18,"-":59}},{"path":"src/main/java/seedu/address/ui/ClientCard.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Comparator;","lastModifiedDate":"2019-01-02"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-01-02"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-09-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2016-09-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.layout.FlowPane;","lastModifiedDate":"2016-12-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2016-09-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":10,"author":{"gitId":"Jaspertzx"},"content":"import seedu.address.model.client.Client;","lastModifiedDate":"2024-04-14"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":13,"author":{"gitId":"Jaspertzx"},"content":" * An UI component that displays information of a {@code Client}.","lastModifiedDate":"2024-04-14"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":15,"author":{"gitId":"Jaspertzx"},"content":"public class ClientCard extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2024-04-14"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":17,"author":{"gitId":"Jaspertzx"},"content":"    private static final String FXML \u003d \"ClientListCard.fxml\";","lastModifiedDate":"2024-04-14"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * Note: Certain keywords such as \"location\" and \"resources\" are reserved keywords in JavaFX.","lastModifiedDate":"2017-03-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * As a consequence, UI elements\u0027 variable names cannot be set to such keywords","lastModifiedDate":"2017-03-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * or an exception will be thrown by JavaFX during runtime.","lastModifiedDate":"2017-03-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-25"},{"lineNumber":24,"author":{"gitId":"Jaspertzx"},"content":"     * @see \u003ca href\u003d\"https://github.com/se-edu/addressbook-level4/issues/336\"\u003eThe issue on BookKeeper level 4\u003c/a\u003e","lastModifiedDate":"2024-04-14"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":27,"author":{"gitId":"Jaspertzx"},"content":"    public final Client client;","lastModifiedDate":"2024-04-14"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private HBox cardPane;","lastModifiedDate":"2016-09-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private Label name;","lastModifiedDate":"2016-09-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private Label id;","lastModifiedDate":"2016-09-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private Label phone;","lastModifiedDate":"2016-09-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private Label address;","lastModifiedDate":"2016-09-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private Label email;","lastModifiedDate":"2016-09-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    private FlowPane tags;","lastModifiedDate":"2016-12-18"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":45,"author":{"gitId":"Jaspertzx"},"content":"     * Creates a {@code ClientCard} with the given {@code Client} and index to display.","lastModifiedDate":"2024-04-14"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":47,"author":{"gitId":"Jaspertzx"},"content":"    public ClientCard(Client client, int displayedIndex) {","lastModifiedDate":"2024-04-14"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":49,"author":{"gitId":"Jaspertzx"},"content":"        this.client \u003d client;","lastModifiedDate":"2024-04-14"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        id.setText(displayedIndex + \". \");","lastModifiedDate":"2016-09-21"},{"lineNumber":51,"author":{"gitId":"Jaspertzx"},"content":"        name.setText(client.getName().fullName);","lastModifiedDate":"2024-04-14"},{"lineNumber":52,"author":{"gitId":"Jaspertzx"},"content":"        phone.setText(client.getPhone().value);","lastModifiedDate":"2024-04-14"},{"lineNumber":53,"author":{"gitId":"Jaspertzx"},"content":"        address.setText(client.getAddress().value);","lastModifiedDate":"2024-04-14"},{"lineNumber":54,"author":{"gitId":"Jaspertzx"},"content":"        email.setText(client.getEmail().value);","lastModifiedDate":"2024-04-14"},{"lineNumber":55,"author":{"gitId":"Jaspertzx"},"content":"        client.getTags().stream()","lastModifiedDate":"2024-04-14"},{"lineNumber":56,"author":{"gitId":"-"},"content":"                .sorted(Comparator.comparing(tag -\u003e tag.tagName))","lastModifiedDate":"2019-01-02"},{"lineNumber":57,"author":{"gitId":"-"},"content":"                .forEach(tag -\u003e tags.getChildren().add(new Label(tag.tagName)));","lastModifiedDate":"2019-01-02"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-18"},{"lineNumber":59,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"Jaspertzx":14,"-":45}},{"path":"src/main/java/seedu/address/ui/ClientListPanel.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Jaspertzx"},"content":"package seedu.address.ui;","lastModifiedDate":"2024-04-14"},{"lineNumber":2,"author":{"gitId":"Jaspertzx"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":3,"author":{"gitId":"Jaspertzx"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2024-04-14"},{"lineNumber":4,"author":{"gitId":"Jaspertzx"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":5,"author":{"gitId":"Jaspertzx"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2024-04-14"},{"lineNumber":6,"author":{"gitId":"Jaspertzx"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2024-04-14"},{"lineNumber":7,"author":{"gitId":"Jaspertzx"},"content":"import javafx.scene.control.ListCell;","lastModifiedDate":"2024-04-14"},{"lineNumber":8,"author":{"gitId":"Jaspertzx"},"content":"import javafx.scene.control.ListView;","lastModifiedDate":"2024-04-14"},{"lineNumber":9,"author":{"gitId":"Jaspertzx"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2024-04-14"},{"lineNumber":10,"author":{"gitId":"Jaspertzx"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2024-04-14"},{"lineNumber":11,"author":{"gitId":"Jaspertzx"},"content":"import seedu.address.model.client.Client;","lastModifiedDate":"2024-04-14"},{"lineNumber":12,"author":{"gitId":"Jaspertzx"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":13,"author":{"gitId":"Jaspertzx"},"content":"/**","lastModifiedDate":"2024-04-14"},{"lineNumber":14,"author":{"gitId":"Jaspertzx"},"content":" * Panel containing the list of clients.","lastModifiedDate":"2024-04-14"},{"lineNumber":15,"author":{"gitId":"Jaspertzx"},"content":" */","lastModifiedDate":"2024-04-14"},{"lineNumber":16,"author":{"gitId":"Jaspertzx"},"content":"public class ClientListPanel extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2024-04-14"},{"lineNumber":17,"author":{"gitId":"Jaspertzx"},"content":"    private static final String FXML \u003d \"ClientListPanel.fxml\";","lastModifiedDate":"2024-04-14"},{"lineNumber":18,"author":{"gitId":"Jaspertzx"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(ClientListPanel.class);","lastModifiedDate":"2024-04-14"},{"lineNumber":19,"author":{"gitId":"Jaspertzx"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":20,"author":{"gitId":"Jaspertzx"},"content":"    @FXML","lastModifiedDate":"2024-04-14"},{"lineNumber":21,"author":{"gitId":"Jaspertzx"},"content":"    private ListView\u003cClient\u003e clientListView;","lastModifiedDate":"2024-04-14"},{"lineNumber":22,"author":{"gitId":"Jaspertzx"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":23,"author":{"gitId":"Jaspertzx"},"content":"    /**","lastModifiedDate":"2024-04-14"},{"lineNumber":24,"author":{"gitId":"Jaspertzx"},"content":"     * Creates a {@code ClientListPanel} with the given {@code ObservableList}.","lastModifiedDate":"2024-04-14"},{"lineNumber":25,"author":{"gitId":"Jaspertzx"},"content":"     */","lastModifiedDate":"2024-04-14"},{"lineNumber":26,"author":{"gitId":"Jaspertzx"},"content":"    public ClientListPanel(ObservableList\u003cClient\u003e clientList) {","lastModifiedDate":"2024-04-14"},{"lineNumber":27,"author":{"gitId":"Jaspertzx"},"content":"        super(FXML);","lastModifiedDate":"2024-04-14"},{"lineNumber":28,"author":{"gitId":"Jaspertzx"},"content":"        clientListView.setItems(clientList);","lastModifiedDate":"2024-04-14"},{"lineNumber":29,"author":{"gitId":"Jaspertzx"},"content":"        clientListView.setCellFactory(listView -\u003e new ClientListViewCell());","lastModifiedDate":"2024-04-14"},{"lineNumber":30,"author":{"gitId":"Jaspertzx"},"content":"    }","lastModifiedDate":"2024-04-14"},{"lineNumber":31,"author":{"gitId":"Jaspertzx"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":32,"author":{"gitId":"Jaspertzx"},"content":"    /**","lastModifiedDate":"2024-04-14"},{"lineNumber":33,"author":{"gitId":"Jaspertzx"},"content":"     * Custom {@code ListCell} that displays the graphics of a {@code Client} using a {@code ClientCard}.","lastModifiedDate":"2024-04-14"},{"lineNumber":34,"author":{"gitId":"Jaspertzx"},"content":"     */","lastModifiedDate":"2024-04-14"},{"lineNumber":35,"author":{"gitId":"Jaspertzx"},"content":"    class ClientListViewCell extends ListCell\u003cClient\u003e {","lastModifiedDate":"2024-04-14"},{"lineNumber":36,"author":{"gitId":"Jaspertzx"},"content":"        @Override","lastModifiedDate":"2024-04-14"},{"lineNumber":37,"author":{"gitId":"Jaspertzx"},"content":"        protected void updateItem(Client client, boolean empty) {","lastModifiedDate":"2024-04-14"},{"lineNumber":38,"author":{"gitId":"Jaspertzx"},"content":"            super.updateItem(client, empty);","lastModifiedDate":"2024-04-14"},{"lineNumber":39,"author":{"gitId":"Jaspertzx"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":40,"author":{"gitId":"Jaspertzx"},"content":"            if (empty || client \u003d\u003d null) {","lastModifiedDate":"2024-04-14"},{"lineNumber":41,"author":{"gitId":"Jaspertzx"},"content":"                setGraphic(null);","lastModifiedDate":"2024-04-14"},{"lineNumber":42,"author":{"gitId":"Jaspertzx"},"content":"                setText(null);","lastModifiedDate":"2024-04-14"},{"lineNumber":43,"author":{"gitId":"Jaspertzx"},"content":"            } else {","lastModifiedDate":"2024-04-14"},{"lineNumber":44,"author":{"gitId":"Jaspertzx"},"content":"                setGraphic(new ClientCard(client, getIndex() + 1).getRoot());","lastModifiedDate":"2024-04-14"},{"lineNumber":45,"author":{"gitId":"Jaspertzx"},"content":"            }","lastModifiedDate":"2024-04-14"},{"lineNumber":46,"author":{"gitId":"Jaspertzx"},"content":"        }","lastModifiedDate":"2024-04-14"},{"lineNumber":47,"author":{"gitId":"Jaspertzx"},"content":"    }","lastModifiedDate":"2024-04-14"},{"lineNumber":48,"author":{"gitId":"Jaspertzx"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":49,"author":{"gitId":"Jaspertzx"},"content":"}","lastModifiedDate":"2024-04-14"}],"authorContributionMap":{"Jaspertzx":49}},{"path":"src/main/java/seedu/address/ui/HelpWindow.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-12-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2019-08-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2019-08-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.input.Clipboard;","lastModifiedDate":"2019-08-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.input.ClipboardContent;","lastModifiedDate":"2019-08-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":14,"author":{"gitId":"rertyy"},"content":" * Controller for a help page.","lastModifiedDate":"2024-03-20"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class HelpWindow extends UiPart\u003cStage\u003e {","lastModifiedDate":"2017-12-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":18,"author":{"gitId":"rertyy"},"content":"    public static final String USERGUIDE_URL \u003d","lastModifiedDate":"2024-03-29"},{"lineNumber":19,"author":{"gitId":"rertyy"},"content":"            \"https://ay2324s2-cs2103t-t09-2.github.io/tp/UserGuide.html\";","lastModifiedDate":"2024-03-29"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public static final String HELP_MESSAGE \u003d \"Refer to the user guide: \" + USERGUIDE_URL;","lastModifiedDate":"2019-08-19"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(HelpWindow.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"HelpWindow.fxml\";","lastModifiedDate":"2016-09-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-12-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private Button copyButton;","lastModifiedDate":"2019-08-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-08-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2019-08-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private Label helpMessage;","lastModifiedDate":"2019-08-19"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-12-01"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * Creates a new HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-12-01"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * @param root Stage to use as the root of the HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-12-01"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public HelpWindow(Stage root) {","lastModifiedDate":"2017-12-01"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        super(FXML, root);","lastModifiedDate":"2017-12-01"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        helpMessage.setText(HELP_MESSAGE);","lastModifiedDate":"2019-08-19"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-12-01"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * Creates a new HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-12-01"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public HelpWindow() {","lastModifiedDate":"2017-12-01"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        this(new Stage());","lastModifiedDate":"2017-12-01"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-01"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-01"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     * Shows the help window.","lastModifiedDate":"2017-08-16"},{"lineNumber":50,"author":{"gitId":"rertyy"},"content":"     *","lastModifiedDate":"2024-03-29"},{"lineNumber":51,"author":{"gitId":"rertyy"},"content":"     * @throws IllegalStateException \u003cul\u003e","lastModifiedDate":"2024-03-29"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     *                               \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     *                               if this method is called on a thread other than the JavaFX Application Thread.","lastModifiedDate":"2017-08-16"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     *                               \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     *                               \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     *                               if this method is called during animation or layout processing.","lastModifiedDate":"2017-08-16"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     *                               \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     *                               \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     *                               if this method is called on the primary stage.","lastModifiedDate":"2017-08-16"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     *                               \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     *                               \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     *                               if {@code dialogStage} is already showing.","lastModifiedDate":"2017-08-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     *                               \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     *                               \u003c/ul\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public void show() {","lastModifiedDate":"2016-08-18"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        logger.fine(\"Showing help page about the application.\");","lastModifiedDate":"2016-12-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        getRoot().show();","lastModifiedDate":"2018-02-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        getRoot().centerOnScreen();","lastModifiedDate":"2019-08-19"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-15"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     * Returns true if the help window is currently being shown.","lastModifiedDate":"2018-03-15"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-15"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public boolean isShowing() {","lastModifiedDate":"2018-03-15"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        return getRoot().isShowing();","lastModifiedDate":"2018-03-15"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-15"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * Hides the help window.","lastModifiedDate":"2018-12-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public void hide() {","lastModifiedDate":"2018-12-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        getRoot().hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-15"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     * Focuses on the help window.","lastModifiedDate":"2018-03-15"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-15"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    public void focus() {","lastModifiedDate":"2018-03-15"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        getRoot().requestFocus();","lastModifiedDate":"2018-03-15"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-15"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-08-19"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2019-08-19"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     * Copies the URL to the user guide to the clipboard.","lastModifiedDate":"2019-08-19"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2019-08-19"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2019-08-19"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    private void copyUrl() {","lastModifiedDate":"2019-08-19"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        final Clipboard clipboard \u003d Clipboard.getSystemClipboard();","lastModifiedDate":"2019-08-19"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        final ClipboardContent url \u003d new ClipboardContent();","lastModifiedDate":"2019-08-19"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        url.putString(USERGUIDE_URL);","lastModifiedDate":"2019-08-19"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        clipboard.setContent(url);","lastModifiedDate":"2019-08-19"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-08-19"},{"lineNumber":103,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"rertyy":5,"-":98}},{"path":"src/main/java/seedu/address/ui/MainWindow.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-06-16"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.event.ActionEvent;","lastModifiedDate":"2016-12-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-08-26"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.MenuItem;","lastModifiedDate":"2016-08-26"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.control.TextInputControl;","lastModifiedDate":"2016-12-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.input.KeyCombination;","lastModifiedDate":"2016-08-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.scene.input.KeyEvent;","lastModifiedDate":"2016-12-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.scene.layout.StackPane;","lastModifiedDate":"2017-05-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2016-09-28"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2017-06-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.logic.Logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2024-03-17"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":21,"author":{"gitId":"-"},"content":" * The Main Window. Provides the basic application layout containing","lastModifiedDate":"2016-08-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * a menu bar and space where other JavaFX elements can be placed.","lastModifiedDate":"2016-08-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"public class MainWindow extends UiPart\u003cStage\u003e {","lastModifiedDate":"2017-11-29"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"MainWindow.fxml\";","lastModifiedDate":"2016-08-18"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(getClass());","lastModifiedDate":"2018-08-14"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private Stage primaryStage;","lastModifiedDate":"2016-12-02"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    // Independent Ui parts residing in this Ui container","lastModifiedDate":"2016-08-18"},{"lineNumber":34,"author":{"gitId":"Jaspertzx"},"content":"    private ClientListPanel clientListPanel;","lastModifiedDate":"2024-04-14"},{"lineNumber":35,"author":{"gitId":"kailinteoo"},"content":"    private OrderListPanel orderListPanel;","lastModifiedDate":"2024-03-20"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private ResultDisplay resultDisplay;","lastModifiedDate":"2018-12-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private HelpWindow helpWindow;","lastModifiedDate":"2018-03-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private StackPane commandBoxPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    private MenuItem helpMenuItem;","lastModifiedDate":"2016-08-18"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":46,"author":{"gitId":"Jaspertzx"},"content":"    private StackPane clientListPanelPlaceholder;","lastModifiedDate":"2024-04-14"},{"lineNumber":47,"author":{"gitId":"Jaspertzx"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":48,"author":{"gitId":"kailinteoo"},"content":"    @FXML","lastModifiedDate":"2024-03-20"},{"lineNumber":49,"author":{"gitId":"kailinteoo"},"content":"    private StackPane orderListPanelPlaceholder;","lastModifiedDate":"2024-03-20"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    private StackPane resultDisplayPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    private StackPane statusbarPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     * Creates a {@code MainWindow} with the given {@code Stage} and {@code Logic}.","lastModifiedDate":"2020-05-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public MainWindow(Stage primaryStage, Logic logic) {","lastModifiedDate":"2018-12-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        super(FXML, primaryStage);","lastModifiedDate":"2017-11-29"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        // Set dependencies","lastModifiedDate":"2016-09-21"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        this.primaryStage \u003d primaryStage;","lastModifiedDate":"2016-12-02"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        this.logic \u003d logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        // Configure the UI","lastModifiedDate":"2016-09-21"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        setWindowDefaultSize(logic.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        setAccelerators();","lastModifiedDate":"2016-09-21"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        helpWindow \u003d new HelpWindow();","lastModifiedDate":"2018-03-15"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public Stage getPrimaryStage() {","lastModifiedDate":"2016-12-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        return primaryStage;","lastModifiedDate":"2016-12-24"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    private void setAccelerators() {","lastModifiedDate":"2016-09-21"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        setAccelerator(helpMenuItem, KeyCombination.valueOf(\"F1\"));","lastModifiedDate":"2016-12-18"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-18"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-18"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     * Sets the accelerator of a MenuItem.","lastModifiedDate":"2016-12-18"},{"lineNumber":85,"author":{"gitId":"kailinteoo"},"content":"     *","lastModifiedDate":"2024-03-20"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * @param keyCombination the KeyCombination value of the accelerator","lastModifiedDate":"2016-12-18"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-18"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    private void setAccelerator(MenuItem menuItem, KeyCombination keyCombination) {","lastModifiedDate":"2016-12-18"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        menuItem.setAccelerator(keyCombination);","lastModifiedDate":"2016-12-18"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-12-18"},{"lineNumber":92,"author":{"gitId":"-"},"content":"         * TODO: the code below can be removed once the bug reported here","lastModifiedDate":"2016-12-18"},{"lineNumber":93,"author":{"gitId":"-"},"content":"         * https://bugs.openjdk.java.net/browse/JDK-8131666","lastModifiedDate":"2016-12-18"},{"lineNumber":94,"author":{"gitId":"-"},"content":"         * is fixed in later version of SDK.","lastModifiedDate":"2016-12-18"},{"lineNumber":95,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2016-12-18"},{"lineNumber":96,"author":{"gitId":"-"},"content":"         * According to the bug report, TextInputControl (TextField, TextArea) will","lastModifiedDate":"2016-12-18"},{"lineNumber":97,"author":{"gitId":"-"},"content":"         * consume function-key events. Because CommandBox contains a TextField, and","lastModifiedDate":"2016-12-18"},{"lineNumber":98,"author":{"gitId":"-"},"content":"         * ResultDisplay contains a TextArea, thus some accelerators (e.g F1) will","lastModifiedDate":"2016-12-18"},{"lineNumber":99,"author":{"gitId":"-"},"content":"         * not work when the focus is in them because the key event is consumed by","lastModifiedDate":"2016-12-18"},{"lineNumber":100,"author":{"gitId":"-"},"content":"         * the TextInputControl(s).","lastModifiedDate":"2016-12-18"},{"lineNumber":101,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2016-12-18"},{"lineNumber":102,"author":{"gitId":"-"},"content":"         * For now, we add following event filter to capture such key events and open","lastModifiedDate":"2016-12-18"},{"lineNumber":103,"author":{"gitId":"-"},"content":"         * help window purposely so to support accelerators even when focus is","lastModifiedDate":"2016-12-18"},{"lineNumber":104,"author":{"gitId":"-"},"content":"         * in CommandBox or ResultDisplay.","lastModifiedDate":"2016-12-18"},{"lineNumber":105,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-12-18"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        getRoot().addEventFilter(KeyEvent.KEY_PRESSED, event -\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":107,"author":{"gitId":"-"},"content":"            if (event.getTarget() instanceof TextInputControl \u0026\u0026 keyCombination.match(event)) {","lastModifiedDate":"2016-12-18"},{"lineNumber":108,"author":{"gitId":"-"},"content":"                menuItem.getOnAction().handle(new ActionEvent());","lastModifiedDate":"2016-12-18"},{"lineNumber":109,"author":{"gitId":"-"},"content":"                event.consume();","lastModifiedDate":"2016-12-18"},{"lineNumber":110,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-12-18"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        });","lastModifiedDate":"2016-12-18"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":115,"author":{"gitId":"-"},"content":"     * Fills up all the placeholders of this window.","lastModifiedDate":"2017-08-16"},{"lineNumber":116,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    void fillInnerParts() {","lastModifiedDate":"2016-09-21"},{"lineNumber":118,"author":{"gitId":"Jaspertzx"},"content":"        clientListPanel \u003d new ClientListPanel(logic.getFilteredClientList());","lastModifiedDate":"2024-04-14"},{"lineNumber":119,"author":{"gitId":"Jaspertzx"},"content":"        clientListPanelPlaceholder.getChildren().add(clientListPanel.getRoot());","lastModifiedDate":"2024-04-14"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":121,"author":{"gitId":"kailinteoo"},"content":"        orderListPanel \u003d new OrderListPanel(logic.getFilteredOrderList());","lastModifiedDate":"2024-03-20"},{"lineNumber":122,"author":{"gitId":"kailinteoo"},"content":"        orderListPanelPlaceholder.getChildren().add(orderListPanel.getRoot());","lastModifiedDate":"2024-03-20"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        resultDisplay \u003d new ResultDisplay();","lastModifiedDate":"2018-12-09"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        resultDisplayPlaceholder.getChildren().add(resultDisplay.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        StatusBarFooter statusBarFooter \u003d new StatusBarFooter(logic.getAddressBookFilePath());","lastModifiedDate":"2019-01-25"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        statusbarPlaceholder.getChildren().add(statusBarFooter.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        CommandBox commandBox \u003d new CommandBox(this::executeCommand);","lastModifiedDate":"2019-01-25"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        commandBoxPlaceholder.getChildren().add(commandBox.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-18"},{"lineNumber":135,"author":{"gitId":"-"},"content":"     * Sets the default size based on {@code guiSettings}.","lastModifiedDate":"2018-11-27"},{"lineNumber":136,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    private void setWindowDefaultSize(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        primaryStage.setHeight(guiSettings.getWindowHeight());","lastModifiedDate":"2018-11-27"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        primaryStage.setWidth(guiSettings.getWindowWidth());","lastModifiedDate":"2018-11-27"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        if (guiSettings.getWindowCoordinates() !\u003d null) {","lastModifiedDate":"2018-11-27"},{"lineNumber":141,"author":{"gitId":"-"},"content":"            primaryStage.setX(guiSettings.getWindowCoordinates().getX());","lastModifiedDate":"2018-11-27"},{"lineNumber":142,"author":{"gitId":"-"},"content":"            primaryStage.setY(guiSettings.getWindowCoordinates().getY());","lastModifiedDate":"2018-11-27"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-18"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":147,"author":{"gitId":"-"},"content":"     * Opens the help window or focuses on it if it\u0027s already opened.","lastModifiedDate":"2018-03-15"},{"lineNumber":148,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    public void handleHelp() {","lastModifiedDate":"2016-08-31"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        if (!helpWindow.isShowing()) {","lastModifiedDate":"2018-03-15"},{"lineNumber":152,"author":{"gitId":"-"},"content":"            helpWindow.show();","lastModifiedDate":"2016-08-18"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        } else {","lastModifiedDate":"2018-03-15"},{"lineNumber":154,"author":{"gitId":"-"},"content":"            helpWindow.focus();","lastModifiedDate":"2018-03-15"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-03-15"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":158,"author":{"gitId":"-"},"content":"    void show() {","lastModifiedDate":"2016-10-15"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        primaryStage.show();","lastModifiedDate":"2016-08-18"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-18"},{"lineNumber":163,"author":{"gitId":"-"},"content":"     * Closes the application.","lastModifiedDate":"2016-08-18"},{"lineNumber":164,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    private void handleExit() {","lastModifiedDate":"2016-08-18"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        GuiSettings guiSettings \u003d new GuiSettings(primaryStage.getWidth(), primaryStage.getHeight(),","lastModifiedDate":"2018-12-08"},{"lineNumber":168,"author":{"gitId":"-"},"content":"                (int) primaryStage.getX(), (int) primaryStage.getY());","lastModifiedDate":"2018-12-08"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        logic.setGuiSettings(guiSettings);","lastModifiedDate":"2018-12-08"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        helpWindow.hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        primaryStage.hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-25"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":175,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2018-12-09"},{"lineNumber":176,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-12-09"},{"lineNumber":177,"author":{"gitId":"-"},"content":"     * @see seedu.address.logic.Logic#execute(String)","lastModifiedDate":"2018-12-09"},{"lineNumber":178,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    private CommandResult executeCommand(String commandText) throws CommandException, ParseException {","lastModifiedDate":"2018-12-09"},{"lineNumber":180,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-12-09"},{"lineNumber":181,"author":{"gitId":"-"},"content":"            CommandResult commandResult \u003d logic.execute(commandText);","lastModifiedDate":"2018-12-09"},{"lineNumber":182,"author":{"gitId":"-"},"content":"            logger.info(\"Result: \" + commandResult.getFeedbackToUser());","lastModifiedDate":"2018-12-09"},{"lineNumber":183,"author":{"gitId":"-"},"content":"            resultDisplay.setFeedbackToUser(commandResult.getFeedbackToUser());","lastModifiedDate":"2018-12-09"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":185,"author":{"gitId":"-"},"content":"            if (commandResult.isShowHelp()) {","lastModifiedDate":"2018-12-09"},{"lineNumber":186,"author":{"gitId":"-"},"content":"                handleHelp();","lastModifiedDate":"2018-12-09"},{"lineNumber":187,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-12-09"},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":189,"author":{"gitId":"-"},"content":"            if (commandResult.isExit()) {","lastModifiedDate":"2018-12-09"},{"lineNumber":190,"author":{"gitId":"-"},"content":"                handleExit();","lastModifiedDate":"2018-12-09"},{"lineNumber":191,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-12-09"},{"lineNumber":192,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":193,"author":{"gitId":"-"},"content":"            return commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":194,"author":{"gitId":"-"},"content":"        } catch (CommandException | ParseException e) {","lastModifiedDate":"2018-12-09"},{"lineNumber":195,"author":{"gitId":"-"},"content":"            logger.info(\"An error occurred while executing command: \" + commandText);","lastModifiedDate":"2023-06-13"},{"lineNumber":196,"author":{"gitId":"-"},"content":"            resultDisplay.setFeedbackToUser(e.getMessage());","lastModifiedDate":"2018-12-09"},{"lineNumber":197,"author":{"gitId":"-"},"content":"            throw e;","lastModifiedDate":"2018-12-09"},{"lineNumber":198,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":199,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":200,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"kailinteoo":6,"Jaspertzx":5,"-":189}},{"path":"src/main/java/seedu/address/ui/OrderCard.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kailinteoo"},"content":"package seedu.address.ui;","lastModifiedDate":"2024-03-20"},{"lineNumber":2,"author":{"gitId":"kailinteoo"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":3,"author":{"gitId":"kailinteoo"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2024-03-20"},{"lineNumber":4,"author":{"gitId":"kailinteoo"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2024-03-20"},{"lineNumber":5,"author":{"gitId":"kailinteoo"},"content":"import javafx.scene.layout.FlowPane;","lastModifiedDate":"2024-03-20"},{"lineNumber":6,"author":{"gitId":"kailinteoo"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2024-03-20"},{"lineNumber":7,"author":{"gitId":"kailinteoo"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2024-03-20"},{"lineNumber":8,"author":{"gitId":"kailinteoo"},"content":"import seedu.address.model.order.Order;","lastModifiedDate":"2024-03-20"},{"lineNumber":9,"author":{"gitId":"kailinteoo"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":10,"author":{"gitId":"kailinteoo"},"content":"/**","lastModifiedDate":"2024-03-20"},{"lineNumber":11,"author":{"gitId":"Jaspertzx"},"content":" * An UI component that displays information of a {@code Client}.","lastModifiedDate":"2024-04-14"},{"lineNumber":12,"author":{"gitId":"kailinteoo"},"content":" */","lastModifiedDate":"2024-03-20"},{"lineNumber":13,"author":{"gitId":"kailinteoo"},"content":"public class OrderCard extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2024-03-20"},{"lineNumber":14,"author":{"gitId":"kailinteoo"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":15,"author":{"gitId":"kailinteoo"},"content":"    private static final String FXML \u003d \"OrderListCard.fxml\";","lastModifiedDate":"2024-03-20"},{"lineNumber":16,"author":{"gitId":"kailinteoo"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":17,"author":{"gitId":"kailinteoo"},"content":"    /**","lastModifiedDate":"2024-03-20"},{"lineNumber":18,"author":{"gitId":"kailinteoo"},"content":"     * Note: Certain keywords such as \"location\" and \"resources\" are reserved keywords in JavaFX.","lastModifiedDate":"2024-03-20"},{"lineNumber":19,"author":{"gitId":"kailinteoo"},"content":"     * As a consequence, UI elements\u0027 variable names cannot be set to such keywords","lastModifiedDate":"2024-03-20"},{"lineNumber":20,"author":{"gitId":"kailinteoo"},"content":"     * or an exception will be thrown by JavaFX during runtime.","lastModifiedDate":"2024-03-20"},{"lineNumber":21,"author":{"gitId":"kailinteoo"},"content":"     *","lastModifiedDate":"2024-03-20"},{"lineNumber":22,"author":{"gitId":"Jaspertzx"},"content":"     * @see \u003ca href\u003d\"https://github.com/se-edu/addressbook-level4/issues/336\"\u003eThe issue on BookKeeper level 4\u003c/a\u003e","lastModifiedDate":"2024-04-14"},{"lineNumber":23,"author":{"gitId":"kailinteoo"},"content":"     */","lastModifiedDate":"2024-03-20"},{"lineNumber":24,"author":{"gitId":"kailinteoo"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":25,"author":{"gitId":"kailinteoo"},"content":"    public final Order order;","lastModifiedDate":"2024-03-20"},{"lineNumber":26,"author":{"gitId":"kailinteoo"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":27,"author":{"gitId":"kailinteoo"},"content":"    @FXML","lastModifiedDate":"2024-03-20"},{"lineNumber":28,"author":{"gitId":"kailinteoo"},"content":"    private HBox cardPane;","lastModifiedDate":"2024-03-20"},{"lineNumber":29,"author":{"gitId":"kailinteoo"},"content":"    @FXML","lastModifiedDate":"2024-03-20"},{"lineNumber":30,"author":{"gitId":"kailinteoo"},"content":"    private Label name;","lastModifiedDate":"2024-03-20"},{"lineNumber":31,"author":{"gitId":"kailinteoo"},"content":"    @FXML","lastModifiedDate":"2024-03-20"},{"lineNumber":32,"author":{"gitId":"kailinteoo"},"content":"    private Label id;","lastModifiedDate":"2024-03-20"},{"lineNumber":33,"author":{"gitId":"kailinteoo"},"content":"    @FXML","lastModifiedDate":"2024-03-20"},{"lineNumber":34,"author":{"gitId":"rertyy"},"content":"    private Label clientName;","lastModifiedDate":"2024-03-29"},{"lineNumber":35,"author":{"gitId":"rertyy"},"content":"    @FXML","lastModifiedDate":"2024-03-29"},{"lineNumber":36,"author":{"gitId":"kailinteoo"},"content":"    private Label orderDate;","lastModifiedDate":"2024-03-20"},{"lineNumber":37,"author":{"gitId":"kailinteoo"},"content":"    @FXML","lastModifiedDate":"2024-03-20"},{"lineNumber":38,"author":{"gitId":"kailinteoo"},"content":"    private Label deadline;","lastModifiedDate":"2024-03-20"},{"lineNumber":39,"author":{"gitId":"kailinteoo"},"content":"    @FXML","lastModifiedDate":"2024-03-20"},{"lineNumber":40,"author":{"gitId":"kailinteoo"},"content":"    private Label price;","lastModifiedDate":"2024-03-28"},{"lineNumber":41,"author":{"gitId":"kailinteoo"},"content":"    @FXML","lastModifiedDate":"2024-03-20"},{"lineNumber":42,"author":{"gitId":"kailinteoo"},"content":"    private Label remark;","lastModifiedDate":"2024-03-20"},{"lineNumber":43,"author":{"gitId":"kailinteoo"},"content":"    @FXML","lastModifiedDate":"2024-03-20"},{"lineNumber":44,"author":{"gitId":"kailinteoo"},"content":"    private Label status;","lastModifiedDate":"2024-03-20"},{"lineNumber":45,"author":{"gitId":"kailinteoo"},"content":"    @FXML","lastModifiedDate":"2024-03-20"},{"lineNumber":46,"author":{"gitId":"kailinteoo"},"content":"    private FlowPane tags;","lastModifiedDate":"2024-03-20"},{"lineNumber":47,"author":{"gitId":"kailinteoo"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":48,"author":{"gitId":"kailinteoo"},"content":"    /**","lastModifiedDate":"2024-03-20"},{"lineNumber":49,"author":{"gitId":"Jaspertzx"},"content":"     * Creates a {@code OrderCard} with the given {@code Client} and index to display.","lastModifiedDate":"2024-04-14"},{"lineNumber":50,"author":{"gitId":"kailinteoo"},"content":"     */","lastModifiedDate":"2024-03-20"},{"lineNumber":51,"author":{"gitId":"rertyy"},"content":"    public OrderCard(Order order, int displayedIndex) {","lastModifiedDate":"2024-03-29"},{"lineNumber":52,"author":{"gitId":"kailinteoo"},"content":"        super(FXML);","lastModifiedDate":"2024-03-20"},{"lineNumber":53,"author":{"gitId":"rertyy"},"content":"        this.order \u003d order;","lastModifiedDate":"2024-03-29"},{"lineNumber":54,"author":{"gitId":"kailinteoo"},"content":"        id.setText(displayedIndex + \". \");","lastModifiedDate":"2024-03-20"},{"lineNumber":55,"author":{"gitId":"Jaspertzx"},"content":"        clientName.setText(\"Client Name: \" + order.getClient().getName().toString());","lastModifiedDate":"2024-04-14"},{"lineNumber":56,"author":{"gitId":"rertyy"},"content":"        orderDate.setText(\"Date: \" + order.getOrderDate().toString());","lastModifiedDate":"2024-03-24"},{"lineNumber":57,"author":{"gitId":"rertyy"},"content":"        deadline.setText(\"Deadline: \" + order.getDeadline().toString());","lastModifiedDate":"2024-03-24"},{"lineNumber":58,"author":{"gitId":"kailinteoo"},"content":"        price.setText(\"Price: \" + order.getPrice().toString());","lastModifiedDate":"2024-03-28"},{"lineNumber":59,"author":{"gitId":"rertyy"},"content":"        remark.setText(\"Description: \" + order.getRemark().toString());","lastModifiedDate":"2024-03-24"},{"lineNumber":60,"author":{"gitId":"rertyy"},"content":"        status.setText(\"Status: \" + order.getStatus().toString());","lastModifiedDate":"2024-03-24"},{"lineNumber":61,"author":{"gitId":"kailinteoo"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":62,"author":{"gitId":"kailinteoo"},"content":"}","lastModifiedDate":"2024-03-20"}],"authorContributionMap":{"kailinteoo":50,"rertyy":8,"Jaspertzx":4}},{"path":"src/main/java/seedu/address/ui/OrderListPanel.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kailinteoo"},"content":"package seedu.address.ui;","lastModifiedDate":"2024-03-20"},{"lineNumber":2,"author":{"gitId":"kailinteoo"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":3,"author":{"gitId":"kailinteoo"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2024-03-20"},{"lineNumber":4,"author":{"gitId":"kailinteoo"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":5,"author":{"gitId":"kailinteoo"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2024-03-20"},{"lineNumber":6,"author":{"gitId":"kailinteoo"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2024-03-20"},{"lineNumber":7,"author":{"gitId":"kailinteoo"},"content":"import javafx.scene.control.ListCell;","lastModifiedDate":"2024-03-20"},{"lineNumber":8,"author":{"gitId":"kailinteoo"},"content":"import javafx.scene.control.ListView;","lastModifiedDate":"2024-03-20"},{"lineNumber":9,"author":{"gitId":"kailinteoo"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2024-03-20"},{"lineNumber":10,"author":{"gitId":"kailinteoo"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2024-03-20"},{"lineNumber":11,"author":{"gitId":"kailinteoo"},"content":"import seedu.address.model.order.Order;","lastModifiedDate":"2024-03-20"},{"lineNumber":12,"author":{"gitId":"kailinteoo"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":13,"author":{"gitId":"kailinteoo"},"content":"/**","lastModifiedDate":"2024-03-20"},{"lineNumber":14,"author":{"gitId":"kailinteoo"},"content":" * Panel containing the list of orders.","lastModifiedDate":"2024-03-20"},{"lineNumber":15,"author":{"gitId":"kailinteoo"},"content":" */","lastModifiedDate":"2024-03-20"},{"lineNumber":16,"author":{"gitId":"kailinteoo"},"content":"public class OrderListPanel extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2024-03-20"},{"lineNumber":17,"author":{"gitId":"kailinteoo"},"content":"    private static final String FXML \u003d \"OrderListPanel.fxml\";","lastModifiedDate":"2024-03-20"},{"lineNumber":18,"author":{"gitId":"kailinteoo"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(OrderListPanel.class);","lastModifiedDate":"2024-03-20"},{"lineNumber":19,"author":{"gitId":"kailinteoo"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":20,"author":{"gitId":"kailinteoo"},"content":"    @FXML","lastModifiedDate":"2024-03-20"},{"lineNumber":21,"author":{"gitId":"rertyy"},"content":"    private ListView\u003cOrder\u003e orderListView;","lastModifiedDate":"2024-03-29"},{"lineNumber":22,"author":{"gitId":"kailinteoo"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":23,"author":{"gitId":"kailinteoo"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":24,"author":{"gitId":"kailinteoo"},"content":"    /**","lastModifiedDate":"2024-03-20"},{"lineNumber":25,"author":{"gitId":"kailinteoo"},"content":"     * Creates a {@code OrderListPanel} with the given {@code ObservableList}.","lastModifiedDate":"2024-03-20"},{"lineNumber":26,"author":{"gitId":"kailinteoo"},"content":"     */","lastModifiedDate":"2024-03-20"},{"lineNumber":27,"author":{"gitId":"rertyy"},"content":"    public OrderListPanel(ObservableList\u003cOrder\u003e orderList) {","lastModifiedDate":"2024-03-29"},{"lineNumber":28,"author":{"gitId":"kailinteoo"},"content":"        super(FXML);","lastModifiedDate":"2024-03-20"},{"lineNumber":29,"author":{"gitId":"rertyy"},"content":"        orderListView.setItems(orderList);","lastModifiedDate":"2024-03-29"},{"lineNumber":30,"author":{"gitId":"rertyy"},"content":"        orderListView.setCellFactory(listView -\u003e new OrderListViewCell());","lastModifiedDate":"2024-03-29"},{"lineNumber":31,"author":{"gitId":"kailinteoo"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":32,"author":{"gitId":"kailinteoo"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":33,"author":{"gitId":"kailinteoo"},"content":"    /**","lastModifiedDate":"2024-03-20"},{"lineNumber":34,"author":{"gitId":"kailinteoo"},"content":"     * Custom {@code ListCell} that displays the graphics of a {@code Order} using a {@code OrderCard}.","lastModifiedDate":"2024-03-20"},{"lineNumber":35,"author":{"gitId":"kailinteoo"},"content":"     */","lastModifiedDate":"2024-03-20"},{"lineNumber":36,"author":{"gitId":"rertyy"},"content":"    class OrderListViewCell extends ListCell\u003cOrder\u003e {","lastModifiedDate":"2024-03-29"},{"lineNumber":37,"author":{"gitId":"kailinteoo"},"content":"        @Override","lastModifiedDate":"2024-03-20"},{"lineNumber":38,"author":{"gitId":"rertyy"},"content":"        protected void updateItem(Order order, boolean empty) {","lastModifiedDate":"2024-03-29"},{"lineNumber":39,"author":{"gitId":"kailinteoo"},"content":"            super.updateItem(order, empty);","lastModifiedDate":"2024-03-20"},{"lineNumber":40,"author":{"gitId":"kailinteoo"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":41,"author":{"gitId":"kailinteoo"},"content":"            if (empty || order \u003d\u003d null) {","lastModifiedDate":"2024-03-20"},{"lineNumber":42,"author":{"gitId":"kailinteoo"},"content":"                setGraphic(null);","lastModifiedDate":"2024-03-20"},{"lineNumber":43,"author":{"gitId":"kailinteoo"},"content":"                setText(null);","lastModifiedDate":"2024-03-20"},{"lineNumber":44,"author":{"gitId":"kailinteoo"},"content":"            } else {","lastModifiedDate":"2024-03-20"},{"lineNumber":45,"author":{"gitId":"kailinteoo"},"content":"                setGraphic(new OrderCard(order, getIndex() + 1).getRoot());","lastModifiedDate":"2024-03-20"},{"lineNumber":46,"author":{"gitId":"kailinteoo"},"content":"            }","lastModifiedDate":"2024-03-20"},{"lineNumber":47,"author":{"gitId":"kailinteoo"},"content":"        }","lastModifiedDate":"2024-03-20"},{"lineNumber":48,"author":{"gitId":"kailinteoo"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":49,"author":{"gitId":"kailinteoo"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":50,"author":{"gitId":"kailinteoo"},"content":"}","lastModifiedDate":"2024-03-20"}],"authorContributionMap":{"kailinteoo":44,"rertyy":6}},{"path":"src/main/java/seedu/address/ui/Ui.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-09-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":6,"author":{"gitId":"rertyy"},"content":" * API of UI component.","lastModifiedDate":"2024-03-20"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public interface Ui {","lastModifiedDate":"2016-09-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":10,"author":{"gitId":"rertyy"},"content":"    /**","lastModifiedDate":"2024-03-20"},{"lineNumber":11,"author":{"gitId":"rertyy"},"content":"     * Starts the UI (and the App).","lastModifiedDate":"2024-03-20"},{"lineNumber":12,"author":{"gitId":"rertyy"},"content":"     */","lastModifiedDate":"2024-03-20"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    void start(Stage primaryStage);","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"rertyy":4,"-":11}},{"path":"src/main/resources/view/ClientListPanel.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.ListView?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003cVBox xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-07-27"},{"lineNumber":7,"author":{"gitId":"Jaspertzx"},"content":"  \u003cListView fx:id\u003d\"clientListView\" VBox.vgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2024-04-14"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c/VBox\u003e","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"Jaspertzx":1,"-":7}},{"path":"src/main/resources/view/DarkTheme.css","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":".background {","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"shavonneg"},"content":"    -fx-background-color: #E8E3DC;","lastModifiedDate":"2024-03-20"},{"lineNumber":3,"author":{"gitId":"shavonneg"},"content":"    background-color: #E8E3DC; /* Used in the default.html file */","lastModifiedDate":"2024-03-20"},{"lineNumber":4,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":".label {","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2022-01-13"},{"lineNumber":9,"author":{"gitId":"shavonneg"},"content":"    -fx-text-fill: #4D3319; /* dark brown */","lastModifiedDate":"2024-03-20"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    -fx-opacity: 0.9;","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":".label-header {","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    -fx-font-size: 32pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":16,"author":{"gitId":"shavonneg"},"content":"    -fx-text-fill: #4D3319; /* dark brown */","lastModifiedDate":"2024-03-20"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":".text-field {","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"shavonneg"},"content":"    -fx-background-color: #F5F5DC; /* cream background for entering commands */","lastModifiedDate":"2024-03-20"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    -fx-font-size: 12pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2022-01-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":".list-view {","lastModifiedDate":"2024-04-03"},{"lineNumber":27,"author":{"gitId":"Jaspertzx"},"content":"    -fx-background-color: #E8E3DC;","lastModifiedDate":"2024-04-03"},{"lineNumber":28,"author":{"gitId":"Jaspertzx"},"content":"    -fx-border-color: lightgrey;","lastModifiedDate":"2024-04-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2024-04-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2024-04-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":".button {","lastModifiedDate":"2024-03-20"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    -fx-padding: 5 22 5 22;","lastModifiedDate":"2024-03-20"},{"lineNumber":34,"author":{"gitId":"shavonneg"},"content":"    -fx-border-color: #E8E3DC; /* light brown */","lastModifiedDate":"2024-03-20"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    -fx-border-width: 2;","lastModifiedDate":"2024-03-20"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    -fx-background-radius: 0;","lastModifiedDate":"2024-03-20"},{"lineNumber":37,"author":{"gitId":"kailinteoo"},"content":"    -fx-background-color: #E8E3DC; /* light brown button */","lastModifiedDate":"2024-03-20"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI\", Helvetica, Arial, sans-serif;","lastModifiedDate":"2024-03-20"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2024-03-20"},{"lineNumber":40,"author":{"gitId":"shavonneg"},"content":"    -fx-text-fill: #4D3319; /* text */","lastModifiedDate":"2024-03-20"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    -fx-background-insets: 0 0 0 0, 0, 1, 2;","lastModifiedDate":"2024-03-20"},{"lineNumber":42,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":".button:hover {","lastModifiedDate":"2024-03-20"},{"lineNumber":45,"author":{"gitId":"shavonneg"},"content":"    -fx-background-color: #8A9A5B; /* not quite sure where */","lastModifiedDate":"2024-03-20"},{"lineNumber":46,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":".table-view {","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"shavonneg"},"content":"    -fx-base: #E8E3DC; /* light brown */","lastModifiedDate":"2024-03-20"},{"lineNumber":50,"author":{"gitId":"shavonneg"},"content":"    -fx-control-inner-background: #E8E3DC; /* light brown */","lastModifiedDate":"2024-03-20"},{"lineNumber":51,"author":{"gitId":"shavonneg"},"content":"    -fx-background-color: #E8E3DC; /* light brown */","lastModifiedDate":"2024-03-20"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    -fx-table-cell-border-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    -fx-table-header-border-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    -fx-padding: 5;","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":".list-cell {","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    -fx-label-padding: 0 0 0 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    -fx-graphic-text-gap: 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"shavonneg"},"content":"    -fx-background-color: #E8E3DC; /* light brown */","lastModifiedDate":"2024-03-20"},{"lineNumber":62,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"shavonneg"},"content":".status-bar {","lastModifiedDate":"2024-03-20"},{"lineNumber":65,"author":{"gitId":"shavonneg"},"content":"    -fx-background-color: #E8E3DC; /* light brown */","lastModifiedDate":"2024-03-20"},{"lineNumber":66,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":68,"author":{"gitId":"shavonneg"},"content":".split-pane {","lastModifiedDate":"2024-03-20"},{"lineNumber":69,"author":{"gitId":"shavonneg"},"content":"    -fx-border-radius: 1;","lastModifiedDate":"2024-03-20"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2017-03-02"},{"lineNumber":71,"author":{"gitId":"shavonneg"},"content":"    -fx-background-color: #E8E3DC; /* light brown */","lastModifiedDate":"2024-03-20"},{"lineNumber":72,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":".pane-with-border {","lastModifiedDate":"2017-05-15"},{"lineNumber":75,"author":{"gitId":"shavonneg"},"content":"    -fx-border-color: #5D534A; /* earthy brown */","lastModifiedDate":"2024-03-20"},{"lineNumber":76,"author":{"gitId":"shavonneg"},"content":"    -fx-background-color: #E8E3DC; /* light brown */","lastModifiedDate":"2024-03-20"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    -fx-border-top-width: 1px;","lastModifiedDate":"2017-05-09"},{"lineNumber":78,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-09"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":80,"author":{"gitId":"-"},"content":".menu-bar {","lastModifiedDate":"2016-08-08"},{"lineNumber":81,"author":{"gitId":"shavonneg"},"content":"    -fx-background-color: #E8E3DC; /* light brown */","lastModifiedDate":"2024-03-20"},{"lineNumber":82,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":84,"author":{"gitId":"shavonneg"},"content":".result-display {","lastModifiedDate":"2024-03-20"},{"lineNumber":85,"author":{"gitId":"shavonneg"},"content":"    -fx-background-color: #E8E3DC; /* light brown */","lastModifiedDate":"2024-03-20"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    -fx-font-size: 13pt;","lastModifiedDate":"2017-03-02"},{"lineNumber":88,"author":{"gitId":"shavonneg"},"content":"    -fx-text-fill: #4D3319; /* dark brown */","lastModifiedDate":"2024-03-20"},{"lineNumber":89,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":91,"author":{"gitId":"-"},"content":"#resultDisplay .content {","lastModifiedDate":"2017-03-02"},{"lineNumber":92,"author":{"gitId":"shavonneg"},"content":"    -fx-background-color: transparent, #EDEDED, transparent, #EDEDED; /* grey white */","lastModifiedDate":"2024-03-20"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    -fx-background-radius: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":94,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":96,"author":{"gitId":"shavonneg"},"content":".section-title {","lastModifiedDate":"2024-03-20"},{"lineNumber":97,"author":{"gitId":"shavonneg"},"content":"    -fx-font-size: 16px;","lastModifiedDate":"2024-03-20"},{"lineNumber":98,"author":{"gitId":"shavonneg"},"content":"    -fx-font-weight: bold;","lastModifiedDate":"2024-03-20"},{"lineNumber":99,"author":{"gitId":"shavonneg"},"content":"    -fx-padding: 5px;","lastModifiedDate":"2024-03-20"},{"lineNumber":100,"author":{"gitId":"shavonneg"},"content":"}","lastModifiedDate":"2024-03-20"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":102,"author":{"gitId":"-"},"content":"#tags {","lastModifiedDate":"2024-03-26"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    -fx-hgap: 7;","lastModifiedDate":"2024-03-26"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    -fx-vgap: 3;","lastModifiedDate":"2024-03-26"},{"lineNumber":105,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2024-03-26"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":107,"author":{"gitId":"-"},"content":"#tags .label {","lastModifiedDate":"2016-12-18"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-12-18"},{"lineNumber":109,"author":{"gitId":"shavonneg"},"content":"    -fx-background-color: #8A9A5B; /* green background for tags */","lastModifiedDate":"2024-03-20"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    -fx-padding: 1 3 1 3;","lastModifiedDate":"2016-12-18"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    -fx-border-radius: 2;","lastModifiedDate":"2016-12-18"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    -fx-background-radius: 2;","lastModifiedDate":"2016-12-18"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    -fx-font-size: 11;","lastModifiedDate":"2016-12-18"},{"lineNumber":114,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-18"}],"authorContributionMap":{"kailinteoo":1,"shavonneg":30,"Jaspertzx":2,"-":81}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":4,"author":{"gitId":"shavonneg"},"content":"\u003c?import javafx.scene.control.*?\u003e","lastModifiedDate":"2024-03-20"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.image.Image?\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":6,"author":{"gitId":"shavonneg"},"content":"\u003c?import javafx.scene.layout.*?\u003e","lastModifiedDate":"2024-03-20"},{"lineNumber":7,"author":{"gitId":"shavonneg"},"content":"\u003c?import javafx.scene.Scene?\u003e","lastModifiedDate":"2024-03-20"},{"lineNumber":8,"author":{"gitId":"shavonneg"},"content":"\u003c?import javafx.stage.Stage?\u003e","lastModifiedDate":"2024-03-20"},{"lineNumber":9,"author":{"gitId":"shavonneg"},"content":"\u003c?import java.net.URL?\u003e","lastModifiedDate":"2024-03-20"},{"lineNumber":10,"author":{"gitId":"shavonneg"},"content":"\u003cfx:root xmlns:fx\u003d\"http://javafx.com/fxml/1\" type\u003d\"javafx.stage.Stage\" xmlns\u003d\"http://javafx.com/javafx/17\"","lastModifiedDate":"2024-03-20"},{"lineNumber":11,"author":{"gitId":"kailinteoo"},"content":"         title\u003d\"BookKeeper\" minWidth\u003d\"450\" minHeight\u003d\"600\" onCloseRequest\u003d\"#handleExit\"\u003e","lastModifiedDate":"2024-03-20"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    \u003cicons\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        \u003cImage url\u003d\"@/images/address_book_32.png\"/\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    \u003c/icons\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    \u003cscene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        \u003cScene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":17,"author":{"gitId":"-"},"content":"            \u003cstylesheets\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"                \u003cURL value\u003d\"@DarkTheme.css\"/\u003e","lastModifiedDate":"2016-08-20"},{"lineNumber":19,"author":{"gitId":"-"},"content":"                \u003cURL value\u003d\"@Extensions.css\"/\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"            \u003c/stylesheets\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"            \u003cVBox\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":23,"author":{"gitId":"-"},"content":"                \u003cMenuBar fx:id\u003d\"menuBar\" VBox.vgrow\u003d\"NEVER\"\u003e","lastModifiedDate":"2017-06-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"                    \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"File\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"                        \u003cMenuItem mnemonicParsing\u003d\"false\" onAction\u003d\"#handleExit\" text\u003d\"Exit\"/\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"                    \u003c/Menu\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"                    \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"Help\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"                        \u003cMenuItem fx:id\u003d\"helpMenuItem\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleHelp\" text\u003d\"Help\"/\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"                    \u003c/Menu\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"                \u003c/MenuBar\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"                \u003cStackPane VBox.vgrow\u003d\"NEVER\" fx:id\u003d\"commandBoxPlaceholder\" styleClass\u003d\"pane-with-border\"\u003e","lastModifiedDate":"2017-05-15"},{"lineNumber":33,"author":{"gitId":"-"},"content":"                    \u003cpadding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":34,"author":{"gitId":"-"},"content":"                        \u003cInsets top\u003d\"5\" right\u003d\"10\" bottom\u003d\"5\" left\u003d\"10\"/\u003e","lastModifiedDate":"2017-03-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"                    \u003c/padding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":36,"author":{"gitId":"-"},"content":"                \u003c/StackPane\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"                \u003cStackPane VBox.vgrow\u003d\"NEVER\" fx:id\u003d\"resultDisplayPlaceholder\" styleClass\u003d\"pane-with-border\"","lastModifiedDate":"2017-05-15"},{"lineNumber":39,"author":{"gitId":"-"},"content":"                           minHeight\u003d\"100\" prefHeight\u003d\"100\" maxHeight\u003d\"100\"\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"                    \u003cpadding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":41,"author":{"gitId":"-"},"content":"                        \u003cInsets top\u003d\"5\" right\u003d\"10\" bottom\u003d\"5\" left\u003d\"10\"/\u003e","lastModifiedDate":"2017-03-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"                    \u003c/padding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":43,"author":{"gitId":"-"},"content":"                \u003c/StackPane\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":45,"author":{"gitId":"Jaspertzx"},"content":"                \u003c!-- SplitPane to hold both client list and order list --\u003e","lastModifiedDate":"2024-04-14"},{"lineNumber":46,"author":{"gitId":"shavonneg"},"content":"                \u003cSplitPane VBox.vgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2024-03-20"},{"lineNumber":47,"author":{"gitId":"Jaspertzx"},"content":"                    \u003c!-- Client List Section --\u003e","lastModifiedDate":"2024-04-14"},{"lineNumber":48,"author":{"gitId":"shavonneg"},"content":"                    \u003cVBox styleClass\u003d\"pane-with-border\" minWidth\u003d\"340\" prefWidth\u003d\"340\"\u003e","lastModifiedDate":"2024-03-20"},{"lineNumber":49,"author":{"gitId":"-"},"content":"                        \u003cpadding\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":50,"author":{"gitId":"-"},"content":"                            \u003cInsets top\u003d\"10\" right\u003d\"10\" bottom\u003d\"10\" left\u003d\"10\"/\u003e","lastModifiedDate":"2017-03-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"                        \u003c/padding\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":52,"author":{"gitId":"shavonneg"},"content":"                        \u003cLabel text\u003d\"My Clients\" styleClass\u003d\"section-title\"/\u003e","lastModifiedDate":"2024-03-20"},{"lineNumber":53,"author":{"gitId":"Jaspertzx"},"content":"                        \u003cStackPane fx:id\u003d\"clientListPanelPlaceholder\" VBox.vgrow\u003d\"ALWAYS\"/\u003e","lastModifiedDate":"2024-04-14"},{"lineNumber":54,"author":{"gitId":"-"},"content":"                    \u003c/VBox\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":56,"author":{"gitId":"shavonneg"},"content":"                    \u003c!-- Order List Section --\u003e","lastModifiedDate":"2024-03-20"},{"lineNumber":57,"author":{"gitId":"shavonneg"},"content":"                    \u003cVBox styleClass\u003d\"pane-with-border\" minWidth\u003d\"340\" prefWidth\u003d\"340\"\u003e","lastModifiedDate":"2024-03-20"},{"lineNumber":58,"author":{"gitId":"shavonneg"},"content":"                        \u003cpadding\u003e","lastModifiedDate":"2024-03-20"},{"lineNumber":59,"author":{"gitId":"shavonneg"},"content":"                            \u003cInsets top\u003d\"10\" right\u003d\"10\" bottom\u003d\"10\" left\u003d\"10\"/\u003e","lastModifiedDate":"2024-03-20"},{"lineNumber":60,"author":{"gitId":"shavonneg"},"content":"                        \u003c/padding\u003e","lastModifiedDate":"2024-03-20"},{"lineNumber":61,"author":{"gitId":"shavonneg"},"content":"                        \u003cLabel text\u003d\"My Orders\" styleClass\u003d\"section-title\"/\u003e","lastModifiedDate":"2024-03-20"},{"lineNumber":62,"author":{"gitId":"shavonneg"},"content":"                        \u003cStackPane fx:id\u003d\"orderListPanelPlaceholder\" VBox.vgrow\u003d\"ALWAYS\"/\u003e","lastModifiedDate":"2024-03-20"},{"lineNumber":63,"author":{"gitId":"shavonneg"},"content":"                    \u003c/VBox\u003e","lastModifiedDate":"2024-03-20"},{"lineNumber":64,"author":{"gitId":"shavonneg"},"content":"                \u003c/SplitPane\u003e","lastModifiedDate":"2024-03-20"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":66,"author":{"gitId":"-"},"content":"                \u003cStackPane fx:id\u003d\"statusbarPlaceholder\" VBox.vgrow\u003d\"NEVER\"/\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":67,"author":{"gitId":"-"},"content":"            \u003c/VBox\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        \u003c/Scene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    \u003c/scene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":70,"author":{"gitId":"-"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2017-11-29"}],"authorContributionMap":{"kailinteoo":1,"shavonneg":18,"Jaspertzx":3,"-":48}},{"path":"src/main/resources/view/OrderListCard.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kailinteoo"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2024-03-20"},{"lineNumber":2,"author":{"gitId":"kailinteoo"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":3,"author":{"gitId":"kailinteoo"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2024-03-20"},{"lineNumber":4,"author":{"gitId":"kailinteoo"},"content":"\u003c?import javafx.scene.control.*?\u003e","lastModifiedDate":"2024-03-20"},{"lineNumber":5,"author":{"gitId":"kailinteoo"},"content":"\u003c?import javafx.scene.layout.*?\u003e","lastModifiedDate":"2024-03-20"},{"lineNumber":6,"author":{"gitId":"kailinteoo"},"content":"\u003cHBox xmlns:fx\u003d\"http://javafx.com/fxml/1\" id\u003d\"cardPane\" fx:id\u003d\"cardPane\" xmlns\u003d\"http://javafx.com/javafx/17\"\u003e","lastModifiedDate":"2024-03-20"},{"lineNumber":7,"author":{"gitId":"kailinteoo"},"content":"    \u003cGridPane HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2024-03-20"},{"lineNumber":8,"author":{"gitId":"kailinteoo"},"content":"        \u003ccolumnConstraints\u003e","lastModifiedDate":"2024-03-20"},{"lineNumber":9,"author":{"gitId":"kailinteoo"},"content":"            \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10\" prefWidth\u003d\"150\"/\u003e","lastModifiedDate":"2024-03-20"},{"lineNumber":10,"author":{"gitId":"kailinteoo"},"content":"        \u003c/columnConstraints\u003e","lastModifiedDate":"2024-03-20"},{"lineNumber":11,"author":{"gitId":"kailinteoo"},"content":"        \u003cVBox alignment\u003d\"CENTER_LEFT\" minHeight\u003d\"105\" GridPane.columnIndex\u003d\"0\"\u003e","lastModifiedDate":"2024-03-20"},{"lineNumber":12,"author":{"gitId":"kailinteoo"},"content":"            \u003cpadding\u003e","lastModifiedDate":"2024-03-20"},{"lineNumber":13,"author":{"gitId":"kailinteoo"},"content":"                \u003cInsets top\u003d\"5\" right\u003d\"5\" bottom\u003d\"5\" left\u003d\"15\"/\u003e","lastModifiedDate":"2024-03-20"},{"lineNumber":14,"author":{"gitId":"kailinteoo"},"content":"            \u003c/padding\u003e","lastModifiedDate":"2024-03-20"},{"lineNumber":15,"author":{"gitId":"kailinteoo"},"content":"            \u003cHBox spacing\u003d\"5\" alignment\u003d\"CENTER_LEFT\"\u003e","lastModifiedDate":"2024-03-20"},{"lineNumber":16,"author":{"gitId":"kailinteoo"},"content":"                \u003cLabel fx:id\u003d\"id\" styleClass\u003d\"cell_big_label\"\u003e","lastModifiedDate":"2024-03-20"},{"lineNumber":17,"author":{"gitId":"kailinteoo"},"content":"                    \u003cminWidth\u003e","lastModifiedDate":"2024-03-20"},{"lineNumber":18,"author":{"gitId":"kailinteoo"},"content":"                        \u003c!-- Ensures that the label text is never truncated --\u003e","lastModifiedDate":"2024-03-20"},{"lineNumber":19,"author":{"gitId":"kailinteoo"},"content":"                        \u003cRegion fx:constant\u003d\"USE_PREF_SIZE\"/\u003e","lastModifiedDate":"2024-03-20"},{"lineNumber":20,"author":{"gitId":"kailinteoo"},"content":"                    \u003c/minWidth\u003e","lastModifiedDate":"2024-03-20"},{"lineNumber":21,"author":{"gitId":"kailinteoo"},"content":"                \u003c/Label\u003e","lastModifiedDate":"2024-03-20"},{"lineNumber":22,"author":{"gitId":"rertyy"},"content":"                \u003cLabel fx:id\u003d\"clientName\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$clientName\"/\u003e","lastModifiedDate":"2024-03-29"},{"lineNumber":23,"author":{"gitId":"kailinteoo"},"content":"            \u003c/HBox\u003e","lastModifiedDate":"2024-04-14"},{"lineNumber":24,"author":{"gitId":"kailinteoo"},"content":"            \u003cLabel fx:id\u003d\"orderDate\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$orderDate\"/\u003e","lastModifiedDate":"2024-03-20"},{"lineNumber":25,"author":{"gitId":"kailinteoo"},"content":"            \u003cLabel fx:id\u003d\"deadline\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$deadline\"/\u003e","lastModifiedDate":"2024-03-20"},{"lineNumber":26,"author":{"gitId":"kailinteoo"},"content":"            \u003cLabel fx:id\u003d\"price\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$price\"/\u003e","lastModifiedDate":"2024-03-28"},{"lineNumber":27,"author":{"gitId":"kailinteoo"},"content":"            \u003cLabel fx:id\u003d\"remark\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$remark\"/\u003e","lastModifiedDate":"2024-03-20"},{"lineNumber":28,"author":{"gitId":"kailinteoo"},"content":"            \u003cLabel fx:id\u003d\"status\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$status\"/\u003e","lastModifiedDate":"2024-03-20"},{"lineNumber":29,"author":{"gitId":"kailinteoo"},"content":"        \u003c/VBox\u003e","lastModifiedDate":"2024-03-20"},{"lineNumber":30,"author":{"gitId":"kailinteoo"},"content":"    \u003c/GridPane\u003e","lastModifiedDate":"2024-03-20"},{"lineNumber":31,"author":{"gitId":"kailinteoo"},"content":"\u003c/HBox\u003e","lastModifiedDate":"2024-03-20"}],"authorContributionMap":{"kailinteoo":30,"rertyy":1}},{"path":"src/main/resources/view/OrderListPanel.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kailinteoo"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2024-03-20"},{"lineNumber":2,"author":{"gitId":"kailinteoo"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":3,"author":{"gitId":"kailinteoo"},"content":"\u003c?import javafx.scene.control.ListView?\u003e","lastModifiedDate":"2024-03-20"},{"lineNumber":4,"author":{"gitId":"kailinteoo"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2024-03-20"},{"lineNumber":5,"author":{"gitId":"kailinteoo"},"content":"\u003cVBox xmlns:fx\u003d\"http://javafx.com/fxml/1\" xmlns\u003d\"http://javafx.com/javafx/17\"\u003e","lastModifiedDate":"2024-03-20"},{"lineNumber":6,"author":{"gitId":"rertyy"},"content":"    \u003cListView fx:id\u003d\"orderListView\" VBox.vgrow\u003d\"ALWAYS\"/\u003e","lastModifiedDate":"2024-03-29"},{"lineNumber":7,"author":{"gitId":"kailinteoo"},"content":"\u003c/VBox\u003e","lastModifiedDate":"2024-03-20"}],"authorContributionMap":{"kailinteoo":6,"rertyy":1}},{"path":"src/test/java/seedu/address/commons/util/AppUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.commons.util;","lastModifiedDate":"2016-09-30"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":7,"author":{"gitId":"-"},"content":"public class AppUtilTest {","lastModifiedDate":"2016-09-30"},{"lineNumber":8,"author":{"gitId":"shavonneg"},"content":"    // Please uncomment this","lastModifiedDate":"2024-03-19"},{"lineNumber":9,"author":{"gitId":"shavonneg"},"content":"    //    @Test","lastModifiedDate":"2024-03-19"},{"lineNumber":10,"author":{"gitId":"shavonneg"},"content":"    //    public void getImage_exitingImage() {","lastModifiedDate":"2024-03-19"},{"lineNumber":11,"author":{"gitId":"shavonneg"},"content":"    //        assertNotNull(AppUtil.getImage(\"/images/address_book_32.png\"));","lastModifiedDate":"2024-03-19"},{"lineNumber":12,"author":{"gitId":"shavonneg"},"content":"    //    }","lastModifiedDate":"2024-03-19"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public void getImage_nullGiven_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e AppUtil.getImage(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-15"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public void checkArgument_true_nothingHappens() {","lastModifiedDate":"2017-05-15"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        AppUtil.checkArgument(true);","lastModifiedDate":"2017-05-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        AppUtil.checkArgument(true, \"\");","lastModifiedDate":"2017-05-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-15"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public void checkArgument_falseWithoutErrorMessage_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e AppUtil.checkArgument(false));","lastModifiedDate":"2019-03-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-15"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public void checkArgument_falseWithErrorMessage_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        String errorMessage \u003d \"error message\";","lastModifiedDate":"2017-05-15"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, errorMessage, () -\u003e AppUtil.checkArgument(false, errorMessage));","lastModifiedDate":"2019-03-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-15"},{"lineNumber":35,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-30"}],"authorContributionMap":{"shavonneg":5,"-":30}},{"path":"src/test/java/seedu/address/commons/util/DateTimeUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"rertyy"},"content":"package seedu.address.commons.util;","lastModifiedDate":"2024-03-17"},{"lineNumber":2,"author":{"gitId":"rertyy"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":3,"author":{"gitId":"rertyy"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-04-09"},{"lineNumber":4,"author":{"gitId":"rertyy"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2024-04-09"},{"lineNumber":5,"author":{"gitId":"rertyy"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2024-04-09"},{"lineNumber":6,"author":{"gitId":"rertyy"},"content":"","lastModifiedDate":"2024-04-09"},{"lineNumber":7,"author":{"gitId":"rertyy"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-04-09"},{"lineNumber":8,"author":{"gitId":"rertyy"},"content":"","lastModifiedDate":"2024-04-09"},{"lineNumber":9,"author":{"gitId":"rertyy"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-17"},{"lineNumber":10,"author":{"gitId":"rertyy"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":11,"author":{"gitId":"rertyy"},"content":"class DateTimeUtilTest {","lastModifiedDate":"2024-03-17"},{"lineNumber":12,"author":{"gitId":"rertyy"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":13,"author":{"gitId":"rertyy"},"content":"    @Test","lastModifiedDate":"2024-03-17"},{"lineNumber":14,"author":{"gitId":"rertyy"},"content":"    void checkValidDate_validDate_success() {","lastModifiedDate":"2024-04-09"},{"lineNumber":15,"author":{"gitId":"rertyy"},"content":"        assertTrue(DateTimeUtil.isValidDate(\"01-01-2024 13:59\"));","lastModifiedDate":"2024-04-09"},{"lineNumber":16,"author":{"gitId":"rertyy"},"content":"        assertTrue(DateTimeUtil.isValidDate(\"31-12-2024 23:59\"));","lastModifiedDate":"2024-04-09"},{"lineNumber":17,"author":{"gitId":"rertyy"},"content":"        assertTrue(DateTimeUtil.isValidDate(\"29-02-2024 00:00\"));","lastModifiedDate":"2024-04-09"},{"lineNumber":18,"author":{"gitId":"rertyy"},"content":"","lastModifiedDate":"2024-04-09"},{"lineNumber":19,"author":{"gitId":"rertyy"},"content":"    }","lastModifiedDate":"2024-04-09"},{"lineNumber":20,"author":{"gitId":"rertyy"},"content":"","lastModifiedDate":"2024-04-09"},{"lineNumber":21,"author":{"gitId":"rertyy"},"content":"    @Test","lastModifiedDate":"2024-04-09"},{"lineNumber":22,"author":{"gitId":"rertyy"},"content":"    void checkValidDate_invalidFormat_failure() {","lastModifiedDate":"2024-04-09"},{"lineNumber":23,"author":{"gitId":"rertyy"},"content":"        // dd-mm-yy HH:mm","lastModifiedDate":"2024-04-09"},{"lineNumber":24,"author":{"gitId":"rertyy"},"content":"        assertFalse(DateTimeUtil.isValidDate(\"01-01-24 00:00\"));","lastModifiedDate":"2024-04-09"},{"lineNumber":25,"author":{"gitId":"rertyy"},"content":"        // mm-dd-yyyy HH:mm","lastModifiedDate":"2024-04-09"},{"lineNumber":26,"author":{"gitId":"rertyy"},"content":"        assertFalse(DateTimeUtil.isValidDate(\"01-31-2024 00:00\"));","lastModifiedDate":"2024-04-09"},{"lineNumber":27,"author":{"gitId":"rertyy"},"content":"        // dd-mm HH:mm","lastModifiedDate":"2024-04-09"},{"lineNumber":28,"author":{"gitId":"rertyy"},"content":"        assertFalse(DateTimeUtil.isValidDate(\"31-01 00:00\"));","lastModifiedDate":"2024-04-09"},{"lineNumber":29,"author":{"gitId":"rertyy"},"content":"        // yyyy-mm-dd HH:mm","lastModifiedDate":"2024-04-09"},{"lineNumber":30,"author":{"gitId":"rertyy"},"content":"        assertFalse(DateTimeUtil.isValidDate(\"2024-01-31 00:00\"));","lastModifiedDate":"2024-04-09"},{"lineNumber":31,"author":{"gitId":"rertyy"},"content":"        // dd/mm/yyyy HH:mm","lastModifiedDate":"2024-04-09"},{"lineNumber":32,"author":{"gitId":"rertyy"},"content":"        assertFalse(DateTimeUtil.isValidDate(\"31/01/2024 00:00\"));","lastModifiedDate":"2024-04-09"},{"lineNumber":33,"author":{"gitId":"rertyy"},"content":"        // dd-mm-yyyy HH:mm:ss","lastModifiedDate":"2024-04-09"},{"lineNumber":34,"author":{"gitId":"rertyy"},"content":"        assertFalse(DateTimeUtil.isValidDate(\"01-01-2020 00:00:00\"));","lastModifiedDate":"2024-04-09"},{"lineNumber":35,"author":{"gitId":"rertyy"},"content":"        // dd-mm-yyyy","lastModifiedDate":"2024-04-09"},{"lineNumber":36,"author":{"gitId":"rertyy"},"content":"        assertFalse(DateTimeUtil.isValidDate(\"01-01-2020\"));","lastModifiedDate":"2024-04-09"},{"lineNumber":37,"author":{"gitId":"rertyy"},"content":"    }","lastModifiedDate":"2024-04-09"},{"lineNumber":38,"author":{"gitId":"rertyy"},"content":"","lastModifiedDate":"2024-04-09"},{"lineNumber":39,"author":{"gitId":"rertyy"},"content":"    @Test","lastModifiedDate":"2024-04-09"},{"lineNumber":40,"author":{"gitId":"rertyy"},"content":"    void checkValidDate_nonexistentDate_failure() {","lastModifiedDate":"2024-04-09"},{"lineNumber":41,"author":{"gitId":"rertyy"},"content":"        // No leap year in 2023","lastModifiedDate":"2024-04-09"},{"lineNumber":42,"author":{"gitId":"rertyy"},"content":"        assertFalse(DateTimeUtil.isValidDate(\"29-02-2023 00:00\"));","lastModifiedDate":"2024-04-09"},{"lineNumber":43,"author":{"gitId":"rertyy"},"content":"        // No 30-31st of February","lastModifiedDate":"2024-04-09"},{"lineNumber":44,"author":{"gitId":"rertyy"},"content":"        assertFalse(DateTimeUtil.isValidDate(\"30-02-2024 00:00\"));","lastModifiedDate":"2024-04-09"},{"lineNumber":45,"author":{"gitId":"rertyy"},"content":"        assertFalse(DateTimeUtil.isValidDate(\"31-02-2024 00:00\"));","lastModifiedDate":"2024-04-09"},{"lineNumber":46,"author":{"gitId":"rertyy"},"content":"        // Mp 32nd of month","lastModifiedDate":"2024-04-09"},{"lineNumber":47,"author":{"gitId":"rertyy"},"content":"        assertFalse(DateTimeUtil.isValidDate(\"32-01-2024 00:00\"));","lastModifiedDate":"2024-04-09"},{"lineNumber":48,"author":{"gitId":"rertyy"},"content":"        /// Invalid times","lastModifiedDate":"2024-04-09"},{"lineNumber":49,"author":{"gitId":"rertyy"},"content":"        assertFalse(DateTimeUtil.isValidDate(\"01-01-2024 25:00\"));","lastModifiedDate":"2024-04-09"},{"lineNumber":50,"author":{"gitId":"rertyy"},"content":"        assertFalse(DateTimeUtil.isValidDate(\"01-01-2024 00:61\"));","lastModifiedDate":"2024-04-09"},{"lineNumber":51,"author":{"gitId":"rertyy"},"content":"        assertFalse(DateTimeUtil.isValidDate(\"01-01-2024 24:00\"));","lastModifiedDate":"2024-04-09"},{"lineNumber":52,"author":{"gitId":"rertyy"},"content":"    }","lastModifiedDate":"2024-04-09"},{"lineNumber":53,"author":{"gitId":"rertyy"},"content":"","lastModifiedDate":"2024-04-09"},{"lineNumber":54,"author":{"gitId":"rertyy"},"content":"","lastModifiedDate":"2024-04-09"},{"lineNumber":55,"author":{"gitId":"rertyy"},"content":"    @Test","lastModifiedDate":"2024-04-09"},{"lineNumber":56,"author":{"gitId":"rertyy"},"content":"    void formatDateTime_valid_success() {","lastModifiedDate":"2024-04-09"},{"lineNumber":57,"author":{"gitId":"rertyy"},"content":"        LocalDateTime dateTime \u003d LocalDateTime.of(2020, 1, 1, 13, 59);","lastModifiedDate":"2024-04-09"},{"lineNumber":58,"author":{"gitId":"rertyy"},"content":"        assertEquals(\"01-01-2020 13:59\", DateTimeUtil.formatDateTime(dateTime));","lastModifiedDate":"2024-04-09"},{"lineNumber":59,"author":{"gitId":"rertyy"},"content":"    }","lastModifiedDate":"2024-04-09"},{"lineNumber":60,"author":{"gitId":"rertyy"},"content":"","lastModifiedDate":"2024-04-09"},{"lineNumber":61,"author":{"gitId":"rertyy"},"content":"    @Test","lastModifiedDate":"2024-04-09"},{"lineNumber":62,"author":{"gitId":"rertyy"},"content":"    void parseDateTime_valid_success() {","lastModifiedDate":"2024-04-09"},{"lineNumber":63,"author":{"gitId":"rertyy"},"content":"        LocalDateTime dateTime \u003d LocalDateTime.of(2020, 1, 1, 13, 59);","lastModifiedDate":"2024-04-09"},{"lineNumber":64,"author":{"gitId":"rertyy"},"content":"        assertEquals(dateTime, DateTimeUtil.parseDateTime(\"01-01-2020 13:59\"));","lastModifiedDate":"2024-04-09"},{"lineNumber":65,"author":{"gitId":"rertyy"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":66,"author":{"gitId":"rertyy"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":67,"author":{"gitId":"rertyy"},"content":"    @Test","lastModifiedDate":"2024-03-17"},{"lineNumber":68,"author":{"gitId":"rertyy"},"content":"    void getCurrentTime_currentTime_success() {","lastModifiedDate":"2024-04-09"},{"lineNumber":69,"author":{"gitId":"rertyy"},"content":"        assertEquals(DateTimeUtil.formatDateTime(LocalDateTime.now()), DateTimeUtil.getCurrentTime());","lastModifiedDate":"2024-04-09"},{"lineNumber":70,"author":{"gitId":"rertyy"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":71,"author":{"gitId":"rertyy"},"content":"}","lastModifiedDate":"2024-03-17"}],"authorContributionMap":{"rertyy":71}},{"path":"src/test/java/seedu/address/commons/util/JsonUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.commons.util;","lastModifiedDate":"2016-09-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-10-07"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.testutil.SerializableTestClass;","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.testutil.TestUtil;","lastModifiedDate":"2017-01-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"rertyy"},"content":" * Tests JSON Read and Write.","lastModifiedDate":"2024-03-20"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class JsonUtilTest {","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private static final Path SERIALIZATION_FILE \u003d TestUtil.getFilePathInSandboxFolder(\"serialize.json\");","lastModifiedDate":"2018-04-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-07"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public void serializeObjectToJsonFile_noExceptionThrown() throws IOException {","lastModifiedDate":"2016-10-07"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        SerializableTestClass serializableTestClass \u003d new SerializableTestClass();","lastModifiedDate":"2016-10-07"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        serializableTestClass.setTestValues();","lastModifiedDate":"2016-10-07"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        JsonUtil.serializeObjectToJsonFile(SERIALIZATION_FILE, serializableTestClass);","lastModifiedDate":"2016-10-07"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertEquals(FileUtil.readFromFile(SERIALIZATION_FILE), SerializableTestClass.JSON_STRING_REPRESENTATION);","lastModifiedDate":"2016-10-07"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-07"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public void deserializeObjectFromJsonFile_noExceptionThrown() throws IOException {","lastModifiedDate":"2016-10-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        FileUtil.writeToFile(SERIALIZATION_FILE, SerializableTestClass.JSON_STRING_REPRESENTATION);","lastModifiedDate":"2016-10-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        SerializableTestClass serializableTestClass \u003d JsonUtil","lastModifiedDate":"2016-10-07"},{"lineNumber":35,"author":{"gitId":"-"},"content":"                .deserializeObjectFromJsonFile(SERIALIZATION_FILE, SerializableTestClass.class);","lastModifiedDate":"2016-10-07"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertEquals(serializableTestClass.getName(), SerializableTestClass.getNameTestValue());","lastModifiedDate":"2016-10-07"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertEquals(serializableTestClass.getListOfLocalDateTimes(), SerializableTestClass.getListTestValues());","lastModifiedDate":"2016-10-07"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertEquals(serializableTestClass.getMapOfIntegerToString(), SerializableTestClass.getHashMapTestValues());","lastModifiedDate":"2016-10-07"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-07"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    //TODO: @Test jsonUtil_readJsonStringToObjectInstance_correctObject()","lastModifiedDate":"2016-09-28"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    //TODO: @Test jsonUtil_writeThenReadObjectToJson_correctObject()","lastModifiedDate":"2016-09-28"},{"lineNumber":45,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"rertyy":1,"-":44}},{"path":"src/test/java/seedu/address/logic/LogicManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"Jaspertzx"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_CLIENT_DISPLAYED_INDEX;","lastModifiedDate":"2024-04-14"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2023-07-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":11,"author":{"gitId":"Jaspertzx"},"content":"import static seedu.address.testutil.TypicalClients.AMY;","lastModifiedDate":"2024-04-14"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-12-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.nio.file.AccessDeniedException;","lastModifiedDate":"2023-06-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-12-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2024-03-17"},{"lineNumber":22,"author":{"gitId":"Jaspertzx"},"content":"import seedu.address.logic.commands.client.AddCommand;","lastModifiedDate":"2024-04-14"},{"lineNumber":23,"author":{"gitId":"Jaspertzx"},"content":"import seedu.address.logic.commands.client.ListCommand;","lastModifiedDate":"2024-04-14"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2016-09-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2016-09-21"},{"lineNumber":28,"author":{"gitId":"Jaspertzx"},"content":"import seedu.address.model.ReadOnlyBookKeeper;","lastModifiedDate":"2024-04-14"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-05-31"},{"lineNumber":30,"author":{"gitId":"Jaspertzx"},"content":"import seedu.address.model.client.Client;","lastModifiedDate":"2024-04-14"},{"lineNumber":31,"author":{"gitId":"Jaspertzx"},"content":"import seedu.address.storage.JsonBookKeeperStorage;","lastModifiedDate":"2024-04-14"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonUserPrefsStorage;","lastModifiedDate":"2018-12-09"},{"lineNumber":33,"author":{"gitId":"-"},"content":"import seedu.address.storage.StorageManager;","lastModifiedDate":"2018-12-09"},{"lineNumber":34,"author":{"gitId":"Jaspertzx"},"content":"import seedu.address.testutil.ClientBuilder;","lastModifiedDate":"2024-04-14"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"public class LogicManagerTest {","lastModifiedDate":"2016-09-22"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private static final IOException DUMMY_IO_EXCEPTION \u003d new IOException(\"dummy IO exception\");","lastModifiedDate":"2023-06-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private static final IOException DUMMY_AD_EXCEPTION \u003d new AccessDeniedException(\"dummy access denied exception\");","lastModifiedDate":"2023-06-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public Path temporaryFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager();","lastModifiedDate":"2017-06-20"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2018-12-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2019-04-25"},{"lineNumber":48,"author":{"gitId":"Jaspertzx"},"content":"        JsonBookKeeperStorage addressBookStorage \u003d","lastModifiedDate":"2024-04-14"},{"lineNumber":49,"author":{"gitId":"Jaspertzx"},"content":"                new JsonBookKeeperStorage(temporaryFolder.resolve(\"addressBook.json\"));","lastModifiedDate":"2024-04-14"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(temporaryFolder.resolve(\"userPrefs.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        StorageManager storage \u003d new StorageManager(addressBookStorage, userPrefsStorage);","lastModifiedDate":"2018-12-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-20"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public void execute_invalidCommandFormat_throwsParseException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        String invalidCommand \u003d \"uicfhmowqewca\";","lastModifiedDate":"2017-06-20"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertParseException(invalidCommand, MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2017-06-20"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-20"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-20"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-14"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public void execute_commandExecutionError_throwsCommandException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        String deleteCommand \u003d \"delete 9\";","lastModifiedDate":"2017-06-14"},{"lineNumber":64,"author":{"gitId":"Jaspertzx"},"content":"        assertCommandException(deleteCommand, MESSAGE_INVALID_CLIENT_DISPLAYED_INDEX);","lastModifiedDate":"2024-04-14"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-14"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-19"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public void execute_validCommand_success() throws Exception {","lastModifiedDate":"2019-03-14"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        String listCommand \u003d ListCommand.COMMAND_WORD;","lastModifiedDate":"2017-06-19"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertCommandSuccess(listCommand, ListCommand.MESSAGE_SUCCESS, model);","lastModifiedDate":"2017-06-19"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-20"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-20"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-12-09"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public void execute_storageThrowsIoException_throwsCommandException() {","lastModifiedDate":"2019-04-25"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        assertCommandFailureForExceptionFromStorage(DUMMY_IO_EXCEPTION, String.format(","lastModifiedDate":"2023-06-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"                LogicManager.FILE_OPS_ERROR_FORMAT, DUMMY_IO_EXCEPTION.getMessage()));","lastModifiedDate":"2023-06-13"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-06-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-06-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public void execute_storageThrowsAdException_throwsCommandException() {","lastModifiedDate":"2023-06-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertCommandFailureForExceptionFromStorage(DUMMY_AD_EXCEPTION, String.format(","lastModifiedDate":"2023-06-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"                LogicManager.FILE_OPS_PERMISSION_ERROR_FORMAT, DUMMY_AD_EXCEPTION.getMessage()));","lastModifiedDate":"2023-06-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public void getFilteredPersonList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":87,"author":{"gitId":"Jaspertzx"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e logic.getFilteredClientList().remove(0));","lastModifiedDate":"2024-04-14"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":90,"author":{"gitId":"kailinteoo"},"content":"    @Test","lastModifiedDate":"2024-03-20"},{"lineNumber":91,"author":{"gitId":"kailinteoo"},"content":"    public void getFilteredOrderList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2024-03-20"},{"lineNumber":92,"author":{"gitId":"rertyy"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e logic.getFilteredOrderList().remove(0));","lastModifiedDate":"2024-03-21"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":96,"author":{"gitId":"rertyy"},"content":"     * Executes the command and confirms that:","lastModifiedDate":"2024-03-20"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     * - no exceptions are thrown \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     * - the feedback message is equal to {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":99,"author":{"gitId":"rertyy"},"content":"     * - the internal model manager state is the same as that in {@code expectedModel}. \u003cbr\u003e","lastModifiedDate":"2024-03-20"},{"lineNumber":100,"author":{"gitId":"shavonneg"},"content":"     *","lastModifiedDate":"2024-03-19"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    private void assertCommandSuccess(String inputCommand, String expectedMessage,","lastModifiedDate":"2019-03-14"},{"lineNumber":104,"author":{"gitId":"-"},"content":"                                      Model expectedModel) throws CommandException, ParseException {","lastModifiedDate":"2019-03-14"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        CommandResult result \u003d logic.execute(inputCommand);","lastModifiedDate":"2019-03-14"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        assertEquals(expectedMessage, result.getFeedbackToUser());","lastModifiedDate":"2019-03-14"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        assertEquals(expectedModel, model);","lastModifiedDate":"2019-03-14"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":111,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that a ParseException is thrown and that the result message is correct.","lastModifiedDate":"2017-03-11"},{"lineNumber":112,"author":{"gitId":"shavonneg"},"content":"     *","lastModifiedDate":"2024-03-19"},{"lineNumber":113,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":114,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    private void assertParseException(String inputCommand, String expectedMessage) {","lastModifiedDate":"2017-03-11"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, ParseException.class, expectedMessage);","lastModifiedDate":"2017-03-11"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-14"},{"lineNumber":120,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that a CommandException is thrown and that the result message is correct.","lastModifiedDate":"2017-06-14"},{"lineNumber":121,"author":{"gitId":"shavonneg"},"content":"     *","lastModifiedDate":"2024-03-19"},{"lineNumber":122,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":123,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-14"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    private void assertCommandException(String inputCommand, String expectedMessage) {","lastModifiedDate":"2017-06-14"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, CommandException.class, expectedMessage);","lastModifiedDate":"2017-06-14"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-14"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":129,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that the exception is thrown and that the result message is correct.","lastModifiedDate":"2017-03-11"},{"lineNumber":130,"author":{"gitId":"shavonneg"},"content":"     *","lastModifiedDate":"2024-03-19"},{"lineNumber":131,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":132,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    private void assertCommandFailure(String inputCommand, Class\u003c? extends Throwable\u003e expectedException,","lastModifiedDate":"2019-03-14"},{"lineNumber":134,"author":{"gitId":"-"},"content":"                                      String expectedMessage) {","lastModifiedDate":"2019-03-14"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2017-05-31"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, expectedException, expectedMessage, expectedModel);","lastModifiedDate":"2019-03-14"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-05"},{"lineNumber":140,"author":{"gitId":"-"},"content":"     * Executes the command and confirms that","lastModifiedDate":"2019-03-14"},{"lineNumber":141,"author":{"gitId":"-"},"content":"     * - the {@code expectedException} is thrown \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":142,"author":{"gitId":"-"},"content":"     * - the resulting error message is equal to {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":143,"author":{"gitId":"rertyy"},"content":"     * - the internal model manager state is the same as that in {@code expectedModel}. \u003cbr\u003e","lastModifiedDate":"2024-03-20"},{"lineNumber":144,"author":{"gitId":"shavonneg"},"content":"     *","lastModifiedDate":"2024-03-19"},{"lineNumber":145,"author":{"gitId":"-"},"content":"     * @see #assertCommandSuccess(String, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":146,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    private void assertCommandFailure(String inputCommand, Class\u003c? extends Throwable\u003e expectedException,","lastModifiedDate":"2019-03-14"},{"lineNumber":148,"author":{"gitId":"-"},"content":"                                      String expectedMessage, Model expectedModel) {","lastModifiedDate":"2017-05-31"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        assertThrows(expectedException, expectedMessage, () -\u003e logic.execute(inputCommand));","lastModifiedDate":"2019-03-14"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        assertEquals(expectedModel, model);","lastModifiedDate":"2017-05-31"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-19"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":154,"author":{"gitId":"-"},"content":"     * Tests the Logic component\u0027s handling of an {@code IOException} thrown by the Storage component.","lastModifiedDate":"2023-06-13"},{"lineNumber":155,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2023-06-13"},{"lineNumber":156,"author":{"gitId":"-"},"content":"     * @param e               the exception to be thrown by the Storage component","lastModifiedDate":"2023-06-13"},{"lineNumber":157,"author":{"gitId":"-"},"content":"     * @param expectedMessage the message expected inside exception thrown by the Logic component","lastModifiedDate":"2023-06-13"},{"lineNumber":158,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    private void assertCommandFailureForExceptionFromStorage(IOException e, String expectedMessage) {","lastModifiedDate":"2023-06-13"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        Path prefPath \u003d temporaryFolder.resolve(\"ExceptionUserPrefs.json\");","lastModifiedDate":"2023-06-13"},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":162,"author":{"gitId":"Jaspertzx"},"content":"        // Inject LogicManager with an BookKeeperStorage that throws the IOException e when saving","lastModifiedDate":"2024-04-14"},{"lineNumber":163,"author":{"gitId":"Jaspertzx"},"content":"        JsonBookKeeperStorage addressBookStorage \u003d new JsonBookKeeperStorage(prefPath) {","lastModifiedDate":"2024-04-14"},{"lineNumber":164,"author":{"gitId":"-"},"content":"            @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":165,"author":{"gitId":"Jaspertzx"},"content":"            public void saveAddressBook(ReadOnlyBookKeeper addressBook, Path filePath)","lastModifiedDate":"2024-04-14"},{"lineNumber":166,"author":{"gitId":"-"},"content":"                    throws IOException {","lastModifiedDate":"2023-06-13"},{"lineNumber":167,"author":{"gitId":"-"},"content":"                throw e;","lastModifiedDate":"2023-06-13"},{"lineNumber":168,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-12-09"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        };","lastModifiedDate":"2023-06-13"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-06-13"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d","lastModifiedDate":"2023-06-13"},{"lineNumber":172,"author":{"gitId":"-"},"content":"                new JsonUserPrefsStorage(temporaryFolder.resolve(\"ExceptionUserPrefs.json\"));","lastModifiedDate":"2023-06-13"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        StorageManager storage \u003d new StorageManager(addressBookStorage, userPrefsStorage);","lastModifiedDate":"2023-06-13"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-06-13"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2023-06-13"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-06-13"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        // Triggers the saveAddressBook method by executing an add command","lastModifiedDate":"2023-06-13"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        String addCommand \u003d AddCommand.COMMAND_WORD + NAME_DESC_AMY + PHONE_DESC_AMY","lastModifiedDate":"2023-06-13"},{"lineNumber":179,"author":{"gitId":"-"},"content":"                + EMAIL_DESC_AMY + ADDRESS_DESC_AMY;","lastModifiedDate":"2023-06-13"},{"lineNumber":180,"author":{"gitId":"Jaspertzx"},"content":"        Client expectedClient \u003d new ClientBuilder(AMY).withTags().build();","lastModifiedDate":"2024-04-14"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        ModelManager expectedModel \u003d new ModelManager();","lastModifiedDate":"2023-06-13"},{"lineNumber":182,"author":{"gitId":"Jaspertzx"},"content":"        expectedModel.addClient(expectedClient);","lastModifiedDate":"2024-04-14"},{"lineNumber":183,"author":{"gitId":"-"},"content":"        assertCommandFailure(addCommand, CommandException.class, expectedMessage, expectedModel);","lastModifiedDate":"2023-06-13"},{"lineNumber":184,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":185,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"kailinteoo":2,"shavonneg":5,"rertyy":4,"Jaspertzx":17,"-":157}},{"path":"src/test/java/seedu/address/logic/commands/CommandTestUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-07-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-07-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-07-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-07-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-06-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-07-20"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2018-01-31"},{"lineNumber":17,"author":{"gitId":"Jaspertzx"},"content":"import seedu.address.logic.commands.client.EditCommand;","lastModifiedDate":"2024-04-14"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-06-05"},{"lineNumber":19,"author":{"gitId":"Jaspertzx"},"content":"import seedu.address.model.BookKeeper;","lastModifiedDate":"2024-04-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-05"},{"lineNumber":21,"author":{"gitId":"Jaspertzx"},"content":"import seedu.address.model.client.Client;","lastModifiedDate":"2024-04-14"},{"lineNumber":22,"author":{"gitId":"Jaspertzx"},"content":"import seedu.address.model.client.NameContainsKeywordsPredicate;","lastModifiedDate":"2024-04-14"},{"lineNumber":23,"author":{"gitId":"rertyy"},"content":"import seedu.address.model.order.OrderNameContainsKeywordsPredicate;","lastModifiedDate":"2024-03-29"},{"lineNumber":24,"author":{"gitId":"Jaspertzx"},"content":"import seedu.address.testutil.EditClientDescriptorBuilder;","lastModifiedDate":"2024-04-14"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":" * Contains helper methods for testing commands.","lastModifiedDate":"2017-06-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"public class CommandTestUtil {","lastModifiedDate":"2017-06-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public static final String VALID_NAME_AMY \u003d \"Amy Bee\";","lastModifiedDate":"2017-07-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static final String VALID_NAME_BOB \u003d \"Bob Choo\";","lastModifiedDate":"2017-07-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public static final String VALID_PHONE_AMY \u003d \"11111111\";","lastModifiedDate":"2017-07-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public static final String VALID_PHONE_BOB \u003d \"22222222\";","lastModifiedDate":"2017-07-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public static final String VALID_EMAIL_AMY \u003d \"amy@example.com\";","lastModifiedDate":"2017-07-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public static final String VALID_EMAIL_BOB \u003d \"bob@example.com\";","lastModifiedDate":"2017-07-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static final String VALID_ADDRESS_AMY \u003d \"Block 312, Amy Street 1\";","lastModifiedDate":"2017-07-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static final String VALID_ADDRESS_BOB \u003d \"Block 123, Bobby Street 3\";","lastModifiedDate":"2017-07-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public static final String VALID_TAG_HUSBAND \u003d \"husband\";","lastModifiedDate":"2017-07-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public static final String VALID_TAG_FRIEND \u003d \"friend\";","lastModifiedDate":"2017-07-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public static final String NAME_DESC_AMY \u003d \" \" + PREFIX_NAME + VALID_NAME_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public static final String NAME_DESC_BOB \u003d \" \" + PREFIX_NAME + VALID_NAME_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public static final String PHONE_DESC_AMY \u003d \" \" + PREFIX_PHONE + VALID_PHONE_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public static final String PHONE_DESC_BOB \u003d \" \" + PREFIX_PHONE + VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public static final String EMAIL_DESC_AMY \u003d \" \" + PREFIX_EMAIL + VALID_EMAIL_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public static final String EMAIL_DESC_BOB \u003d \" \" + PREFIX_EMAIL + VALID_EMAIL_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public static final String ADDRESS_DESC_AMY \u003d \" \" + PREFIX_ADDRESS + VALID_ADDRESS_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public static final String ADDRESS_DESC_BOB \u003d \" \" + PREFIX_ADDRESS + VALID_ADDRESS_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public static final String TAG_DESC_FRIEND \u003d \" \" + PREFIX_TAG + VALID_TAG_FRIEND;","lastModifiedDate":"2017-07-05"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public static final String TAG_DESC_HUSBAND \u003d \" \" + PREFIX_TAG + VALID_TAG_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public static final String INVALID_NAME_DESC \u003d \" \" + PREFIX_NAME + \"James\u0026\"; // \u0027\u0026\u0027 not allowed in names","lastModifiedDate":"2017-07-05"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public static final String INVALID_PHONE_DESC \u003d \" \" + PREFIX_PHONE + \"911a\"; // \u0027a\u0027 not allowed in phones","lastModifiedDate":"2017-07-05"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public static final String INVALID_EMAIL_DESC \u003d \" \" + PREFIX_EMAIL + \"bob!yahoo\"; // missing \u0027@\u0027 symbol","lastModifiedDate":"2017-07-05"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public static final String INVALID_ADDRESS_DESC \u003d \" \" + PREFIX_ADDRESS; // empty string not allowed for addresses","lastModifiedDate":"2017-07-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public static final String INVALID_TAG_DESC \u003d \" \" + PREFIX_TAG + \"hubby*\"; // \u0027*\u0027 not allowed in tags","lastModifiedDate":"2017-07-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public static final String PREAMBLE_WHITESPACE \u003d \"\\t  \\r  \\n\";","lastModifiedDate":"2017-12-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public static final String PREAMBLE_NON_EMPTY \u003d \"NonEmptyPreamble\";","lastModifiedDate":"2017-12-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":62,"author":{"gitId":"Jaspertzx"},"content":"    public static final EditCommand.EditClientDescriptor DESC_AMY;","lastModifiedDate":"2024-04-14"},{"lineNumber":63,"author":{"gitId":"Jaspertzx"},"content":"    public static final EditCommand.EditClientDescriptor DESC_BOB;","lastModifiedDate":"2024-04-14"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    static {","lastModifiedDate":"2017-07-05"},{"lineNumber":66,"author":{"gitId":"Jaspertzx"},"content":"        DESC_AMY \u003d new EditClientDescriptorBuilder().withName(VALID_NAME_AMY)","lastModifiedDate":"2024-04-14"},{"lineNumber":67,"author":{"gitId":"-"},"content":"                .withPhone(VALID_PHONE_AMY).withEmail(VALID_EMAIL_AMY).withAddress(VALID_ADDRESS_AMY)","lastModifiedDate":"2017-07-05"},{"lineNumber":68,"author":{"gitId":"-"},"content":"                .withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2017-07-05"},{"lineNumber":69,"author":{"gitId":"Jaspertzx"},"content":"        DESC_BOB \u003d new EditClientDescriptorBuilder().withName(VALID_NAME_BOB)","lastModifiedDate":"2024-04-14"},{"lineNumber":70,"author":{"gitId":"-"},"content":"                .withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_BOB).withAddress(VALID_ADDRESS_BOB)","lastModifiedDate":"2017-07-05"},{"lineNumber":71,"author":{"gitId":"-"},"content":"                .withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND).build();","lastModifiedDate":"2017-07-05"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-05"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     * - the returned {@link CommandResult} matches {@code expectedCommandResult} \u003cbr\u003e","lastModifiedDate":"2018-12-09"},{"lineNumber":77,"author":{"gitId":"rertyy"},"content":"     * - the {@code actualModel} matches {@code expectedModel}.","lastModifiedDate":"2024-03-20"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel, CommandResult expectedCommandResult,","lastModifiedDate":"2019-01-25"},{"lineNumber":80,"author":{"gitId":"-"},"content":"                                            Model expectedModel) {","lastModifiedDate":"2019-01-25"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-08-15"},{"lineNumber":82,"author":{"gitId":"-"},"content":"            CommandResult result \u003d command.execute(actualModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":83,"author":{"gitId":"-"},"content":"            assertEquals(expectedCommandResult, result);","lastModifiedDate":"2018-12-09"},{"lineNumber":84,"author":{"gitId":"-"},"content":"            assertEquals(expectedModel, actualModel);","lastModifiedDate":"2017-06-05"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        } catch (CommandException ce) {","lastModifiedDate":"2017-08-15"},{"lineNumber":86,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"Execution of command should not fail.\", ce);","lastModifiedDate":"2017-08-15"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-08-15"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     * Convenience wrapper to {@link #assertCommandSuccess(Command, Model, CommandResult, Model)}","lastModifiedDate":"2019-01-25"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     * that takes a string {@code expectedMessage}.","lastModifiedDate":"2018-12-09"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel, String expectedMessage,","lastModifiedDate":"2019-01-25"},{"lineNumber":95,"author":{"gitId":"-"},"content":"                                            Model expectedModel) {","lastModifiedDate":"2019-01-25"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(expectedMessage);","lastModifiedDate":"2018-12-09"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, actualModel, expectedCommandResult, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     * - a {@code CommandException} is thrown \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     * - the CommandException message matches {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":104,"author":{"gitId":"Jaspertzx"},"content":"     * - the bookkeeper, filtered client list and selected client in {@code actualModel} remain unchanged.","lastModifiedDate":"2024-04-14"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    public static void assertCommandFailure(Command command, Model actualModel, String expectedMessage) {","lastModifiedDate":"2019-01-25"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        // we are unable to defensively copy the model for comparison later, so we can","lastModifiedDate":"2017-06-05"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        // only do so by copying its components.","lastModifiedDate":"2017-06-05"},{"lineNumber":109,"author":{"gitId":"Jaspertzx"},"content":"        BookKeeper expectedBookKeeper \u003d new BookKeeper(actualModel.getAddressBook());","lastModifiedDate":"2024-04-14"},{"lineNumber":110,"author":{"gitId":"Jaspertzx"},"content":"        List\u003cClient\u003e expectedFilteredList \u003d new ArrayList\u003c\u003e(actualModel.getFilteredClientList());","lastModifiedDate":"2024-04-14"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        assertThrows(CommandException.class, expectedMessage, () -\u003e command.execute(actualModel));","lastModifiedDate":"2019-05-03"},{"lineNumber":113,"author":{"gitId":"Jaspertzx"},"content":"        assertEquals(expectedBookKeeper, actualModel.getAddressBook());","lastModifiedDate":"2024-04-14"},{"lineNumber":114,"author":{"gitId":"Jaspertzx"},"content":"        assertEquals(expectedFilteredList, actualModel.getFilteredClientList());","lastModifiedDate":"2024-04-14"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":116,"author":{"gitId":"shavonneg"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-20"},{"lineNumber":118,"author":{"gitId":"Jaspertzx"},"content":"     * Updates {@code model}\u0027s filtered list to show only the client at the given {@code targetIndex} in the","lastModifiedDate":"2024-04-14"},{"lineNumber":119,"author":{"gitId":"kailinteoo"},"content":"     * {@code model}\u0027s bookkeeper.","lastModifiedDate":"2024-04-14"},{"lineNumber":120,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-20"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    public static void showPersonAtIndex(Model model, Index targetIndex) {","lastModifiedDate":"2018-01-31"},{"lineNumber":122,"author":{"gitId":"Jaspertzx"},"content":"        assertTrue(targetIndex.getZeroBased() \u003c model.getFilteredClientList().size());","lastModifiedDate":"2024-04-14"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-31"},{"lineNumber":124,"author":{"gitId":"Jaspertzx"},"content":"        Client client \u003d model.getFilteredClientList().get(targetIndex.getZeroBased());","lastModifiedDate":"2024-04-14"},{"lineNumber":125,"author":{"gitId":"Jaspertzx"},"content":"        final String[] splitName \u003d client.getName().fullName.split(\"\\\\s+\");","lastModifiedDate":"2024-04-14"},{"lineNumber":126,"author":{"gitId":"Jaspertzx"},"content":"        model.updateFilteredClientList(new NameContainsKeywordsPredicate(Arrays.asList(splitName[0])));","lastModifiedDate":"2024-04-14"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-20"},{"lineNumber":128,"author":{"gitId":"Jaspertzx"},"content":"        assertEquals(1, model.getFilteredClientList().size());","lastModifiedDate":"2024-04-14"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-20"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":131,"author":{"gitId":"shavonneg"},"content":"    /**","lastModifiedDate":"2024-03-17"},{"lineNumber":132,"author":{"gitId":"shavonneg"},"content":"     * Updates {@code model}\u0027s filtered orders list to show only the order at the given {@code targetIndex} in the","lastModifiedDate":"2024-03-17"},{"lineNumber":133,"author":{"gitId":"kailinteoo"},"content":"     * {@code model}\u0027s bookkeeper.","lastModifiedDate":"2024-04-14"},{"lineNumber":134,"author":{"gitId":"shavonneg"},"content":"     */","lastModifiedDate":"2024-03-17"},{"lineNumber":135,"author":{"gitId":"shavonneg"},"content":"    public static void showOrderAtIndex(Model model, Index targetIndex) {","lastModifiedDate":"2024-03-17"},{"lineNumber":136,"author":{"gitId":"Jaspertzx"},"content":"        assertTrue(targetIndex.getZeroBased() \u003c model.getFilteredClientList().size());","lastModifiedDate":"2024-04-14"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":138,"author":{"gitId":"Jaspertzx"},"content":"        Client client \u003d model.getFilteredClientList().get(targetIndex.getZeroBased());","lastModifiedDate":"2024-04-14"},{"lineNumber":139,"author":{"gitId":"Jaspertzx"},"content":"        final String[] splitName \u003d client.getName().fullName.split(\"\\\\s+\");","lastModifiedDate":"2024-04-14"},{"lineNumber":140,"author":{"gitId":"shavonneg"},"content":"        model.updateFilteredOrderList(new OrderNameContainsKeywordsPredicate(Arrays.asList(splitName[0])));","lastModifiedDate":"2024-03-19"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":142,"author":{"gitId":"shavonneg"},"content":"        assertEquals(1, model.getFilteredOrderList().size());","lastModifiedDate":"2024-03-19"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":145,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-05"}],"authorContributionMap":{"kailinteoo":2,"shavonneg":7,"rertyy":2,"Jaspertzx":23,"-":111}},{"path":"src/test/java/seedu/address/logic/commands/client/AddCommandIntegrationTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Jaspertzx"},"content":"package seedu.address.logic.commands.client;","lastModifiedDate":"2024-04-14"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2017-07-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05"},{"lineNumber":5,"author":{"gitId":"Jaspertzx"},"content":"import static seedu.address.testutil.TypicalClients.getTypicalAddressBook;","lastModifiedDate":"2024-04-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-07-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-15"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-15"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-15"},{"lineNumber":14,"author":{"gitId":"Jaspertzx"},"content":"import seedu.address.model.client.Client;","lastModifiedDate":"2024-04-14"},{"lineNumber":15,"author":{"gitId":"Jaspertzx"},"content":"import seedu.address.testutil.ClientBuilder;","lastModifiedDate":"2024-04-14"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) for {@code AddCommand}.","lastModifiedDate":"2017-06-15"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-15"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class AddCommandIntegrationTest {","lastModifiedDate":"2017-06-15"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private Model model;","lastModifiedDate":"2017-06-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2017-06-15"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2017-07-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public void execute_newPerson_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":31,"author":{"gitId":"Jaspertzx"},"content":"        Client validClient \u003d new ClientBuilder().build();","lastModifiedDate":"2024-04-14"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2017-06-15"},{"lineNumber":34,"author":{"gitId":"Jaspertzx"},"content":"        expectedModel.addClient(validClient);","lastModifiedDate":"2024-04-14"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":36,"author":{"gitId":"Jaspertzx"},"content":"        assertCommandSuccess(new AddCommand(validClient), model,","lastModifiedDate":"2024-04-14"},{"lineNumber":37,"author":{"gitId":"Jaspertzx"},"content":"                String.format(AddCommand.MESSAGE_SUCCESS, Messages.format(validClient)),","lastModifiedDate":"2024-04-14"},{"lineNumber":38,"author":{"gitId":"-"},"content":"                expectedModel);","lastModifiedDate":"2019-02-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public void execute_duplicatePerson_throwsCommandException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":43,"author":{"gitId":"Jaspertzx"},"content":"        Client clientInList \u003d model.getAddressBook().getClientList().get(0);","lastModifiedDate":"2024-04-14"},{"lineNumber":44,"author":{"gitId":"Jaspertzx"},"content":"        assertCommandFailure(new AddCommand(clientInList), model,","lastModifiedDate":"2024-04-14"},{"lineNumber":45,"author":{"gitId":"Jaspertzx"},"content":"                AddCommand.MESSAGE_DUPLICATE_CLIENT);","lastModifiedDate":"2024-04-14"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":48,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-15"}],"authorContributionMap":{"Jaspertzx":11,"-":37}},{"path":"src/test/java/seedu/address/logic/commands/client/AddCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Jaspertzx"},"content":"package seedu.address.logic.commands.client;","lastModifiedDate":"2024-04-14"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-01-10"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"rertyy"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2024-03-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":7,"author":{"gitId":"Jaspertzx"},"content":"import static seedu.address.testutil.TypicalClients.ALICE;","lastModifiedDate":"2024-04-14"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-05-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-07-13"},{"lineNumber":19,"author":{"gitId":"shavonneg"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2024-03-17"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-05-12"},{"lineNumber":21,"author":{"gitId":"Jaspertzx"},"content":"import seedu.address.model.BookKeeper;","lastModifiedDate":"2024-04-14"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-05-12"},{"lineNumber":23,"author":{"gitId":"Jaspertzx"},"content":"import seedu.address.model.ReadOnlyBookKeeper;","lastModifiedDate":"2024-04-14"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":25,"author":{"gitId":"Jaspertzx"},"content":"import seedu.address.model.client.Client;","lastModifiedDate":"2024-04-14"},{"lineNumber":26,"author":{"gitId":"shavonneg"},"content":"import seedu.address.model.order.Order;","lastModifiedDate":"2024-03-19"},{"lineNumber":27,"author":{"gitId":"Jaspertzx"},"content":"import seedu.address.testutil.ClientBuilder;","lastModifiedDate":"2024-04-14"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"public class AddCommandTest {","lastModifiedDate":"2017-05-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public void constructor_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new AddCommand(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void execute_personAcceptedByModel_addSuccessful() throws Exception {","lastModifiedDate":"2017-05-12"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        ModelStubAcceptingPersonAdded modelStub \u003d new ModelStubAcceptingPersonAdded();","lastModifiedDate":"2017-05-12"},{"lineNumber":39,"author":{"gitId":"Jaspertzx"},"content":"        Client validClient \u003d new ClientBuilder().build();","lastModifiedDate":"2024-04-14"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":41,"author":{"gitId":"Jaspertzx"},"content":"        CommandResult commandResult \u003d new AddCommand(validClient).execute(modelStub);","lastModifiedDate":"2024-04-14"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":43,"author":{"gitId":"Jaspertzx"},"content":"        assertEquals(String.format(AddCommand.MESSAGE_SUCCESS, Messages.format(validClient)),","lastModifiedDate":"2024-04-14"},{"lineNumber":44,"author":{"gitId":"-"},"content":"                commandResult.getFeedbackToUser());","lastModifiedDate":"2019-02-23"},{"lineNumber":45,"author":{"gitId":"Jaspertzx"},"content":"        assertEquals(Arrays.asList(validClient), modelStub.personsAdded);","lastModifiedDate":"2024-04-14"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public void execute_duplicatePerson_throwsCommandException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":50,"author":{"gitId":"Jaspertzx"},"content":"        Client validClient \u003d new ClientBuilder().build();","lastModifiedDate":"2024-04-14"},{"lineNumber":51,"author":{"gitId":"Jaspertzx"},"content":"        AddCommand addCommand \u003d new AddCommand(validClient);","lastModifiedDate":"2024-04-14"},{"lineNumber":52,"author":{"gitId":"Jaspertzx"},"content":"        ModelStub modelStub \u003d new ModelStubWithPerson(validClient);","lastModifiedDate":"2024-04-14"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":54,"author":{"gitId":"Jaspertzx"},"content":"        assertThrows(CommandException.class, AddCommand.MESSAGE_DUPLICATE_CLIENT, () -\u003e addCommand.execute(modelStub));","lastModifiedDate":"2024-04-14"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-22"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":59,"author":{"gitId":"Jaspertzx"},"content":"        Client alice \u003d new ClientBuilder().withName(\"Alice\").build();","lastModifiedDate":"2024-04-14"},{"lineNumber":60,"author":{"gitId":"Jaspertzx"},"content":"        Client bob \u003d new ClientBuilder().withName(\"Bob\").build();","lastModifiedDate":"2024-04-14"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        AddCommand addAliceCommand \u003d new AddCommand(alice);","lastModifiedDate":"2017-06-22"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        AddCommand addBobCommand \u003d new AddCommand(bob);","lastModifiedDate":"2017-06-22"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-22"},{"lineNumber":65,"author":{"gitId":"rertyy"},"content":"        assertEquals(addAliceCommand, addAliceCommand);","lastModifiedDate":"2024-03-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-22"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        AddCommand addAliceCommandCopy \u003d new AddCommand(alice);","lastModifiedDate":"2017-06-22"},{"lineNumber":69,"author":{"gitId":"rertyy"},"content":"        assertEquals(addAliceCommand, addAliceCommandCopy);","lastModifiedDate":"2024-03-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":72,"author":{"gitId":"rertyy"},"content":"        assertNotEquals(1, addAliceCommand);","lastModifiedDate":"2024-03-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":75,"author":{"gitId":"rertyy"},"content":"        assertNotEquals(null, addAliceCommand);","lastModifiedDate":"2024-03-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":77,"author":{"gitId":"Jaspertzx"},"content":"        // different client -\u003e returns false","lastModifiedDate":"2024-04-14"},{"lineNumber":78,"author":{"gitId":"rertyy"},"content":"        assertNotEquals(addAliceCommand, addBobCommand);","lastModifiedDate":"2024-03-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-22"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        AddCommand addCommand \u003d new AddCommand(ALICE);","lastModifiedDate":"2019-02-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        String expected \u003d AddCommand.class.getCanonicalName() + \"{toAdd\u003d\" + ALICE + \"}\";","lastModifiedDate":"2019-02-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        assertEquals(expected, addCommand.toString());","lastModifiedDate":"2019-02-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     * A default model stub that have all of the methods failing.","lastModifiedDate":"2017-05-12"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    private class ModelStub implements Model {","lastModifiedDate":"2017-05-12"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":93,"author":{"gitId":"shavonneg"},"content":"        public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2024-03-19"},{"lineNumber":94,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":98,"author":{"gitId":"shavonneg"},"content":"        public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2024-03-19"},{"lineNumber":99,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":104,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":109,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        public Path getAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":114,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2018-11-27"},{"lineNumber":119,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":123,"author":{"gitId":"Jaspertzx"},"content":"        public void addClient(Client client) {","lastModifiedDate":"2024-04-14"},{"lineNumber":124,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":128,"author":{"gitId":"Jaspertzx"},"content":"        public ReadOnlyBookKeeper getAddressBook() {","lastModifiedDate":"2024-04-14"},{"lineNumber":129,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":133,"author":{"gitId":"Jaspertzx"},"content":"        public void setAddressBook(ReadOnlyBookKeeper newData) {","lastModifiedDate":"2024-04-14"},{"lineNumber":134,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-08-06"},{"lineNumber":138,"author":{"gitId":"Jaspertzx"},"content":"        public boolean hasClient(Client client) {","lastModifiedDate":"2024-04-14"},{"lineNumber":139,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-06"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":143,"author":{"gitId":"Jaspertzx"},"content":"        public void deleteClient(Client target) {","lastModifiedDate":"2024-04-14"},{"lineNumber":144,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":148,"author":{"gitId":"Jaspertzx"},"content":"        public void setClient(Client target, Client editedClient) {","lastModifiedDate":"2024-04-14"},{"lineNumber":149,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2024-03-20"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2024-03-20"},{"lineNumber":153,"author":{"gitId":"Jaspertzx"},"content":"        public void setClientAndAddOrder(Client target, Client editedClient, Order order) {","lastModifiedDate":"2024-04-14"},{"lineNumber":154,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-03-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2024-03-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2024-03-23"},{"lineNumber":158,"author":{"gitId":"Jaspertzx"},"content":"        public void setClientAndDeleteOrder(Client target, Client editedClient, Order order) {","lastModifiedDate":"2024-04-14"},{"lineNumber":159,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-03-20"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2024-03-29"},{"lineNumber":163,"author":{"gitId":"Jaspertzx"},"content":"        public void setClientAndEditOrder(Client target, Client editedClient, Order order, Order editedOrder) {","lastModifiedDate":"2024-04-14"},{"lineNumber":164,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-03-29"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2024-03-29"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":168,"author":{"gitId":"Jaspertzx"},"content":"        public ObservableList\u003cClient\u003e getFilteredClientList() {","lastModifiedDate":"2024-04-14"},{"lineNumber":169,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2024-03-19"},{"lineNumber":173,"author":{"gitId":"shavonneg"},"content":"        public ObservableList\u003cOrder\u003e getFilteredOrderList() {","lastModifiedDate":"2024-03-19"},{"lineNumber":174,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-03-19"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2024-03-19"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":178,"author":{"gitId":"Jaspertzx"},"content":"        public void updateFilteredClientList(Predicate\u003cClient\u003e predicate) {","lastModifiedDate":"2024-04-14"},{"lineNumber":179,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":180,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":182,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2024-03-19"},{"lineNumber":183,"author":{"gitId":"shavonneg"},"content":"        public void updateFilteredOrderList(Predicate\u003cOrder\u003e predicate) {","lastModifiedDate":"2024-03-19"},{"lineNumber":184,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-03-19"},{"lineNumber":185,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2024-03-19"},{"lineNumber":186,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":187,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":188,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":189,"author":{"gitId":"Jaspertzx"},"content":"     * A Model stub that contains a single client.","lastModifiedDate":"2024-04-14"},{"lineNumber":190,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":191,"author":{"gitId":"-"},"content":"    private class ModelStubWithPerson extends ModelStub {","lastModifiedDate":"2018-08-07"},{"lineNumber":192,"author":{"gitId":"Jaspertzx"},"content":"        private final Client client;","lastModifiedDate":"2024-04-14"},{"lineNumber":193,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":194,"author":{"gitId":"Jaspertzx"},"content":"        ModelStubWithPerson(Client client) {","lastModifiedDate":"2024-04-14"},{"lineNumber":195,"author":{"gitId":"Jaspertzx"},"content":"            requireNonNull(client);","lastModifiedDate":"2024-04-14"},{"lineNumber":196,"author":{"gitId":"Jaspertzx"},"content":"            this.client \u003d client;","lastModifiedDate":"2024-04-14"},{"lineNumber":197,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":198,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":199,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-04"},{"lineNumber":200,"author":{"gitId":"Jaspertzx"},"content":"        public boolean hasClient(Client client) {","lastModifiedDate":"2024-04-14"},{"lineNumber":201,"author":{"gitId":"Jaspertzx"},"content":"            requireNonNull(client);","lastModifiedDate":"2024-04-14"},{"lineNumber":202,"author":{"gitId":"Jaspertzx"},"content":"            return this.client.isSameClient(client);","lastModifiedDate":"2024-04-14"},{"lineNumber":203,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-04"},{"lineNumber":204,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":205,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":206,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":207,"author":{"gitId":"Jaspertzx"},"content":"     * A Model stub that always accept the client being added.","lastModifiedDate":"2024-04-14"},{"lineNumber":208,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":209,"author":{"gitId":"-"},"content":"    private class ModelStubAcceptingPersonAdded extends ModelStub {","lastModifiedDate":"2017-05-12"},{"lineNumber":210,"author":{"gitId":"Jaspertzx"},"content":"        final ArrayList\u003cClient\u003e personsAdded \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-04-14"},{"lineNumber":211,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":212,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-08-07"},{"lineNumber":213,"author":{"gitId":"Jaspertzx"},"content":"        public boolean hasClient(Client client) {","lastModifiedDate":"2024-04-14"},{"lineNumber":214,"author":{"gitId":"Jaspertzx"},"content":"            requireNonNull(client);","lastModifiedDate":"2024-04-14"},{"lineNumber":215,"author":{"gitId":"Jaspertzx"},"content":"            return personsAdded.stream().anyMatch(client::isSameClient);","lastModifiedDate":"2024-04-14"},{"lineNumber":216,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":217,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":218,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":219,"author":{"gitId":"Jaspertzx"},"content":"        public void addClient(Client client) {","lastModifiedDate":"2024-04-14"},{"lineNumber":220,"author":{"gitId":"Jaspertzx"},"content":"            requireNonNull(client);","lastModifiedDate":"2024-04-14"},{"lineNumber":221,"author":{"gitId":"Jaspertzx"},"content":"            personsAdded.add(client);","lastModifiedDate":"2024-04-14"},{"lineNumber":222,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":223,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":224,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-04"},{"lineNumber":225,"author":{"gitId":"Jaspertzx"},"content":"        public ReadOnlyBookKeeper getAddressBook() {","lastModifiedDate":"2024-04-14"},{"lineNumber":226,"author":{"gitId":"Jaspertzx"},"content":"            return new BookKeeper();","lastModifiedDate":"2024-04-14"},{"lineNumber":227,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-04"},{"lineNumber":228,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":229,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":230,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-12"}],"authorContributionMap":{"shavonneg":6,"rertyy":6,"Jaspertzx":46,"-":172}},{"path":"src/test/java/seedu/address/logic/commands/client/ClearCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Jaspertzx"},"content":"package seedu.address.logic.commands.client;","lastModifiedDate":"2024-04-14"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05"},{"lineNumber":4,"author":{"gitId":"Jaspertzx"},"content":"import static seedu.address.testutil.TypicalClients.getTypicalAddressBook;","lastModifiedDate":"2024-04-14"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":8,"author":{"gitId":"Jaspertzx"},"content":"import seedu.address.model.BookKeeper;","lastModifiedDate":"2024-04-14"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class ClearCommandTest {","lastModifiedDate":"2017-06-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public void execute_emptyAddressBook_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        Model model \u003d new ModelManager();","lastModifiedDate":"2017-06-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager();","lastModifiedDate":"2018-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ClearCommand(), model, ClearCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void execute_nonEmptyAddressBook_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2017-07-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2018-08-08"},{"lineNumber":27,"author":{"gitId":"Jaspertzx"},"content":"        expectedModel.setAddressBook(new BookKeeper());","lastModifiedDate":"2024-04-14"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ClearCommand(), model, ClearCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-08"}],"authorContributionMap":{"Jaspertzx":4,"-":28}},{"path":"src/test/java/seedu/address/logic/commands/client/DeleteCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Jaspertzx"},"content":"package seedu.address.logic.commands.client;","lastModifiedDate":"2024-04-14"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-02-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showPersonAtIndex;","lastModifiedDate":"2018-01-31"},{"lineNumber":9,"author":{"gitId":"Jaspertzx"},"content":"import static seedu.address.testutil.TypicalClients.getTypicalAddressBook;","lastModifiedDate":"2024-04-14"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-06-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-07-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-05"},{"lineNumber":20,"author":{"gitId":"Jaspertzx"},"content":"import seedu.address.model.client.Client;","lastModifiedDate":"2024-04-14"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for","lastModifiedDate":"2020-12-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":" * {@code DeleteCommand}.","lastModifiedDate":"2018-01-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"public class DeleteCommandTest {","lastModifiedDate":"2017-06-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2017-07-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public void execute_validIndexUnfilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":32,"author":{"gitId":"Jaspertzx"},"content":"        Client clientToDelete \u003d model.getFilteredClientList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2024-04-14"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2018-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":35,"author":{"gitId":"Jaspertzx"},"content":"        String expectedMessage \u003d String.format(DeleteCommand.MESSAGE_DELETE_CLIENT_SUCCESS,","lastModifiedDate":"2024-04-14"},{"lineNumber":36,"author":{"gitId":"Jaspertzx"},"content":"                Messages.format(clientToDelete));","lastModifiedDate":"2024-04-14"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        ModelManager expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2017-06-05"},{"lineNumber":39,"author":{"gitId":"Jaspertzx"},"content":"        expectedModel.deleteClient(clientToDelete);","lastModifiedDate":"2024-04-14"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertCommandSuccess(deleteCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public void execute_invalidIndexUnfilteredList_throwsCommandException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":46,"author":{"gitId":"Jaspertzx"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredClientList().size() + 1);","lastModifiedDate":"2024-04-14"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(outOfBoundIndex);","lastModifiedDate":"2018-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":49,"author":{"gitId":"Jaspertzx"},"content":"        assertCommandFailure(deleteCommand, model, Messages.MESSAGE_INVALID_CLIENT_DISPLAYED_INDEX);","lastModifiedDate":"2024-04-14"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public void execute_validIndexFilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":56,"author":{"gitId":"Jaspertzx"},"content":"        Client clientToDelete \u003d model.getFilteredClientList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2024-04-14"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2018-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":59,"author":{"gitId":"Jaspertzx"},"content":"        String expectedMessage \u003d String.format(DeleteCommand.MESSAGE_DELETE_CLIENT_SUCCESS,","lastModifiedDate":"2024-04-14"},{"lineNumber":60,"author":{"gitId":"Jaspertzx"},"content":"                Messages.format(clientToDelete));","lastModifiedDate":"2024-04-14"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2017-06-05"},{"lineNumber":63,"author":{"gitId":"Jaspertzx"},"content":"        expectedModel.deleteClient(clientToDelete);","lastModifiedDate":"2024-04-14"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        showNoPerson(expectedModel);","lastModifiedDate":"2017-06-05"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertCommandSuccess(deleteCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public void execute_invalidIndexFilteredList_throwsCommandException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2017-06-05"},{"lineNumber":74,"author":{"gitId":"kailinteoo"},"content":"        // ensures that outOfBoundIndex is still in bounds of bookkeeper list","lastModifiedDate":"2024-04-14"},{"lineNumber":75,"author":{"gitId":"Jaspertzx"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getAddressBook().getClientList().size());","lastModifiedDate":"2024-04-14"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(outOfBoundIndex);","lastModifiedDate":"2018-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":79,"author":{"gitId":"Jaspertzx"},"content":"        assertCommandFailure(deleteCommand, model, Messages.MESSAGE_INVALID_CLIENT_DISPLAYED_INDEX);","lastModifiedDate":"2024-04-14"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-01-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-08-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        DeleteCommand deleteFirstCommand \u003d new DeleteCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2018-08-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        DeleteCommand deleteSecondCommand \u003d new DeleteCommand(INDEX_SECOND_PERSON);","lastModifiedDate":"2018-08-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        assertTrue(deleteFirstCommand.equals(deleteFirstCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        DeleteCommand deleteFirstCommandCopy \u003d new DeleteCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2018-08-08"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        assertTrue(deleteFirstCommand.equals(deleteFirstCommandCopy));","lastModifiedDate":"2017-06-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(1));","lastModifiedDate":"2017-06-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(null));","lastModifiedDate":"2017-06-27"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":100,"author":{"gitId":"Jaspertzx"},"content":"        // different client -\u003e returns false","lastModifiedDate":"2024-04-14"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(deleteSecondCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d Index.fromOneBased(1);","lastModifiedDate":"2019-02-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(targetIndex);","lastModifiedDate":"2019-02-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        String expected \u003d DeleteCommand.class.getCanonicalName() + \"{targetIndex\u003d\" + targetIndex + \"}\";","lastModifiedDate":"2019-02-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        assertEquals(expected, deleteCommand.toString());","lastModifiedDate":"2019-02-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":113,"author":{"gitId":"-"},"content":"     * Updates {@code model}\u0027s filtered list to show no one.","lastModifiedDate":"2017-06-05"},{"lineNumber":114,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    private void showNoPerson(Model model) {","lastModifiedDate":"2017-06-05"},{"lineNumber":116,"author":{"gitId":"Jaspertzx"},"content":"        model.updateFilteredClientList(p -\u003e false);","lastModifiedDate":"2024-04-14"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":118,"author":{"gitId":"Jaspertzx"},"content":"        assertTrue(model.getFilteredClientList().isEmpty());","lastModifiedDate":"2024-04-14"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":120,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-05"}],"authorContributionMap":{"kailinteoo":1,"Jaspertzx":18,"-":101}},{"path":"src/test/java/seedu/address/logic/commands/client/EditClientDescriptorTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Jaspertzx"},"content":"package seedu.address.logic.commands.client;","lastModifiedDate":"2024-04-14"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-02-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":16,"author":{"gitId":"Jaspertzx"},"content":"import seedu.address.logic.commands.client.EditCommand.EditClientDescriptor;","lastModifiedDate":"2024-04-14"},{"lineNumber":17,"author":{"gitId":"Jaspertzx"},"content":"import seedu.address.testutil.EditClientDescriptorBuilder;","lastModifiedDate":"2024-04-14"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":19,"author":{"gitId":"Jaspertzx"},"content":"public class EditClientDescriptorTest {","lastModifiedDate":"2024-04-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-05"},{"lineNumber":24,"author":{"gitId":"Jaspertzx"},"content":"        EditCommand.EditClientDescriptor descriptorWithSameValues \u003d new EditCommand.EditClientDescriptor(DESC_AMY);","lastModifiedDate":"2024-04-14"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertTrue(DESC_AMY.equals(descriptorWithSameValues));","lastModifiedDate":"2017-05-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertTrue(DESC_AMY.equals(DESC_AMY));","lastModifiedDate":"2017-05-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(null));","lastModifiedDate":"2017-05-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(5));","lastModifiedDate":"2017-05-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(DESC_BOB));","lastModifiedDate":"2017-05-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        // different name -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":40,"author":{"gitId":"Jaspertzx"},"content":"        EditClientDescriptor editedAmy \u003d new EditClientDescriptorBuilder(DESC_AMY).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2024-04-14"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // different phone -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":44,"author":{"gitId":"Jaspertzx"},"content":"        editedAmy \u003d new EditClientDescriptorBuilder(DESC_AMY).withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2024-04-14"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        // different email -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":48,"author":{"gitId":"Jaspertzx"},"content":"        editedAmy \u003d new EditClientDescriptorBuilder(DESC_AMY).withEmail(VALID_EMAIL_BOB).build();","lastModifiedDate":"2024-04-14"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // different address -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":52,"author":{"gitId":"Jaspertzx"},"content":"        editedAmy \u003d new EditClientDescriptorBuilder(DESC_AMY).withAddress(VALID_ADDRESS_BOB).build();","lastModifiedDate":"2024-04-14"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        // different tags -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":56,"author":{"gitId":"Jaspertzx"},"content":"        editedAmy \u003d new EditClientDescriptorBuilder(DESC_AMY).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2024-04-14"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":62,"author":{"gitId":"Jaspertzx"},"content":"        EditCommand.EditClientDescriptor editClientDescriptor \u003d new EditClientDescriptor();","lastModifiedDate":"2024-04-14"},{"lineNumber":63,"author":{"gitId":"Jaspertzx"},"content":"        String expected \u003d EditCommand.EditClientDescriptor.class.getCanonicalName() + \"{name\u003d\"","lastModifiedDate":"2024-04-14"},{"lineNumber":64,"author":{"gitId":"Jaspertzx"},"content":"                + editClientDescriptor.getName().orElse(null) + \", phone\u003d\"","lastModifiedDate":"2024-04-14"},{"lineNumber":65,"author":{"gitId":"Jaspertzx"},"content":"                + editClientDescriptor.getPhone().orElse(null) + \", email\u003d\"","lastModifiedDate":"2024-04-14"},{"lineNumber":66,"author":{"gitId":"Jaspertzx"},"content":"                + editClientDescriptor.getEmail().orElse(null) + \", address\u003d\"","lastModifiedDate":"2024-04-14"},{"lineNumber":67,"author":{"gitId":"Jaspertzx"},"content":"                + editClientDescriptor.getAddress().orElse(null) + \", tags\u003d\"","lastModifiedDate":"2024-04-14"},{"lineNumber":68,"author":{"gitId":"Jaspertzx"},"content":"                + editClientDescriptor.getTags().orElse(null) + \", orders\u003d\"","lastModifiedDate":"2024-04-14"},{"lineNumber":69,"author":{"gitId":"Jaspertzx"},"content":"                + editClientDescriptor.getOrders().orElse(null) + \"}\";","lastModifiedDate":"2024-04-14"},{"lineNumber":70,"author":{"gitId":"Jaspertzx"},"content":"        assertEquals(expected, editClientDescriptor.toString());","lastModifiedDate":"2024-04-14"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-05"}],"authorContributionMap":{"Jaspertzx":19,"-":53}},{"path":"src/test/java/seedu/address/logic/commands/client/EditCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Jaspertzx"},"content":"package seedu.address.logic.commands.client;","lastModifiedDate":"2024-04-14"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-02-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2017-07-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showPersonAtIndex;","lastModifiedDate":"2018-01-31"},{"lineNumber":14,"author":{"gitId":"Jaspertzx"},"content":"import static seedu.address.testutil.TypicalClients.getTypicalAddressBook;","lastModifiedDate":"2024-04-14"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-07-13"},{"lineNumber":22,"author":{"gitId":"Jaspertzx"},"content":"import seedu.address.model.BookKeeper;","lastModifiedDate":"2024-04-14"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-05-04"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-05-04"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-05-04"},{"lineNumber":26,"author":{"gitId":"Jaspertzx"},"content":"import seedu.address.model.client.Client;","lastModifiedDate":"2024-04-14"},{"lineNumber":27,"author":{"gitId":"Jaspertzx"},"content":"import seedu.address.testutil.ClientBuilder;","lastModifiedDate":"2024-04-14"},{"lineNumber":28,"author":{"gitId":"Jaspertzx"},"content":"import seedu.address.testutil.EditClientDescriptorBuilder;","lastModifiedDate":"2024-04-14"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-05-04"},{"lineNumber":31,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for EditCommand.","lastModifiedDate":"2020-12-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-05-04"},{"lineNumber":33,"author":{"gitId":"-"},"content":"public class EditCommandTest {","lastModifiedDate":"2017-05-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2017-07-19"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public void execute_allFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":39,"author":{"gitId":"Jaspertzx"},"content":"        Client editedClient \u003d new ClientBuilder().build();","lastModifiedDate":"2024-04-14"},{"lineNumber":40,"author":{"gitId":"Jaspertzx"},"content":"        EditCommand.EditClientDescriptor descriptor \u003d new EditClientDescriptorBuilder(editedClient).build();","lastModifiedDate":"2024-04-14"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_PERSON, descriptor);","lastModifiedDate":"2018-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":43,"author":{"gitId":"Jaspertzx"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_CLIENT_SUCCESS, Messages.format(editedClient));","lastModifiedDate":"2024-04-14"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":45,"author":{"gitId":"Jaspertzx"},"content":"        Model expectedModel \u003d new ModelManager(new BookKeeper(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2024-04-14"},{"lineNumber":46,"author":{"gitId":"Jaspertzx"},"content":"        expectedModel.setClient(model.getFilteredClientList().get(0), editedClient);","lastModifiedDate":"2024-04-14"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public void execute_someFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":53,"author":{"gitId":"Jaspertzx"},"content":"        Index indexLastPerson \u003d Index.fromOneBased(model.getFilteredClientList().size());","lastModifiedDate":"2024-04-14"},{"lineNumber":54,"author":{"gitId":"Jaspertzx"},"content":"        Client lastClient \u003d model.getFilteredClientList().get(indexLastPerson.getZeroBased());","lastModifiedDate":"2024-04-14"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":56,"author":{"gitId":"Jaspertzx"},"content":"        ClientBuilder personInList \u003d new ClientBuilder(lastClient);","lastModifiedDate":"2024-04-14"},{"lineNumber":57,"author":{"gitId":"Jaspertzx"},"content":"        Client editedClient \u003d personInList.withName(VALID_NAME_BOB).withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2024-04-14"},{"lineNumber":58,"author":{"gitId":"-"},"content":"                .withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2017-05-18"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":60,"author":{"gitId":"Jaspertzx"},"content":"        EditCommand.EditClientDescriptor descriptor \u003d new EditClientDescriptorBuilder().withName(VALID_NAME_BOB)","lastModifiedDate":"2024-04-14"},{"lineNumber":61,"author":{"gitId":"-"},"content":"                .withPhone(VALID_PHONE_BOB).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2017-05-18"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(indexLastPerson, descriptor);","lastModifiedDate":"2018-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":64,"author":{"gitId":"Jaspertzx"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_CLIENT_SUCCESS, Messages.format(editedClient));","lastModifiedDate":"2024-04-14"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":66,"author":{"gitId":"Jaspertzx"},"content":"        Model expectedModel \u003d new ModelManager(new BookKeeper(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2024-04-14"},{"lineNumber":67,"author":{"gitId":"Jaspertzx"},"content":"        expectedModel.setClient(lastClient, editedClient);","lastModifiedDate":"2024-04-14"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public void execute_noFieldSpecifiedUnfilteredList_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":74,"author":{"gitId":"Jaspertzx"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_PERSON, new EditCommand.EditClientDescriptor());","lastModifiedDate":"2024-04-14"},{"lineNumber":75,"author":{"gitId":"Jaspertzx"},"content":"        Client editedClient \u003d model.getFilteredClientList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2024-04-14"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":77,"author":{"gitId":"Jaspertzx"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_CLIENT_SUCCESS, Messages.format(editedClient));","lastModifiedDate":"2024-04-14"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":79,"author":{"gitId":"Jaspertzx"},"content":"        Model expectedModel \u003d new ModelManager(new BookKeeper(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2024-04-14"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    public void execute_filteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":88,"author":{"gitId":"Jaspertzx"},"content":"        Client clientInFilteredList \u003d model.getFilteredClientList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2024-04-14"},{"lineNumber":89,"author":{"gitId":"Jaspertzx"},"content":"        Client editedClient \u003d new ClientBuilder(clientInFilteredList).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2024-04-14"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_PERSON,","lastModifiedDate":"2018-08-08"},{"lineNumber":91,"author":{"gitId":"Jaspertzx"},"content":"                new EditClientDescriptorBuilder().withName(VALID_NAME_BOB).build());","lastModifiedDate":"2024-04-14"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":93,"author":{"gitId":"Jaspertzx"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_CLIENT_SUCCESS, Messages.format(editedClient));","lastModifiedDate":"2024-04-14"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":95,"author":{"gitId":"Jaspertzx"},"content":"        Model expectedModel \u003d new ModelManager(new BookKeeper(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2024-04-14"},{"lineNumber":96,"author":{"gitId":"Jaspertzx"},"content":"        expectedModel.setClient(model.getFilteredClientList().get(0), editedClient);","lastModifiedDate":"2024-04-14"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    public void execute_duplicatePersonUnfilteredList_failure() {","lastModifiedDate":"2017-08-15"},{"lineNumber":103,"author":{"gitId":"Jaspertzx"},"content":"        Client firstClient \u003d model.getFilteredClientList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2024-04-14"},{"lineNumber":104,"author":{"gitId":"Jaspertzx"},"content":"        EditCommand.EditClientDescriptor descriptor \u003d new EditClientDescriptorBuilder(firstClient).build();","lastModifiedDate":"2024-04-14"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_SECOND_PERSON, descriptor);","lastModifiedDate":"2018-08-08"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":107,"author":{"gitId":"Jaspertzx"},"content":"        assertCommandFailure(editCommand, model, EditCommand.MESSAGE_DUPLICATE_CLIENT);","lastModifiedDate":"2024-04-14"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    public void execute_duplicatePersonFilteredList_failure() {","lastModifiedDate":"2017-08-15"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":114,"author":{"gitId":"Jaspertzx"},"content":"        // edit client in filtered list into a duplicate in bookkeeper","lastModifiedDate":"2024-04-14"},{"lineNumber":115,"author":{"gitId":"Jaspertzx"},"content":"        Client clientInList \u003d model.getAddressBook().getClientList().get(INDEX_SECOND_PERSON.getZeroBased());","lastModifiedDate":"2024-04-14"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_PERSON,","lastModifiedDate":"2018-08-08"},{"lineNumber":117,"author":{"gitId":"Jaspertzx"},"content":"                new EditClientDescriptorBuilder(clientInList).build());","lastModifiedDate":"2024-04-14"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":119,"author":{"gitId":"Jaspertzx"},"content":"        assertCommandFailure(editCommand, model, EditCommand.MESSAGE_DUPLICATE_CLIENT);","lastModifiedDate":"2024-04-14"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    public void execute_invalidPersonIndexUnfilteredList_failure() {","lastModifiedDate":"2017-08-15"},{"lineNumber":124,"author":{"gitId":"Jaspertzx"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredClientList().size() + 1);","lastModifiedDate":"2024-04-14"},{"lineNumber":125,"author":{"gitId":"Jaspertzx"},"content":"        EditCommand.EditClientDescriptor descriptor \u003d new EditClientDescriptorBuilder()","lastModifiedDate":"2024-04-14"},{"lineNumber":126,"author":{"gitId":"Jaspertzx"},"content":"                .withName(VALID_NAME_BOB).build();","lastModifiedDate":"2024-04-14"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(outOfBoundIndex, descriptor);","lastModifiedDate":"2018-08-08"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":129,"author":{"gitId":"Jaspertzx"},"content":"        assertCommandFailure(editCommand, model, Messages.MESSAGE_INVALID_CLIENT_DISPLAYED_INDEX);","lastModifiedDate":"2024-04-14"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-18"},{"lineNumber":133,"author":{"gitId":"-"},"content":"     * Edit filtered list where index is larger than size of filtered list,","lastModifiedDate":"2017-05-18"},{"lineNumber":134,"author":{"gitId":"kailinteoo"},"content":"     * but smaller than size of bookkeeper.","lastModifiedDate":"2024-04-14"},{"lineNumber":135,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-18"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    public void execute_invalidPersonIndexFilteredList_failure() {","lastModifiedDate":"2017-08-15"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2017-05-18"},{"lineNumber":140,"author":{"gitId":"kailinteoo"},"content":"        // ensures that outOfBoundIndex is still in bounds of bookkeeper list","lastModifiedDate":"2024-04-14"},{"lineNumber":141,"author":{"gitId":"Jaspertzx"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getAddressBook().getClientList().size());","lastModifiedDate":"2024-04-14"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(outOfBoundIndex,","lastModifiedDate":"2018-08-08"},{"lineNumber":144,"author":{"gitId":"Jaspertzx"},"content":"                new EditClientDescriptorBuilder().withName(VALID_NAME_BOB).build());","lastModifiedDate":"2024-04-14"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":146,"author":{"gitId":"Jaspertzx"},"content":"        assertCommandFailure(editCommand, model, Messages.MESSAGE_INVALID_CLIENT_DISPLAYED_INDEX);","lastModifiedDate":"2024-04-14"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-01-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-08-08"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        final EditCommand standardCommand \u003d new EditCommand(INDEX_FIRST_PERSON, DESC_AMY);","lastModifiedDate":"2018-08-08"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-08"},{"lineNumber":154,"author":{"gitId":"Jaspertzx"},"content":"        EditCommand.EditClientDescriptor copyDescriptor \u003d new EditCommand.EditClientDescriptor(DESC_AMY);","lastModifiedDate":"2024-04-14"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        EditCommand commandWithSameValues \u003d new EditCommand(INDEX_FIRST_PERSON, copyDescriptor);","lastModifiedDate":"2018-08-08"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        assertTrue(standardCommand.equals(commandWithSameValues));","lastModifiedDate":"2017-05-08"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-08"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        assertTrue(standardCommand.equals(standardCommand));","lastModifiedDate":"2017-05-08"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(null));","lastModifiedDate":"2017-05-08"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(new ClearCommand()));","lastModifiedDate":"2017-05-08"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        // different index -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(new EditCommand(INDEX_SECOND_PERSON, DESC_AMY)));","lastModifiedDate":"2017-05-25"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        // different descriptor -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(new EditCommand(INDEX_FIRST_PERSON, DESC_BOB)));","lastModifiedDate":"2017-05-25"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-08"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        Index index \u003d Index.fromOneBased(1);","lastModifiedDate":"2019-02-23"},{"lineNumber":177,"author":{"gitId":"Jaspertzx"},"content":"        EditCommand.EditClientDescriptor editClientDescriptor \u003d new EditCommand.EditClientDescriptor();","lastModifiedDate":"2024-04-14"},{"lineNumber":178,"author":{"gitId":"Jaspertzx"},"content":"        EditCommand editCommand \u003d new EditCommand(index, editClientDescriptor);","lastModifiedDate":"2024-04-14"},{"lineNumber":179,"author":{"gitId":"Jaspertzx"},"content":"        String expected \u003d EditCommand.class.getCanonicalName() + \"{index\u003d\" + index + \", editClientDescriptor\u003d\"","lastModifiedDate":"2024-04-14"},{"lineNumber":180,"author":{"gitId":"Jaspertzx"},"content":"                + editClientDescriptor + \"}\";","lastModifiedDate":"2024-04-14"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        assertEquals(expected, editCommand.toString());","lastModifiedDate":"2019-02-23"},{"lineNumber":182,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":184,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-08"}],"authorContributionMap":{"kailinteoo":2,"Jaspertzx":48,"-":134}},{"path":"src/test/java/seedu/address/logic/commands/client/ExitCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Jaspertzx"},"content":"package seedu.address.logic.commands.client;","lastModifiedDate":"2024-04-14"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2018-12-09"},{"lineNumber":4,"author":{"gitId":"Jaspertzx"},"content":"import static seedu.address.logic.commands.client.ExitCommand.MESSAGE_EXIT_ACKNOWLEDGEMENT;","lastModifiedDate":"2024-04-14"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":8,"author":{"gitId":"shavonneg"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2024-03-17"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2018-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class ExitCommandTest {","lastModifiedDate":"2017-06-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager();","lastModifiedDate":"2018-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private Model expectedModel \u003d new ModelManager();","lastModifiedDate":"2018-12-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void execute_exit_success() {","lastModifiedDate":"2017-06-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(MESSAGE_EXIT_ACKNOWLEDGEMENT, false, true);","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ExitCommand(), model, expectedCommandResult, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-08"}],"authorContributionMap":{"shavonneg":1,"Jaspertzx":2,"-":18}},{"path":"src/test/java/seedu/address/logic/commands/client/FindCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Jaspertzx"},"content":"package seedu.address.logic.commands.client;","lastModifiedDate":"2024-04-14"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"Jaspertzx"},"content":"import static seedu.address.logic.Messages.MESSAGE_CLIENTS_LISTED_OVERVIEW;","lastModifiedDate":"2024-04-14"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2018-08-08"},{"lineNumber":8,"author":{"gitId":"Jaspertzx"},"content":"import static seedu.address.testutil.TypicalClients.CARL;","lastModifiedDate":"2024-04-14"},{"lineNumber":9,"author":{"gitId":"Jaspertzx"},"content":"import static seedu.address.testutil.TypicalClients.ELLE;","lastModifiedDate":"2024-04-14"},{"lineNumber":10,"author":{"gitId":"Jaspertzx"},"content":"import static seedu.address.testutil.TypicalClients.FIONA;","lastModifiedDate":"2024-04-14"},{"lineNumber":11,"author":{"gitId":"Jaspertzx"},"content":"import static seedu.address.testutil.TypicalClients.getTypicalAddressBook;","lastModifiedDate":"2024-04-14"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-12"},{"lineNumber":21,"author":{"gitId":"Jaspertzx"},"content":"import seedu.address.model.client.NameContainsKeywordsPredicate;","lastModifiedDate":"2024-04-14"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) for {@code FindCommand}.","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"public class FindCommandTest {","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2017-07-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private Model expectedModel \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2018-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-06-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate firstPredicate \u003d","lastModifiedDate":"2017-06-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"                new NameContainsKeywordsPredicate(Collections.singletonList(\"first\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate secondPredicate \u003d","lastModifiedDate":"2017-06-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"                new NameContainsKeywordsPredicate(Collections.singletonList(\"second\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        FindCommand findFirstCommand \u003d new FindCommand(firstPredicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        FindCommand findSecondCommand \u003d new FindCommand(secondPredicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertTrue(findFirstCommand.equals(findFirstCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        FindCommand findFirstCommandCopy \u003d new FindCommand(firstPredicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertTrue(findFirstCommand.equals(findFirstCommandCopy));","lastModifiedDate":"2017-06-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(1));","lastModifiedDate":"2017-06-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(null));","lastModifiedDate":"2017-06-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":53,"author":{"gitId":"Jaspertzx"},"content":"        // different client -\u003e returns false","lastModifiedDate":"2024-04-14"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(findSecondCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public void execute_zeroKeywords_noPersonFound() {","lastModifiedDate":"2017-08-15"},{"lineNumber":59,"author":{"gitId":"Jaspertzx"},"content":"        String expectedMessage \u003d String.format(MESSAGE_CLIENTS_LISTED_OVERVIEW, 0);","lastModifiedDate":"2024-04-14"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d preparePredicate(\" \");","lastModifiedDate":"2018-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        FindCommand command \u003d new FindCommand(predicate);","lastModifiedDate":"2018-08-08"},{"lineNumber":62,"author":{"gitId":"Jaspertzx"},"content":"        expectedModel.updateFilteredClientList(predicate);","lastModifiedDate":"2024-04-14"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":64,"author":{"gitId":"Jaspertzx"},"content":"        assertEquals(Collections.emptyList(), model.getFilteredClientList());","lastModifiedDate":"2024-04-14"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public void execute_multipleKeywords_multiplePersonsFound() {","lastModifiedDate":"2017-08-15"},{"lineNumber":69,"author":{"gitId":"Jaspertzx"},"content":"        String expectedMessage \u003d String.format(MESSAGE_CLIENTS_LISTED_OVERVIEW, 3);","lastModifiedDate":"2024-04-14"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d preparePredicate(\"Kurz Elle Kunz\");","lastModifiedDate":"2018-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        FindCommand command \u003d new FindCommand(predicate);","lastModifiedDate":"2018-08-08"},{"lineNumber":72,"author":{"gitId":"Jaspertzx"},"content":"        expectedModel.updateFilteredClientList(predicate);","lastModifiedDate":"2024-04-14"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":74,"author":{"gitId":"Jaspertzx"},"content":"        assertEquals(Arrays.asList(CARL, ELLE, FIONA), model.getFilteredClientList());","lastModifiedDate":"2024-04-14"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"keyword\"));","lastModifiedDate":"2019-02-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        FindCommand findCommand \u003d new FindCommand(predicate);","lastModifiedDate":"2019-02-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        String expected \u003d FindCommand.class.getCanonicalName() + \"{predicate\u003d\" + predicate + \"}\";","lastModifiedDate":"2019-02-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertEquals(expected, findCommand.toString());","lastModifiedDate":"2019-02-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-12"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * Parses {@code userInput} into a {@code NameContainsKeywordsPredicate}.","lastModifiedDate":"2018-08-08"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-12"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    private NameContainsKeywordsPredicate preparePredicate(String userInput) {","lastModifiedDate":"2018-08-08"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        return new NameContainsKeywordsPredicate(Arrays.asList(userInput.split(\"\\\\s+\")));","lastModifiedDate":"2018-08-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":91,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"Jaspertzx":14,"-":77}},{"path":"src/test/java/seedu/address/logic/commands/client/HelpCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Jaspertzx"},"content":"package seedu.address.logic.commands.client;","lastModifiedDate":"2024-04-14"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"Jaspertzx"},"content":"import static seedu.address.logic.commands.client.HelpCommand.SHOWING_HELP_MESSAGE;","lastModifiedDate":"2024-04-14"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":8,"author":{"gitId":"shavonneg"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2024-03-17"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2018-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class HelpCommandTest {","lastModifiedDate":"2017-06-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager();","lastModifiedDate":"2018-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private Model expectedModel \u003d new ModelManager();","lastModifiedDate":"2018-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void execute_help_success() {","lastModifiedDate":"2017-06-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(SHOWING_HELP_MESSAGE, true, false);","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new HelpCommand(), model, expectedCommandResult, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-08"}],"authorContributionMap":{"shavonneg":1,"Jaspertzx":2,"-":18}},{"path":"src/test/java/seedu/address/logic/commands/client/ListCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Jaspertzx"},"content":"package seedu.address.logic.commands.client;","lastModifiedDate":"2024-04-14"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showPersonAtIndex;","lastModifiedDate":"2018-01-31"},{"lineNumber":5,"author":{"gitId":"Jaspertzx"},"content":"import static seedu.address.testutil.TypicalClients.getTypicalAddressBook;","lastModifiedDate":"2024-04-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2018-01-31"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for ListCommand.","lastModifiedDate":"2017-06-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class ListCommandTest {","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private Model model;","lastModifiedDate":"2017-06-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private Model expectedModel;","lastModifiedDate":"2017-06-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2017-07-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public void execute_listIsNotFiltered_showsSameList() {","lastModifiedDate":"2017-08-15"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ListCommand(), model, ListCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public void execute_listIsFiltered_showsEverything() {","lastModifiedDate":"2017-08-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ListCommand(), model, ListCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"Jaspertzx":2,"-":37}},{"path":"src/test/java/seedu/address/logic/commands/order/AddOrderCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Jaspertzx"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2024-03-17"},{"lineNumber":2,"author":{"gitId":"Jaspertzx"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":3,"author":{"gitId":"Jaspertzx"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2024-03-17"},{"lineNumber":4,"author":{"gitId":"Jaspertzx"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-03-20"},{"lineNumber":5,"author":{"gitId":"Jaspertzx"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2024-03-20"},{"lineNumber":6,"author":{"gitId":"Jaspertzx"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2024-03-20"},{"lineNumber":7,"author":{"gitId":"Jaspertzx"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2024-03-20"},{"lineNumber":8,"author":{"gitId":"Jaspertzx"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_THIRD_PERSON;","lastModifiedDate":"2024-03-20"},{"lineNumber":9,"author":{"gitId":"Jaspertzx"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":10,"author":{"gitId":"Jaspertzx"},"content":"import java.nio.file.Path;","lastModifiedDate":"2024-03-17"},{"lineNumber":11,"author":{"gitId":"Jaspertzx"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-03-20"},{"lineNumber":12,"author":{"gitId":"Jaspertzx"},"content":"import java.util.List;","lastModifiedDate":"2024-03-20"},{"lineNumber":13,"author":{"gitId":"Jaspertzx"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2024-03-17"},{"lineNumber":14,"author":{"gitId":"Jaspertzx"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":15,"author":{"gitId":"Jaspertzx"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-20"},{"lineNumber":16,"author":{"gitId":"Jaspertzx"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":17,"author":{"gitId":"Jaspertzx"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2024-03-20"},{"lineNumber":18,"author":{"gitId":"Jaspertzx"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2024-03-17"},{"lineNumber":19,"author":{"gitId":"Jaspertzx"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2024-03-17"},{"lineNumber":20,"author":{"gitId":"Jaspertzx"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2024-03-20"},{"lineNumber":21,"author":{"gitId":"Jaspertzx"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2024-03-20"},{"lineNumber":22,"author":{"gitId":"Jaspertzx"},"content":"import seedu.address.logic.commands.order.AddOrderCommand;","lastModifiedDate":"2024-04-14"},{"lineNumber":23,"author":{"gitId":"Jaspertzx"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2024-03-17"},{"lineNumber":24,"author":{"gitId":"Jaspertzx"},"content":"import seedu.address.model.ReadOnlyBookKeeper;","lastModifiedDate":"2024-04-14"},{"lineNumber":25,"author":{"gitId":"Jaspertzx"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2024-03-17"},{"lineNumber":26,"author":{"gitId":"Jaspertzx"},"content":"import seedu.address.model.client.Client;","lastModifiedDate":"2024-04-14"},{"lineNumber":27,"author":{"gitId":"Jaspertzx"},"content":"import seedu.address.model.order.Order;","lastModifiedDate":"2024-03-18"},{"lineNumber":28,"author":{"gitId":"Jaspertzx"},"content":"import seedu.address.testutil.ClientBuilder;","lastModifiedDate":"2024-04-14"},{"lineNumber":29,"author":{"gitId":"Jaspertzx"},"content":"import seedu.address.testutil.OrderBuilder;","lastModifiedDate":"2024-03-20"},{"lineNumber":30,"author":{"gitId":"shavonneg"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":31,"author":{"gitId":"Jaspertzx"},"content":"public class AddOrderCommandTest {","lastModifiedDate":"2024-03-17"},{"lineNumber":32,"author":{"gitId":"Jaspertzx"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":33,"author":{"gitId":"Jaspertzx"},"content":"    @Test","lastModifiedDate":"2024-03-20"},{"lineNumber":34,"author":{"gitId":"Jaspertzx"},"content":"    public void execute_orderAcceptedByModel_addSuccessful() throws Exception {","lastModifiedDate":"2024-03-17"},{"lineNumber":35,"author":{"gitId":"Jaspertzx"},"content":"        ClientBuilder clientBuilder \u003d new ClientBuilder();","lastModifiedDate":"2024-04-14"},{"lineNumber":36,"author":{"gitId":"Jaspertzx"},"content":"        Client client \u003d clientBuilder.build();","lastModifiedDate":"2024-04-14"},{"lineNumber":37,"author":{"gitId":"Jaspertzx"},"content":"        OrderBuilder builder \u003d new OrderBuilder();","lastModifiedDate":"2024-03-18"},{"lineNumber":38,"author":{"gitId":"Jaspertzx"},"content":"        Order order \u003d builder.build();","lastModifiedDate":"2024-03-18"},{"lineNumber":39,"author":{"gitId":"Jaspertzx"},"content":"        ModelStubAcceptingOrderAdded modelStub \u003d new ModelStubAcceptingOrderAdded(order, client);","lastModifiedDate":"2024-04-14"},{"lineNumber":40,"author":{"gitId":"Jaspertzx"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":41,"author":{"gitId":"Jaspertzx"},"content":"        Index targetIndex \u003d INDEX_FIRST_PERSON;","lastModifiedDate":"2024-03-20"},{"lineNumber":42,"author":{"gitId":"Jaspertzx"},"content":"        CommandResult commandResult \u003d new AddOrderCommand(targetIndex, order).execute(modelStub);","lastModifiedDate":"2024-03-20"},{"lineNumber":43,"author":{"gitId":"rertyy"},"content":"        assertEquals(1, modelStub.getFilteredOrderList().size());","lastModifiedDate":"2024-03-21"},{"lineNumber":44,"author":{"gitId":"Jaspertzx"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":45,"author":{"gitId":"Jaspertzx"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":46,"author":{"gitId":"Jaspertzx"},"content":"    @Test","lastModifiedDate":"2024-03-20"},{"lineNumber":47,"author":{"gitId":"Jaspertzx"},"content":"    public void execute_orderAcceptedByModel_indexError() throws Exception {","lastModifiedDate":"2024-03-20"},{"lineNumber":48,"author":{"gitId":"Jaspertzx"},"content":"        ClientBuilder clientBuilder \u003d new ClientBuilder();","lastModifiedDate":"2024-04-14"},{"lineNumber":49,"author":{"gitId":"Jaspertzx"},"content":"        Client client \u003d clientBuilder.build();","lastModifiedDate":"2024-04-14"},{"lineNumber":50,"author":{"gitId":"Jaspertzx"},"content":"        OrderBuilder builder \u003d new OrderBuilder();","lastModifiedDate":"2024-03-20"},{"lineNumber":51,"author":{"gitId":"Jaspertzx"},"content":"        Order order \u003d builder.build();","lastModifiedDate":"2024-03-20"},{"lineNumber":52,"author":{"gitId":"Jaspertzx"},"content":"        ModelStubAcceptingOrderAdded modelStub \u003d new ModelStubAcceptingOrderAdded(order, client);","lastModifiedDate":"2024-04-14"},{"lineNumber":53,"author":{"gitId":"Jaspertzx"},"content":"        Index targetIndex \u003d INDEX_THIRD_PERSON;","lastModifiedDate":"2024-03-20"},{"lineNumber":54,"author":{"gitId":"Jaspertzx"},"content":"        assertThrows(CommandException.class, () -\u003e new AddOrderCommand(targetIndex, order).execute(modelStub));","lastModifiedDate":"2024-03-20"},{"lineNumber":55,"author":{"gitId":"Jaspertzx"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":56,"author":{"gitId":"Jaspertzx"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":57,"author":{"gitId":"Jaspertzx"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":58,"author":{"gitId":"Jaspertzx"},"content":"    /**","lastModifiedDate":"2024-03-17"},{"lineNumber":59,"author":{"gitId":"Jaspertzx"},"content":"     * A default model stub that have all of the methods failing.","lastModifiedDate":"2024-03-17"},{"lineNumber":60,"author":{"gitId":"Jaspertzx"},"content":"     */","lastModifiedDate":"2024-03-17"},{"lineNumber":61,"author":{"gitId":"Jaspertzx"},"content":"    private class ModelStub implements Model {","lastModifiedDate":"2024-03-17"},{"lineNumber":62,"author":{"gitId":"Jaspertzx"},"content":"        @Override","lastModifiedDate":"2024-03-17"},{"lineNumber":63,"author":{"gitId":"shavonneg"},"content":"        public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2024-03-19"},{"lineNumber":64,"author":{"gitId":"Jaspertzx"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-03-17"},{"lineNumber":65,"author":{"gitId":"Jaspertzx"},"content":"        }","lastModifiedDate":"2024-03-17"},{"lineNumber":66,"author":{"gitId":"Jaspertzx"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":67,"author":{"gitId":"Jaspertzx"},"content":"        @Override","lastModifiedDate":"2024-03-17"},{"lineNumber":68,"author":{"gitId":"shavonneg"},"content":"        public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2024-03-19"},{"lineNumber":69,"author":{"gitId":"Jaspertzx"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-03-17"},{"lineNumber":70,"author":{"gitId":"Jaspertzx"},"content":"        }","lastModifiedDate":"2024-03-17"},{"lineNumber":71,"author":{"gitId":"Jaspertzx"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":72,"author":{"gitId":"Jaspertzx"},"content":"        @Override","lastModifiedDate":"2024-03-17"},{"lineNumber":73,"author":{"gitId":"Jaspertzx"},"content":"        public GuiSettings getGuiSettings() {","lastModifiedDate":"2024-03-17"},{"lineNumber":74,"author":{"gitId":"Jaspertzx"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-03-17"},{"lineNumber":75,"author":{"gitId":"Jaspertzx"},"content":"        }","lastModifiedDate":"2024-03-17"},{"lineNumber":76,"author":{"gitId":"Jaspertzx"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":77,"author":{"gitId":"Jaspertzx"},"content":"        @Override","lastModifiedDate":"2024-03-17"},{"lineNumber":78,"author":{"gitId":"Jaspertzx"},"content":"        public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2024-03-17"},{"lineNumber":79,"author":{"gitId":"Jaspertzx"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-03-17"},{"lineNumber":80,"author":{"gitId":"Jaspertzx"},"content":"        }","lastModifiedDate":"2024-03-17"},{"lineNumber":81,"author":{"gitId":"Jaspertzx"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":82,"author":{"gitId":"Jaspertzx"},"content":"        @Override","lastModifiedDate":"2024-03-17"},{"lineNumber":83,"author":{"gitId":"Jaspertzx"},"content":"        public Path getAddressBookFilePath() {","lastModifiedDate":"2024-03-17"},{"lineNumber":84,"author":{"gitId":"Jaspertzx"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-03-17"},{"lineNumber":85,"author":{"gitId":"Jaspertzx"},"content":"        }","lastModifiedDate":"2024-03-17"},{"lineNumber":86,"author":{"gitId":"Jaspertzx"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":87,"author":{"gitId":"Jaspertzx"},"content":"        @Override","lastModifiedDate":"2024-03-17"},{"lineNumber":88,"author":{"gitId":"Jaspertzx"},"content":"        public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2024-03-17"},{"lineNumber":89,"author":{"gitId":"Jaspertzx"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-03-17"},{"lineNumber":90,"author":{"gitId":"Jaspertzx"},"content":"        }","lastModifiedDate":"2024-03-17"},{"lineNumber":91,"author":{"gitId":"Jaspertzx"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":92,"author":{"gitId":"Jaspertzx"},"content":"        @Override","lastModifiedDate":"2024-03-17"},{"lineNumber":93,"author":{"gitId":"Jaspertzx"},"content":"        public void addClient(Client client) {","lastModifiedDate":"2024-04-14"},{"lineNumber":94,"author":{"gitId":"Jaspertzx"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-03-17"},{"lineNumber":95,"author":{"gitId":"Jaspertzx"},"content":"        }","lastModifiedDate":"2024-03-17"},{"lineNumber":96,"author":{"gitId":"Jaspertzx"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":97,"author":{"gitId":"Jaspertzx"},"content":"        @Override","lastModifiedDate":"2024-03-17"},{"lineNumber":98,"author":{"gitId":"Jaspertzx"},"content":"        public ReadOnlyBookKeeper getAddressBook() {","lastModifiedDate":"2024-04-14"},{"lineNumber":99,"author":{"gitId":"Jaspertzx"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-03-17"},{"lineNumber":100,"author":{"gitId":"Jaspertzx"},"content":"        }","lastModifiedDate":"2024-03-17"},{"lineNumber":101,"author":{"gitId":"Jaspertzx"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":102,"author":{"gitId":"Jaspertzx"},"content":"        @Override","lastModifiedDate":"2024-03-17"},{"lineNumber":103,"author":{"gitId":"Jaspertzx"},"content":"        public void setAddressBook(ReadOnlyBookKeeper newData) {","lastModifiedDate":"2024-04-14"},{"lineNumber":104,"author":{"gitId":"Jaspertzx"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-03-17"},{"lineNumber":105,"author":{"gitId":"Jaspertzx"},"content":"        }","lastModifiedDate":"2024-03-17"},{"lineNumber":106,"author":{"gitId":"Jaspertzx"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":107,"author":{"gitId":"Jaspertzx"},"content":"        @Override","lastModifiedDate":"2024-03-17"},{"lineNumber":108,"author":{"gitId":"Jaspertzx"},"content":"        public boolean hasClient(Client client) {","lastModifiedDate":"2024-04-14"},{"lineNumber":109,"author":{"gitId":"Jaspertzx"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-03-17"},{"lineNumber":110,"author":{"gitId":"Jaspertzx"},"content":"        }","lastModifiedDate":"2024-03-17"},{"lineNumber":111,"author":{"gitId":"Jaspertzx"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":112,"author":{"gitId":"Jaspertzx"},"content":"        @Override","lastModifiedDate":"2024-03-17"},{"lineNumber":113,"author":{"gitId":"Jaspertzx"},"content":"        public void deleteClient(Client target) {","lastModifiedDate":"2024-04-14"},{"lineNumber":114,"author":{"gitId":"Jaspertzx"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-03-17"},{"lineNumber":115,"author":{"gitId":"Jaspertzx"},"content":"        }","lastModifiedDate":"2024-03-17"},{"lineNumber":116,"author":{"gitId":"Jaspertzx"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":117,"author":{"gitId":"Jaspertzx"},"content":"        @Override","lastModifiedDate":"2024-03-17"},{"lineNumber":118,"author":{"gitId":"Jaspertzx"},"content":"        public void setClient(Client target, Client editedClient) {","lastModifiedDate":"2024-04-14"},{"lineNumber":119,"author":{"gitId":"Jaspertzx"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-03-17"},{"lineNumber":120,"author":{"gitId":"Jaspertzx"},"content":"        }","lastModifiedDate":"2024-03-17"},{"lineNumber":121,"author":{"gitId":"Jaspertzx"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":122,"author":{"gitId":"kailinteoo"},"content":"        @Override","lastModifiedDate":"2024-03-20"},{"lineNumber":123,"author":{"gitId":"Jaspertzx"},"content":"        public void setClientAndAddOrder(Client target, Client editedClient, Order order) {","lastModifiedDate":"2024-04-14"},{"lineNumber":124,"author":{"gitId":"rertyy"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-03-23"},{"lineNumber":125,"author":{"gitId":"rertyy"},"content":"        }","lastModifiedDate":"2024-03-23"},{"lineNumber":126,"author":{"gitId":"rertyy"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":127,"author":{"gitId":"rertyy"},"content":"        @Override","lastModifiedDate":"2024-03-23"},{"lineNumber":128,"author":{"gitId":"Jaspertzx"},"content":"        public void setClientAndDeleteOrder(Client target, Client editedClient, Order order) {","lastModifiedDate":"2024-04-14"},{"lineNumber":129,"author":{"gitId":"kailinteoo"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-03-20"},{"lineNumber":130,"author":{"gitId":"kailinteoo"},"content":"        }","lastModifiedDate":"2024-03-20"},{"lineNumber":131,"author":{"gitId":"kailinteoo"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":132,"author":{"gitId":"shavonneg"},"content":"        @Override","lastModifiedDate":"2024-03-29"},{"lineNumber":133,"author":{"gitId":"Jaspertzx"},"content":"        public void setClientAndEditOrder(Client target, Client editedClient, Order order, Order editedOrder) {","lastModifiedDate":"2024-04-14"},{"lineNumber":134,"author":{"gitId":"shavonneg"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-03-29"},{"lineNumber":135,"author":{"gitId":"shavonneg"},"content":"        }","lastModifiedDate":"2024-03-29"},{"lineNumber":136,"author":{"gitId":"shavonneg"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":137,"author":{"gitId":"Jaspertzx"},"content":"        @Override","lastModifiedDate":"2024-03-17"},{"lineNumber":138,"author":{"gitId":"Jaspertzx"},"content":"        public ObservableList\u003cClient\u003e getFilteredClientList() {","lastModifiedDate":"2024-04-14"},{"lineNumber":139,"author":{"gitId":"Jaspertzx"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-03-17"},{"lineNumber":140,"author":{"gitId":"Jaspertzx"},"content":"        }","lastModifiedDate":"2024-03-17"},{"lineNumber":141,"author":{"gitId":"Jaspertzx"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":142,"author":{"gitId":"shavonneg"},"content":"        @Override","lastModifiedDate":"2024-03-19"},{"lineNumber":143,"author":{"gitId":"shavonneg"},"content":"        public ObservableList\u003cOrder\u003e getFilteredOrderList() {","lastModifiedDate":"2024-03-19"},{"lineNumber":144,"author":{"gitId":"shavonneg"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-03-19"},{"lineNumber":145,"author":{"gitId":"shavonneg"},"content":"        }","lastModifiedDate":"2024-03-19"},{"lineNumber":146,"author":{"gitId":"shavonneg"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":147,"author":{"gitId":"Jaspertzx"},"content":"        @Override","lastModifiedDate":"2024-03-17"},{"lineNumber":148,"author":{"gitId":"Jaspertzx"},"content":"        public void updateFilteredClientList(Predicate\u003cClient\u003e predicate) {","lastModifiedDate":"2024-04-14"},{"lineNumber":149,"author":{"gitId":"Jaspertzx"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-03-17"},{"lineNumber":150,"author":{"gitId":"Jaspertzx"},"content":"        }","lastModifiedDate":"2024-03-17"},{"lineNumber":151,"author":{"gitId":"Jaspertzx"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":152,"author":{"gitId":"shavonneg"},"content":"        @Override","lastModifiedDate":"2024-03-19"},{"lineNumber":153,"author":{"gitId":"shavonneg"},"content":"        public void updateFilteredOrderList(Predicate\u003cOrder\u003e predicate) {","lastModifiedDate":"2024-03-19"},{"lineNumber":154,"author":{"gitId":"shavonneg"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-03-19"},{"lineNumber":155,"author":{"gitId":"shavonneg"},"content":"        }","lastModifiedDate":"2024-03-19"},{"lineNumber":156,"author":{"gitId":"shavonneg"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":157,"author":{"gitId":"Jaspertzx"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":158,"author":{"gitId":"Jaspertzx"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":159,"author":{"gitId":"Jaspertzx"},"content":"    /**","lastModifiedDate":"2024-03-17"},{"lineNumber":160,"author":{"gitId":"Jaspertzx"},"content":"     * A Model stub that always accepts the order being added.","lastModifiedDate":"2024-03-17"},{"lineNumber":161,"author":{"gitId":"Jaspertzx"},"content":"     */","lastModifiedDate":"2024-03-17"},{"lineNumber":162,"author":{"gitId":"Jaspertzx"},"content":"    private class ModelStubAcceptingOrderAdded extends AddOrderCommandTest.ModelStub {","lastModifiedDate":"2024-03-17"},{"lineNumber":163,"author":{"gitId":"Jaspertzx"},"content":"        private Order order;","lastModifiedDate":"2024-03-20"},{"lineNumber":164,"author":{"gitId":"Jaspertzx"},"content":"        private Client client;","lastModifiedDate":"2024-04-14"},{"lineNumber":165,"author":{"gitId":"Jaspertzx"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":166,"author":{"gitId":"Jaspertzx"},"content":"        ModelStubAcceptingOrderAdded(Order order, Client client) {","lastModifiedDate":"2024-04-14"},{"lineNumber":167,"author":{"gitId":"Jaspertzx"},"content":"            requireNonNull(order);","lastModifiedDate":"2024-03-18"},{"lineNumber":168,"author":{"gitId":"Jaspertzx"},"content":"            this.order \u003d order;","lastModifiedDate":"2024-03-18"},{"lineNumber":169,"author":{"gitId":"Jaspertzx"},"content":"            this.client \u003d client;","lastModifiedDate":"2024-04-14"},{"lineNumber":170,"author":{"gitId":"Jaspertzx"},"content":"        }","lastModifiedDate":"2024-03-20"},{"lineNumber":171,"author":{"gitId":"Jaspertzx"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":172,"author":{"gitId":"Jaspertzx"},"content":"        @Override","lastModifiedDate":"2024-03-20"},{"lineNumber":173,"author":{"gitId":"Jaspertzx"},"content":"        public void setClient(Client target, Client editedClient) {","lastModifiedDate":"2024-04-14"},{"lineNumber":174,"author":{"gitId":"Jaspertzx"},"content":"            requireAllNonNull(target, editedClient);","lastModifiedDate":"2024-04-14"},{"lineNumber":175,"author":{"gitId":"Jaspertzx"},"content":"            this.client \u003d editedClient;","lastModifiedDate":"2024-04-14"},{"lineNumber":176,"author":{"gitId":"Jaspertzx"},"content":"        }","lastModifiedDate":"2024-03-20"},{"lineNumber":177,"author":{"gitId":"Jaspertzx"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":178,"author":{"gitId":"kailinteoo"},"content":"        @Override","lastModifiedDate":"2024-03-20"},{"lineNumber":179,"author":{"gitId":"Jaspertzx"},"content":"        public void setClientAndAddOrder(Client target, Client editedClient, Order order) {","lastModifiedDate":"2024-04-14"},{"lineNumber":180,"author":{"gitId":"Jaspertzx"},"content":"            requireAllNonNull(target, editedClient);","lastModifiedDate":"2024-04-14"},{"lineNumber":181,"author":{"gitId":"Jaspertzx"},"content":"            this.client \u003d editedClient;","lastModifiedDate":"2024-04-14"},{"lineNumber":182,"author":{"gitId":"kailinteoo"},"content":"        }","lastModifiedDate":"2024-03-20"},{"lineNumber":183,"author":{"gitId":"kailinteoo"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":184,"author":{"gitId":"Jaspertzx"},"content":"        @Override","lastModifiedDate":"2024-03-20"},{"lineNumber":185,"author":{"gitId":"Jaspertzx"},"content":"        public ObservableList\u003cClient\u003e getFilteredClientList() {","lastModifiedDate":"2024-04-14"},{"lineNumber":186,"author":{"gitId":"Jaspertzx"},"content":"            List\u003cClient\u003e sampleList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-04-14"},{"lineNumber":187,"author":{"gitId":"Jaspertzx"},"content":"            sampleList.add(this.client);","lastModifiedDate":"2024-04-14"},{"lineNumber":188,"author":{"gitId":"Jaspertzx"},"content":"            ObservableList\u003cClient\u003e clientList \u003d FXCollections.observableArrayList(sampleList);","lastModifiedDate":"2024-04-14"},{"lineNumber":189,"author":{"gitId":"Jaspertzx"},"content":"            return clientList;","lastModifiedDate":"2024-04-14"},{"lineNumber":190,"author":{"gitId":"Jaspertzx"},"content":"        }","lastModifiedDate":"2024-03-20"},{"lineNumber":191,"author":{"gitId":"Jaspertzx"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":192,"author":{"gitId":"rertyy"},"content":"        @Override","lastModifiedDate":"2024-03-21"},{"lineNumber":193,"author":{"gitId":"rertyy"},"content":"        public ObservableList\u003cOrder\u003e getFilteredOrderList() {","lastModifiedDate":"2024-03-21"},{"lineNumber":194,"author":{"gitId":"Jaspertzx"},"content":"            ObservableList\u003cOrder\u003e orderList \u003d FXCollections.observableArrayList(this.client.getOrders());","lastModifiedDate":"2024-04-14"},{"lineNumber":195,"author":{"gitId":"Jaspertzx"},"content":"            return orderList;","lastModifiedDate":"2024-03-20"},{"lineNumber":196,"author":{"gitId":"Jaspertzx"},"content":"        }","lastModifiedDate":"2024-03-17"},{"lineNumber":197,"author":{"gitId":"rertyy"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":198,"author":{"gitId":"rertyy"},"content":"        @Override","lastModifiedDate":"2024-03-21"},{"lineNumber":199,"author":{"gitId":"rertyy"},"content":"        public void updateFilteredOrderList(Predicate\u003cOrder\u003e predicate) {","lastModifiedDate":"2024-03-21"},{"lineNumber":200,"author":{"gitId":"rertyy"},"content":"            requireNonNull(predicate);","lastModifiedDate":"2024-03-21"},{"lineNumber":201,"author":{"gitId":"rertyy"},"content":"        }","lastModifiedDate":"2024-03-21"},{"lineNumber":202,"author":{"gitId":"Jaspertzx"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":203,"author":{"gitId":"Jaspertzx"},"content":"}","lastModifiedDate":"2024-03-17"}],"authorContributionMap":{"kailinteoo":7,"shavonneg":17,"rertyy":12,"Jaspertzx":167}},{"path":"src/test/java/seedu/address/logic/commands/order/DeleteOrderCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Jaspertzx"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2024-03-18"},{"lineNumber":2,"author":{"gitId":"Jaspertzx"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":3,"author":{"gitId":"Jaspertzx"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2024-03-18"},{"lineNumber":4,"author":{"gitId":"rertyy"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-03-23"},{"lineNumber":5,"author":{"gitId":"Jaspertzx"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2024-03-20"},{"lineNumber":6,"author":{"gitId":"rertyy"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2024-03-29"},{"lineNumber":7,"author":{"gitId":"rertyy"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_ORDER;","lastModifiedDate":"2024-03-29"},{"lineNumber":8,"author":{"gitId":"Jaspertzx"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":9,"author":{"gitId":"Jaspertzx"},"content":"import java.nio.file.Path;","lastModifiedDate":"2024-03-18"},{"lineNumber":10,"author":{"gitId":"Jaspertzx"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-03-20"},{"lineNumber":11,"author":{"gitId":"Jaspertzx"},"content":"import java.util.List;","lastModifiedDate":"2024-03-20"},{"lineNumber":12,"author":{"gitId":"Jaspertzx"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2024-03-18"},{"lineNumber":13,"author":{"gitId":"Jaspertzx"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":14,"author":{"gitId":"Jaspertzx"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-20"},{"lineNumber":15,"author":{"gitId":"Jaspertzx"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":16,"author":{"gitId":"Jaspertzx"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2024-03-20"},{"lineNumber":17,"author":{"gitId":"Jaspertzx"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2024-03-18"},{"lineNumber":18,"author":{"gitId":"Jaspertzx"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2024-03-18"},{"lineNumber":19,"author":{"gitId":"rertyy"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2024-03-29"},{"lineNumber":20,"author":{"gitId":"Jaspertzx"},"content":"import seedu.address.logic.commands.order.AddOrderCommand;","lastModifiedDate":"2024-04-14"},{"lineNumber":21,"author":{"gitId":"Jaspertzx"},"content":"import seedu.address.logic.commands.order.DeleteOrderCommand;","lastModifiedDate":"2024-04-14"},{"lineNumber":22,"author":{"gitId":"Jaspertzx"},"content":"import seedu.address.model.BookKeeper;","lastModifiedDate":"2024-04-14"},{"lineNumber":23,"author":{"gitId":"Jaspertzx"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2024-03-18"},{"lineNumber":24,"author":{"gitId":"Jaspertzx"},"content":"import seedu.address.model.ReadOnlyBookKeeper;","lastModifiedDate":"2024-04-14"},{"lineNumber":25,"author":{"gitId":"Jaspertzx"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2024-03-18"},{"lineNumber":26,"author":{"gitId":"Jaspertzx"},"content":"import seedu.address.model.client.Client;","lastModifiedDate":"2024-04-14"},{"lineNumber":27,"author":{"gitId":"Jaspertzx"},"content":"import seedu.address.model.order.Order;","lastModifiedDate":"2024-03-18"},{"lineNumber":28,"author":{"gitId":"Jaspertzx"},"content":"import seedu.address.testutil.ClientBuilder;","lastModifiedDate":"2024-04-14"},{"lineNumber":29,"author":{"gitId":"Jaspertzx"},"content":"import seedu.address.testutil.OrderBuilder;","lastModifiedDate":"2024-03-20"},{"lineNumber":30,"author":{"gitId":"shavonneg"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":31,"author":{"gitId":"Jaspertzx"},"content":"public class DeleteOrderCommandTest {","lastModifiedDate":"2024-03-18"},{"lineNumber":32,"author":{"gitId":"Jaspertzx"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":33,"author":{"gitId":"Jaspertzx"},"content":"    @Test","lastModifiedDate":"2024-03-20"},{"lineNumber":34,"author":{"gitId":"Jaspertzx"},"content":"    public void execute_deleteOrderByModel_deleteSuccessful() throws Exception {","lastModifiedDate":"2024-03-18"},{"lineNumber":35,"author":{"gitId":"Jaspertzx"},"content":"        ClientBuilder clientBuilder \u003d new ClientBuilder();","lastModifiedDate":"2024-04-14"},{"lineNumber":36,"author":{"gitId":"Jaspertzx"},"content":"        Client client \u003d clientBuilder.build();","lastModifiedDate":"2024-04-14"},{"lineNumber":37,"author":{"gitId":"Jaspertzx"},"content":"        OrderBuilder builder \u003d new OrderBuilder();","lastModifiedDate":"2024-03-18"},{"lineNumber":38,"author":{"gitId":"Jaspertzx"},"content":"        Order order \u003d builder.build();","lastModifiedDate":"2024-03-18"},{"lineNumber":39,"author":{"gitId":"Jaspertzx"},"content":"        ModelStubDeletingOrder modelStub \u003d new ModelStubDeletingOrder(order, client);","lastModifiedDate":"2024-04-14"},{"lineNumber":40,"author":{"gitId":"rertyy"},"content":"        CommandResult commandResult \u003d new AddOrderCommand(INDEX_FIRST_ORDER, order).execute(modelStub);","lastModifiedDate":"2024-03-29"},{"lineNumber":41,"author":{"gitId":"rertyy"},"content":"        commandResult \u003d new DeleteOrderCommand(INDEX_FIRST_ORDER).execute(modelStub);","lastModifiedDate":"2024-03-29"},{"lineNumber":42,"author":{"gitId":"rertyy"},"content":"        assertEquals(0, modelStub.getOrderList().size());","lastModifiedDate":"2024-03-23"},{"lineNumber":43,"author":{"gitId":"Jaspertzx"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":44,"author":{"gitId":"Jaspertzx"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":45,"author":{"gitId":"Jaspertzx"},"content":"    @Test","lastModifiedDate":"2024-03-20"},{"lineNumber":46,"author":{"gitId":"Jaspertzx"},"content":"    public void execute_deleteOrderByModel_deleteUnsuccessful() throws Exception {","lastModifiedDate":"2024-03-20"},{"lineNumber":47,"author":{"gitId":"Jaspertzx"},"content":"        ClientBuilder clientBuilder \u003d new ClientBuilder();","lastModifiedDate":"2024-04-14"},{"lineNumber":48,"author":{"gitId":"Jaspertzx"},"content":"        Client client \u003d clientBuilder.build();","lastModifiedDate":"2024-04-14"},{"lineNumber":49,"author":{"gitId":"Jaspertzx"},"content":"        OrderBuilder builder \u003d new OrderBuilder();","lastModifiedDate":"2024-03-20"},{"lineNumber":50,"author":{"gitId":"Jaspertzx"},"content":"        Order order \u003d builder.build();","lastModifiedDate":"2024-03-20"},{"lineNumber":51,"author":{"gitId":"Jaspertzx"},"content":"        ModelStubDeletingOrder modelStub \u003d new ModelStubDeletingOrder(order, client);","lastModifiedDate":"2024-04-14"},{"lineNumber":52,"author":{"gitId":"rertyy"},"content":"        assertThrows(CommandException.class, () -\u003e new DeleteOrderCommand(INDEX_FIRST_ORDER).execute(modelStub));","lastModifiedDate":"2024-03-29"},{"lineNumber":53,"author":{"gitId":"rertyy"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":54,"author":{"gitId":"Jaspertzx"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":55,"author":{"gitId":"Jaspertzx"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":56,"author":{"gitId":"Jaspertzx"},"content":"    /**","lastModifiedDate":"2024-03-18"},{"lineNumber":57,"author":{"gitId":"Jaspertzx"},"content":"     * A default model stub that have all of the methods failing.","lastModifiedDate":"2024-03-18"},{"lineNumber":58,"author":{"gitId":"Jaspertzx"},"content":"     */","lastModifiedDate":"2024-03-18"},{"lineNumber":59,"author":{"gitId":"Jaspertzx"},"content":"    private class ModelStub implements Model {","lastModifiedDate":"2024-03-18"},{"lineNumber":60,"author":{"gitId":"Jaspertzx"},"content":"        @Override","lastModifiedDate":"2024-03-18"},{"lineNumber":61,"author":{"gitId":"shavonneg"},"content":"        public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2024-03-19"},{"lineNumber":62,"author":{"gitId":"Jaspertzx"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-03-18"},{"lineNumber":63,"author":{"gitId":"Jaspertzx"},"content":"        }","lastModifiedDate":"2024-03-18"},{"lineNumber":64,"author":{"gitId":"Jaspertzx"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":65,"author":{"gitId":"Jaspertzx"},"content":"        @Override","lastModifiedDate":"2024-03-18"},{"lineNumber":66,"author":{"gitId":"shavonneg"},"content":"        public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2024-03-19"},{"lineNumber":67,"author":{"gitId":"Jaspertzx"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-03-18"},{"lineNumber":68,"author":{"gitId":"Jaspertzx"},"content":"        }","lastModifiedDate":"2024-03-18"},{"lineNumber":69,"author":{"gitId":"Jaspertzx"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":70,"author":{"gitId":"Jaspertzx"},"content":"        @Override","lastModifiedDate":"2024-03-18"},{"lineNumber":71,"author":{"gitId":"Jaspertzx"},"content":"        public GuiSettings getGuiSettings() {","lastModifiedDate":"2024-03-18"},{"lineNumber":72,"author":{"gitId":"Jaspertzx"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-03-18"},{"lineNumber":73,"author":{"gitId":"Jaspertzx"},"content":"        }","lastModifiedDate":"2024-03-18"},{"lineNumber":74,"author":{"gitId":"Jaspertzx"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":75,"author":{"gitId":"Jaspertzx"},"content":"        @Override","lastModifiedDate":"2024-03-18"},{"lineNumber":76,"author":{"gitId":"Jaspertzx"},"content":"        public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2024-03-18"},{"lineNumber":77,"author":{"gitId":"Jaspertzx"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-03-18"},{"lineNumber":78,"author":{"gitId":"Jaspertzx"},"content":"        }","lastModifiedDate":"2024-03-18"},{"lineNumber":79,"author":{"gitId":"Jaspertzx"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":80,"author":{"gitId":"Jaspertzx"},"content":"        @Override","lastModifiedDate":"2024-03-18"},{"lineNumber":81,"author":{"gitId":"Jaspertzx"},"content":"        public Path getAddressBookFilePath() {","lastModifiedDate":"2024-03-18"},{"lineNumber":82,"author":{"gitId":"Jaspertzx"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-03-18"},{"lineNumber":83,"author":{"gitId":"Jaspertzx"},"content":"        }","lastModifiedDate":"2024-03-18"},{"lineNumber":84,"author":{"gitId":"Jaspertzx"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":85,"author":{"gitId":"Jaspertzx"},"content":"        @Override","lastModifiedDate":"2024-03-18"},{"lineNumber":86,"author":{"gitId":"Jaspertzx"},"content":"        public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2024-03-18"},{"lineNumber":87,"author":{"gitId":"Jaspertzx"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-03-18"},{"lineNumber":88,"author":{"gitId":"Jaspertzx"},"content":"        }","lastModifiedDate":"2024-03-18"},{"lineNumber":89,"author":{"gitId":"Jaspertzx"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":90,"author":{"gitId":"Jaspertzx"},"content":"        @Override","lastModifiedDate":"2024-03-18"},{"lineNumber":91,"author":{"gitId":"Jaspertzx"},"content":"        public void addClient(Client client) {","lastModifiedDate":"2024-04-14"},{"lineNumber":92,"author":{"gitId":"Jaspertzx"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-03-18"},{"lineNumber":93,"author":{"gitId":"Jaspertzx"},"content":"        }","lastModifiedDate":"2024-03-18"},{"lineNumber":94,"author":{"gitId":"Jaspertzx"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":95,"author":{"gitId":"Jaspertzx"},"content":"        @Override","lastModifiedDate":"2024-03-18"},{"lineNumber":96,"author":{"gitId":"Jaspertzx"},"content":"        public ReadOnlyBookKeeper getAddressBook() {","lastModifiedDate":"2024-04-14"},{"lineNumber":97,"author":{"gitId":"Jaspertzx"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-03-18"},{"lineNumber":98,"author":{"gitId":"Jaspertzx"},"content":"        }","lastModifiedDate":"2024-03-18"},{"lineNumber":99,"author":{"gitId":"Jaspertzx"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":100,"author":{"gitId":"Jaspertzx"},"content":"        @Override","lastModifiedDate":"2024-03-18"},{"lineNumber":101,"author":{"gitId":"Jaspertzx"},"content":"        public void setAddressBook(ReadOnlyBookKeeper newData) {","lastModifiedDate":"2024-04-14"},{"lineNumber":102,"author":{"gitId":"Jaspertzx"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-03-18"},{"lineNumber":103,"author":{"gitId":"Jaspertzx"},"content":"        }","lastModifiedDate":"2024-03-18"},{"lineNumber":104,"author":{"gitId":"Jaspertzx"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":105,"author":{"gitId":"Jaspertzx"},"content":"        @Override","lastModifiedDate":"2024-03-18"},{"lineNumber":106,"author":{"gitId":"Jaspertzx"},"content":"        public boolean hasClient(Client client) {","lastModifiedDate":"2024-04-14"},{"lineNumber":107,"author":{"gitId":"Jaspertzx"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-03-18"},{"lineNumber":108,"author":{"gitId":"Jaspertzx"},"content":"        }","lastModifiedDate":"2024-03-18"},{"lineNumber":109,"author":{"gitId":"Jaspertzx"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":110,"author":{"gitId":"Jaspertzx"},"content":"        @Override","lastModifiedDate":"2024-03-18"},{"lineNumber":111,"author":{"gitId":"Jaspertzx"},"content":"        public void deleteClient(Client target) {","lastModifiedDate":"2024-04-14"},{"lineNumber":112,"author":{"gitId":"Jaspertzx"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-03-18"},{"lineNumber":113,"author":{"gitId":"Jaspertzx"},"content":"        }","lastModifiedDate":"2024-03-18"},{"lineNumber":114,"author":{"gitId":"Jaspertzx"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":115,"author":{"gitId":"Jaspertzx"},"content":"        @Override","lastModifiedDate":"2024-03-18"},{"lineNumber":116,"author":{"gitId":"Jaspertzx"},"content":"        public void setClient(Client target, Client editedClient) {","lastModifiedDate":"2024-04-14"},{"lineNumber":117,"author":{"gitId":"Jaspertzx"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-03-18"},{"lineNumber":118,"author":{"gitId":"Jaspertzx"},"content":"        }","lastModifiedDate":"2024-03-18"},{"lineNumber":119,"author":{"gitId":"Jaspertzx"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":120,"author":{"gitId":"kailinteoo"},"content":"        @Override","lastModifiedDate":"2024-03-20"},{"lineNumber":121,"author":{"gitId":"Jaspertzx"},"content":"        public void setClientAndAddOrder(Client target, Client editedClient, Order order) {","lastModifiedDate":"2024-04-14"},{"lineNumber":122,"author":{"gitId":"rertyy"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-03-23"},{"lineNumber":123,"author":{"gitId":"rertyy"},"content":"        }","lastModifiedDate":"2024-03-23"},{"lineNumber":124,"author":{"gitId":"rertyy"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":125,"author":{"gitId":"rertyy"},"content":"        @Override","lastModifiedDate":"2024-03-23"},{"lineNumber":126,"author":{"gitId":"Jaspertzx"},"content":"        public void setClientAndDeleteOrder(Client target, Client editedClient, Order order) {","lastModifiedDate":"2024-04-14"},{"lineNumber":127,"author":{"gitId":"kailinteoo"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-03-20"},{"lineNumber":128,"author":{"gitId":"kailinteoo"},"content":"        }","lastModifiedDate":"2024-03-20"},{"lineNumber":129,"author":{"gitId":"kailinteoo"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":130,"author":{"gitId":"shavonneg"},"content":"        @Override","lastModifiedDate":"2024-03-29"},{"lineNumber":131,"author":{"gitId":"Jaspertzx"},"content":"        public void setClientAndEditOrder(Client target, Client editedClient, Order order, Order editedOrder) {","lastModifiedDate":"2024-04-14"},{"lineNumber":132,"author":{"gitId":"shavonneg"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-03-29"},{"lineNumber":133,"author":{"gitId":"shavonneg"},"content":"        }","lastModifiedDate":"2024-03-29"},{"lineNumber":134,"author":{"gitId":"shavonneg"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":135,"author":{"gitId":"Jaspertzx"},"content":"        @Override","lastModifiedDate":"2024-03-18"},{"lineNumber":136,"author":{"gitId":"Jaspertzx"},"content":"        public ObservableList\u003cClient\u003e getFilteredClientList() {","lastModifiedDate":"2024-04-14"},{"lineNumber":137,"author":{"gitId":"Jaspertzx"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-03-18"},{"lineNumber":138,"author":{"gitId":"Jaspertzx"},"content":"        }","lastModifiedDate":"2024-03-18"},{"lineNumber":139,"author":{"gitId":"Jaspertzx"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":140,"author":{"gitId":"shavonneg"},"content":"        @Override","lastModifiedDate":"2024-03-19"},{"lineNumber":141,"author":{"gitId":"shavonneg"},"content":"        public ObservableList\u003cOrder\u003e getFilteredOrderList() {","lastModifiedDate":"2024-03-19"},{"lineNumber":142,"author":{"gitId":"shavonneg"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-03-19"},{"lineNumber":143,"author":{"gitId":"shavonneg"},"content":"        }","lastModifiedDate":"2024-03-19"},{"lineNumber":144,"author":{"gitId":"shavonneg"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":145,"author":{"gitId":"Jaspertzx"},"content":"        @Override","lastModifiedDate":"2024-03-18"},{"lineNumber":146,"author":{"gitId":"Jaspertzx"},"content":"        public void updateFilteredClientList(Predicate\u003cClient\u003e predicate) {","lastModifiedDate":"2024-04-14"},{"lineNumber":147,"author":{"gitId":"Jaspertzx"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-03-18"},{"lineNumber":148,"author":{"gitId":"Jaspertzx"},"content":"        }","lastModifiedDate":"2024-03-18"},{"lineNumber":149,"author":{"gitId":"Jaspertzx"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":150,"author":{"gitId":"shavonneg"},"content":"        @Override","lastModifiedDate":"2024-03-19"},{"lineNumber":151,"author":{"gitId":"shavonneg"},"content":"        public void updateFilteredOrderList(Predicate\u003cOrder\u003e predicate) {","lastModifiedDate":"2024-03-19"},{"lineNumber":152,"author":{"gitId":"shavonneg"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-03-19"},{"lineNumber":153,"author":{"gitId":"shavonneg"},"content":"        }","lastModifiedDate":"2024-03-19"},{"lineNumber":154,"author":{"gitId":"shavonneg"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":155,"author":{"gitId":"Jaspertzx"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":156,"author":{"gitId":"Jaspertzx"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":157,"author":{"gitId":"Jaspertzx"},"content":"    /**","lastModifiedDate":"2024-03-18"},{"lineNumber":158,"author":{"gitId":"Jaspertzx"},"content":"     * A Model stub that always accepts the order being added.","lastModifiedDate":"2024-03-18"},{"lineNumber":159,"author":{"gitId":"Jaspertzx"},"content":"     */","lastModifiedDate":"2024-03-18"},{"lineNumber":160,"author":{"gitId":"Jaspertzx"},"content":"    private class ModelStubDeletingOrder extends ModelStub {","lastModifiedDate":"2024-03-18"},{"lineNumber":161,"author":{"gitId":"Jaspertzx"},"content":"        private Order order;","lastModifiedDate":"2024-03-20"},{"lineNumber":162,"author":{"gitId":"Jaspertzx"},"content":"        private Client client;","lastModifiedDate":"2024-04-14"},{"lineNumber":163,"author":{"gitId":"Jaspertzx"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":164,"author":{"gitId":"Jaspertzx"},"content":"        ModelStubDeletingOrder(Order order, Client client) {","lastModifiedDate":"2024-04-14"},{"lineNumber":165,"author":{"gitId":"Jaspertzx"},"content":"            requireNonNull(order);","lastModifiedDate":"2024-03-18"},{"lineNumber":166,"author":{"gitId":"Jaspertzx"},"content":"            this.order \u003d order;","lastModifiedDate":"2024-03-18"},{"lineNumber":167,"author":{"gitId":"Jaspertzx"},"content":"            this.client \u003d client;","lastModifiedDate":"2024-04-14"},{"lineNumber":168,"author":{"gitId":"Jaspertzx"},"content":"        }","lastModifiedDate":"2024-03-20"},{"lineNumber":169,"author":{"gitId":"Jaspertzx"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":170,"author":{"gitId":"Jaspertzx"},"content":"        @Override","lastModifiedDate":"2024-03-20"},{"lineNumber":171,"author":{"gitId":"Jaspertzx"},"content":"        public void setClient(Client target, Client editedClient) {","lastModifiedDate":"2024-04-14"},{"lineNumber":172,"author":{"gitId":"Jaspertzx"},"content":"            requireAllNonNull(target, editedClient);","lastModifiedDate":"2024-04-14"},{"lineNumber":173,"author":{"gitId":"Jaspertzx"},"content":"            this.client \u003d editedClient;","lastModifiedDate":"2024-04-14"},{"lineNumber":174,"author":{"gitId":"Jaspertzx"},"content":"        }","lastModifiedDate":"2024-03-20"},{"lineNumber":175,"author":{"gitId":"Jaspertzx"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":176,"author":{"gitId":"kailinteoo"},"content":"        @Override","lastModifiedDate":"2024-03-20"},{"lineNumber":177,"author":{"gitId":"Jaspertzx"},"content":"        public void setClientAndAddOrder(Client target, Client editedClient, Order order) {","lastModifiedDate":"2024-04-14"},{"lineNumber":178,"author":{"gitId":"Jaspertzx"},"content":"            requireAllNonNull(target, editedClient);","lastModifiedDate":"2024-04-14"},{"lineNumber":179,"author":{"gitId":"Jaspertzx"},"content":"            this.client \u003d editedClient;","lastModifiedDate":"2024-04-14"},{"lineNumber":180,"author":{"gitId":"kailinteoo"},"content":"        }","lastModifiedDate":"2024-03-20"},{"lineNumber":181,"author":{"gitId":"kailinteoo"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":182,"author":{"gitId":"rertyy"},"content":"        @Override","lastModifiedDate":"2024-03-25"},{"lineNumber":183,"author":{"gitId":"Jaspertzx"},"content":"        public void setClientAndDeleteOrder(Client target, Client editedClient, Order order) {","lastModifiedDate":"2024-04-14"},{"lineNumber":184,"author":{"gitId":"Jaspertzx"},"content":"            requireAllNonNull(target, editedClient, order);","lastModifiedDate":"2024-04-14"},{"lineNumber":185,"author":{"gitId":"Jaspertzx"},"content":"            this.client \u003d editedClient;","lastModifiedDate":"2024-04-14"},{"lineNumber":186,"author":{"gitId":"rertyy"},"content":"        }","lastModifiedDate":"2024-03-25"},{"lineNumber":187,"author":{"gitId":"rertyy"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":188,"author":{"gitId":"Jaspertzx"},"content":"        @Override","lastModifiedDate":"2024-03-20"},{"lineNumber":189,"author":{"gitId":"Jaspertzx"},"content":"        public ObservableList\u003cClient\u003e getFilteredClientList() {","lastModifiedDate":"2024-04-14"},{"lineNumber":190,"author":{"gitId":"Jaspertzx"},"content":"            List\u003cClient\u003e sampleList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-04-14"},{"lineNumber":191,"author":{"gitId":"Jaspertzx"},"content":"            sampleList.add(this.client);","lastModifiedDate":"2024-04-14"},{"lineNumber":192,"author":{"gitId":"Jaspertzx"},"content":"            ObservableList\u003cClient\u003e clientList \u003d FXCollections.observableArrayList(sampleList);","lastModifiedDate":"2024-04-14"},{"lineNumber":193,"author":{"gitId":"Jaspertzx"},"content":"            return clientList;","lastModifiedDate":"2024-04-14"},{"lineNumber":194,"author":{"gitId":"Jaspertzx"},"content":"        }","lastModifiedDate":"2024-03-18"},{"lineNumber":195,"author":{"gitId":"Jaspertzx"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":196,"author":{"gitId":"rertyy"},"content":"        @Override","lastModifiedDate":"2024-03-23"},{"lineNumber":197,"author":{"gitId":"rertyy"},"content":"        public ObservableList\u003cOrder\u003e getFilteredOrderList() {","lastModifiedDate":"2024-03-23"},{"lineNumber":198,"author":{"gitId":"rertyy"},"content":"            List\u003cOrder\u003e sampleList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-03-23"},{"lineNumber":199,"author":{"gitId":"rertyy"},"content":"            sampleList.add(this.order);","lastModifiedDate":"2024-03-23"},{"lineNumber":200,"author":{"gitId":"rertyy"},"content":"            ObservableList\u003cOrder\u003e orderList \u003d FXCollections.observableArrayList(sampleList);","lastModifiedDate":"2024-03-23"},{"lineNumber":201,"author":{"gitId":"rertyy"},"content":"            return orderList;","lastModifiedDate":"2024-03-23"},{"lineNumber":202,"author":{"gitId":"rertyy"},"content":"        }","lastModifiedDate":"2024-03-23"},{"lineNumber":203,"author":{"gitId":"rertyy"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":204,"author":{"gitId":"rertyy"},"content":"        private ObservableList\u003cOrder\u003e getOrderList() {","lastModifiedDate":"2024-03-21"},{"lineNumber":205,"author":{"gitId":"Jaspertzx"},"content":"            ObservableList\u003cOrder\u003e orderList \u003d FXCollections.observableArrayList(this.client.getOrders());","lastModifiedDate":"2024-04-14"},{"lineNumber":206,"author":{"gitId":"Jaspertzx"},"content":"            return orderList;","lastModifiedDate":"2024-03-20"},{"lineNumber":207,"author":{"gitId":"Jaspertzx"},"content":"        }","lastModifiedDate":"2024-03-20"},{"lineNumber":208,"author":{"gitId":"Jaspertzx"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":209,"author":{"gitId":"Jaspertzx"},"content":"        @Override","lastModifiedDate":"2024-03-20"},{"lineNumber":210,"author":{"gitId":"Jaspertzx"},"content":"        public ReadOnlyBookKeeper getAddressBook() {","lastModifiedDate":"2024-04-14"},{"lineNumber":211,"author":{"gitId":"Jaspertzx"},"content":"            BookKeeper bookKeeper \u003d new BookKeeper();","lastModifiedDate":"2024-04-14"},{"lineNumber":212,"author":{"gitId":"Jaspertzx"},"content":"            bookKeeper.addClient(this.client);","lastModifiedDate":"2024-04-14"},{"lineNumber":213,"author":{"gitId":"Jaspertzx"},"content":"            return bookKeeper;","lastModifiedDate":"2024-04-14"},{"lineNumber":214,"author":{"gitId":"Jaspertzx"},"content":"        }","lastModifiedDate":"2024-03-18"},{"lineNumber":215,"author":{"gitId":"rertyy"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":216,"author":{"gitId":"rertyy"},"content":"        @Override","lastModifiedDate":"2024-03-21"},{"lineNumber":217,"author":{"gitId":"rertyy"},"content":"        public void updateFilteredOrderList(Predicate\u003cOrder\u003e predicate) {","lastModifiedDate":"2024-03-21"},{"lineNumber":218,"author":{"gitId":"rertyy"},"content":"            requireNonNull(predicate);","lastModifiedDate":"2024-03-21"},{"lineNumber":219,"author":{"gitId":"rertyy"},"content":"        }","lastModifiedDate":"2024-03-21"},{"lineNumber":220,"author":{"gitId":"Jaspertzx"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":221,"author":{"gitId":"Jaspertzx"},"content":"}","lastModifiedDate":"2024-03-18"}],"authorContributionMap":{"kailinteoo":7,"shavonneg":17,"rertyy":30,"Jaspertzx":167}},{"path":"src/test/java/seedu/address/logic/commands/order/EditOrderCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Jaspertzx"},"content":"package seedu.address.logic.commands.order;","lastModifiedDate":"2024-04-14"},{"lineNumber":2,"author":{"gitId":"shavonneg"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":3,"author":{"gitId":"shavonneg"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2024-03-29"},{"lineNumber":4,"author":{"gitId":"shavonneg"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2024-03-29"},{"lineNumber":5,"author":{"gitId":"shavonneg"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2024-03-29"},{"lineNumber":6,"author":{"gitId":"Jaspertzx"},"content":"import static seedu.address.testutil.TypicalClients.getTypicalAddressBook;","lastModifiedDate":"2024-04-14"},{"lineNumber":7,"author":{"gitId":"shavonneg"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_ORDER;","lastModifiedDate":"2024-03-29"},{"lineNumber":8,"author":{"gitId":"shavonneg"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":9,"author":{"gitId":"shavonneg"},"content":"import java.nio.file.Path;","lastModifiedDate":"2024-03-29"},{"lineNumber":10,"author":{"gitId":"shavonneg"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-03-29"},{"lineNumber":11,"author":{"gitId":"shavonneg"},"content":"import java.util.List;","lastModifiedDate":"2024-03-29"},{"lineNumber":12,"author":{"gitId":"shavonneg"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2024-03-29"},{"lineNumber":13,"author":{"gitId":"shavonneg"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":14,"author":{"gitId":"shavonneg"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-29"},{"lineNumber":15,"author":{"gitId":"shavonneg"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":16,"author":{"gitId":"shavonneg"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2024-03-29"},{"lineNumber":17,"author":{"gitId":"shavonneg"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2024-03-29"},{"lineNumber":18,"author":{"gitId":"shavonneg"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2024-03-29"},{"lineNumber":19,"author":{"gitId":"shavonneg"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2024-03-29"},{"lineNumber":20,"author":{"gitId":"shavonneg"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2024-03-29"},{"lineNumber":21,"author":{"gitId":"Jaspertzx"},"content":"import seedu.address.model.BookKeeper;","lastModifiedDate":"2024-04-14"},{"lineNumber":22,"author":{"gitId":"shavonneg"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2024-03-29"},{"lineNumber":23,"author":{"gitId":"shavonneg"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2024-03-29"},{"lineNumber":24,"author":{"gitId":"Jaspertzx"},"content":"import seedu.address.model.ReadOnlyBookKeeper;","lastModifiedDate":"2024-04-14"},{"lineNumber":25,"author":{"gitId":"shavonneg"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2024-03-29"},{"lineNumber":26,"author":{"gitId":"shavonneg"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2024-03-29"},{"lineNumber":27,"author":{"gitId":"Jaspertzx"},"content":"import seedu.address.model.client.Client;","lastModifiedDate":"2024-04-14"},{"lineNumber":28,"author":{"gitId":"shavonneg"},"content":"import seedu.address.model.order.Order;","lastModifiedDate":"2024-03-29"},{"lineNumber":29,"author":{"gitId":"Jaspertzx"},"content":"import seedu.address.testutil.ClientBuilder;","lastModifiedDate":"2024-04-14"},{"lineNumber":30,"author":{"gitId":"shavonneg"},"content":"import seedu.address.testutil.OrderBuilder;","lastModifiedDate":"2024-03-29"},{"lineNumber":31,"author":{"gitId":"shavonneg"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":32,"author":{"gitId":"shavonneg"},"content":"public class EditOrderCommandTest {","lastModifiedDate":"2024-03-29"},{"lineNumber":33,"author":{"gitId":"shavonneg"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":34,"author":{"gitId":"shavonneg"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2024-03-29"},{"lineNumber":35,"author":{"gitId":"shavonneg"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":36,"author":{"gitId":"shavonneg"},"content":"    // TODO: implement tests for successful editing of orders","lastModifiedDate":"2024-03-29"},{"lineNumber":37,"author":{"gitId":"shavonneg"},"content":"    // @Test","lastModifiedDate":"2024-03-29"},{"lineNumber":38,"author":{"gitId":"shavonneg"},"content":"    // public void execute_editOrderByModel_editSuccessful() throws Exception {","lastModifiedDate":"2024-03-29"},{"lineNumber":39,"author":{"gitId":"Jaspertzx"},"content":"    //     ClientBuilder personBuilder \u003d new ClientBuilder();","lastModifiedDate":"2024-04-14"},{"lineNumber":40,"author":{"gitId":"Jaspertzx"},"content":"    //     Client client \u003d personBuilder.build();","lastModifiedDate":"2024-04-14"},{"lineNumber":41,"author":{"gitId":"shavonneg"},"content":"    //     OrderBuilder orderBuilder \u003d new OrderBuilder();","lastModifiedDate":"2024-03-29"},{"lineNumber":42,"author":{"gitId":"shavonneg"},"content":"    //     Order originalOrder \u003d orderBuilder.build();","lastModifiedDate":"2024-03-29"},{"lineNumber":43,"author":{"gitId":"Jaspertzx"},"content":"    //     ModelStubEditingOrder modelStub \u003d new ModelStubEditingOrder(originalOrder, client);","lastModifiedDate":"2024-04-14"},{"lineNumber":44,"author":{"gitId":"shavonneg"},"content":"    //     Order editedOrder \u003d orderBuilder.withStatus(\"completed\").build();","lastModifiedDate":"2024-03-29"},{"lineNumber":45,"author":{"gitId":"shavonneg"},"content":"    //     EditOrderCommand.EditOrderDescriptor descriptor \u003d new EditOrderDescriptorBuilder(editedOrder).build();","lastModifiedDate":"2024-03-29"},{"lineNumber":46,"author":{"gitId":"shavonneg"},"content":"    //     EditOrderCommand editOrderCommand \u003d new EditOrderCommand(INDEX_FIRST_PERSON, descriptor);","lastModifiedDate":"2024-03-29"},{"lineNumber":47,"author":{"gitId":"shavonneg"},"content":"    //     String expectedMessage \u003d String.format(EditOrderCommand.MESSAGE_EDIT_ORDER_SUCCESS, editedOrder);","lastModifiedDate":"2024-03-29"},{"lineNumber":48,"author":{"gitId":"shavonneg"},"content":"    //     assertCommandSuccess(editOrderCommand, modelStub, expectedMessage, modelStub);","lastModifiedDate":"2024-03-29"},{"lineNumber":49,"author":{"gitId":"shavonneg"},"content":"    // }","lastModifiedDate":"2024-03-29"},{"lineNumber":50,"author":{"gitId":"shavonneg"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":51,"author":{"gitId":"shavonneg"},"content":"    // TODO: implement tests for successful indexing and correct description","lastModifiedDate":"2024-03-29"},{"lineNumber":52,"author":{"gitId":"shavonneg"},"content":"    // @Test","lastModifiedDate":"2024-03-29"},{"lineNumber":53,"author":{"gitId":"shavonneg"},"content":"    // public void execute_validIndexAndDescriptor_success() {","lastModifiedDate":"2024-03-29"},{"lineNumber":54,"author":{"gitId":"shavonneg"},"content":"    //     Order editedOrder \u003d new OrderBuilder().withStatus(\"PENDING\").build();","lastModifiedDate":"2024-03-29"},{"lineNumber":55,"author":{"gitId":"shavonneg"},"content":"    //     EditOrderCommand.EditOrderDescriptor descriptor \u003d new EditOrderDescriptorBuilder(editedOrder).build();","lastModifiedDate":"2024-03-29"},{"lineNumber":56,"author":{"gitId":"shavonneg"},"content":"    //     EditOrderCommand editOrderCommand \u003d new EditOrderCommand(INDEX_FIRST_ORDER, descriptor);","lastModifiedDate":"2024-03-29"},{"lineNumber":57,"author":{"gitId":"shavonneg"},"content":"    //","lastModifiedDate":"2024-03-29"},{"lineNumber":58,"author":{"gitId":"shavonneg"},"content":"    //     String expectedMessage \u003d String.format(MESSAGE_EDIT_ORDER_SUCCESS, editedOrder);","lastModifiedDate":"2024-03-29"},{"lineNumber":59,"author":{"gitId":"shavonneg"},"content":"    //     assertCommandSuccess(editOrderCommand, model, expectedMessage, model);","lastModifiedDate":"2024-03-29"},{"lineNumber":60,"author":{"gitId":"shavonneg"},"content":"    // }","lastModifiedDate":"2024-03-29"},{"lineNumber":61,"author":{"gitId":"shavonneg"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":62,"author":{"gitId":"shavonneg"},"content":"    // TODO: implement test for createEditedOrder","lastModifiedDate":"2024-04-02"},{"lineNumber":63,"author":{"gitId":"shavonneg"},"content":"    // @Test","lastModifiedDate":"2024-04-02"},{"lineNumber":64,"author":{"gitId":"shavonneg"},"content":"    // public void testExecute_createEditedOrder() throws Exception {","lastModifiedDate":"2024-04-02"},{"lineNumber":65,"author":{"gitId":"Jaspertzx"},"content":"    //     ClientBuilder personBuilder \u003d new ClientBuilder();","lastModifiedDate":"2024-04-14"},{"lineNumber":66,"author":{"gitId":"Jaspertzx"},"content":"    //     Client client \u003d personBuilder.build();","lastModifiedDate":"2024-04-14"},{"lineNumber":67,"author":{"gitId":"shavonneg"},"content":"    //","lastModifiedDate":"2024-04-02"},{"lineNumber":68,"author":{"gitId":"shavonneg"},"content":"    //     // Create an original order","lastModifiedDate":"2024-04-02"},{"lineNumber":69,"author":{"gitId":"shavonneg"},"content":"    //     Order originalOrder \u003d new Order(new OrderId(), new OrderDate(\"01-02-2024 10:09\"),","lastModifiedDate":"2024-04-02"},{"lineNumber":70,"author":{"gitId":"shavonneg"},"content":"    //             new Deadline(\"22-02-2024 23:59\"), new Price(\"100.00\"), new Remark(\"Original remark\"),","lastModifiedDate":"2024-04-02"},{"lineNumber":71,"author":{"gitId":"shavonneg"},"content":"    //             new Status(\"PENDING\"));","lastModifiedDate":"2024-04-02"},{"lineNumber":72,"author":{"gitId":"shavonneg"},"content":"    //","lastModifiedDate":"2024-04-02"},{"lineNumber":73,"author":{"gitId":"shavonneg"},"content":"    //     // Set up edit descriptor with new values","lastModifiedDate":"2024-04-02"},{"lineNumber":74,"author":{"gitId":"shavonneg"},"content":"    //     EditOrderCommand.EditOrderDescriptor editDescriptor \u003d new EditOrderCommand.EditOrderDescriptor();","lastModifiedDate":"2024-04-02"},{"lineNumber":75,"author":{"gitId":"shavonneg"},"content":"    //     editDescriptor.setOrderDate(new OrderDate(\"01-02-2024 10:09\"));","lastModifiedDate":"2024-04-02"},{"lineNumber":76,"author":{"gitId":"shavonneg"},"content":"    //     editDescriptor.setDeadline(new Deadline(\"01-03-2024 23:59\"));","lastModifiedDate":"2024-04-02"},{"lineNumber":77,"author":{"gitId":"shavonneg"},"content":"    //     editDescriptor.setPrice(new Price(\"150.00\"));","lastModifiedDate":"2024-04-02"},{"lineNumber":78,"author":{"gitId":"shavonneg"},"content":"    //     editDescriptor.setRemark(new Remark(\"Updated remark\"));","lastModifiedDate":"2024-04-02"},{"lineNumber":79,"author":{"gitId":"shavonneg"},"content":"    //     editDescriptor.setStatus(new Status(\"COMPLETED\"));","lastModifiedDate":"2024-04-02"},{"lineNumber":80,"author":{"gitId":"shavonneg"},"content":"    //","lastModifiedDate":"2024-04-02"},{"lineNumber":81,"author":{"gitId":"shavonneg"},"content":"    //     // Create EditOrderCommand with target index and edit descriptor","lastModifiedDate":"2024-04-02"},{"lineNumber":82,"author":{"gitId":"shavonneg"},"content":"    //     EditOrderCommand editOrderCommand \u003d new EditOrderCommand(Index.fromZeroBased(0), editDescriptor);","lastModifiedDate":"2024-04-02"},{"lineNumber":83,"author":{"gitId":"shavonneg"},"content":"    //","lastModifiedDate":"2024-04-02"},{"lineNumber":84,"author":{"gitId":"Jaspertzx"},"content":"    //     // Create a model with the original order and associated client","lastModifiedDate":"2024-04-14"},{"lineNumber":85,"author":{"gitId":"shavonneg"},"content":"    //     Model model \u003d new ModelManager();","lastModifiedDate":"2024-04-02"},{"lineNumber":86,"author":{"gitId":"Jaspertzx"},"content":"    //     model.addPerson(client); // Add the client to the model","lastModifiedDate":"2024-04-14"},{"lineNumber":87,"author":{"gitId":"Jaspertzx"},"content":"    //     model.setPersonAndAddOrder(client, client, originalOrder); // Pass same client for target and editedPerson","lastModifiedDate":"2024-04-14"},{"lineNumber":88,"author":{"gitId":"shavonneg"},"content":"    //","lastModifiedDate":"2024-04-02"},{"lineNumber":89,"author":{"gitId":"shavonneg"},"content":"    //     // Execute the edit command","lastModifiedDate":"2024-04-02"},{"lineNumber":90,"author":{"gitId":"shavonneg"},"content":"    //     editOrderCommand.execute(model);","lastModifiedDate":"2024-04-02"},{"lineNumber":91,"author":{"gitId":"shavonneg"},"content":"    //","lastModifiedDate":"2024-04-02"},{"lineNumber":92,"author":{"gitId":"shavonneg"},"content":"    //     // Retrieve the edited order from the model","lastModifiedDate":"2024-04-02"},{"lineNumber":93,"author":{"gitId":"shavonneg"},"content":"    //     Order editedOrder \u003d model.getFilteredOrderList().get(0);","lastModifiedDate":"2024-04-02"},{"lineNumber":94,"author":{"gitId":"shavonneg"},"content":"    //","lastModifiedDate":"2024-04-02"},{"lineNumber":95,"author":{"gitId":"shavonneg"},"content":"    //     // Verify that the edited order details match the expected values","lastModifiedDate":"2024-04-02"},{"lineNumber":96,"author":{"gitId":"shavonneg"},"content":"    //     assertNotNull(editedOrder);","lastModifiedDate":"2024-04-02"},{"lineNumber":97,"author":{"gitId":"shavonneg"},"content":"    //     assertEquals(new OrderDate(\"01-02-2024 10:09\"), editedOrder.getOrderDate());","lastModifiedDate":"2024-04-02"},{"lineNumber":98,"author":{"gitId":"shavonneg"},"content":"    //     assertEquals(new Deadline(\"01-03-2024 23:59\"), editedOrder.getDeadline());","lastModifiedDate":"2024-04-02"},{"lineNumber":99,"author":{"gitId":"shavonneg"},"content":"    //     assertEquals(new Price(\"150.00\"), editedOrder.getPrice());","lastModifiedDate":"2024-04-02"},{"lineNumber":100,"author":{"gitId":"shavonneg"},"content":"    //     assertEquals(new Remark(\"Updated remark\"), editedOrder.getRemark());","lastModifiedDate":"2024-04-02"},{"lineNumber":101,"author":{"gitId":"shavonneg"},"content":"    //     assertEquals(new Status(\"COMPLETED\"), editedOrder.getStatus());","lastModifiedDate":"2024-04-02"},{"lineNumber":102,"author":{"gitId":"shavonneg"},"content":"    // }","lastModifiedDate":"2024-04-02"},{"lineNumber":103,"author":{"gitId":"shavonneg"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":104,"author":{"gitId":"shavonneg"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":105,"author":{"gitId":"shavonneg"},"content":"    @Test","lastModifiedDate":"2024-03-29"},{"lineNumber":106,"author":{"gitId":"shavonneg"},"content":"    public void execute_orderAcceptedByModel_indexError() throws Exception {","lastModifiedDate":"2024-03-29"},{"lineNumber":107,"author":{"gitId":"Jaspertzx"},"content":"        ClientBuilder clientBuilder \u003d new ClientBuilder();","lastModifiedDate":"2024-04-14"},{"lineNumber":108,"author":{"gitId":"Jaspertzx"},"content":"        Client client \u003d clientBuilder.build();","lastModifiedDate":"2024-04-14"},{"lineNumber":109,"author":{"gitId":"shavonneg"},"content":"        OrderBuilder orderBuilder \u003d new OrderBuilder();","lastModifiedDate":"2024-03-29"},{"lineNumber":110,"author":{"gitId":"shavonneg"},"content":"        Order order \u003d orderBuilder.build();","lastModifiedDate":"2024-03-29"},{"lineNumber":111,"author":{"gitId":"Jaspertzx"},"content":"        ModelStubEditingOrder modelStub \u003d new ModelStubEditingOrder(order, client);","lastModifiedDate":"2024-04-14"},{"lineNumber":112,"author":{"gitId":"shavonneg"},"content":"        Index targetIndex \u003d INDEX_SECOND_ORDER;","lastModifiedDate":"2024-03-29"},{"lineNumber":113,"author":{"gitId":"shavonneg"},"content":"        EditOrderCommand editOrderCommand \u003d new EditOrderCommand(targetIndex,","lastModifiedDate":"2024-03-29"},{"lineNumber":114,"author":{"gitId":"shavonneg"},"content":"                new EditOrderCommand.EditOrderDescriptor());","lastModifiedDate":"2024-03-29"},{"lineNumber":115,"author":{"gitId":"shavonneg"},"content":"        assertThrows(CommandException.class, () -\u003e editOrderCommand.execute(modelStub));","lastModifiedDate":"2024-03-29"},{"lineNumber":116,"author":{"gitId":"shavonneg"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":117,"author":{"gitId":"shavonneg"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":118,"author":{"gitId":"shavonneg"},"content":"    /**","lastModifiedDate":"2024-03-29"},{"lineNumber":119,"author":{"gitId":"shavonneg"},"content":"     * A default model stub that have all of the methods failing.","lastModifiedDate":"2024-03-29"},{"lineNumber":120,"author":{"gitId":"shavonneg"},"content":"     */","lastModifiedDate":"2024-03-29"},{"lineNumber":121,"author":{"gitId":"shavonneg"},"content":"    private class ModelStub implements Model {","lastModifiedDate":"2024-03-29"},{"lineNumber":122,"author":{"gitId":"shavonneg"},"content":"        @Override","lastModifiedDate":"2024-03-29"},{"lineNumber":123,"author":{"gitId":"shavonneg"},"content":"        public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2024-03-29"},{"lineNumber":124,"author":{"gitId":"shavonneg"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-03-29"},{"lineNumber":125,"author":{"gitId":"shavonneg"},"content":"        }","lastModifiedDate":"2024-03-29"},{"lineNumber":126,"author":{"gitId":"shavonneg"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":127,"author":{"gitId":"shavonneg"},"content":"        @Override","lastModifiedDate":"2024-03-29"},{"lineNumber":128,"author":{"gitId":"shavonneg"},"content":"        public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2024-03-29"},{"lineNumber":129,"author":{"gitId":"shavonneg"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-03-29"},{"lineNumber":130,"author":{"gitId":"shavonneg"},"content":"        }","lastModifiedDate":"2024-03-29"},{"lineNumber":131,"author":{"gitId":"shavonneg"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":132,"author":{"gitId":"shavonneg"},"content":"        @Override","lastModifiedDate":"2024-03-29"},{"lineNumber":133,"author":{"gitId":"shavonneg"},"content":"        public GuiSettings getGuiSettings() {","lastModifiedDate":"2024-03-29"},{"lineNumber":134,"author":{"gitId":"shavonneg"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-03-29"},{"lineNumber":135,"author":{"gitId":"shavonneg"},"content":"        }","lastModifiedDate":"2024-03-29"},{"lineNumber":136,"author":{"gitId":"shavonneg"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":137,"author":{"gitId":"shavonneg"},"content":"        @Override","lastModifiedDate":"2024-03-29"},{"lineNumber":138,"author":{"gitId":"shavonneg"},"content":"        public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2024-03-29"},{"lineNumber":139,"author":{"gitId":"shavonneg"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-03-29"},{"lineNumber":140,"author":{"gitId":"shavonneg"},"content":"        }","lastModifiedDate":"2024-03-29"},{"lineNumber":141,"author":{"gitId":"shavonneg"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":142,"author":{"gitId":"shavonneg"},"content":"        @Override","lastModifiedDate":"2024-03-29"},{"lineNumber":143,"author":{"gitId":"shavonneg"},"content":"        public Path getAddressBookFilePath() {","lastModifiedDate":"2024-03-29"},{"lineNumber":144,"author":{"gitId":"shavonneg"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-03-29"},{"lineNumber":145,"author":{"gitId":"shavonneg"},"content":"        }","lastModifiedDate":"2024-03-29"},{"lineNumber":146,"author":{"gitId":"shavonneg"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":147,"author":{"gitId":"shavonneg"},"content":"        @Override","lastModifiedDate":"2024-03-29"},{"lineNumber":148,"author":{"gitId":"shavonneg"},"content":"        public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2024-03-29"},{"lineNumber":149,"author":{"gitId":"shavonneg"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-03-29"},{"lineNumber":150,"author":{"gitId":"shavonneg"},"content":"        }","lastModifiedDate":"2024-03-29"},{"lineNumber":151,"author":{"gitId":"shavonneg"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":152,"author":{"gitId":"shavonneg"},"content":"        @Override","lastModifiedDate":"2024-03-29"},{"lineNumber":153,"author":{"gitId":"Jaspertzx"},"content":"        public void addClient(Client client) {","lastModifiedDate":"2024-04-14"},{"lineNumber":154,"author":{"gitId":"shavonneg"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-03-29"},{"lineNumber":155,"author":{"gitId":"shavonneg"},"content":"        }","lastModifiedDate":"2024-03-29"},{"lineNumber":156,"author":{"gitId":"shavonneg"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":157,"author":{"gitId":"shavonneg"},"content":"        @Override","lastModifiedDate":"2024-03-29"},{"lineNumber":158,"author":{"gitId":"Jaspertzx"},"content":"        public ReadOnlyBookKeeper getAddressBook() {","lastModifiedDate":"2024-04-14"},{"lineNumber":159,"author":{"gitId":"shavonneg"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-03-29"},{"lineNumber":160,"author":{"gitId":"shavonneg"},"content":"        }","lastModifiedDate":"2024-03-29"},{"lineNumber":161,"author":{"gitId":"shavonneg"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":162,"author":{"gitId":"shavonneg"},"content":"        @Override","lastModifiedDate":"2024-03-29"},{"lineNumber":163,"author":{"gitId":"Jaspertzx"},"content":"        public void setAddressBook(ReadOnlyBookKeeper newData) {","lastModifiedDate":"2024-04-14"},{"lineNumber":164,"author":{"gitId":"shavonneg"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-03-29"},{"lineNumber":165,"author":{"gitId":"shavonneg"},"content":"        }","lastModifiedDate":"2024-03-29"},{"lineNumber":166,"author":{"gitId":"shavonneg"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":167,"author":{"gitId":"shavonneg"},"content":"        @Override","lastModifiedDate":"2024-03-29"},{"lineNumber":168,"author":{"gitId":"Jaspertzx"},"content":"        public boolean hasClient(Client client) {","lastModifiedDate":"2024-04-14"},{"lineNumber":169,"author":{"gitId":"shavonneg"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-03-29"},{"lineNumber":170,"author":{"gitId":"shavonneg"},"content":"        }","lastModifiedDate":"2024-03-29"},{"lineNumber":171,"author":{"gitId":"shavonneg"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":172,"author":{"gitId":"shavonneg"},"content":"        @Override","lastModifiedDate":"2024-03-29"},{"lineNumber":173,"author":{"gitId":"Jaspertzx"},"content":"        public void deleteClient(Client target) {","lastModifiedDate":"2024-04-14"},{"lineNumber":174,"author":{"gitId":"shavonneg"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-03-29"},{"lineNumber":175,"author":{"gitId":"shavonneg"},"content":"        }","lastModifiedDate":"2024-03-29"},{"lineNumber":176,"author":{"gitId":"shavonneg"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":177,"author":{"gitId":"shavonneg"},"content":"        @Override","lastModifiedDate":"2024-03-29"},{"lineNumber":178,"author":{"gitId":"Jaspertzx"},"content":"        public void setClient(Client target, Client editedClient) {","lastModifiedDate":"2024-04-14"},{"lineNumber":179,"author":{"gitId":"shavonneg"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-03-29"},{"lineNumber":180,"author":{"gitId":"shavonneg"},"content":"        }","lastModifiedDate":"2024-03-29"},{"lineNumber":181,"author":{"gitId":"shavonneg"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":182,"author":{"gitId":"shavonneg"},"content":"        @Override","lastModifiedDate":"2024-03-29"},{"lineNumber":183,"author":{"gitId":"Jaspertzx"},"content":"        public void setClientAndAddOrder(Client target, Client editedClient, Order order) {","lastModifiedDate":"2024-04-14"},{"lineNumber":184,"author":{"gitId":"shavonneg"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-03-29"},{"lineNumber":185,"author":{"gitId":"shavonneg"},"content":"        }","lastModifiedDate":"2024-03-29"},{"lineNumber":186,"author":{"gitId":"shavonneg"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":187,"author":{"gitId":"shavonneg"},"content":"        @Override","lastModifiedDate":"2024-03-29"},{"lineNumber":188,"author":{"gitId":"Jaspertzx"},"content":"        public void setClientAndDeleteOrder(Client target, Client editedClient, Order order) {","lastModifiedDate":"2024-04-14"},{"lineNumber":189,"author":{"gitId":"shavonneg"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-03-29"},{"lineNumber":190,"author":{"gitId":"shavonneg"},"content":"        }","lastModifiedDate":"2024-03-29"},{"lineNumber":191,"author":{"gitId":"shavonneg"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":192,"author":{"gitId":"shavonneg"},"content":"        @Override","lastModifiedDate":"2024-03-29"},{"lineNumber":193,"author":{"gitId":"Jaspertzx"},"content":"        public void setClientAndEditOrder(Client target, Client editedClient, Order order, Order editedOrder) {","lastModifiedDate":"2024-04-14"},{"lineNumber":194,"author":{"gitId":"shavonneg"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-03-29"},{"lineNumber":195,"author":{"gitId":"shavonneg"},"content":"        }","lastModifiedDate":"2024-03-29"},{"lineNumber":196,"author":{"gitId":"shavonneg"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":197,"author":{"gitId":"shavonneg"},"content":"        @Override","lastModifiedDate":"2024-03-29"},{"lineNumber":198,"author":{"gitId":"Jaspertzx"},"content":"        public ObservableList\u003cClient\u003e getFilteredClientList() {","lastModifiedDate":"2024-04-14"},{"lineNumber":199,"author":{"gitId":"shavonneg"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-03-29"},{"lineNumber":200,"author":{"gitId":"shavonneg"},"content":"        }","lastModifiedDate":"2024-03-29"},{"lineNumber":201,"author":{"gitId":"shavonneg"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":202,"author":{"gitId":"shavonneg"},"content":"        @Override","lastModifiedDate":"2024-03-29"},{"lineNumber":203,"author":{"gitId":"shavonneg"},"content":"        public ObservableList\u003cOrder\u003e getFilteredOrderList() {","lastModifiedDate":"2024-03-29"},{"lineNumber":204,"author":{"gitId":"shavonneg"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-03-29"},{"lineNumber":205,"author":{"gitId":"shavonneg"},"content":"        }","lastModifiedDate":"2024-03-29"},{"lineNumber":206,"author":{"gitId":"shavonneg"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":207,"author":{"gitId":"shavonneg"},"content":"        @Override","lastModifiedDate":"2024-03-29"},{"lineNumber":208,"author":{"gitId":"Jaspertzx"},"content":"        public void updateFilteredClientList(Predicate\u003cClient\u003e predicate) {","lastModifiedDate":"2024-04-14"},{"lineNumber":209,"author":{"gitId":"shavonneg"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-03-29"},{"lineNumber":210,"author":{"gitId":"shavonneg"},"content":"        }","lastModifiedDate":"2024-03-29"},{"lineNumber":211,"author":{"gitId":"shavonneg"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":212,"author":{"gitId":"shavonneg"},"content":"        @Override","lastModifiedDate":"2024-03-29"},{"lineNumber":213,"author":{"gitId":"shavonneg"},"content":"        public void updateFilteredOrderList(Predicate\u003cOrder\u003e predicate) {","lastModifiedDate":"2024-03-29"},{"lineNumber":214,"author":{"gitId":"shavonneg"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-03-29"},{"lineNumber":215,"author":{"gitId":"shavonneg"},"content":"        }","lastModifiedDate":"2024-03-29"},{"lineNumber":216,"author":{"gitId":"shavonneg"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":217,"author":{"gitId":"shavonneg"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":218,"author":{"gitId":"shavonneg"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":219,"author":{"gitId":"shavonneg"},"content":"    /**","lastModifiedDate":"2024-03-29"},{"lineNumber":220,"author":{"gitId":"shavonneg"},"content":"     * A Model stub that always accepts the order being added.","lastModifiedDate":"2024-03-29"},{"lineNumber":221,"author":{"gitId":"shavonneg"},"content":"     */","lastModifiedDate":"2024-03-29"},{"lineNumber":222,"author":{"gitId":"Jaspertzx"},"content":"    private class ModelStubEditingOrder extends seedu.address.logic.commands.order.EditOrderCommandTest.ModelStub {","lastModifiedDate":"2024-04-14"},{"lineNumber":223,"author":{"gitId":"shavonneg"},"content":"        private Order order;","lastModifiedDate":"2024-03-29"},{"lineNumber":224,"author":{"gitId":"Jaspertzx"},"content":"        private Client client;","lastModifiedDate":"2024-04-14"},{"lineNumber":225,"author":{"gitId":"shavonneg"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":226,"author":{"gitId":"Jaspertzx"},"content":"        ModelStubEditingOrder(Order order, Client client) {","lastModifiedDate":"2024-04-14"},{"lineNumber":227,"author":{"gitId":"shavonneg"},"content":"            requireNonNull(order);","lastModifiedDate":"2024-03-29"},{"lineNumber":228,"author":{"gitId":"shavonneg"},"content":"            this.order \u003d order;","lastModifiedDate":"2024-03-29"},{"lineNumber":229,"author":{"gitId":"Jaspertzx"},"content":"            this.client \u003d client;","lastModifiedDate":"2024-04-14"},{"lineNumber":230,"author":{"gitId":"shavonneg"},"content":"        }","lastModifiedDate":"2024-03-29"},{"lineNumber":231,"author":{"gitId":"shavonneg"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":232,"author":{"gitId":"shavonneg"},"content":"        @Override","lastModifiedDate":"2024-03-29"},{"lineNumber":233,"author":{"gitId":"Jaspertzx"},"content":"        public void setClient(Client target, Client editedClient) {","lastModifiedDate":"2024-04-14"},{"lineNumber":234,"author":{"gitId":"Jaspertzx"},"content":"            requireAllNonNull(target, editedClient);","lastModifiedDate":"2024-04-14"},{"lineNumber":235,"author":{"gitId":"Jaspertzx"},"content":"            this.client \u003d editedClient;","lastModifiedDate":"2024-04-14"},{"lineNumber":236,"author":{"gitId":"shavonneg"},"content":"        }","lastModifiedDate":"2024-03-29"},{"lineNumber":237,"author":{"gitId":"shavonneg"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":238,"author":{"gitId":"shavonneg"},"content":"        @Override","lastModifiedDate":"2024-03-29"},{"lineNumber":239,"author":{"gitId":"Jaspertzx"},"content":"        public void setClientAndAddOrder(Client target, Client editedClient, Order order) {","lastModifiedDate":"2024-04-14"},{"lineNumber":240,"author":{"gitId":"Jaspertzx"},"content":"            requireAllNonNull(target, editedClient);","lastModifiedDate":"2024-04-14"},{"lineNumber":241,"author":{"gitId":"Jaspertzx"},"content":"            this.client \u003d editedClient;","lastModifiedDate":"2024-04-14"},{"lineNumber":242,"author":{"gitId":"shavonneg"},"content":"        }","lastModifiedDate":"2024-03-29"},{"lineNumber":243,"author":{"gitId":"shavonneg"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":244,"author":{"gitId":"shavonneg"},"content":"        @Override","lastModifiedDate":"2024-03-29"},{"lineNumber":245,"author":{"gitId":"Jaspertzx"},"content":"        public void setClientAndDeleteOrder(Client target, Client editedClient, Order order) {","lastModifiedDate":"2024-04-14"},{"lineNumber":246,"author":{"gitId":"Jaspertzx"},"content":"            requireAllNonNull(target, editedClient, order);","lastModifiedDate":"2024-04-14"},{"lineNumber":247,"author":{"gitId":"Jaspertzx"},"content":"            this.client \u003d editedClient;","lastModifiedDate":"2024-04-14"},{"lineNumber":248,"author":{"gitId":"shavonneg"},"content":"        }","lastModifiedDate":"2024-03-29"},{"lineNumber":249,"author":{"gitId":"shavonneg"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":250,"author":{"gitId":"shavonneg"},"content":"        @Override","lastModifiedDate":"2024-03-29"},{"lineNumber":251,"author":{"gitId":"Jaspertzx"},"content":"        public ObservableList\u003cClient\u003e getFilteredClientList() {","lastModifiedDate":"2024-04-14"},{"lineNumber":252,"author":{"gitId":"Jaspertzx"},"content":"            List\u003cClient\u003e sampleList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-04-14"},{"lineNumber":253,"author":{"gitId":"Jaspertzx"},"content":"            sampleList.add(this.client);","lastModifiedDate":"2024-04-14"},{"lineNumber":254,"author":{"gitId":"Jaspertzx"},"content":"            ObservableList\u003cClient\u003e clientList \u003d FXCollections.observableArrayList(sampleList);","lastModifiedDate":"2024-04-14"},{"lineNumber":255,"author":{"gitId":"Jaspertzx"},"content":"            return clientList;","lastModifiedDate":"2024-04-14"},{"lineNumber":256,"author":{"gitId":"shavonneg"},"content":"        }","lastModifiedDate":"2024-03-29"},{"lineNumber":257,"author":{"gitId":"shavonneg"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":258,"author":{"gitId":"shavonneg"},"content":"        @Override","lastModifiedDate":"2024-03-29"},{"lineNumber":259,"author":{"gitId":"shavonneg"},"content":"        public ObservableList\u003cOrder\u003e getFilteredOrderList() {","lastModifiedDate":"2024-03-29"},{"lineNumber":260,"author":{"gitId":"shavonneg"},"content":"            List\u003cOrder\u003e sampleList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-03-29"},{"lineNumber":261,"author":{"gitId":"shavonneg"},"content":"            sampleList.add(this.order);","lastModifiedDate":"2024-03-29"},{"lineNumber":262,"author":{"gitId":"shavonneg"},"content":"            ObservableList\u003cOrder\u003e orderList \u003d FXCollections.observableArrayList(sampleList);","lastModifiedDate":"2024-03-29"},{"lineNumber":263,"author":{"gitId":"shavonneg"},"content":"            return orderList;","lastModifiedDate":"2024-03-29"},{"lineNumber":264,"author":{"gitId":"shavonneg"},"content":"        }","lastModifiedDate":"2024-03-29"},{"lineNumber":265,"author":{"gitId":"shavonneg"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":266,"author":{"gitId":"shavonneg"},"content":"        private ObservableList\u003cOrder\u003e getOrderList() {","lastModifiedDate":"2024-03-29"},{"lineNumber":267,"author":{"gitId":"Jaspertzx"},"content":"            ObservableList\u003cOrder\u003e orderList \u003d FXCollections.observableArrayList(this.client.getOrders());","lastModifiedDate":"2024-04-14"},{"lineNumber":268,"author":{"gitId":"shavonneg"},"content":"            return orderList;","lastModifiedDate":"2024-03-29"},{"lineNumber":269,"author":{"gitId":"shavonneg"},"content":"        }","lastModifiedDate":"2024-03-29"},{"lineNumber":270,"author":{"gitId":"shavonneg"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":271,"author":{"gitId":"shavonneg"},"content":"        @Override","lastModifiedDate":"2024-03-29"},{"lineNumber":272,"author":{"gitId":"Jaspertzx"},"content":"        public ReadOnlyBookKeeper getAddressBook() {","lastModifiedDate":"2024-04-14"},{"lineNumber":273,"author":{"gitId":"Jaspertzx"},"content":"            BookKeeper bookKeeper \u003d new BookKeeper();","lastModifiedDate":"2024-04-14"},{"lineNumber":274,"author":{"gitId":"Jaspertzx"},"content":"            bookKeeper.addClient(this.client);","lastModifiedDate":"2024-04-14"},{"lineNumber":275,"author":{"gitId":"Jaspertzx"},"content":"            return bookKeeper;","lastModifiedDate":"2024-04-14"},{"lineNumber":276,"author":{"gitId":"shavonneg"},"content":"        }","lastModifiedDate":"2024-03-29"},{"lineNumber":277,"author":{"gitId":"shavonneg"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":278,"author":{"gitId":"shavonneg"},"content":"        @Override","lastModifiedDate":"2024-03-29"},{"lineNumber":279,"author":{"gitId":"shavonneg"},"content":"        public void updateFilteredOrderList(Predicate\u003cOrder\u003e predicate) {","lastModifiedDate":"2024-03-29"},{"lineNumber":280,"author":{"gitId":"shavonneg"},"content":"            requireNonNull(predicate);","lastModifiedDate":"2024-03-29"},{"lineNumber":281,"author":{"gitId":"shavonneg"},"content":"        }","lastModifiedDate":"2024-03-29"},{"lineNumber":282,"author":{"gitId":"shavonneg"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":283,"author":{"gitId":"shavonneg"},"content":"}","lastModifiedDate":"2024-03-29"}],"authorContributionMap":{"shavonneg":232,"Jaspertzx":51}},{"path":"src/test/java/seedu/address/logic/parser/BookKeeperParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-05-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-07-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2023-07-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2017-06-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":16,"author":{"gitId":"Jaspertzx"},"content":"import seedu.address.logic.commands.client.AddCommand;","lastModifiedDate":"2024-04-14"},{"lineNumber":17,"author":{"gitId":"Jaspertzx"},"content":"import seedu.address.logic.commands.client.ClearCommand;","lastModifiedDate":"2024-04-14"},{"lineNumber":18,"author":{"gitId":"Jaspertzx"},"content":"import seedu.address.logic.commands.client.DeleteCommand;","lastModifiedDate":"2024-04-14"},{"lineNumber":19,"author":{"gitId":"Jaspertzx"},"content":"import seedu.address.logic.commands.client.EditCommand;","lastModifiedDate":"2024-04-14"},{"lineNumber":20,"author":{"gitId":"Jaspertzx"},"content":"import seedu.address.logic.commands.client.ExitCommand;","lastModifiedDate":"2024-04-14"},{"lineNumber":21,"author":{"gitId":"Jaspertzx"},"content":"import seedu.address.logic.commands.client.FindCommand;","lastModifiedDate":"2024-04-14"},{"lineNumber":22,"author":{"gitId":"Jaspertzx"},"content":"import seedu.address.logic.commands.client.HelpCommand;","lastModifiedDate":"2024-04-14"},{"lineNumber":23,"author":{"gitId":"Jaspertzx"},"content":"import seedu.address.logic.commands.client.ListCommand;","lastModifiedDate":"2024-04-14"},{"lineNumber":24,"author":{"gitId":"Jaspertzx"},"content":"import seedu.address.logic.commands.order.AddOrderCommand;","lastModifiedDate":"2024-04-14"},{"lineNumber":25,"author":{"gitId":"Jaspertzx"},"content":"import seedu.address.logic.commands.order.DeleteOrderCommand;","lastModifiedDate":"2024-04-14"},{"lineNumber":26,"author":{"gitId":"Jaspertzx"},"content":"import seedu.address.logic.commands.order.EditOrderCommand;","lastModifiedDate":"2024-04-14"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-05-24"},{"lineNumber":28,"author":{"gitId":"Jaspertzx"},"content":"import seedu.address.model.client.Client;","lastModifiedDate":"2024-04-14"},{"lineNumber":29,"author":{"gitId":"Jaspertzx"},"content":"import seedu.address.model.client.NameContainsKeywordsPredicate;","lastModifiedDate":"2024-04-14"},{"lineNumber":30,"author":{"gitId":"Jaspertzx"},"content":"import seedu.address.testutil.ClientBuilder;","lastModifiedDate":"2024-04-14"},{"lineNumber":31,"author":{"gitId":"Jaspertzx"},"content":"import seedu.address.testutil.ClientUtil;","lastModifiedDate":"2024-04-14"},{"lineNumber":32,"author":{"gitId":"Jaspertzx"},"content":"import seedu.address.testutil.EditClientDescriptorBuilder;","lastModifiedDate":"2024-04-14"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":34,"author":{"gitId":"Jaspertzx"},"content":"public class BookKeeperParserTest {","lastModifiedDate":"2024-04-14"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":36,"author":{"gitId":"Jaspertzx"},"content":"    private final BookKeeperParser parser \u003d new BookKeeperParser();","lastModifiedDate":"2024-04-14"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public void parseCommand_add() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":40,"author":{"gitId":"Jaspertzx"},"content":"        Client client \u003d new ClientBuilder().build();","lastModifiedDate":"2024-04-14"},{"lineNumber":41,"author":{"gitId":"Jaspertzx"},"content":"        AddCommand command \u003d (AddCommand) parser.parseCommand(ClientUtil.getAddCommand(client));","lastModifiedDate":"2024-04-14"},{"lineNumber":42,"author":{"gitId":"Jaspertzx"},"content":"        assertEquals(new AddCommand(client), command);","lastModifiedDate":"2024-04-14"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public void parseCommand_clear() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ClearCommand.COMMAND_WORD) instanceof ClearCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ClearCommand.COMMAND_WORD + \" 3\") instanceof ClearCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public void parseCommand_delete() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        DeleteCommand command \u003d (DeleteCommand) parser.parseCommand(","lastModifiedDate":"2017-06-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"                DeleteCommand.COMMAND_WORD + \" \" + INDEX_FIRST_PERSON.getOneBased());","lastModifiedDate":"2017-06-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        assertEquals(new DeleteCommand(INDEX_FIRST_PERSON), command);","lastModifiedDate":"2017-06-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public void parseCommand_edit() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":60,"author":{"gitId":"Jaspertzx"},"content":"        Client client \u003d new ClientBuilder().build();","lastModifiedDate":"2024-04-14"},{"lineNumber":61,"author":{"gitId":"Jaspertzx"},"content":"        EditCommand.EditClientDescriptor descriptor \u003d new EditClientDescriptorBuilder(client).build();","lastModifiedDate":"2024-04-14"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        EditCommand command \u003d (EditCommand) parser.parseCommand(EditCommand.COMMAND_WORD + \" \"","lastModifiedDate":"2017-06-27"},{"lineNumber":63,"author":{"gitId":"Jaspertzx"},"content":"                + INDEX_FIRST_PERSON.getOneBased() + \" \" + ClientUtil.getEditPersonDescriptorDetails(descriptor));","lastModifiedDate":"2024-04-14"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertEquals(new EditCommand(INDEX_FIRST_PERSON, descriptor), command);","lastModifiedDate":"2017-06-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public void parseCommand_exit() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ExitCommand.COMMAND_WORD) instanceof ExitCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ExitCommand.COMMAND_WORD + \" 3\") instanceof ExitCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public void parseCommand_find() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        List\u003cString\u003e keywords \u003d Arrays.asList(\"foo\", \"bar\", \"baz\");","lastModifiedDate":"2017-06-12"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        FindCommand command \u003d (FindCommand) parser.parseCommand(","lastModifiedDate":"2017-06-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"                FindCommand.COMMAND_WORD + \" \" + keywords.stream().collect(Collectors.joining(\" \")));","lastModifiedDate":"2017-06-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertEquals(new FindCommand(new NameContainsKeywordsPredicate(keywords)), command);","lastModifiedDate":"2017-06-12"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public void parseCommand_help() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(HelpCommand.COMMAND_WORD) instanceof HelpCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(HelpCommand.COMMAND_WORD + \" 3\") instanceof HelpCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public void parseCommand_list() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ListCommand.COMMAND_WORD) instanceof ListCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ListCommand.COMMAND_WORD + \" 3\") instanceof ListCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":93,"author":{"gitId":"Jaspertzx"},"content":"    @Test","lastModifiedDate":"2024-03-19"},{"lineNumber":94,"author":{"gitId":"Jaspertzx"},"content":"    public void parseCommand_createOrder() throws Exception {","lastModifiedDate":"2024-03-19"},{"lineNumber":95,"author":{"gitId":"Jaspertzx"},"content":"        String remarks \u003d \" d/1xRoses\";","lastModifiedDate":"2024-03-19"},{"lineNumber":96,"author":{"gitId":"Jaspertzx"},"content":"        String cost \u003d \" c/100\";","lastModifiedDate":"2024-03-19"},{"lineNumber":97,"author":{"gitId":"Jaspertzx"},"content":"        String date \u003d \" by/10-10-2024 00:00\";","lastModifiedDate":"2024-03-19"},{"lineNumber":98,"author":{"gitId":"Jaspertzx"},"content":"        assertTrue(parser.parseCommand(AddOrderCommand.COMMAND_WORD + \" 1\"","lastModifiedDate":"2024-03-20"},{"lineNumber":99,"author":{"gitId":"Jaspertzx"},"content":"                + remarks + cost + date) instanceof AddOrderCommand);","lastModifiedDate":"2024-03-19"},{"lineNumber":100,"author":{"gitId":"Jaspertzx"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":101,"author":{"gitId":"Jaspertzx"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":102,"author":{"gitId":"Jaspertzx"},"content":"    @Test","lastModifiedDate":"2024-03-19"},{"lineNumber":103,"author":{"gitId":"Jaspertzx"},"content":"    public void parseCommand_deleteOrder() throws Exception {","lastModifiedDate":"2024-03-19"},{"lineNumber":104,"author":{"gitId":"rertyy"},"content":"        // OrderBuilder builder \u003d new OrderBuilder();","lastModifiedDate":"2024-03-26"},{"lineNumber":105,"author":{"gitId":"rertyy"},"content":"        // OrderId orderId \u003d builder.build().getOrderId();","lastModifiedDate":"2024-03-26"},{"lineNumber":106,"author":{"gitId":"rertyy"},"content":"        assertTrue(","lastModifiedDate":"2024-03-23"},{"lineNumber":107,"author":{"gitId":"rertyy"},"content":"                parser.parseCommand(DeleteOrderCommand.COMMAND_WORD + \" 1\")","lastModifiedDate":"2024-03-26"},{"lineNumber":108,"author":{"gitId":"rertyy"},"content":"                        instanceof DeleteOrderCommand);","lastModifiedDate":"2024-03-23"},{"lineNumber":109,"author":{"gitId":"Jaspertzx"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":110,"author":{"gitId":"Jaspertzx"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":111,"author":{"gitId":"shavonneg"},"content":"    @Test","lastModifiedDate":"2024-03-30"},{"lineNumber":112,"author":{"gitId":"shavonneg"},"content":"    public void parseCommand_editOrder() throws Exception {","lastModifiedDate":"2024-03-30"},{"lineNumber":113,"author":{"gitId":"shavonneg"},"content":"        String remarks \u003d \" d/ 1xRoses\";","lastModifiedDate":"2024-03-30"},{"lineNumber":114,"author":{"gitId":"shavonneg"},"content":"        String price \u003d \" c/ 40\";","lastModifiedDate":"2024-03-30"},{"lineNumber":115,"author":{"gitId":"shavonneg"},"content":"        String deadline \u003d \" by/ 23-07-2024 10:10\";","lastModifiedDate":"2024-03-30"},{"lineNumber":116,"author":{"gitId":"shavonneg"},"content":"        String status \u003d \" s/ PENDING\";","lastModifiedDate":"2024-03-30"},{"lineNumber":117,"author":{"gitId":"shavonneg"},"content":"        assertTrue(parser.parseCommand(EditOrderCommand.COMMAND_WORD + \" 1\"","lastModifiedDate":"2024-03-30"},{"lineNumber":118,"author":{"gitId":"shavonneg"},"content":"                + deadline + price + remarks + status) instanceof EditOrderCommand);","lastModifiedDate":"2024-03-30"},{"lineNumber":119,"author":{"gitId":"shavonneg"},"content":"    }","lastModifiedDate":"2024-03-30"},{"lineNumber":120,"author":{"gitId":"shavonneg"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    public void parseCommand_unrecognisedInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE), ()","lastModifiedDate":"2019-03-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"                -\u003e parser.parseCommand(\"\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    public void parseCommand_unknownCommand_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, MESSAGE_UNKNOWN_COMMAND, () -\u003e parser.parseCommand(\"unknownCommand\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":131,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-24"}],"authorContributionMap":{"shavonneg":10,"rertyy":5,"Jaspertzx":37,"-":79}},{"path":"src/test/java/seedu/address/logic/parser/ParserUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-05-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"Jaspertzx"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2024-03-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.ParserUtil.MESSAGE_INVALID_INDEX;","lastModifiedDate":"2017-06-02"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-05-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-05-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-05-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2018-07-10"},{"lineNumber":18,"author":{"gitId":"Jaspertzx"},"content":"import seedu.address.model.client.Address;","lastModifiedDate":"2024-04-14"},{"lineNumber":19,"author":{"gitId":"Jaspertzx"},"content":"import seedu.address.model.client.Email;","lastModifiedDate":"2024-04-14"},{"lineNumber":20,"author":{"gitId":"Jaspertzx"},"content":"import seedu.address.model.client.Name;","lastModifiedDate":"2024-04-14"},{"lineNumber":21,"author":{"gitId":"Jaspertzx"},"content":"import seedu.address.model.client.Phone;","lastModifiedDate":"2024-04-14"},{"lineNumber":22,"author":{"gitId":"shavonneg"},"content":"import seedu.address.model.order.Deadline;","lastModifiedDate":"2024-03-30"},{"lineNumber":23,"author":{"gitId":"Jaspertzx"},"content":"import seedu.address.model.order.OrderId;","lastModifiedDate":"2024-03-19"},{"lineNumber":24,"author":{"gitId":"shavonneg"},"content":"import seedu.address.model.order.Price;","lastModifiedDate":"2024-03-30"},{"lineNumber":25,"author":{"gitId":"shavonneg"},"content":"import seedu.address.model.order.Remark;","lastModifiedDate":"2024-03-30"},{"lineNumber":26,"author":{"gitId":"shavonneg"},"content":"import seedu.address.model.order.Status;","lastModifiedDate":"2024-03-30"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-05-22"},{"lineNumber":28,"author":{"gitId":"Jaspertzx"},"content":"import seedu.address.testutil.OrderBuilder;","lastModifiedDate":"2024-03-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":30,"author":{"gitId":"-"},"content":"public class ParserUtilTest {","lastModifiedDate":"2017-05-22"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private static final String INVALID_NAME \u003d \"R@chel\";","lastModifiedDate":"2017-05-22"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private static final String INVALID_PHONE \u003d \"+651234\";","lastModifiedDate":"2017-05-22"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private static final String INVALID_ADDRESS \u003d \" \";","lastModifiedDate":"2017-05-22"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private static final String INVALID_EMAIL \u003d \"example.com\";","lastModifiedDate":"2017-05-22"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private static final String INVALID_TAG \u003d \"#friend\";","lastModifiedDate":"2017-05-22"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private static final String VALID_NAME \u003d \"Rachel Walker\";","lastModifiedDate":"2017-05-22"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private static final String VALID_PHONE \u003d \"123456\";","lastModifiedDate":"2017-05-22"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    private static final String VALID_ADDRESS \u003d \"123 Main Street #0505\";","lastModifiedDate":"2017-05-22"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private static final String VALID_EMAIL \u003d \"rachel@example.com\";","lastModifiedDate":"2017-05-22"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    private static final String VALID_TAG_1 \u003d \"friend\";","lastModifiedDate":"2017-05-22"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    private static final String VALID_TAG_2 \u003d \"neighbour\";","lastModifiedDate":"2017-05-22"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    private static final String WHITESPACE \u003d \" \\t\\r\\n\";","lastModifiedDate":"2017-05-29"},{"lineNumber":45,"author":{"gitId":"shavonneg"},"content":"    private static final String INVALID_DEADLINE \u003d \"123456\";","lastModifiedDate":"2024-03-30"},{"lineNumber":46,"author":{"gitId":"shavonneg"},"content":"    private static final String INVALID_PRICE \u003d \"ab\";","lastModifiedDate":"2024-03-30"},{"lineNumber":47,"author":{"gitId":"shavonneg"},"content":"    private static final String INVALID_REMARK \u003d \" \";","lastModifiedDate":"2024-03-30"},{"lineNumber":48,"author":{"gitId":"shavonneg"},"content":"    private static final String INVALID_STATUS \u003d \"ALMOST\";","lastModifiedDate":"2024-03-30"},{"lineNumber":49,"author":{"gitId":"shavonneg"},"content":"    private static final String VALID_DEADLINE \u003d \"23-07-2024 10:23\";","lastModifiedDate":"2024-03-30"},{"lineNumber":50,"author":{"gitId":"shavonneg"},"content":"    private static final String VALID_PRICE \u003d \"40\";","lastModifiedDate":"2024-03-30"},{"lineNumber":51,"author":{"gitId":"shavonneg"},"content":"    private static final String VALID_REMARK \u003d \"1xRoses\";","lastModifiedDate":"2024-03-30"},{"lineNumber":52,"author":{"gitId":"shavonneg"},"content":"    private static final String VALID_STATUS \u003d \"PENDING\";","lastModifiedDate":"2024-03-30"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-29"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public void parseIndex_invalidInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseIndex(\"10 a\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public void parseIndex_outOfRangeInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, MESSAGE_INVALID_INDEX, ()","lastModifiedDate":"2019-03-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"                -\u003e ParserUtil.parseIndex(Long.toString(Integer.MAX_VALUE + 1)));","lastModifiedDate":"2019-03-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public void parseIndex_validInput_success() throws Exception {","lastModifiedDate":"2017-05-26"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        // No whitespaces","lastModifiedDate":"2017-05-26"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertEquals(INDEX_FIRST_PERSON, ParserUtil.parseIndex(\"1\"));","lastModifiedDate":"2017-05-25"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        // Leading and trailing whitespaces","lastModifiedDate":"2017-05-26"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        assertEquals(INDEX_FIRST_PERSON, ParserUtil.parseIndex(\"  1  \"));","lastModifiedDate":"2017-05-25"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public void parseName_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-29"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseName((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public void parseName_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseName(INVALID_NAME));","lastModifiedDate":"2019-03-14"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    public void parseName_validValueWithoutWhitespace_returnsName() throws Exception {","lastModifiedDate":"2017-05-29"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        Name expectedName \u003d new Name(VALID_NAME);","lastModifiedDate":"2017-05-22"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        assertEquals(expectedName, ParserUtil.parseName(VALID_NAME));","lastModifiedDate":"2017-05-29"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-29"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-29"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    public void parseName_validValueWithWhitespace_returnsTrimmedName() throws Exception {","lastModifiedDate":"2017-05-29"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        String nameWithWhitespace \u003d WHITESPACE + VALID_NAME + WHITESPACE;","lastModifiedDate":"2017-05-29"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        Name expectedName \u003d new Name(VALID_NAME);","lastModifiedDate":"2017-05-29"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        assertEquals(expectedName, ParserUtil.parseName(nameWithWhitespace));","lastModifiedDate":"2017-05-29"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    public void parsePhone_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parsePhone((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    public void parsePhone_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parsePhone(INVALID_PHONE));","lastModifiedDate":"2019-03-14"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    public void parsePhone_validValueWithoutWhitespace_returnsPhone() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        Phone expectedPhone \u003d new Phone(VALID_PHONE);","lastModifiedDate":"2017-05-22"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        assertEquals(expectedPhone, ParserUtil.parsePhone(VALID_PHONE));","lastModifiedDate":"2017-05-30"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    public void parsePhone_validValueWithWhitespace_returnsTrimmedPhone() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        String phoneWithWhitespace \u003d WHITESPACE + VALID_PHONE + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        Phone expectedPhone \u003d new Phone(VALID_PHONE);","lastModifiedDate":"2017-05-30"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        assertEquals(expectedPhone, ParserUtil.parsePhone(phoneWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    public void parseAddress_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseAddress((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    public void parseAddress_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseAddress(INVALID_ADDRESS));","lastModifiedDate":"2019-03-14"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    public void parseAddress_validValueWithoutWhitespace_returnsAddress() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        Address expectedAddress \u003d new Address(VALID_ADDRESS);","lastModifiedDate":"2017-05-22"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        assertEquals(expectedAddress, ParserUtil.parseAddress(VALID_ADDRESS));","lastModifiedDate":"2017-05-30"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    public void parseAddress_validValueWithWhitespace_returnsTrimmedAddress() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        String addressWithWhitespace \u003d WHITESPACE + VALID_ADDRESS + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        Address expectedAddress \u003d new Address(VALID_ADDRESS);","lastModifiedDate":"2017-05-30"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        assertEquals(expectedAddress, ParserUtil.parseAddress(addressWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    public void parseEmail_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseEmail((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    public void parseEmail_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseEmail(INVALID_EMAIL));","lastModifiedDate":"2019-03-14"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    public void parseEmail_validValueWithoutWhitespace_returnsEmail() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        Email expectedEmail \u003d new Email(VALID_EMAIL);","lastModifiedDate":"2017-05-22"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        assertEquals(expectedEmail, ParserUtil.parseEmail(VALID_EMAIL));","lastModifiedDate":"2017-05-30"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    public void parseEmail_validValueWithWhitespace_returnsTrimmedEmail() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        String emailWithWhitespace \u003d WHITESPACE + VALID_EMAIL + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        Email expectedEmail \u003d new Email(VALID_EMAIL);","lastModifiedDate":"2017-05-30"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        assertEquals(expectedEmail, ParserUtil.parseEmail(emailWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":167,"author":{"gitId":"-"},"content":"    public void parseTag_null_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseTag(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":171,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    public void parseTag_invalidValue_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseTag(INVALID_TAG));","lastModifiedDate":"2019-03-23"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":175,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":176,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    public void parseTag_validValueWithoutWhitespace_returnsTag() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        Tag expectedTag \u003d new Tag(VALID_TAG_1);","lastModifiedDate":"2017-05-30"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        assertEquals(expectedTag, ParserUtil.parseTag(VALID_TAG_1));","lastModifiedDate":"2017-05-30"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":182,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":183,"author":{"gitId":"-"},"content":"    public void parseTag_validValueWithWhitespace_returnsTrimmedTag() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":184,"author":{"gitId":"-"},"content":"        String tagWithWhitespace \u003d WHITESPACE + VALID_TAG_1 + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":185,"author":{"gitId":"-"},"content":"        Tag expectedTag \u003d new Tag(VALID_TAG_1);","lastModifiedDate":"2017-05-30"},{"lineNumber":186,"author":{"gitId":"-"},"content":"        assertEquals(expectedTag, ParserUtil.parseTag(tagWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":187,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":189,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":190,"author":{"gitId":"-"},"content":"    public void parseTags_null_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":191,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseTags(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":192,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":193,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":194,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":195,"author":{"gitId":"-"},"content":"    public void parseTags_collectionWithInvalidTags_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":196,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseTags(Arrays.asList(VALID_TAG_1, INVALID_TAG)));","lastModifiedDate":"2019-03-23"},{"lineNumber":197,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":198,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":199,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":200,"author":{"gitId":"-"},"content":"    public void parseTags_emptyCollection_returnsEmptySet() throws Exception {","lastModifiedDate":"2017-05-22"},{"lineNumber":201,"author":{"gitId":"-"},"content":"        assertTrue(ParserUtil.parseTags(Collections.emptyList()).isEmpty());","lastModifiedDate":"2017-05-22"},{"lineNumber":202,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":203,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":204,"author":{"gitId":"Jaspertzx"},"content":"    @Test","lastModifiedDate":"2024-03-19"},{"lineNumber":205,"author":{"gitId":"Jaspertzx"},"content":"    public void parseOrderId_invalidId_throwsParseException() {","lastModifiedDate":"2024-03-19"},{"lineNumber":206,"author":{"gitId":"Jaspertzx"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseOrderId((String) null));","lastModifiedDate":"2024-03-19"},{"lineNumber":207,"author":{"gitId":"Jaspertzx"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":208,"author":{"gitId":"Jaspertzx"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":209,"author":{"gitId":"Jaspertzx"},"content":"    @Test","lastModifiedDate":"2024-03-19"},{"lineNumber":210,"author":{"gitId":"Jaspertzx"},"content":"    public void testParseNullOrderId() {","lastModifiedDate":"2024-03-19"},{"lineNumber":211,"author":{"gitId":"Jaspertzx"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseOrderId(null));","lastModifiedDate":"2024-03-19"},{"lineNumber":212,"author":{"gitId":"Jaspertzx"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":213,"author":{"gitId":"Jaspertzx"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":214,"author":{"gitId":"Jaspertzx"},"content":"    @Test","lastModifiedDate":"2024-03-19"},{"lineNumber":215,"author":{"gitId":"Jaspertzx"},"content":"    public void testParseOrderIdWithWhitespaces() throws ParseException {","lastModifiedDate":"2024-03-19"},{"lineNumber":216,"author":{"gitId":"Jaspertzx"},"content":"        OrderBuilder builder \u003d new OrderBuilder();","lastModifiedDate":"2024-03-19"},{"lineNumber":217,"author":{"gitId":"Jaspertzx"},"content":"        String input \u003d \" \" + builder.build().getOrderId().toString() + \" \";","lastModifiedDate":"2024-03-19"},{"lineNumber":218,"author":{"gitId":"Jaspertzx"},"content":"        OrderId result \u003d ParserUtil.parseOrderId(input);","lastModifiedDate":"2024-03-19"},{"lineNumber":219,"author":{"gitId":"Jaspertzx"},"content":"        assertNotNull(result);","lastModifiedDate":"2024-03-19"},{"lineNumber":220,"author":{"gitId":"Jaspertzx"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":221,"author":{"gitId":"Jaspertzx"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":222,"author":{"gitId":"Jaspertzx"},"content":"    @Test","lastModifiedDate":"2024-03-19"},{"lineNumber":223,"author":{"gitId":"Jaspertzx"},"content":"    public void testParseInvalidOrderId() {","lastModifiedDate":"2024-03-19"},{"lineNumber":224,"author":{"gitId":"Jaspertzx"},"content":"        String input \u003d \"123\";","lastModifiedDate":"2024-03-19"},{"lineNumber":225,"author":{"gitId":"kailinteoo"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseOrderId(input));","lastModifiedDate":"2024-03-19"},{"lineNumber":226,"author":{"gitId":"Jaspertzx"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":227,"author":{"gitId":"kailinteoo"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":228,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":229,"author":{"gitId":"-"},"content":"    public void parseTags_collectionWithValidTags_returnsTagSet() throws Exception {","lastModifiedDate":"2017-05-22"},{"lineNumber":230,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e actualTagSet \u003d ParserUtil.parseTags(Arrays.asList(VALID_TAG_1, VALID_TAG_2));","lastModifiedDate":"2017-05-22"},{"lineNumber":231,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e expectedTagSet \u003d new HashSet\u003cTag\u003e(Arrays.asList(new Tag(VALID_TAG_1), new Tag(VALID_TAG_2)));","lastModifiedDate":"2017-05-22"},{"lineNumber":232,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":233,"author":{"gitId":"-"},"content":"        assertEquals(expectedTagSet, actualTagSet);","lastModifiedDate":"2017-05-22"},{"lineNumber":234,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":235,"author":{"gitId":"shavonneg"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":236,"author":{"gitId":"shavonneg"},"content":"    @Test","lastModifiedDate":"2024-03-30"},{"lineNumber":237,"author":{"gitId":"shavonneg"},"content":"    public void parseDeadline_null_throwsNullPointerException() {","lastModifiedDate":"2024-03-30"},{"lineNumber":238,"author":{"gitId":"shavonneg"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseDeadline((String) null));","lastModifiedDate":"2024-03-30"},{"lineNumber":239,"author":{"gitId":"shavonneg"},"content":"    }","lastModifiedDate":"2024-03-30"},{"lineNumber":240,"author":{"gitId":"shavonneg"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":241,"author":{"gitId":"shavonneg"},"content":"    @Test","lastModifiedDate":"2024-03-30"},{"lineNumber":242,"author":{"gitId":"shavonneg"},"content":"    public void parseDeadline_invalidValue_throwsParseException() {","lastModifiedDate":"2024-03-30"},{"lineNumber":243,"author":{"gitId":"shavonneg"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseDeadline(INVALID_DEADLINE));","lastModifiedDate":"2024-03-30"},{"lineNumber":244,"author":{"gitId":"shavonneg"},"content":"    }","lastModifiedDate":"2024-03-30"},{"lineNumber":245,"author":{"gitId":"shavonneg"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":246,"author":{"gitId":"shavonneg"},"content":"    @Test","lastModifiedDate":"2024-03-30"},{"lineNumber":247,"author":{"gitId":"shavonneg"},"content":"    public void parseDeadline_validValueWithoutWhitespace_returnsDeadline() throws Exception {","lastModifiedDate":"2024-03-30"},{"lineNumber":248,"author":{"gitId":"shavonneg"},"content":"        Deadline expectedDeadline \u003d new Deadline(VALID_DEADLINE);","lastModifiedDate":"2024-03-30"},{"lineNumber":249,"author":{"gitId":"shavonneg"},"content":"        assertEquals(expectedDeadline, ParserUtil.parseDeadline(VALID_DEADLINE));","lastModifiedDate":"2024-03-30"},{"lineNumber":250,"author":{"gitId":"shavonneg"},"content":"    }","lastModifiedDate":"2024-03-30"},{"lineNumber":251,"author":{"gitId":"shavonneg"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":252,"author":{"gitId":"shavonneg"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":253,"author":{"gitId":"shavonneg"},"content":"    @Test","lastModifiedDate":"2024-03-30"},{"lineNumber":254,"author":{"gitId":"shavonneg"},"content":"    public void parsePrice_null_throwsNullPointerException() {","lastModifiedDate":"2024-03-30"},{"lineNumber":255,"author":{"gitId":"shavonneg"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parsePrice((String) null));","lastModifiedDate":"2024-03-30"},{"lineNumber":256,"author":{"gitId":"shavonneg"},"content":"    }","lastModifiedDate":"2024-03-30"},{"lineNumber":257,"author":{"gitId":"shavonneg"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":258,"author":{"gitId":"shavonneg"},"content":"    @Test","lastModifiedDate":"2024-03-30"},{"lineNumber":259,"author":{"gitId":"shavonneg"},"content":"    public void parsePrice_invalidValue_throwsParseException() {","lastModifiedDate":"2024-03-30"},{"lineNumber":260,"author":{"gitId":"shavonneg"},"content":"        assertThrows(NumberFormatException.class, () -\u003e ParserUtil.parsePrice(INVALID_PRICE));","lastModifiedDate":"2024-03-30"},{"lineNumber":261,"author":{"gitId":"shavonneg"},"content":"    }","lastModifiedDate":"2024-03-30"},{"lineNumber":262,"author":{"gitId":"shavonneg"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":263,"author":{"gitId":"shavonneg"},"content":"    @Test","lastModifiedDate":"2024-03-30"},{"lineNumber":264,"author":{"gitId":"shavonneg"},"content":"    public void parsePrice_validValueWithoutWhitespace_returnsPrice() throws Exception {","lastModifiedDate":"2024-03-30"},{"lineNumber":265,"author":{"gitId":"shavonneg"},"content":"        Price expectedPrice \u003d new Price(VALID_PRICE);","lastModifiedDate":"2024-03-30"},{"lineNumber":266,"author":{"gitId":"shavonneg"},"content":"        assertEquals(expectedPrice, ParserUtil.parsePrice(VALID_PRICE));","lastModifiedDate":"2024-03-30"},{"lineNumber":267,"author":{"gitId":"shavonneg"},"content":"    }","lastModifiedDate":"2024-03-30"},{"lineNumber":268,"author":{"gitId":"shavonneg"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":269,"author":{"gitId":"shavonneg"},"content":"    @Test","lastModifiedDate":"2024-03-30"},{"lineNumber":270,"author":{"gitId":"shavonneg"},"content":"    public void parsePrice_validValueWithWhitespace_returnsTrimmedPrice() throws Exception {","lastModifiedDate":"2024-03-30"},{"lineNumber":271,"author":{"gitId":"shavonneg"},"content":"        String priceWithWhitespace \u003d WHITESPACE + VALID_PRICE + WHITESPACE;","lastModifiedDate":"2024-03-30"},{"lineNumber":272,"author":{"gitId":"shavonneg"},"content":"        Price expectedPrice \u003d new Price(VALID_PRICE);","lastModifiedDate":"2024-03-30"},{"lineNumber":273,"author":{"gitId":"shavonneg"},"content":"        assertEquals(expectedPrice, ParserUtil.parsePrice(priceWithWhitespace));","lastModifiedDate":"2024-03-30"},{"lineNumber":274,"author":{"gitId":"shavonneg"},"content":"    }","lastModifiedDate":"2024-03-30"},{"lineNumber":275,"author":{"gitId":"shavonneg"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":276,"author":{"gitId":"shavonneg"},"content":"    @Test","lastModifiedDate":"2024-03-30"},{"lineNumber":277,"author":{"gitId":"shavonneg"},"content":"    public void parseRemark_null_throwsNullPointerException() {","lastModifiedDate":"2024-03-30"},{"lineNumber":278,"author":{"gitId":"shavonneg"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseRemark((String) null));","lastModifiedDate":"2024-03-30"},{"lineNumber":279,"author":{"gitId":"shavonneg"},"content":"    }","lastModifiedDate":"2024-03-30"},{"lineNumber":280,"author":{"gitId":"shavonneg"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":281,"author":{"gitId":"shavonneg"},"content":"    @Test","lastModifiedDate":"2024-03-30"},{"lineNumber":282,"author":{"gitId":"shavonneg"},"content":"    public void parseRemark_invalidValue_throwsParseException() {","lastModifiedDate":"2024-03-30"},{"lineNumber":283,"author":{"gitId":"shavonneg"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseRemark(INVALID_REMARK));","lastModifiedDate":"2024-03-30"},{"lineNumber":284,"author":{"gitId":"shavonneg"},"content":"    }","lastModifiedDate":"2024-03-30"},{"lineNumber":285,"author":{"gitId":"shavonneg"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":286,"author":{"gitId":"shavonneg"},"content":"    @Test","lastModifiedDate":"2024-03-30"},{"lineNumber":287,"author":{"gitId":"shavonneg"},"content":"    public void parseRemark_validValueWithoutWhitespace_returnsRemark() throws Exception {","lastModifiedDate":"2024-03-30"},{"lineNumber":288,"author":{"gitId":"shavonneg"},"content":"        Remark expectedRemark \u003d new Remark(VALID_REMARK);","lastModifiedDate":"2024-03-30"},{"lineNumber":289,"author":{"gitId":"shavonneg"},"content":"        assertEquals(expectedRemark, ParserUtil.parseRemark(VALID_REMARK));","lastModifiedDate":"2024-03-30"},{"lineNumber":290,"author":{"gitId":"shavonneg"},"content":"    }","lastModifiedDate":"2024-03-30"},{"lineNumber":291,"author":{"gitId":"shavonneg"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":292,"author":{"gitId":"shavonneg"},"content":"    @Test","lastModifiedDate":"2024-03-30"},{"lineNumber":293,"author":{"gitId":"shavonneg"},"content":"    public void parseStatus_null_throwsNullPointerException() {","lastModifiedDate":"2024-03-30"},{"lineNumber":294,"author":{"gitId":"shavonneg"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseStatus((String) null));","lastModifiedDate":"2024-03-30"},{"lineNumber":295,"author":{"gitId":"shavonneg"},"content":"    }","lastModifiedDate":"2024-03-30"},{"lineNumber":296,"author":{"gitId":"shavonneg"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":297,"author":{"gitId":"shavonneg"},"content":"    @Test","lastModifiedDate":"2024-03-30"},{"lineNumber":298,"author":{"gitId":"shavonneg"},"content":"    public void parseStatus_invalidValue_throwsParseException() {","lastModifiedDate":"2024-03-30"},{"lineNumber":299,"author":{"gitId":"shavonneg"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseStatus(INVALID_STATUS));","lastModifiedDate":"2024-03-30"},{"lineNumber":300,"author":{"gitId":"shavonneg"},"content":"    }","lastModifiedDate":"2024-03-30"},{"lineNumber":301,"author":{"gitId":"shavonneg"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":302,"author":{"gitId":"shavonneg"},"content":"    @Test","lastModifiedDate":"2024-03-30"},{"lineNumber":303,"author":{"gitId":"shavonneg"},"content":"    public void parseStatus_validValueWithoutWhitespace_returnsStatus() throws Exception {","lastModifiedDate":"2024-03-30"},{"lineNumber":304,"author":{"gitId":"shavonneg"},"content":"        Status expectedStatus \u003d new Status(VALID_STATUS);","lastModifiedDate":"2024-03-30"},{"lineNumber":305,"author":{"gitId":"shavonneg"},"content":"        assertEquals(expectedStatus, ParserUtil.parseStatus(VALID_STATUS));","lastModifiedDate":"2024-03-30"},{"lineNumber":306,"author":{"gitId":"shavonneg"},"content":"    }","lastModifiedDate":"2024-03-30"},{"lineNumber":307,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-22"}],"authorContributionMap":{"kailinteoo":2,"shavonneg":84,"Jaspertzx":29,"-":192}},{"path":"src/test/java/seedu/address/logic/parser/client/AddCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Jaspertzx"},"content":"package seedu.address.logic.parser.client;","lastModifiedDate":"2024-04-14"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-07-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_ADDRESS_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_EMAIL_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_NAME_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_PHONE_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_TAG_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PREAMBLE_NON_EMPTY;","lastModifiedDate":"2017-12-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PREAMBLE_WHITESPACE;","lastModifiedDate":"2017-12-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_FRIEND;","lastModifiedDate":"2017-07-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;","lastModifiedDate":"2017-07-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2023-07-14"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2023-07-14"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2023-07-14"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2023-07-14"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2017-07-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2017-07-06"},{"lineNumber":33,"author":{"gitId":"Jaspertzx"},"content":"import static seedu.address.testutil.TypicalClients.AMY;","lastModifiedDate":"2024-04-14"},{"lineNumber":34,"author":{"gitId":"Jaspertzx"},"content":"import static seedu.address.testutil.TypicalClients.BOB;","lastModifiedDate":"2024-04-14"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-07-14"},{"lineNumber":39,"author":{"gitId":"Jaspertzx"},"content":"import seedu.address.logic.commands.client.AddCommand;","lastModifiedDate":"2024-04-14"},{"lineNumber":40,"author":{"gitId":"Jaspertzx"},"content":"import seedu.address.model.client.Address;","lastModifiedDate":"2024-04-14"},{"lineNumber":41,"author":{"gitId":"Jaspertzx"},"content":"import seedu.address.model.client.Client;","lastModifiedDate":"2024-04-14"},{"lineNumber":42,"author":{"gitId":"Jaspertzx"},"content":"import seedu.address.model.client.Email;","lastModifiedDate":"2024-04-14"},{"lineNumber":43,"author":{"gitId":"Jaspertzx"},"content":"import seedu.address.model.client.Name;","lastModifiedDate":"2024-04-14"},{"lineNumber":44,"author":{"gitId":"Jaspertzx"},"content":"import seedu.address.model.client.Phone;","lastModifiedDate":"2024-04-14"},{"lineNumber":45,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-06-15"},{"lineNumber":46,"author":{"gitId":"Jaspertzx"},"content":"import seedu.address.testutil.ClientBuilder;","lastModifiedDate":"2024-04-14"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":48,"author":{"gitId":"-"},"content":"public class AddCommandParserTest {","lastModifiedDate":"2017-06-15"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    private AddCommandParser parser \u003d new AddCommandParser();","lastModifiedDate":"2017-06-15"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public void parse_allFieldsPresent_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":53,"author":{"gitId":"Jaspertzx"},"content":"        Client expectedClient \u003d new ClientBuilder(BOB).withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2024-04-14"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        // whitespace only preamble","lastModifiedDate":"2017-12-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, PREAMBLE_WHITESPACE + NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":57,"author":{"gitId":"Jaspertzx"},"content":"                + ADDRESS_DESC_BOB + TAG_DESC_FRIEND, new AddCommand(expectedClient));","lastModifiedDate":"2024-04-14"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        // multiple tags - all accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":61,"author":{"gitId":"Jaspertzx"},"content":"        Client expectedClientMultipleTags \u003d new ClientBuilder(BOB).withTags(VALID_TAG_FRIEND, VALID_TAG_HUSBAND)","lastModifiedDate":"2024-04-14"},{"lineNumber":62,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-07-25"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser,","lastModifiedDate":"2023-07-14"},{"lineNumber":64,"author":{"gitId":"-"},"content":"                NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB + TAG_DESC_HUSBAND + TAG_DESC_FRIEND,","lastModifiedDate":"2023-07-14"},{"lineNumber":65,"author":{"gitId":"Jaspertzx"},"content":"                new AddCommand(expectedClientMultipleTags));","lastModifiedDate":"2024-04-14"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-07-14"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-07-14"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public void parse_repeatedNonTagValue_failure() {","lastModifiedDate":"2023-07-14"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        String validExpectedPersonString \u003d NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2023-07-14"},{"lineNumber":71,"author":{"gitId":"-"},"content":"                + ADDRESS_DESC_BOB + TAG_DESC_FRIEND;","lastModifiedDate":"2023-07-14"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        // multiple names","lastModifiedDate":"2023-07-14"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_AMY + validExpectedPersonString,","lastModifiedDate":"2023-07-14"},{"lineNumber":75,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_NAME));","lastModifiedDate":"2023-07-14"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        // multiple phones","lastModifiedDate":"2023-07-14"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, PHONE_DESC_AMY + validExpectedPersonString,","lastModifiedDate":"2023-07-14"},{"lineNumber":79,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_PHONE));","lastModifiedDate":"2023-07-14"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        // multiple emails","lastModifiedDate":"2023-07-14"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, EMAIL_DESC_AMY + validExpectedPersonString,","lastModifiedDate":"2023-07-14"},{"lineNumber":83,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_EMAIL));","lastModifiedDate":"2023-07-14"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        // multiple addresses","lastModifiedDate":"2023-07-14"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, ADDRESS_DESC_AMY + validExpectedPersonString,","lastModifiedDate":"2023-07-14"},{"lineNumber":87,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_ADDRESS));","lastModifiedDate":"2023-07-14"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        // multiple fields repeated","lastModifiedDate":"2023-07-14"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertParseFailure(parser,","lastModifiedDate":"2023-07-14"},{"lineNumber":91,"author":{"gitId":"-"},"content":"                validExpectedPersonString + PHONE_DESC_AMY + EMAIL_DESC_AMY + NAME_DESC_AMY + ADDRESS_DESC_AMY","lastModifiedDate":"2023-07-14"},{"lineNumber":92,"author":{"gitId":"-"},"content":"                        + validExpectedPersonString,","lastModifiedDate":"2023-07-14"},{"lineNumber":93,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_NAME, PREFIX_ADDRESS, PREFIX_EMAIL, PREFIX_PHONE));","lastModifiedDate":"2023-07-14"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        // invalid value followed by valid value","lastModifiedDate":"2023-07-14"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        // invalid name","lastModifiedDate":"2023-07-14"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, INVALID_NAME_DESC + validExpectedPersonString,","lastModifiedDate":"2023-07-14"},{"lineNumber":99,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_NAME));","lastModifiedDate":"2023-07-14"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        // invalid email","lastModifiedDate":"2023-07-14"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, INVALID_EMAIL_DESC + validExpectedPersonString,","lastModifiedDate":"2023-07-14"},{"lineNumber":103,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_EMAIL));","lastModifiedDate":"2023-07-14"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        // invalid phone","lastModifiedDate":"2023-07-14"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, INVALID_PHONE_DESC + validExpectedPersonString,","lastModifiedDate":"2023-07-14"},{"lineNumber":107,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_PHONE));","lastModifiedDate":"2023-07-14"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        // invalid address","lastModifiedDate":"2023-07-14"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, INVALID_ADDRESS_DESC + validExpectedPersonString,","lastModifiedDate":"2023-07-14"},{"lineNumber":111,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_ADDRESS));","lastModifiedDate":"2023-07-14"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        // valid value followed by invalid value","lastModifiedDate":"2023-07-14"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        // invalid name","lastModifiedDate":"2023-07-14"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, validExpectedPersonString + INVALID_NAME_DESC,","lastModifiedDate":"2023-07-14"},{"lineNumber":117,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_NAME));","lastModifiedDate":"2023-07-14"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        // invalid email","lastModifiedDate":"2023-07-14"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, validExpectedPersonString + INVALID_EMAIL_DESC,","lastModifiedDate":"2023-07-14"},{"lineNumber":121,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_EMAIL));","lastModifiedDate":"2023-07-14"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        // invalid phone","lastModifiedDate":"2023-07-14"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, validExpectedPersonString + INVALID_PHONE_DESC,","lastModifiedDate":"2023-07-14"},{"lineNumber":125,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_PHONE));","lastModifiedDate":"2023-07-14"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        // invalid address","lastModifiedDate":"2023-07-14"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, validExpectedPersonString + INVALID_ADDRESS_DESC,","lastModifiedDate":"2023-07-14"},{"lineNumber":129,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_ADDRESS));","lastModifiedDate":"2023-07-14"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    public void parse_optionalFieldsMissing_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        // zero tags","lastModifiedDate":"2017-06-15"},{"lineNumber":135,"author":{"gitId":"Jaspertzx"},"content":"        Client expectedClient \u003d new ClientBuilder(AMY).withTags().build();","lastModifiedDate":"2024-04-14"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, NAME_DESC_AMY + PHONE_DESC_AMY + EMAIL_DESC_AMY + ADDRESS_DESC_AMY,","lastModifiedDate":"2017-12-23"},{"lineNumber":137,"author":{"gitId":"Jaspertzx"},"content":"                new AddCommand(expectedClient));","lastModifiedDate":"2024-04-14"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    public void parse_compulsoryFieldMissing_failure() {","lastModifiedDate":"2017-06-15"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE);","lastModifiedDate":"2017-06-15"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        // missing name prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, VALID_NAME_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB,","lastModifiedDate":"2017-12-23"},{"lineNumber":146,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        // missing phone prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + VALID_PHONE_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB,","lastModifiedDate":"2017-12-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        // missing email prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + VALID_EMAIL_BOB + ADDRESS_DESC_BOB,","lastModifiedDate":"2017-12-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        // missing address prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + VALID_ADDRESS_BOB,","lastModifiedDate":"2017-12-23"},{"lineNumber":158,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        // all prefixes missing","lastModifiedDate":"2017-06-15"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, VALID_NAME_BOB + VALID_PHONE_BOB + VALID_EMAIL_BOB + VALID_ADDRESS_BOB,","lastModifiedDate":"2017-12-23"},{"lineNumber":162,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2017-06-15"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        // invalid name","lastModifiedDate":"2017-06-15"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, INVALID_NAME_DESC + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"                + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        // invalid phone","lastModifiedDate":"2017-06-15"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + INVALID_PHONE_DESC + EMAIL_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":173,"author":{"gitId":"-"},"content":"                + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        // invalid email","lastModifiedDate":"2017-06-15"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + INVALID_EMAIL_DESC + ADDRESS_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":177,"author":{"gitId":"-"},"content":"                + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        // invalid address","lastModifiedDate":"2017-06-15"},{"lineNumber":180,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + INVALID_ADDRESS_DESC","lastModifiedDate":"2017-12-23"},{"lineNumber":181,"author":{"gitId":"-"},"content":"                + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":183,"author":{"gitId":"-"},"content":"        // invalid tag","lastModifiedDate":"2017-06-15"},{"lineNumber":184,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":185,"author":{"gitId":"-"},"content":"                + INVALID_TAG_DESC + VALID_TAG_FRIEND, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":187,"author":{"gitId":"-"},"content":"        // two invalid values, only first invalid value reported","lastModifiedDate":"2017-06-15"},{"lineNumber":188,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, INVALID_NAME_DESC + PHONE_DESC_BOB + EMAIL_DESC_BOB + INVALID_ADDRESS_DESC,","lastModifiedDate":"2017-12-23"},{"lineNumber":189,"author":{"gitId":"-"},"content":"                Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":191,"author":{"gitId":"-"},"content":"        // non-empty preamble","lastModifiedDate":"2017-12-23"},{"lineNumber":192,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, PREAMBLE_NON_EMPTY + NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":193,"author":{"gitId":"-"},"content":"                + ADDRESS_DESC_BOB + TAG_DESC_HUSBAND + TAG_DESC_FRIEND,","lastModifiedDate":"2017-12-23"},{"lineNumber":194,"author":{"gitId":"-"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-12-23"},{"lineNumber":195,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":196,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-15"}],"authorContributionMap":{"Jaspertzx":16,"-":180}},{"path":"src/test/java/seedu/address/logic/parser/client/DeleteCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Jaspertzx"},"content":"package seedu.address.logic.parser.client;","lastModifiedDate":"2024-04-14"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-07-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2017-07-06"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2017-07-06"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":10,"author":{"gitId":"Jaspertzx"},"content":"import seedu.address.logic.commands.client.DeleteCommand;","lastModifiedDate":"2024-04-14"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * As we are only doing white-box testing, our test cases do not cover path variations","lastModifiedDate":"2017-06-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * outside of the DeleteCommand code. For example, inputs \"1\" and \"1 abc\" take the","lastModifiedDate":"2017-06-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * same path through the DeleteCommand, and therefore we test only one of them.","lastModifiedDate":"2017-06-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * The path variation for those two cases occur inside the ParserUtil, and","lastModifiedDate":"2017-06-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * therefore should be covered by the ParserUtilTest.","lastModifiedDate":"2017-06-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class DeleteCommandParserTest {","lastModifiedDate":"2017-06-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private DeleteCommandParser parser \u003d new DeleteCommandParser();","lastModifiedDate":"2017-06-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void parse_validArgs_returnsDeleteCommand() {","lastModifiedDate":"2017-08-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, \"1\", new DeleteCommand(INDEX_FIRST_PERSON));","lastModifiedDate":"2017-07-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public void parse_invalidArgs_throwsParseException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"a\", String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-07-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-09"},{"lineNumber":32,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-09"}],"authorContributionMap":{"Jaspertzx":2,"-":30}},{"path":"src/test/java/seedu/address/logic/parser/client/EditCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Jaspertzx"},"content":"package seedu.address.logic.parser.client;","lastModifiedDate":"2024-04-14"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-07-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_ADDRESS_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_EMAIL_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_NAME_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_PHONE_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_TAG_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_FRIEND;","lastModifiedDate":"2017-07-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;","lastModifiedDate":"2017-07-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2023-07-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2023-07-14"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2023-07-14"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-05-04"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2017-07-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2017-07-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_THIRD_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":35,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":37,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-07-14"},{"lineNumber":39,"author":{"gitId":"Jaspertzx"},"content":"import seedu.address.logic.commands.client.EditCommand;","lastModifiedDate":"2024-04-14"},{"lineNumber":40,"author":{"gitId":"Jaspertzx"},"content":"import seedu.address.logic.commands.client.EditCommand.EditClientDescriptor;","lastModifiedDate":"2024-04-14"},{"lineNumber":41,"author":{"gitId":"Jaspertzx"},"content":"import seedu.address.model.client.Address;","lastModifiedDate":"2024-04-14"},{"lineNumber":42,"author":{"gitId":"Jaspertzx"},"content":"import seedu.address.model.client.Email;","lastModifiedDate":"2024-04-14"},{"lineNumber":43,"author":{"gitId":"Jaspertzx"},"content":"import seedu.address.model.client.Name;","lastModifiedDate":"2024-04-14"},{"lineNumber":44,"author":{"gitId":"Jaspertzx"},"content":"import seedu.address.model.client.Phone;","lastModifiedDate":"2024-04-14"},{"lineNumber":45,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-05-04"},{"lineNumber":46,"author":{"gitId":"Jaspertzx"},"content":"import seedu.address.testutil.EditClientDescriptorBuilder;","lastModifiedDate":"2024-04-14"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":48,"author":{"gitId":"-"},"content":"public class EditCommandParserTest {","lastModifiedDate":"2017-05-04"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    private static final String TAG_EMPTY \u003d \" \" + PREFIX_TAG;","lastModifiedDate":"2017-05-04"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    private static final String MESSAGE_INVALID_FORMAT \u003d","lastModifiedDate":"2017-05-04"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditCommand.MESSAGE_USAGE);","lastModifiedDate":"2017-05-04"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    private EditCommandParser parser \u003d new EditCommandParser();","lastModifiedDate":"2017-05-04"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public void parse_missingParts_failure() {","lastModifiedDate":"2017-05-04"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        // no index specified","lastModifiedDate":"2017-05-04"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, VALID_NAME_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        // no field specified","lastModifiedDate":"2017-05-04"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\", EditCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2017-07-06"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        // no index and no field specified","lastModifiedDate":"2017-05-04"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public void parse_invalidPreamble_failure() {","lastModifiedDate":"2017-06-06"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        // negative index","lastModifiedDate":"2017-05-04"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"-5\" + NAME_DESC_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        // zero index","lastModifiedDate":"2017-06-06"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"0\" + NAME_DESC_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-06"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        // invalid arguments being parsed as preamble","lastModifiedDate":"2017-06-06"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1 some random string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-06"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        // invalid prefix being parsed as preamble","lastModifiedDate":"2017-06-06"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1 i/ string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2017-05-04"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_NAME_DESC, Name.MESSAGE_CONSTRAINTS); // invalid name","lastModifiedDate":"2018-09-22"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_PHONE_DESC, Phone.MESSAGE_CONSTRAINTS); // invalid phone","lastModifiedDate":"2018-09-22"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_EMAIL_DESC, Email.MESSAGE_CONSTRAINTS); // invalid email","lastModifiedDate":"2018-09-22"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_ADDRESS_DESC, Address.MESSAGE_CONSTRAINTS); // invalid address","lastModifiedDate":"2018-09-22"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_TAG_DESC, Tag.MESSAGE_CONSTRAINTS); // invalid tag","lastModifiedDate":"2018-09-22"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        // invalid phone followed by valid email","lastModifiedDate":"2017-05-04"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_PHONE_DESC + EMAIL_DESC_AMY, Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":95,"author":{"gitId":"Jaspertzx"},"content":"        // while parsing {@code PREFIX_TAG} alone will reset the tags of the {@code Client} being edited,","lastModifiedDate":"2024-04-14"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        // parsing it together with a valid tag results in error","lastModifiedDate":"2017-05-04"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + TAG_DESC_FRIEND + TAG_DESC_HUSBAND + TAG_EMPTY, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + TAG_DESC_FRIEND + TAG_EMPTY + TAG_DESC_HUSBAND, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + TAG_EMPTY + TAG_DESC_FRIEND + TAG_DESC_HUSBAND, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        // multiple invalid values, but only the first invalid value is captured","lastModifiedDate":"2017-05-04"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_NAME_DESC + INVALID_EMAIL_DESC + VALID_ADDRESS_AMY + VALID_PHONE_AMY,","lastModifiedDate":"2017-07-06"},{"lineNumber":103,"author":{"gitId":"-"},"content":"                Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    public void parse_allFieldsSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + PHONE_DESC_BOB + TAG_DESC_HUSBAND","lastModifiedDate":"2017-06-06"},{"lineNumber":110,"author":{"gitId":"-"},"content":"                + EMAIL_DESC_AMY + ADDRESS_DESC_AMY + NAME_DESC_AMY + TAG_DESC_FRIEND;","lastModifiedDate":"2017-06-06"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":112,"author":{"gitId":"Jaspertzx"},"content":"        EditCommand.EditClientDescriptor descriptor \u003d new EditClientDescriptorBuilder().withName(VALID_NAME_AMY)","lastModifiedDate":"2024-04-14"},{"lineNumber":113,"author":{"gitId":"-"},"content":"                .withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_AMY).withAddress(VALID_ADDRESS_AMY)","lastModifiedDate":"2017-05-04"},{"lineNumber":114,"author":{"gitId":"-"},"content":"                .withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    public void parse_someFieldsSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_FIRST_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + PHONE_DESC_BOB + EMAIL_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":125,"author":{"gitId":"Jaspertzx"},"content":"        EditClientDescriptor descriptor \u003d new EditClientDescriptorBuilder().withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2024-04-14"},{"lineNumber":126,"author":{"gitId":"-"},"content":"                .withEmail(VALID_EMAIL_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    public void parse_oneFieldSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        // name","lastModifiedDate":"2017-05-04"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_THIRD_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + NAME_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":137,"author":{"gitId":"Jaspertzx"},"content":"        EditClientDescriptor descriptor \u003d new EditClientDescriptorBuilder().withName(VALID_NAME_AMY).build();","lastModifiedDate":"2024-04-14"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        // phone","lastModifiedDate":"2017-05-04"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + PHONE_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":143,"author":{"gitId":"Jaspertzx"},"content":"        descriptor \u003d new EditClientDescriptorBuilder().withPhone(VALID_PHONE_AMY).build();","lastModifiedDate":"2024-04-14"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        // email","lastModifiedDate":"2017-05-04"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + EMAIL_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":149,"author":{"gitId":"Jaspertzx"},"content":"        descriptor \u003d new EditClientDescriptorBuilder().withEmail(VALID_EMAIL_AMY).build();","lastModifiedDate":"2024-04-14"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        // address","lastModifiedDate":"2017-05-04"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + ADDRESS_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":155,"author":{"gitId":"Jaspertzx"},"content":"        descriptor \u003d new EditClientDescriptorBuilder().withAddress(VALID_ADDRESS_AMY).build();","lastModifiedDate":"2024-04-14"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        // tags","lastModifiedDate":"2017-05-04"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + TAG_DESC_FRIEND;","lastModifiedDate":"2017-05-25"},{"lineNumber":161,"author":{"gitId":"Jaspertzx"},"content":"        descriptor \u003d new EditClientDescriptorBuilder().withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2024-04-14"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":167,"author":{"gitId":"-"},"content":"    public void parse_multipleRepeatedFields_failure() {","lastModifiedDate":"2023-07-14"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        // More extensive testing of duplicate parameter detections is done in","lastModifiedDate":"2023-07-14"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        // AddCommandParserTest#parse_repeatedNonTagValue_failure()","lastModifiedDate":"2023-07-14"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        // valid followed by invalid","lastModifiedDate":"2023-07-14"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_FIRST_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + INVALID_PHONE_DESC + PHONE_DESC_BOB;","lastModifiedDate":"2023-07-14"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, userInput, Messages.getErrorMessageForDuplicatePrefixes(PREFIX_PHONE));","lastModifiedDate":"2023-07-14"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        // invalid followed by valid","lastModifiedDate":"2023-07-14"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + PHONE_DESC_BOB + INVALID_PHONE_DESC;","lastModifiedDate":"2023-07-14"},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":180,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, userInput, Messages.getErrorMessageForDuplicatePrefixes(PREFIX_PHONE));","lastModifiedDate":"2023-07-14"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":182,"author":{"gitId":"-"},"content":"        // mulltiple valid fields repeated","lastModifiedDate":"2023-07-14"},{"lineNumber":183,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + PHONE_DESC_AMY + ADDRESS_DESC_AMY + EMAIL_DESC_AMY","lastModifiedDate":"2023-07-14"},{"lineNumber":184,"author":{"gitId":"-"},"content":"                + TAG_DESC_FRIEND + PHONE_DESC_AMY + ADDRESS_DESC_AMY + EMAIL_DESC_AMY + TAG_DESC_FRIEND","lastModifiedDate":"2017-05-25"},{"lineNumber":185,"author":{"gitId":"-"},"content":"                + PHONE_DESC_BOB + ADDRESS_DESC_BOB + EMAIL_DESC_BOB + TAG_DESC_HUSBAND;","lastModifiedDate":"2017-05-25"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":187,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, userInput,","lastModifiedDate":"2023-07-14"},{"lineNumber":188,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_PHONE, PREFIX_EMAIL, PREFIX_ADDRESS));","lastModifiedDate":"2023-07-14"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":190,"author":{"gitId":"-"},"content":"        // multiple invalid values","lastModifiedDate":"2023-07-14"},{"lineNumber":191,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + INVALID_PHONE_DESC + INVALID_ADDRESS_DESC + INVALID_EMAIL_DESC","lastModifiedDate":"2023-07-14"},{"lineNumber":192,"author":{"gitId":"-"},"content":"                + INVALID_PHONE_DESC + INVALID_ADDRESS_DESC + INVALID_EMAIL_DESC;","lastModifiedDate":"2023-07-14"},{"lineNumber":193,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":194,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, userInput,","lastModifiedDate":"2023-07-14"},{"lineNumber":195,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_PHONE, PREFIX_EMAIL, PREFIX_ADDRESS));","lastModifiedDate":"2023-07-14"},{"lineNumber":196,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":197,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":198,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":199,"author":{"gitId":"-"},"content":"    public void parse_resetTags_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":200,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_THIRD_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":201,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + TAG_EMPTY;","lastModifiedDate":"2017-05-25"},{"lineNumber":202,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":203,"author":{"gitId":"Jaspertzx"},"content":"        EditClientDescriptor descriptor \u003d new EditClientDescriptorBuilder().withTags().build();","lastModifiedDate":"2024-04-14"},{"lineNumber":204,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":205,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":206,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":207,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":208,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-04"}],"authorContributionMap":{"Jaspertzx":17,"-":191}},{"path":"src/test/java/seedu/address/logic/parser/client/FindCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Jaspertzx"},"content":"package seedu.address.logic.parser.client;","lastModifiedDate":"2024-04-14"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-07-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2017-07-06"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2017-07-06"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":11,"author":{"gitId":"Jaspertzx"},"content":"import seedu.address.logic.commands.client.FindCommand;","lastModifiedDate":"2024-04-14"},{"lineNumber":12,"author":{"gitId":"Jaspertzx"},"content":"import seedu.address.model.client.NameContainsKeywordsPredicate;","lastModifiedDate":"2024-04-14"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class FindCommandParserTest {","lastModifiedDate":"2017-06-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private FindCommandParser parser \u003d new FindCommandParser();","lastModifiedDate":"2017-06-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public void parse_emptyArg_throwsParseException() {","lastModifiedDate":"2017-06-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"     \", String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-07-06"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void parse_validArgs_returnsFindCommand() {","lastModifiedDate":"2017-08-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        // no leading and trailing whitespaces","lastModifiedDate":"2017-06-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        FindCommand expectedFindCommand \u003d","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"                new FindCommand(new NameContainsKeywordsPredicate(Arrays.asList(\"Alice\", \"Bob\")));","lastModifiedDate":"2017-06-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, \"Alice Bob\", expectedFindCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        // multiple whitespaces between keywords","lastModifiedDate":"2017-06-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, \" \\n Alice \\n \\t Bob  \\t\", expectedFindCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-27"}],"authorContributionMap":{"Jaspertzx":3,"-":31}},{"path":"src/test/java/seedu/address/logic/parser/order/AddOrderCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Jaspertzx"},"content":"package seedu.address.logic.parser.order;","lastModifiedDate":"2024-04-14"},{"lineNumber":2,"author":{"gitId":"Jaspertzx"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":3,"author":{"gitId":"Jaspertzx"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-03-19"},{"lineNumber":4,"author":{"gitId":"Jaspertzx"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2024-03-19"},{"lineNumber":5,"author":{"gitId":"Jaspertzx"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2024-03-19"},{"lineNumber":6,"author":{"gitId":"Jaspertzx"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":7,"author":{"gitId":"Jaspertzx"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-03-19"},{"lineNumber":8,"author":{"gitId":"Jaspertzx"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-03-19"},{"lineNumber":9,"author":{"gitId":"Jaspertzx"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":10,"author":{"gitId":"Jaspertzx"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-19"},{"lineNumber":11,"author":{"gitId":"Jaspertzx"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":12,"author":{"gitId":"rertyy"},"content":"import seedu.address.commons.util.DateTimeUtil;","lastModifiedDate":"2024-03-23"},{"lineNumber":13,"author":{"gitId":"Jaspertzx"},"content":"import seedu.address.logic.commands.order.AddOrderCommand;","lastModifiedDate":"2024-04-14"},{"lineNumber":14,"author":{"gitId":"Jaspertzx"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":15,"author":{"gitId":"Jaspertzx"},"content":"public class AddOrderCommandParserTest {","lastModifiedDate":"2024-03-19"},{"lineNumber":16,"author":{"gitId":"Jaspertzx"},"content":"    private AddOrderCommandParser parser \u003d new AddOrderCommandParser();","lastModifiedDate":"2024-03-20"},{"lineNumber":17,"author":{"gitId":"Jaspertzx"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":18,"author":{"gitId":"Jaspertzx"},"content":"    @Test","lastModifiedDate":"2024-03-19"},{"lineNumber":19,"author":{"gitId":"rertyy"},"content":"    public void parse_invalidCommandFormat_throwsParseException() {","lastModifiedDate":"2024-04-10"},{"lineNumber":20,"author":{"gitId":"Jaspertzx"},"content":"        assertParseFailure(parser, \"1\", String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddOrderCommand.MESSAGE_USAGE));","lastModifiedDate":"2024-04-08"},{"lineNumber":21,"author":{"gitId":"rertyy"},"content":"        assertParseFailure(parser, \"abc\", String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddOrderCommand.MESSAGE_USAGE));","lastModifiedDate":"2024-04-10"},{"lineNumber":22,"author":{"gitId":"Jaspertzx"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":23,"author":{"gitId":"Jaspertzx"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":24,"author":{"gitId":"Jaspertzx"},"content":"    @Test","lastModifiedDate":"2024-03-19"},{"lineNumber":25,"author":{"gitId":"Jaspertzx"},"content":"    public void check_sameCurrentTime_success() {","lastModifiedDate":"2024-03-19"},{"lineNumber":26,"author":{"gitId":"Jaspertzx"},"content":"        LocalDateTime now \u003d LocalDateTime.now();","lastModifiedDate":"2024-03-19"},{"lineNumber":27,"author":{"gitId":"Jaspertzx"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"dd-MM-yyyy HH:mm\");","lastModifiedDate":"2024-03-19"},{"lineNumber":28,"author":{"gitId":"rertyy"},"content":"        DateTimeUtil.getCurrentTime();","lastModifiedDate":"2024-03-23"},{"lineNumber":29,"author":{"gitId":"rertyy"},"content":"        assertEquals(DateTimeUtil.getCurrentTime(), now.format(formatter));","lastModifiedDate":"2024-03-23"},{"lineNumber":30,"author":{"gitId":"Jaspertzx"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":31,"author":{"gitId":"Jaspertzx"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":32,"author":{"gitId":"Jaspertzx"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":33,"author":{"gitId":"Jaspertzx"},"content":"}","lastModifiedDate":"2024-03-19"}],"authorContributionMap":{"rertyy":5,"Jaspertzx":28}},{"path":"src/test/java/seedu/address/logic/parser/order/DeleteOrderCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Jaspertzx"},"content":"package seedu.address.logic.parser.order;","lastModifiedDate":"2024-04-14"},{"lineNumber":2,"author":{"gitId":"Jaspertzx"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":3,"author":{"gitId":"Jaspertzx"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2024-03-19"},{"lineNumber":4,"author":{"gitId":"Jaspertzx"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2024-03-19"},{"lineNumber":5,"author":{"gitId":"rertyy"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2024-03-23"},{"lineNumber":6,"author":{"gitId":"rertyy"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_ORDER;","lastModifiedDate":"2024-03-23"},{"lineNumber":7,"author":{"gitId":"Jaspertzx"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":8,"author":{"gitId":"Jaspertzx"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-19"},{"lineNumber":9,"author":{"gitId":"Jaspertzx"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":10,"author":{"gitId":"Jaspertzx"},"content":"import seedu.address.logic.commands.order.DeleteOrderCommand;","lastModifiedDate":"2024-04-14"},{"lineNumber":11,"author":{"gitId":"Jaspertzx"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":12,"author":{"gitId":"Jaspertzx"},"content":"/**","lastModifiedDate":"2024-03-19"},{"lineNumber":13,"author":{"gitId":"Jaspertzx"},"content":" * Contains unit tests for {@code DeleteOrderCommandParser}.","lastModifiedDate":"2024-03-19"},{"lineNumber":14,"author":{"gitId":"Jaspertzx"},"content":" */","lastModifiedDate":"2024-03-19"},{"lineNumber":15,"author":{"gitId":"Jaspertzx"},"content":"public class DeleteOrderCommandParserTest {","lastModifiedDate":"2024-03-19"},{"lineNumber":16,"author":{"gitId":"Jaspertzx"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":17,"author":{"gitId":"Jaspertzx"},"content":"    private DeleteOrderCommandParser parser \u003d new DeleteOrderCommandParser();","lastModifiedDate":"2024-03-19"},{"lineNumber":18,"author":{"gitId":"Jaspertzx"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":19,"author":{"gitId":"Jaspertzx"},"content":"    @Test","lastModifiedDate":"2024-03-19"},{"lineNumber":20,"author":{"gitId":"rertyy"},"content":"    public void parse_validArgs_returnsDeleteCommand() {","lastModifiedDate":"2024-03-23"},{"lineNumber":21,"author":{"gitId":"rertyy"},"content":"        assertParseSuccess(parser, \"1\", new DeleteOrderCommand(INDEX_FIRST_ORDER));","lastModifiedDate":"2024-03-23"},{"lineNumber":22,"author":{"gitId":"Jaspertzx"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":23,"author":{"gitId":"Jaspertzx"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":24,"author":{"gitId":"Jaspertzx"},"content":"    @Test","lastModifiedDate":"2024-03-19"},{"lineNumber":25,"author":{"gitId":"Jaspertzx"},"content":"    public void parse_emptyIdValue_throwsParseException() {","lastModifiedDate":"2024-03-19"},{"lineNumber":26,"author":{"gitId":"Jaspertzx"},"content":"        final String expectedMessage \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteOrderCommand.MESSAGE_USAGE);","lastModifiedDate":"2024-03-19"},{"lineNumber":27,"author":{"gitId":"rertyy"},"content":"        assertParseFailure(parser, \"\", expectedMessage);","lastModifiedDate":"2024-03-23"},{"lineNumber":28,"author":{"gitId":"Jaspertzx"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":29,"author":{"gitId":"Jaspertzx"},"content":"}","lastModifiedDate":"2024-03-19"}],"authorContributionMap":{"rertyy":5,"Jaspertzx":24}},{"path":"src/test/java/seedu/address/model/BookKeeperTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-12-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2018-04-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":9,"author":{"gitId":"Jaspertzx"},"content":"import static seedu.address.testutil.TypicalClients.ALICE;","lastModifiedDate":"2024-04-14"},{"lineNumber":10,"author":{"gitId":"Jaspertzx"},"content":"import static seedu.address.testutil.TypicalClients.getTypicalAddressBook;","lastModifiedDate":"2024-04-14"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2016-12-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2016-12-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2016-12-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-12-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2016-12-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-12-24"},{"lineNumber":21,"author":{"gitId":"Jaspertzx"},"content":"import seedu.address.model.client.Client;","lastModifiedDate":"2024-04-14"},{"lineNumber":22,"author":{"gitId":"Jaspertzx"},"content":"import seedu.address.model.client.exceptions.DuplicateClientException;","lastModifiedDate":"2024-04-14"},{"lineNumber":23,"author":{"gitId":"shavonneg"},"content":"import seedu.address.model.order.Order;","lastModifiedDate":"2024-03-19"},{"lineNumber":24,"author":{"gitId":"Jaspertzx"},"content":"import seedu.address.testutil.ClientBuilder;","lastModifiedDate":"2024-04-14"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":26,"author":{"gitId":"Jaspertzx"},"content":"public class BookKeeperTest {","lastModifiedDate":"2024-04-14"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":28,"author":{"gitId":"Jaspertzx"},"content":"    private final BookKeeper bookKeeper \u003d new BookKeeper();","lastModifiedDate":"2024-04-14"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public void constructor() {","lastModifiedDate":"2016-12-24"},{"lineNumber":32,"author":{"gitId":"Jaspertzx"},"content":"        assertEquals(Collections.emptyList(), bookKeeper.getClientList());","lastModifiedDate":"2024-04-14"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public void resetData_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":37,"author":{"gitId":"Jaspertzx"},"content":"        assertThrows(NullPointerException.class, () -\u003e bookKeeper.resetData(null));","lastModifiedDate":"2024-04-14"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public void resetData_withValidReadOnlyAddressBook_replacesData() {","lastModifiedDate":"2016-12-24"},{"lineNumber":42,"author":{"gitId":"Jaspertzx"},"content":"        BookKeeper newData \u003d getTypicalAddressBook();","lastModifiedDate":"2024-04-14"},{"lineNumber":43,"author":{"gitId":"Jaspertzx"},"content":"        bookKeeper.resetData(newData);","lastModifiedDate":"2024-04-14"},{"lineNumber":44,"author":{"gitId":"Jaspertzx"},"content":"        assertEquals(newData, bookKeeper);","lastModifiedDate":"2024-04-14"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public void resetData_withDuplicatePersons_throwsDuplicatePersonException() {","lastModifiedDate":"2018-08-07"},{"lineNumber":49,"author":{"gitId":"Jaspertzx"},"content":"        // Two clients with the same identity fields","lastModifiedDate":"2024-04-14"},{"lineNumber":50,"author":{"gitId":"Jaspertzx"},"content":"        Client editedAlice \u003d new ClientBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2024-04-14"},{"lineNumber":51,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-04-19"},{"lineNumber":52,"author":{"gitId":"Jaspertzx"},"content":"        List\u003cClient\u003e newClients \u003d Arrays.asList(ALICE, editedAlice);","lastModifiedDate":"2024-04-14"},{"lineNumber":53,"author":{"gitId":"Jaspertzx"},"content":"        BookKeeperStub newData \u003d new BookKeeperStub(newClients);","lastModifiedDate":"2024-04-14"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":55,"author":{"gitId":"Jaspertzx"},"content":"        assertThrows(DuplicateClientException.class, () -\u003e bookKeeper.resetData(newData));","lastModifiedDate":"2024-04-14"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public void hasPerson_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-06"},{"lineNumber":60,"author":{"gitId":"Jaspertzx"},"content":"        assertThrows(NullPointerException.class, () -\u003e bookKeeper.hasClient(null));","lastModifiedDate":"2024-04-14"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public void hasPerson_personNotInAddressBook_returnsFalse() {","lastModifiedDate":"2018-08-06"},{"lineNumber":65,"author":{"gitId":"Jaspertzx"},"content":"        assertFalse(bookKeeper.hasClient(ALICE));","lastModifiedDate":"2024-04-14"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public void hasPerson_personInAddressBook_returnsTrue() {","lastModifiedDate":"2018-08-07"},{"lineNumber":70,"author":{"gitId":"Jaspertzx"},"content":"        bookKeeper.addClient(ALICE);","lastModifiedDate":"2024-04-14"},{"lineNumber":71,"author":{"gitId":"Jaspertzx"},"content":"        assertTrue(bookKeeper.hasClient(ALICE));","lastModifiedDate":"2024-04-14"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public void hasPerson_personWithSameIdentityFieldsInAddressBook_returnsTrue() {","lastModifiedDate":"2018-08-07"},{"lineNumber":76,"author":{"gitId":"Jaspertzx"},"content":"        bookKeeper.addClient(ALICE);","lastModifiedDate":"2024-04-14"},{"lineNumber":77,"author":{"gitId":"Jaspertzx"},"content":"        Client editedAlice \u003d new ClientBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2024-04-14"},{"lineNumber":78,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-08-06"},{"lineNumber":79,"author":{"gitId":"Jaspertzx"},"content":"        assertTrue(bookKeeper.hasClient(editedAlice));","lastModifiedDate":"2024-04-14"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public void getPersonList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":84,"author":{"gitId":"Jaspertzx"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e bookKeeper.getClientList().remove(0));","lastModifiedDate":"2024-04-14"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":89,"author":{"gitId":"Jaspertzx"},"content":"        String expected \u003d BookKeeper.class.getCanonicalName() + \"{clients\u003d\" + bookKeeper.getClientList() + \"}\";","lastModifiedDate":"2024-04-14"},{"lineNumber":90,"author":{"gitId":"Jaspertzx"},"content":"        assertEquals(expected, bookKeeper.toString());","lastModifiedDate":"2024-04-14"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-24"},{"lineNumber":94,"author":{"gitId":"Jaspertzx"},"content":"     * A stub ReadOnlyBookKeeper whose clients list can violate interface constraints.","lastModifiedDate":"2024-04-14"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-24"},{"lineNumber":96,"author":{"gitId":"Jaspertzx"},"content":"    private static class BookKeeperStub implements ReadOnlyBookKeeper {","lastModifiedDate":"2024-04-14"},{"lineNumber":97,"author":{"gitId":"Jaspertzx"},"content":"        private final ObservableList\u003cClient\u003e clients \u003d FXCollections.observableArrayList();","lastModifiedDate":"2024-04-14"},{"lineNumber":98,"author":{"gitId":"shavonneg"},"content":"        private final ObservableList\u003cOrder\u003e orders \u003d FXCollections.observableArrayList();","lastModifiedDate":"2024-03-19"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":100,"author":{"gitId":"Jaspertzx"},"content":"        BookKeeperStub(Collection\u003cClient\u003e clients) {","lastModifiedDate":"2024-04-14"},{"lineNumber":101,"author":{"gitId":"Jaspertzx"},"content":"            this.clients.setAll(clients);","lastModifiedDate":"2024-04-14"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-24"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2016-12-24"},{"lineNumber":105,"author":{"gitId":"Jaspertzx"},"content":"        public ObservableList\u003cClient\u003e getClientList() {","lastModifiedDate":"2024-04-14"},{"lineNumber":106,"author":{"gitId":"Jaspertzx"},"content":"            return clients;","lastModifiedDate":"2024-04-14"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-24"},{"lineNumber":108,"author":{"gitId":"shavonneg"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":109,"author":{"gitId":"shavonneg"},"content":"        @Override","lastModifiedDate":"2024-03-19"},{"lineNumber":110,"author":{"gitId":"rertyy"},"content":"        public ObservableList\u003cOrder\u003e getOrderList() {","lastModifiedDate":"2024-03-29"},{"lineNumber":111,"author":{"gitId":"rertyy"},"content":"            return orders;","lastModifiedDate":"2024-03-29"},{"lineNumber":112,"author":{"gitId":"shavonneg"},"content":"        }","lastModifiedDate":"2024-03-19"},{"lineNumber":113,"author":{"gitId":"rertyy"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":115,"author":{"gitId":"rertyy"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":116,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-24"}],"authorContributionMap":{"shavonneg":5,"rertyy":4,"Jaspertzx":34,"-":73}},{"path":"src/test/java/seedu/address/model/ModelManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2017-05-31"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"Jaspertzx"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_CLIENTS;","lastModifiedDate":"2024-04-14"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":8,"author":{"gitId":"Jaspertzx"},"content":"import static seedu.address.testutil.TypicalClients.ALICE;","lastModifiedDate":"2024-04-14"},{"lineNumber":9,"author":{"gitId":"Jaspertzx"},"content":"import static seedu.address.testutil.TypicalClients.BENSON;","lastModifiedDate":"2024-04-14"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-08-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-31"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":18,"author":{"gitId":"Jaspertzx"},"content":"import seedu.address.model.client.NameContainsKeywordsPredicate;","lastModifiedDate":"2024-04-14"},{"lineNumber":19,"author":{"gitId":"Jaspertzx"},"content":"import seedu.address.testutil.BookKeeperBuilder;","lastModifiedDate":"2024-04-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":21,"author":{"gitId":"-"},"content":"public class ModelManagerTest {","lastModifiedDate":"2017-05-31"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private ModelManager modelManager \u003d new ModelManager();","lastModifiedDate":"2018-08-06"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public void constructor() {","lastModifiedDate":"2018-11-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertEquals(new UserPrefs(), modelManager.getUserPrefs());","lastModifiedDate":"2018-11-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertEquals(new GuiSettings(), modelManager.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":29,"author":{"gitId":"Jaspertzx"},"content":"        assertEquals(new BookKeeper(), new BookKeeper(modelManager.getAddressBook()));","lastModifiedDate":"2024-04-14"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public void setUserPrefs_nullUserPrefs_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setUserPrefs(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public void setUserPrefs_validUserPrefs_copiesUserPrefs() {","lastModifiedDate":"2018-12-06"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        userPrefs.setAddressBookFilePath(Paths.get(\"address/book/file/path\"));","lastModifiedDate":"2018-11-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(new GuiSettings(1, 2, 3, 4));","lastModifiedDate":"2018-11-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        modelManager.setUserPrefs(userPrefs);","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertEquals(userPrefs, modelManager.getUserPrefs());","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        // Modifying userPrefs should not modify modelManager\u0027s userPrefs","lastModifiedDate":"2018-12-06"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        UserPrefs oldUserPrefs \u003d new UserPrefs(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        userPrefs.setAddressBookFilePath(Paths.get(\"new/address/book/file/path\"));","lastModifiedDate":"2018-12-06"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertEquals(oldUserPrefs, modelManager.getUserPrefs());","lastModifiedDate":"2018-12-06"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public void setGuiSettings_nullGuiSettings_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setGuiSettings(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public void setGuiSettings_validGuiSettings_setsGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        GuiSettings guiSettings \u003d new GuiSettings(1, 2, 3, 4);","lastModifiedDate":"2018-11-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        modelManager.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertEquals(guiSettings, modelManager.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath_nullPath_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setAddressBookFilePath(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath_validPath_setsAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        Path path \u003d Paths.get(\"address/book/file/path\");","lastModifiedDate":"2018-11-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        modelManager.setAddressBookFilePath(path);","lastModifiedDate":"2018-11-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertEquals(path, modelManager.getAddressBookFilePath());","lastModifiedDate":"2018-11-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public void hasPerson_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-06"},{"lineNumber":77,"author":{"gitId":"Jaspertzx"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.hasClient(null));","lastModifiedDate":"2024-04-14"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public void hasPerson_personNotInAddressBook_returnsFalse() {","lastModifiedDate":"2018-08-06"},{"lineNumber":82,"author":{"gitId":"Jaspertzx"},"content":"        assertFalse(modelManager.hasClient(ALICE));","lastModifiedDate":"2024-04-14"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public void hasPerson_personInAddressBook_returnsTrue() {","lastModifiedDate":"2018-08-07"},{"lineNumber":87,"author":{"gitId":"Jaspertzx"},"content":"        modelManager.addClient(ALICE);","lastModifiedDate":"2024-04-14"},{"lineNumber":88,"author":{"gitId":"Jaspertzx"},"content":"        assertTrue(modelManager.hasClient(ALICE));","lastModifiedDate":"2024-04-14"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    public void getFilteredPersonList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":93,"author":{"gitId":"Jaspertzx"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e modelManager.getFilteredClientList().remove(0));","lastModifiedDate":"2024-04-14"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":96,"author":{"gitId":"Jaspertzx"},"content":"    @Test","lastModifiedDate":"2024-03-19"},{"lineNumber":97,"author":{"gitId":"Jaspertzx"},"content":"    public void getOrderList_anyOrder_throwsCommandException() {","lastModifiedDate":"2024-03-19"},{"lineNumber":98,"author":{"gitId":"rertyy"},"content":"        assertEquals(0, modelManager.getFilteredOrderList().size());","lastModifiedDate":"2024-03-21"},{"lineNumber":99,"author":{"gitId":"Jaspertzx"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":100,"author":{"gitId":"Jaspertzx"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":101,"author":{"gitId":"shavonneg"},"content":"    @Test","lastModifiedDate":"2024-03-19"},{"lineNumber":102,"author":{"gitId":"shavonneg"},"content":"    public void getFilteredOrderList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2024-03-19"},{"lineNumber":103,"author":{"gitId":"rertyy"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e modelManager.getFilteredOrderList().remove(0));","lastModifiedDate":"2024-03-21"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-31"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":108,"author":{"gitId":"Jaspertzx"},"content":"        BookKeeper bookKeeper \u003d new BookKeeperBuilder().withPerson(ALICE).withPerson(BENSON).build();","lastModifiedDate":"2024-04-14"},{"lineNumber":109,"author":{"gitId":"Jaspertzx"},"content":"        BookKeeper differentBookKeeper \u003d new BookKeeper();","lastModifiedDate":"2024-04-14"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2017-05-31"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-31"},{"lineNumber":113,"author":{"gitId":"Jaspertzx"},"content":"        modelManager \u003d new ModelManager(bookKeeper, userPrefs);","lastModifiedDate":"2024-04-14"},{"lineNumber":114,"author":{"gitId":"Jaspertzx"},"content":"        ModelManager modelManagerCopy \u003d new ModelManager(bookKeeper, userPrefs);","lastModifiedDate":"2024-04-14"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        assertTrue(modelManager.equals(modelManagerCopy));","lastModifiedDate":"2017-05-31"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-31"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        assertTrue(modelManager.equals(modelManager));","lastModifiedDate":"2017-05-31"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(null));","lastModifiedDate":"2017-05-31"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(5));","lastModifiedDate":"2017-05-31"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":126,"author":{"gitId":"Jaspertzx"},"content":"        // different bookKeeper -\u003e returns false","lastModifiedDate":"2024-04-14"},{"lineNumber":127,"author":{"gitId":"Jaspertzx"},"content":"        assertFalse(modelManager.equals(new ModelManager(differentBookKeeper, userPrefs)));","lastModifiedDate":"2024-04-14"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        // different filteredList -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        String[] keywords \u003d ALICE.getName().fullName.split(\"\\\\s+\");","lastModifiedDate":"2017-07-19"},{"lineNumber":131,"author":{"gitId":"Jaspertzx"},"content":"        modelManager.updateFilteredClientList(new NameContainsKeywordsPredicate(Arrays.asList(keywords)));","lastModifiedDate":"2024-04-14"},{"lineNumber":132,"author":{"gitId":"Jaspertzx"},"content":"        assertFalse(modelManager.equals(new ModelManager(bookKeeper, userPrefs)));","lastModifiedDate":"2024-04-14"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        // resets modelManager to initial state for upcoming tests","lastModifiedDate":"2017-08-05"},{"lineNumber":135,"author":{"gitId":"Jaspertzx"},"content":"        modelManager.updateFilteredClientList(PREDICATE_SHOW_ALL_CLIENTS);","lastModifiedDate":"2024-04-14"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        // different userPrefs -\u003e returns false","lastModifiedDate":"2018-11-27"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        UserPrefs differentUserPrefs \u003d new UserPrefs();","lastModifiedDate":"2017-05-31"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        differentUserPrefs.setAddressBookFilePath(Paths.get(\"differentFilePath\"));","lastModifiedDate":"2018-08-09"},{"lineNumber":140,"author":{"gitId":"Jaspertzx"},"content":"        assertFalse(modelManager.equals(new ModelManager(bookKeeper, differentUserPrefs)));","lastModifiedDate":"2024-04-14"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":142,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-31"}],"authorContributionMap":{"shavonneg":2,"rertyy":2,"Jaspertzx":25,"-":113}},{"path":"src/test/java/seedu/address/model/client/AddressTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Jaspertzx"},"content":"package seedu.address.model.client;","lastModifiedDate":"2024-04-14"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class AddressTest {","lastModifiedDate":"2017-01-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2017-12-04"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Address(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void constructor_invalidAddress_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        String invalidAddress \u003d \"\";","lastModifiedDate":"2017-05-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Address(invalidAddress));","lastModifiedDate":"2019-03-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-01-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void isValidAddress() {","lastModifiedDate":"2017-01-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        // null address","lastModifiedDate":"2017-12-04"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e Address.isValidAddress(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        // invalid addresses","lastModifiedDate":"2017-01-16"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertFalse(Address.isValidAddress(\"\")); // empty string","lastModifiedDate":"2017-01-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertFalse(Address.isValidAddress(\" \")); // spaces only","lastModifiedDate":"2017-01-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // valid addresses","lastModifiedDate":"2017-01-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertTrue(Address.isValidAddress(\"Blk 456, Den Road, #01-355\"));","lastModifiedDate":"2017-01-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertTrue(Address.isValidAddress(\"-\")); // one character","lastModifiedDate":"2017-01-16"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertTrue(Address.isValidAddress(\"Leng Inc; 1234 Market St; San Francisco CA 2349879; USA\")); // long address","lastModifiedDate":"2017-01-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2019-02-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        Address address \u003d new Address(\"Valid Address\");","lastModifiedDate":"2019-02-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2019-02-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        assertTrue(address.equals(new Address(\"Valid Address\")));","lastModifiedDate":"2019-02-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2019-02-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertTrue(address.equals(address));","lastModifiedDate":"2019-02-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2019-02-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertFalse(address.equals(null));","lastModifiedDate":"2019-02-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2019-02-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertFalse(address.equals(5.0f));","lastModifiedDate":"2019-02-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2019-02-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        assertFalse(address.equals(new Address(\"Other Valid Address\")));","lastModifiedDate":"2019-02-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-16"}],"authorContributionMap":{"Jaspertzx":1,"-":55}},{"path":"src/test/java/seedu/address/model/client/ClientTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Jaspertzx"},"content":"package seedu.address.model.client;","lastModifiedDate":"2024-04-14"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-02-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2018-04-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":12,"author":{"gitId":"Jaspertzx"},"content":"import static seedu.address.testutil.TypicalClients.ALICE;","lastModifiedDate":"2024-04-14"},{"lineNumber":13,"author":{"gitId":"Jaspertzx"},"content":"import static seedu.address.testutil.TypicalClients.BOB;","lastModifiedDate":"2024-04-14"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":15,"author":{"gitId":"Jaspertzx"},"content":"import java.util.HashSet;","lastModifiedDate":"2024-03-19"},{"lineNumber":16,"author":{"gitId":"Jaspertzx"},"content":"import java.util.Set;","lastModifiedDate":"2024-03-19"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":20,"author":{"gitId":"Jaspertzx"},"content":"import seedu.address.model.order.Order;","lastModifiedDate":"2024-03-19"},{"lineNumber":21,"author":{"gitId":"Jaspertzx"},"content":"import seedu.address.testutil.ClientBuilder;","lastModifiedDate":"2024-04-14"},{"lineNumber":22,"author":{"gitId":"Jaspertzx"},"content":"import seedu.address.testutil.OrderBuilder;","lastModifiedDate":"2024-03-19"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":24,"author":{"gitId":"Jaspertzx"},"content":"public class ClientTest {","lastModifiedDate":"2024-04-14"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void asObservableList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":28,"author":{"gitId":"Jaspertzx"},"content":"        Client client \u003d new ClientBuilder().build();","lastModifiedDate":"2024-04-14"},{"lineNumber":29,"author":{"gitId":"Jaspertzx"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e client.getTags().remove(0));","lastModifiedDate":"2024-04-14"},{"lineNumber":30,"author":{"gitId":"Jaspertzx"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e client.getOrders().remove(0));","lastModifiedDate":"2024-04-14"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-19"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public void isSamePerson() {","lastModifiedDate":"2018-04-19"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2018-04-19"},{"lineNumber":36,"author":{"gitId":"Jaspertzx"},"content":"        assertTrue(ALICE.isSameClient(ALICE));","lastModifiedDate":"2024-04-14"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":39,"author":{"gitId":"Jaspertzx"},"content":"        assertFalse(ALICE.isSameClient(null));","lastModifiedDate":"2024-04-14"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        // same name, all other attributes different -\u003e returns true","lastModifiedDate":"2020-12-18"},{"lineNumber":42,"author":{"gitId":"Jaspertzx"},"content":"        Client editedAlice \u003d new ClientBuilder(ALICE).withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_BOB)","lastModifiedDate":"2024-04-14"},{"lineNumber":43,"author":{"gitId":"-"},"content":"                .withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2020-12-18"},{"lineNumber":44,"author":{"gitId":"Jaspertzx"},"content":"        assertTrue(ALICE.isSameClient(editedAlice));","lastModifiedDate":"2024-04-14"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        // different name, all other attributes same -\u003e returns false","lastModifiedDate":"2020-12-18"},{"lineNumber":47,"author":{"gitId":"Jaspertzx"},"content":"        editedAlice \u003d new ClientBuilder(ALICE).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2024-04-14"},{"lineNumber":48,"author":{"gitId":"Jaspertzx"},"content":"        assertFalse(ALICE.isSameClient(editedAlice));","lastModifiedDate":"2024-04-14"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        // name differs in case, all other attributes same -\u003e returns false","lastModifiedDate":"2020-12-18"},{"lineNumber":51,"author":{"gitId":"Jaspertzx"},"content":"        Client editedBob \u003d new ClientBuilder(BOB).withName(VALID_NAME_BOB.toLowerCase()).build();","lastModifiedDate":"2024-04-14"},{"lineNumber":52,"author":{"gitId":"Jaspertzx"},"content":"        assertFalse(BOB.isSameClient(editedBob));","lastModifiedDate":"2024-04-14"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        // name has trailing spaces, all other attributes same -\u003e returns false","lastModifiedDate":"2020-12-18"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        String nameWithTrailingSpaces \u003d VALID_NAME_BOB + \" \";","lastModifiedDate":"2020-12-18"},{"lineNumber":56,"author":{"gitId":"Jaspertzx"},"content":"        editedBob \u003d new ClientBuilder(BOB).withName(nameWithTrailingSpaces).build();","lastModifiedDate":"2024-04-14"},{"lineNumber":57,"author":{"gitId":"Jaspertzx"},"content":"        assertFalse(BOB.isSameClient(editedBob));","lastModifiedDate":"2024-04-14"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":60,"author":{"gitId":"Jaspertzx"},"content":"    @Test","lastModifiedDate":"2024-03-19"},{"lineNumber":61,"author":{"gitId":"Jaspertzx"},"content":"    public void isSameTestWithOrder() {","lastModifiedDate":"2024-03-19"},{"lineNumber":62,"author":{"gitId":"Jaspertzx"},"content":"        ClientBuilder clientBuilder \u003d new ClientBuilder();","lastModifiedDate":"2024-04-14"},{"lineNumber":63,"author":{"gitId":"Jaspertzx"},"content":"        Client client \u003d clientBuilder.build();","lastModifiedDate":"2024-04-14"},{"lineNumber":64,"author":{"gitId":"Jaspertzx"},"content":"        OrderBuilder orderBuilder \u003d new OrderBuilder();","lastModifiedDate":"2024-03-19"},{"lineNumber":65,"author":{"gitId":"Jaspertzx"},"content":"        Order order \u003d orderBuilder.build();","lastModifiedDate":"2024-03-19"},{"lineNumber":66,"author":{"gitId":"Jaspertzx"},"content":"        Set\u003cOrder\u003e setOfOrders \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2024-03-19"},{"lineNumber":67,"author":{"gitId":"Jaspertzx"},"content":"        setOfOrders.add(order);","lastModifiedDate":"2024-03-19"},{"lineNumber":68,"author":{"gitId":"Jaspertzx"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":69,"author":{"gitId":"Jaspertzx"},"content":"        Client editedAlice \u003d new Client(client.getName(), client.getPhone(),","lastModifiedDate":"2024-04-14"},{"lineNumber":70,"author":{"gitId":"Jaspertzx"},"content":"                client.getEmail(), client.getAddress(), client.getTags(), setOfOrders);","lastModifiedDate":"2024-04-14"},{"lineNumber":71,"author":{"gitId":"Jaspertzx"},"content":"        assertTrue(client.isSameClient(editedAlice));","lastModifiedDate":"2024-04-14"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-19"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-04-19"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2018-04-19"},{"lineNumber":77,"author":{"gitId":"Jaspertzx"},"content":"        Client aliceCopy \u003d new ClientBuilder(ALICE).build();","lastModifiedDate":"2024-04-14"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.equals(aliceCopy));","lastModifiedDate":"2018-04-19"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2018-04-19"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.equals(ALICE));","lastModifiedDate":"2018-04-19"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(null));","lastModifiedDate":"2018-04-19"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        // different type -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(5));","lastModifiedDate":"2018-04-19"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":89,"author":{"gitId":"Jaspertzx"},"content":"        // different client -\u003e returns false","lastModifiedDate":"2024-04-14"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(BOB));","lastModifiedDate":"2018-04-19"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        // different name -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":93,"author":{"gitId":"Jaspertzx"},"content":"        Client editedAlice \u003d new ClientBuilder(ALICE).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2024-04-14"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        // different phone -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":97,"author":{"gitId":"Jaspertzx"},"content":"        editedAlice \u003d new ClientBuilder(ALICE).withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2024-04-14"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        // different email -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":101,"author":{"gitId":"Jaspertzx"},"content":"        editedAlice \u003d new ClientBuilder(ALICE).withEmail(VALID_EMAIL_BOB).build();","lastModifiedDate":"2024-04-14"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        // different address -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":105,"author":{"gitId":"Jaspertzx"},"content":"        editedAlice \u003d new ClientBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).build();","lastModifiedDate":"2024-04-14"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-18"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        // different tags -\u003e returns false","lastModifiedDate":"2018-04-18"},{"lineNumber":109,"author":{"gitId":"Jaspertzx"},"content":"        editedAlice \u003d new ClientBuilder(ALICE).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2024-04-14"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-18"},{"lineNumber":111,"author":{"gitId":"kailinteoo"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":116,"author":{"gitId":"Jaspertzx"},"content":"        String expected \u003d Client.class.getCanonicalName() + \"{name\u003d\" + ALICE.getName() + \", phone\u003d\" + ALICE.getPhone()","lastModifiedDate":"2024-04-14"},{"lineNumber":117,"author":{"gitId":"kailinteoo"},"content":"                + \", email\u003d\" + ALICE.getEmail() + \", address\u003d\" + ALICE.getAddress() + \", tags\u003d\" + ALICE.getTags()","lastModifiedDate":"2024-03-19"},{"lineNumber":118,"author":{"gitId":"kailinteoo"},"content":"                + \", orders\u003d\" + ALICE.getOrders() + \"}\";","lastModifiedDate":"2024-03-19"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        assertEquals(expected, ALICE.toString());","lastModifiedDate":"2019-02-23"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-09-01"}],"authorContributionMap":{"kailinteoo":3,"Jaspertzx":42,"-":76}},{"path":"src/test/java/seedu/address/model/client/EmailTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Jaspertzx"},"content":"package seedu.address.model.client;","lastModifiedDate":"2024-04-14"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class EmailTest {","lastModifiedDate":"2017-01-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2017-12-04"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Email(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void constructor_invalidEmail_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        String invalidEmail \u003d \"\";","lastModifiedDate":"2017-05-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Email(invalidEmail));","lastModifiedDate":"2019-03-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-01-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void isValidEmail() {","lastModifiedDate":"2017-01-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        // null email","lastModifiedDate":"2017-12-04"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e Email.isValidEmail(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        // blank email","lastModifiedDate":"2017-01-16"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"\")); // empty string","lastModifiedDate":"2017-01-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\" \")); // spaces only","lastModifiedDate":"2017-01-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // missing parts","lastModifiedDate":"2017-01-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"@example.com\")); // missing local part","lastModifiedDate":"2017-04-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjackexample.com\")); // missing \u0027@\u0027 symbol","lastModifiedDate":"2017-04-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@\")); // missing domain name","lastModifiedDate":"2017-01-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        // invalid parts","lastModifiedDate":"2017-01-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@-\")); // invalid domain name","lastModifiedDate":"2017-01-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@exam_ple.com\")); // underscore in domain name","lastModifiedDate":"2018-02-09"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peter jack@example.com\")); // spaces in local part","lastModifiedDate":"2017-04-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@exam ple.com\")); // spaces in domain name","lastModifiedDate":"2017-04-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\" peterjack@example.com\")); // leading space","lastModifiedDate":"2018-02-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@example.com \")); // trailing space","lastModifiedDate":"2018-02-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@@example.com\")); // double \u0027@\u0027 symbol","lastModifiedDate":"2017-04-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peter@jack@example.com\")); // \u0027@\u0027 symbol in local part","lastModifiedDate":"2017-04-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"-peterjack@example.com\")); // local part starts with a hyphen","lastModifiedDate":"2021-07-20"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack-@example.com\")); // local part ends with a hyphen","lastModifiedDate":"2021-07-20"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peter..jack@example.com\")); // local part has two consecutive periods","lastModifiedDate":"2021-07-20"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@example@com\")); // \u0027@\u0027 symbol in domain name","lastModifiedDate":"2017-04-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@.example.com\")); // domain name starts with a period","lastModifiedDate":"2018-02-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@example.com.\")); // domain name ends with a period","lastModifiedDate":"2018-02-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@-example.com\")); // domain name starts with a hyphen","lastModifiedDate":"2018-02-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@example.com-\")); // domain name ends with a hyphen","lastModifiedDate":"2018-02-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@example.c\")); // top level domain has less than two chars","lastModifiedDate":"2021-07-20"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        // valid email","lastModifiedDate":"2017-01-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"PeterJack_1190@example.com\")); // underscore in local part","lastModifiedDate":"2021-07-20"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"PeterJack.1190@example.com\")); // period in local part","lastModifiedDate":"2021-07-20"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"PeterJack+1190@example.com\")); // \u0027+\u0027 symbol in local part","lastModifiedDate":"2021-07-20"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"PeterJack-1190@example.com\")); // hyphen in local part","lastModifiedDate":"2021-07-20"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"a@bc\")); // minimal","lastModifiedDate":"2018-02-09"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"test@localhost\")); // alphabets only","lastModifiedDate":"2017-01-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"123@145\")); // numeric local part and domain name","lastModifiedDate":"2017-01-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"a1+be.d@example1.com\")); // mixture of alphanumeric and special characters","lastModifiedDate":"2021-07-20"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"peter_jack@very-very-very-long-example.com\")); // long domain name","lastModifiedDate":"2018-02-09"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"if.you.dream.it_you.can.do.it@example.com\")); // long local part","lastModifiedDate":"2017-04-05"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"e1234567@u.nus.edu\")); // more than one period in domain","lastModifiedDate":"2021-07-20"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-16"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2019-02-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        Email email \u003d new Email(\"valid@email\");","lastModifiedDate":"2019-02-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2019-02-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        assertTrue(email.equals(new Email(\"valid@email\")));","lastModifiedDate":"2019-02-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2019-02-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        assertTrue(email.equals(email));","lastModifiedDate":"2019-02-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2019-02-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        assertFalse(email.equals(null));","lastModifiedDate":"2019-02-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2019-02-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        assertFalse(email.equals(5.0f));","lastModifiedDate":"2019-02-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2019-02-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        assertFalse(email.equals(new Email(\"other.valid@email\")));","lastModifiedDate":"2019-02-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-16"}],"authorContributionMap":{"Jaspertzx":1,"-":87}},{"path":"src/test/java/seedu/address/model/client/NameContainsKeywordsPredicateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Jaspertzx"},"content":"package seedu.address.model.client;","lastModifiedDate":"2024-04-14"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-02-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-06-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"Jaspertzx"},"content":"import seedu.address.testutil.ClientBuilder;","lastModifiedDate":"2024-04-14"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class NameContainsKeywordsPredicateTest {","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        List\u003cString\u003e firstPredicateKeywordList \u003d Collections.singletonList(\"first\");","lastModifiedDate":"2017-06-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        List\u003cString\u003e secondPredicateKeywordList \u003d Arrays.asList(\"first\", \"second\");","lastModifiedDate":"2017-06-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate firstPredicate \u003d new NameContainsKeywordsPredicate(firstPredicateKeywordList);","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate secondPredicate \u003d new NameContainsKeywordsPredicate(secondPredicateKeywordList);","lastModifiedDate":"2017-06-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        assertTrue(firstPredicate.equals(firstPredicate));","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate firstPredicateCopy \u003d new NameContainsKeywordsPredicate(firstPredicateKeywordList);","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertTrue(firstPredicate.equals(firstPredicateCopy));","lastModifiedDate":"2017-06-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(firstPredicate.equals(1));","lastModifiedDate":"2017-06-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertFalse(firstPredicate.equals(null));","lastModifiedDate":"2017-06-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":38,"author":{"gitId":"Jaspertzx"},"content":"        // different client -\u003e returns false","lastModifiedDate":"2024-04-14"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertFalse(firstPredicate.equals(secondPredicate));","lastModifiedDate":"2017-06-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public void test_nameContainsKeywords_returnsTrue() {","lastModifiedDate":"2017-08-15"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        // One keyword","lastModifiedDate":"2017-06-12"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d new NameContainsKeywordsPredicate(Collections.singletonList(\"Alice\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":46,"author":{"gitId":"Jaspertzx"},"content":"        assertTrue(predicate.test(new ClientBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2024-04-14"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        // Multiple keywords","lastModifiedDate":"2017-06-12"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"Alice\", \"Bob\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":50,"author":{"gitId":"Jaspertzx"},"content":"        assertTrue(predicate.test(new ClientBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2024-04-14"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        // Only one matching keyword","lastModifiedDate":"2017-06-12"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"Bob\", \"Carol\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":54,"author":{"gitId":"Jaspertzx"},"content":"        assertTrue(predicate.test(new ClientBuilder().withName(\"Alice Carol\").build()));","lastModifiedDate":"2024-04-14"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        // Mixed-case keywords","lastModifiedDate":"2017-06-12"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"aLIce\", \"bOB\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":58,"author":{"gitId":"Jaspertzx"},"content":"        assertTrue(predicate.test(new ClientBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2024-04-14"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public void test_nameDoesNotContainKeywords_returnsFalse() {","lastModifiedDate":"2017-08-15"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        // Zero keywords","lastModifiedDate":"2017-06-12"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d new NameContainsKeywordsPredicate(Collections.emptyList());","lastModifiedDate":"2017-06-12"},{"lineNumber":65,"author":{"gitId":"Jaspertzx"},"content":"        assertFalse(predicate.test(new ClientBuilder().withName(\"Alice\").build()));","lastModifiedDate":"2024-04-14"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        // Non-matching keyword","lastModifiedDate":"2017-06-12"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"Carol\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":69,"author":{"gitId":"Jaspertzx"},"content":"        assertFalse(predicate.test(new ClientBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2024-04-14"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        // Keywords match phone, email and address, but does not match name","lastModifiedDate":"2017-06-12"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"12345\", \"alice@email.com\", \"Main\", \"Street\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":73,"author":{"gitId":"Jaspertzx"},"content":"        assertFalse(predicate.test(new ClientBuilder().withName(\"Alice\").withPhone(\"12345\")","lastModifiedDate":"2024-04-14"},{"lineNumber":74,"author":{"gitId":"-"},"content":"                .withEmail(\"alice@email.com\").withAddress(\"Main Street\").build()));","lastModifiedDate":"2017-06-12"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        List\u003cString\u003e keywords \u003d List.of(\"keyword1\", \"keyword2\");","lastModifiedDate":"2019-02-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d new NameContainsKeywordsPredicate(keywords);","lastModifiedDate":"2019-02-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        String expected \u003d NameContainsKeywordsPredicate.class.getCanonicalName() + \"{keywords\u003d\" + keywords + \"}\";","lastModifiedDate":"2019-02-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        assertEquals(expected, predicate.toString());","lastModifiedDate":"2019-02-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"Jaspertzx":10,"-":75}},{"path":"src/test/java/seedu/address/model/client/NameTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Jaspertzx"},"content":"package seedu.address.model.client;","lastModifiedDate":"2024-04-14"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class NameTest {","lastModifiedDate":"2017-01-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2017-12-04"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Name(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void constructor_invalidName_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        String invalidName \u003d \"\";","lastModifiedDate":"2017-05-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Name(invalidName));","lastModifiedDate":"2019-03-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-01-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void isValidName() {","lastModifiedDate":"2017-01-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        // null name","lastModifiedDate":"2017-12-04"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e Name.isValidName(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        // invalid name","lastModifiedDate":"2017-01-16"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertFalse(Name.isValidName(\"\")); // empty string","lastModifiedDate":"2017-01-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertFalse(Name.isValidName(\" \")); // spaces only","lastModifiedDate":"2017-01-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertFalse(Name.isValidName(\"^\")); // only non-alphanumeric characters","lastModifiedDate":"2017-01-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertFalse(Name.isValidName(\"peter*\")); // contains non-alphanumeric characters","lastModifiedDate":"2017-01-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        // valid name","lastModifiedDate":"2017-01-16"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"peter jack\")); // alphabets only","lastModifiedDate":"2017-01-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"12345\")); // numbers only","lastModifiedDate":"2017-01-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"peter the 2nd\")); // alphanumeric characters","lastModifiedDate":"2017-01-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"Capital Tan\")); // with capital letters","lastModifiedDate":"2017-01-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"David Roger Jackson Ray Jr 2nd\")); // long names","lastModifiedDate":"2017-01-16"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-16"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2019-02-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        Name name \u003d new Name(\"Valid Name\");","lastModifiedDate":"2019-02-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2019-02-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertTrue(name.equals(new Name(\"Valid Name\")));","lastModifiedDate":"2019-02-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2019-02-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertTrue(name.equals(name));","lastModifiedDate":"2019-02-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2019-02-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertFalse(name.equals(null));","lastModifiedDate":"2019-02-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2019-02-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        assertFalse(name.equals(5.0f));","lastModifiedDate":"2019-02-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2019-02-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertFalse(name.equals(new Name(\"Other Valid Name\")));","lastModifiedDate":"2019-02-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-16"}],"authorContributionMap":{"Jaspertzx":1,"-":59}},{"path":"src/test/java/seedu/address/model/client/PhoneTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Jaspertzx"},"content":"package seedu.address.model.client;","lastModifiedDate":"2024-04-14"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class PhoneTest {","lastModifiedDate":"2017-01-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2017-12-04"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Phone(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void constructor_invalidPhone_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        String invalidPhone \u003d \"\";","lastModifiedDate":"2017-05-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Phone(invalidPhone));","lastModifiedDate":"2019-03-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-01-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void isValidPhone() {","lastModifiedDate":"2017-01-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        // null phone number","lastModifiedDate":"2017-12-04"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e Phone.isValidPhone(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        // invalid phone numbers","lastModifiedDate":"2017-01-16"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\"\")); // empty string","lastModifiedDate":"2017-01-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\" \")); // spaces only","lastModifiedDate":"2017-01-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\"91\")); // less than 3 numbers","lastModifiedDate":"2017-05-04"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\"phone\")); // non-numeric","lastModifiedDate":"2017-01-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\"9011p041\")); // alphabets within digits","lastModifiedDate":"2017-01-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\"9312 1534\")); // spaces within digits","lastModifiedDate":"2017-01-16"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // valid phone numbers","lastModifiedDate":"2017-01-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertTrue(Phone.isValidPhone(\"911\")); // exactly 3 numbers","lastModifiedDate":"2017-05-04"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertTrue(Phone.isValidPhone(\"93121534\"));","lastModifiedDate":"2017-01-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertTrue(Phone.isValidPhone(\"124293842033123\")); // long phone numbers","lastModifiedDate":"2017-01-16"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-16"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2019-02-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        Phone phone \u003d new Phone(\"999\");","lastModifiedDate":"2019-02-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2019-02-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertTrue(phone.equals(new Phone(\"999\")));","lastModifiedDate":"2019-02-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2019-02-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertTrue(phone.equals(phone));","lastModifiedDate":"2019-02-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2019-02-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertFalse(phone.equals(null));","lastModifiedDate":"2019-02-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2019-02-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        assertFalse(phone.equals(5.0f));","lastModifiedDate":"2019-02-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2019-02-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertFalse(phone.equals(new Phone(\"995\")));","lastModifiedDate":"2019-02-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-16"}],"authorContributionMap":{"Jaspertzx":1,"-":59}},{"path":"src/test/java/seedu/address/model/client/UniqueClientListTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Jaspertzx"},"content":"package seedu.address.model.client;","lastModifiedDate":"2024-04-14"},{"lineNumber":2,"author":{"gitId":"Jaspertzx"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":3,"author":{"gitId":"Jaspertzx"},"content":"import static org.junit.jupiter.api.Assertions.assertDoesNotThrow;","lastModifiedDate":"2024-04-14"},{"lineNumber":4,"author":{"gitId":"Jaspertzx"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-04-14"},{"lineNumber":5,"author":{"gitId":"Jaspertzx"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2024-04-14"},{"lineNumber":6,"author":{"gitId":"Jaspertzx"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2024-04-14"},{"lineNumber":7,"author":{"gitId":"Jaspertzx"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2024-04-14"},{"lineNumber":8,"author":{"gitId":"Jaspertzx"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2024-04-14"},{"lineNumber":9,"author":{"gitId":"Jaspertzx"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2024-04-14"},{"lineNumber":10,"author":{"gitId":"Jaspertzx"},"content":"import static seedu.address.testutil.TypicalClients.ALICE;","lastModifiedDate":"2024-04-14"},{"lineNumber":11,"author":{"gitId":"Jaspertzx"},"content":"import static seedu.address.testutil.TypicalClients.BOB;","lastModifiedDate":"2024-04-14"},{"lineNumber":12,"author":{"gitId":"Jaspertzx"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":13,"author":{"gitId":"Jaspertzx"},"content":"import java.util.Arrays;","lastModifiedDate":"2024-04-14"},{"lineNumber":14,"author":{"gitId":"Jaspertzx"},"content":"import java.util.Collections;","lastModifiedDate":"2024-04-14"},{"lineNumber":15,"author":{"gitId":"Jaspertzx"},"content":"import java.util.List;","lastModifiedDate":"2024-04-14"},{"lineNumber":16,"author":{"gitId":"Jaspertzx"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":17,"author":{"gitId":"Jaspertzx"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-04-14"},{"lineNumber":18,"author":{"gitId":"Jaspertzx"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":19,"author":{"gitId":"Jaspertzx"},"content":"import seedu.address.model.client.exceptions.ClientNotFoundException;","lastModifiedDate":"2024-04-14"},{"lineNumber":20,"author":{"gitId":"Jaspertzx"},"content":"import seedu.address.model.client.exceptions.DuplicateClientException;","lastModifiedDate":"2024-04-14"},{"lineNumber":21,"author":{"gitId":"Jaspertzx"},"content":"import seedu.address.model.order.Order;","lastModifiedDate":"2024-04-14"},{"lineNumber":22,"author":{"gitId":"Jaspertzx"},"content":"import seedu.address.testutil.ClientBuilder;","lastModifiedDate":"2024-04-14"},{"lineNumber":23,"author":{"gitId":"Jaspertzx"},"content":"import seedu.address.testutil.OrderBuilder;","lastModifiedDate":"2024-04-14"},{"lineNumber":24,"author":{"gitId":"Jaspertzx"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":25,"author":{"gitId":"Jaspertzx"},"content":"public class UniqueClientListTest {","lastModifiedDate":"2024-04-14"},{"lineNumber":26,"author":{"gitId":"Jaspertzx"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":27,"author":{"gitId":"Jaspertzx"},"content":"    private final UniqueClientList uniqueClientList \u003d new UniqueClientList();","lastModifiedDate":"2024-04-14"},{"lineNumber":28,"author":{"gitId":"Jaspertzx"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":29,"author":{"gitId":"Jaspertzx"},"content":"    @Test","lastModifiedDate":"2024-04-14"},{"lineNumber":30,"author":{"gitId":"Jaspertzx"},"content":"    public void contains_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2024-04-14"},{"lineNumber":31,"author":{"gitId":"Jaspertzx"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueClientList.contains(null));","lastModifiedDate":"2024-04-14"},{"lineNumber":32,"author":{"gitId":"Jaspertzx"},"content":"    }","lastModifiedDate":"2024-04-14"},{"lineNumber":33,"author":{"gitId":"Jaspertzx"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":34,"author":{"gitId":"Jaspertzx"},"content":"    @Test","lastModifiedDate":"2024-04-14"},{"lineNumber":35,"author":{"gitId":"Jaspertzx"},"content":"    public void contains_personNotInList_returnsFalse() {","lastModifiedDate":"2024-04-14"},{"lineNumber":36,"author":{"gitId":"Jaspertzx"},"content":"        assertFalse(uniqueClientList.contains(ALICE));","lastModifiedDate":"2024-04-14"},{"lineNumber":37,"author":{"gitId":"Jaspertzx"},"content":"    }","lastModifiedDate":"2024-04-14"},{"lineNumber":38,"author":{"gitId":"Jaspertzx"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":39,"author":{"gitId":"Jaspertzx"},"content":"    @Test","lastModifiedDate":"2024-04-14"},{"lineNumber":40,"author":{"gitId":"Jaspertzx"},"content":"    public void contains_personInList_returnsTrue() {","lastModifiedDate":"2024-04-14"},{"lineNumber":41,"author":{"gitId":"Jaspertzx"},"content":"        uniqueClientList.add(ALICE);","lastModifiedDate":"2024-04-14"},{"lineNumber":42,"author":{"gitId":"Jaspertzx"},"content":"        assertTrue(uniqueClientList.contains(ALICE));","lastModifiedDate":"2024-04-14"},{"lineNumber":43,"author":{"gitId":"Jaspertzx"},"content":"    }","lastModifiedDate":"2024-04-14"},{"lineNumber":44,"author":{"gitId":"Jaspertzx"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":45,"author":{"gitId":"Jaspertzx"},"content":"    @Test","lastModifiedDate":"2024-04-14"},{"lineNumber":46,"author":{"gitId":"Jaspertzx"},"content":"    public void contains_personWithSameIdentityFieldsInList_returnsTrue() {","lastModifiedDate":"2024-04-14"},{"lineNumber":47,"author":{"gitId":"Jaspertzx"},"content":"        uniqueClientList.add(ALICE);","lastModifiedDate":"2024-04-14"},{"lineNumber":48,"author":{"gitId":"Jaspertzx"},"content":"        Client editedAlice \u003d new ClientBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2024-04-14"},{"lineNumber":49,"author":{"gitId":"Jaspertzx"},"content":"                .build();","lastModifiedDate":"2024-04-14"},{"lineNumber":50,"author":{"gitId":"Jaspertzx"},"content":"        assertTrue(uniqueClientList.contains(editedAlice));","lastModifiedDate":"2024-04-14"},{"lineNumber":51,"author":{"gitId":"Jaspertzx"},"content":"    }","lastModifiedDate":"2024-04-14"},{"lineNumber":52,"author":{"gitId":"Jaspertzx"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":53,"author":{"gitId":"Jaspertzx"},"content":"    @Test","lastModifiedDate":"2024-04-14"},{"lineNumber":54,"author":{"gitId":"Jaspertzx"},"content":"    public void add_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2024-04-14"},{"lineNumber":55,"author":{"gitId":"Jaspertzx"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueClientList.add(null));","lastModifiedDate":"2024-04-14"},{"lineNumber":56,"author":{"gitId":"Jaspertzx"},"content":"    }","lastModifiedDate":"2024-04-14"},{"lineNumber":57,"author":{"gitId":"Jaspertzx"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":58,"author":{"gitId":"Jaspertzx"},"content":"    @Test","lastModifiedDate":"2024-04-14"},{"lineNumber":59,"author":{"gitId":"Jaspertzx"},"content":"    public void add_duplicatePerson_throwsDuplicatePersonException() {","lastModifiedDate":"2024-04-14"},{"lineNumber":60,"author":{"gitId":"Jaspertzx"},"content":"        uniqueClientList.add(ALICE);","lastModifiedDate":"2024-04-14"},{"lineNumber":61,"author":{"gitId":"Jaspertzx"},"content":"        assertThrows(DuplicateClientException.class, () -\u003e uniqueClientList.add(ALICE));","lastModifiedDate":"2024-04-14"},{"lineNumber":62,"author":{"gitId":"Jaspertzx"},"content":"    }","lastModifiedDate":"2024-04-14"},{"lineNumber":63,"author":{"gitId":"Jaspertzx"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":64,"author":{"gitId":"Jaspertzx"},"content":"    @Test","lastModifiedDate":"2024-04-14"},{"lineNumber":65,"author":{"gitId":"Jaspertzx"},"content":"    public void setPerson_nullTargetPerson_throwsNullPointerException() {","lastModifiedDate":"2024-04-14"},{"lineNumber":66,"author":{"gitId":"Jaspertzx"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueClientList.setClient(null, ALICE));","lastModifiedDate":"2024-04-14"},{"lineNumber":67,"author":{"gitId":"Jaspertzx"},"content":"    }","lastModifiedDate":"2024-04-14"},{"lineNumber":68,"author":{"gitId":"Jaspertzx"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":69,"author":{"gitId":"Jaspertzx"},"content":"    @Test","lastModifiedDate":"2024-04-14"},{"lineNumber":70,"author":{"gitId":"Jaspertzx"},"content":"    public void setPerson_nullEditedPerson_throwsNullPointerException() {","lastModifiedDate":"2024-04-14"},{"lineNumber":71,"author":{"gitId":"Jaspertzx"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueClientList.setClient(ALICE, null));","lastModifiedDate":"2024-04-14"},{"lineNumber":72,"author":{"gitId":"Jaspertzx"},"content":"    }","lastModifiedDate":"2024-04-14"},{"lineNumber":73,"author":{"gitId":"Jaspertzx"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":74,"author":{"gitId":"Jaspertzx"},"content":"    @Test","lastModifiedDate":"2024-04-14"},{"lineNumber":75,"author":{"gitId":"Jaspertzx"},"content":"    public void setPerson_targetPersonNotInList_throwsPersonNotFoundException() {","lastModifiedDate":"2024-04-14"},{"lineNumber":76,"author":{"gitId":"Jaspertzx"},"content":"        assertThrows(ClientNotFoundException.class, () -\u003e uniqueClientList.setClient(ALICE, ALICE));","lastModifiedDate":"2024-04-14"},{"lineNumber":77,"author":{"gitId":"Jaspertzx"},"content":"    }","lastModifiedDate":"2024-04-14"},{"lineNumber":78,"author":{"gitId":"Jaspertzx"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":79,"author":{"gitId":"Jaspertzx"},"content":"    @Test","lastModifiedDate":"2024-04-14"},{"lineNumber":80,"author":{"gitId":"Jaspertzx"},"content":"    public void setPerson_editedPersonIsSamePerson_success() {","lastModifiedDate":"2024-04-14"},{"lineNumber":81,"author":{"gitId":"Jaspertzx"},"content":"        uniqueClientList.add(ALICE);","lastModifiedDate":"2024-04-14"},{"lineNumber":82,"author":{"gitId":"Jaspertzx"},"content":"        uniqueClientList.setClient(ALICE, ALICE);","lastModifiedDate":"2024-04-14"},{"lineNumber":83,"author":{"gitId":"Jaspertzx"},"content":"        UniqueClientList expectedUniqueClientList \u003d new UniqueClientList();","lastModifiedDate":"2024-04-14"},{"lineNumber":84,"author":{"gitId":"Jaspertzx"},"content":"        expectedUniqueClientList.add(ALICE);","lastModifiedDate":"2024-04-14"},{"lineNumber":85,"author":{"gitId":"Jaspertzx"},"content":"        assertEquals(expectedUniqueClientList, uniqueClientList);","lastModifiedDate":"2024-04-14"},{"lineNumber":86,"author":{"gitId":"Jaspertzx"},"content":"    }","lastModifiedDate":"2024-04-14"},{"lineNumber":87,"author":{"gitId":"Jaspertzx"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":88,"author":{"gitId":"Jaspertzx"},"content":"    @Test","lastModifiedDate":"2024-04-14"},{"lineNumber":89,"author":{"gitId":"Jaspertzx"},"content":"    public void setPerson_editedPersonHasSameIdentity_success() {","lastModifiedDate":"2024-04-14"},{"lineNumber":90,"author":{"gitId":"Jaspertzx"},"content":"        uniqueClientList.add(ALICE);","lastModifiedDate":"2024-04-14"},{"lineNumber":91,"author":{"gitId":"Jaspertzx"},"content":"        Client editedAlice \u003d new ClientBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2024-04-14"},{"lineNumber":92,"author":{"gitId":"Jaspertzx"},"content":"                .build();","lastModifiedDate":"2024-04-14"},{"lineNumber":93,"author":{"gitId":"Jaspertzx"},"content":"        uniqueClientList.setClient(ALICE, editedAlice);","lastModifiedDate":"2024-04-14"},{"lineNumber":94,"author":{"gitId":"Jaspertzx"},"content":"        UniqueClientList expectedUniqueClientList \u003d new UniqueClientList();","lastModifiedDate":"2024-04-14"},{"lineNumber":95,"author":{"gitId":"Jaspertzx"},"content":"        expectedUniqueClientList.add(editedAlice);","lastModifiedDate":"2024-04-14"},{"lineNumber":96,"author":{"gitId":"Jaspertzx"},"content":"        assertEquals(expectedUniqueClientList, uniqueClientList);","lastModifiedDate":"2024-04-14"},{"lineNumber":97,"author":{"gitId":"Jaspertzx"},"content":"    }","lastModifiedDate":"2024-04-14"},{"lineNumber":98,"author":{"gitId":"Jaspertzx"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":99,"author":{"gitId":"Jaspertzx"},"content":"    @Test","lastModifiedDate":"2024-04-14"},{"lineNumber":100,"author":{"gitId":"Jaspertzx"},"content":"    public void setPerson_editedPersonHasDifferentIdentity_success() {","lastModifiedDate":"2024-04-14"},{"lineNumber":101,"author":{"gitId":"Jaspertzx"},"content":"        uniqueClientList.add(ALICE);","lastModifiedDate":"2024-04-14"},{"lineNumber":102,"author":{"gitId":"Jaspertzx"},"content":"        uniqueClientList.setClient(ALICE, BOB);","lastModifiedDate":"2024-04-14"},{"lineNumber":103,"author":{"gitId":"Jaspertzx"},"content":"        UniqueClientList expectedUniqueClientList \u003d new UniqueClientList();","lastModifiedDate":"2024-04-14"},{"lineNumber":104,"author":{"gitId":"Jaspertzx"},"content":"        expectedUniqueClientList.add(BOB);","lastModifiedDate":"2024-04-14"},{"lineNumber":105,"author":{"gitId":"Jaspertzx"},"content":"        assertEquals(expectedUniqueClientList, uniqueClientList);","lastModifiedDate":"2024-04-14"},{"lineNumber":106,"author":{"gitId":"Jaspertzx"},"content":"    }","lastModifiedDate":"2024-04-14"},{"lineNumber":107,"author":{"gitId":"Jaspertzx"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":108,"author":{"gitId":"Jaspertzx"},"content":"    @Test","lastModifiedDate":"2024-04-14"},{"lineNumber":109,"author":{"gitId":"Jaspertzx"},"content":"    public void setPerson_editedPersonHasNonUniqueIdentity_throwsDuplicatePersonException() {","lastModifiedDate":"2024-04-14"},{"lineNumber":110,"author":{"gitId":"Jaspertzx"},"content":"        uniqueClientList.add(ALICE);","lastModifiedDate":"2024-04-14"},{"lineNumber":111,"author":{"gitId":"Jaspertzx"},"content":"        uniqueClientList.add(BOB);","lastModifiedDate":"2024-04-14"},{"lineNumber":112,"author":{"gitId":"Jaspertzx"},"content":"        assertThrows(DuplicateClientException.class, () -\u003e uniqueClientList.setClient(ALICE, BOB));","lastModifiedDate":"2024-04-14"},{"lineNumber":113,"author":{"gitId":"Jaspertzx"},"content":"    }","lastModifiedDate":"2024-04-14"},{"lineNumber":114,"author":{"gitId":"Jaspertzx"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":115,"author":{"gitId":"Jaspertzx"},"content":"    @Test","lastModifiedDate":"2024-04-14"},{"lineNumber":116,"author":{"gitId":"Jaspertzx"},"content":"    public void remove_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2024-04-14"},{"lineNumber":117,"author":{"gitId":"Jaspertzx"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueClientList.remove(null));","lastModifiedDate":"2024-04-14"},{"lineNumber":118,"author":{"gitId":"Jaspertzx"},"content":"    }","lastModifiedDate":"2024-04-14"},{"lineNumber":119,"author":{"gitId":"Jaspertzx"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":120,"author":{"gitId":"Jaspertzx"},"content":"    @Test","lastModifiedDate":"2024-04-14"},{"lineNumber":121,"author":{"gitId":"Jaspertzx"},"content":"    public void remove_personDoesNotExist_throwsPersonNotFoundException() {","lastModifiedDate":"2024-04-14"},{"lineNumber":122,"author":{"gitId":"Jaspertzx"},"content":"        assertThrows(ClientNotFoundException.class, () -\u003e uniqueClientList.remove(ALICE));","lastModifiedDate":"2024-04-14"},{"lineNumber":123,"author":{"gitId":"Jaspertzx"},"content":"    }","lastModifiedDate":"2024-04-14"},{"lineNumber":124,"author":{"gitId":"Jaspertzx"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":125,"author":{"gitId":"Jaspertzx"},"content":"    @Test","lastModifiedDate":"2024-04-14"},{"lineNumber":126,"author":{"gitId":"Jaspertzx"},"content":"    public void remove_existingPerson_removesPerson() {","lastModifiedDate":"2024-04-14"},{"lineNumber":127,"author":{"gitId":"Jaspertzx"},"content":"        uniqueClientList.add(ALICE);","lastModifiedDate":"2024-04-14"},{"lineNumber":128,"author":{"gitId":"Jaspertzx"},"content":"        uniqueClientList.remove(ALICE);","lastModifiedDate":"2024-04-14"},{"lineNumber":129,"author":{"gitId":"Jaspertzx"},"content":"        UniqueClientList expectedUniqueClientList \u003d new UniqueClientList();","lastModifiedDate":"2024-04-14"},{"lineNumber":130,"author":{"gitId":"Jaspertzx"},"content":"        assertEquals(expectedUniqueClientList, uniqueClientList);","lastModifiedDate":"2024-04-14"},{"lineNumber":131,"author":{"gitId":"Jaspertzx"},"content":"    }","lastModifiedDate":"2024-04-14"},{"lineNumber":132,"author":{"gitId":"Jaspertzx"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":133,"author":{"gitId":"Jaspertzx"},"content":"    @Test","lastModifiedDate":"2024-04-14"},{"lineNumber":134,"author":{"gitId":"Jaspertzx"},"content":"    public void addOrder_existingPerson_addOrder() {","lastModifiedDate":"2024-04-14"},{"lineNumber":135,"author":{"gitId":"Jaspertzx"},"content":"        Order order \u003d new OrderBuilder().build();","lastModifiedDate":"2024-04-14"},{"lineNumber":136,"author":{"gitId":"Jaspertzx"},"content":"        Client client \u003d new ClientBuilder().build();","lastModifiedDate":"2024-04-14"},{"lineNumber":137,"author":{"gitId":"Jaspertzx"},"content":"        uniqueClientList.add(client);","lastModifiedDate":"2024-04-14"},{"lineNumber":138,"author":{"gitId":"Jaspertzx"},"content":"        Client editedClient \u003d client.addOrder(order);","lastModifiedDate":"2024-04-14"},{"lineNumber":139,"author":{"gitId":"Jaspertzx"},"content":"        uniqueClientList.setClientAndAddOrder(client, editedClient, order);","lastModifiedDate":"2024-04-14"},{"lineNumber":140,"author":{"gitId":"Jaspertzx"},"content":"        assertEquals(1, uniqueClientList.asUnmodifiableObservableListOrders().size());","lastModifiedDate":"2024-04-14"},{"lineNumber":141,"author":{"gitId":"Jaspertzx"},"content":"    }","lastModifiedDate":"2024-04-14"},{"lineNumber":142,"author":{"gitId":"Jaspertzx"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":143,"author":{"gitId":"Jaspertzx"},"content":"    @Test","lastModifiedDate":"2024-04-14"},{"lineNumber":144,"author":{"gitId":"Jaspertzx"},"content":"    public void removeOrder_existingPersonAndOrder_removeOrder() {","lastModifiedDate":"2024-04-14"},{"lineNumber":145,"author":{"gitId":"Jaspertzx"},"content":"        Order order \u003d new OrderBuilder().build();","lastModifiedDate":"2024-04-14"},{"lineNumber":146,"author":{"gitId":"Jaspertzx"},"content":"        Client client \u003d new ClientBuilder().build();","lastModifiedDate":"2024-04-14"},{"lineNumber":147,"author":{"gitId":"Jaspertzx"},"content":"        uniqueClientList.add(client);","lastModifiedDate":"2024-04-14"},{"lineNumber":148,"author":{"gitId":"Jaspertzx"},"content":"        Client editedClient \u003d client.addOrder(order);","lastModifiedDate":"2024-04-14"},{"lineNumber":149,"author":{"gitId":"Jaspertzx"},"content":"        uniqueClientList.setClientAndAddOrder(client, editedClient, order);","lastModifiedDate":"2024-04-14"},{"lineNumber":150,"author":{"gitId":"Jaspertzx"},"content":"        uniqueClientList.setClientAndDeleteOrder(editedClient, client, order);","lastModifiedDate":"2024-04-14"},{"lineNumber":151,"author":{"gitId":"Jaspertzx"},"content":"        assertEquals(0, uniqueClientList.asUnmodifiableObservableListOrders().size());","lastModifiedDate":"2024-04-14"},{"lineNumber":152,"author":{"gitId":"Jaspertzx"},"content":"    }","lastModifiedDate":"2024-04-14"},{"lineNumber":153,"author":{"gitId":"Jaspertzx"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":154,"author":{"gitId":"Jaspertzx"},"content":"    @Test","lastModifiedDate":"2024-04-14"},{"lineNumber":155,"author":{"gitId":"Jaspertzx"},"content":"    public void setPersons_nullUniquePersonList_throwsNullPointerException() {","lastModifiedDate":"2024-04-14"},{"lineNumber":156,"author":{"gitId":"Jaspertzx"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueClientList.setClients((UniqueClientList) null));","lastModifiedDate":"2024-04-14"},{"lineNumber":157,"author":{"gitId":"Jaspertzx"},"content":"    }","lastModifiedDate":"2024-04-14"},{"lineNumber":158,"author":{"gitId":"Jaspertzx"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":159,"author":{"gitId":"Jaspertzx"},"content":"    @Test","lastModifiedDate":"2024-04-14"},{"lineNumber":160,"author":{"gitId":"Jaspertzx"},"content":"    public void setPersons_uniquePersonList_replacesOwnListWithProvidedUniquePersonList() {","lastModifiedDate":"2024-04-14"},{"lineNumber":161,"author":{"gitId":"Jaspertzx"},"content":"        uniqueClientList.add(ALICE);","lastModifiedDate":"2024-04-14"},{"lineNumber":162,"author":{"gitId":"Jaspertzx"},"content":"        UniqueClientList expectedUniqueClientList \u003d new UniqueClientList();","lastModifiedDate":"2024-04-14"},{"lineNumber":163,"author":{"gitId":"Jaspertzx"},"content":"        expectedUniqueClientList.add(BOB);","lastModifiedDate":"2024-04-14"},{"lineNumber":164,"author":{"gitId":"Jaspertzx"},"content":"        uniqueClientList.setClients(expectedUniqueClientList);","lastModifiedDate":"2024-04-14"},{"lineNumber":165,"author":{"gitId":"Jaspertzx"},"content":"        assertEquals(expectedUniqueClientList, uniqueClientList);","lastModifiedDate":"2024-04-14"},{"lineNumber":166,"author":{"gitId":"Jaspertzx"},"content":"    }","lastModifiedDate":"2024-04-14"},{"lineNumber":167,"author":{"gitId":"Jaspertzx"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":168,"author":{"gitId":"Jaspertzx"},"content":"    @Test","lastModifiedDate":"2024-04-14"},{"lineNumber":169,"author":{"gitId":"Jaspertzx"},"content":"    public void setPersons_nullList_throwsNullPointerException() {","lastModifiedDate":"2024-04-14"},{"lineNumber":170,"author":{"gitId":"Jaspertzx"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueClientList.setClients((List\u003cClient\u003e) null));","lastModifiedDate":"2024-04-14"},{"lineNumber":171,"author":{"gitId":"Jaspertzx"},"content":"    }","lastModifiedDate":"2024-04-14"},{"lineNumber":172,"author":{"gitId":"Jaspertzx"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":173,"author":{"gitId":"Jaspertzx"},"content":"    @Test","lastModifiedDate":"2024-04-14"},{"lineNumber":174,"author":{"gitId":"Jaspertzx"},"content":"    public void setPersons_list_replacesOwnListWithProvidedList() {","lastModifiedDate":"2024-04-14"},{"lineNumber":175,"author":{"gitId":"Jaspertzx"},"content":"        uniqueClientList.add(ALICE);","lastModifiedDate":"2024-04-14"},{"lineNumber":176,"author":{"gitId":"Jaspertzx"},"content":"        List\u003cClient\u003e clientList \u003d Collections.singletonList(BOB);","lastModifiedDate":"2024-04-14"},{"lineNumber":177,"author":{"gitId":"Jaspertzx"},"content":"        uniqueClientList.setClients(clientList);","lastModifiedDate":"2024-04-14"},{"lineNumber":178,"author":{"gitId":"Jaspertzx"},"content":"        UniqueClientList expectedUniqueClientList \u003d new UniqueClientList();","lastModifiedDate":"2024-04-14"},{"lineNumber":179,"author":{"gitId":"Jaspertzx"},"content":"        expectedUniqueClientList.add(BOB);","lastModifiedDate":"2024-04-14"},{"lineNumber":180,"author":{"gitId":"Jaspertzx"},"content":"        assertEquals(expectedUniqueClientList, uniqueClientList);","lastModifiedDate":"2024-04-14"},{"lineNumber":181,"author":{"gitId":"Jaspertzx"},"content":"    }","lastModifiedDate":"2024-04-14"},{"lineNumber":182,"author":{"gitId":"Jaspertzx"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":183,"author":{"gitId":"Jaspertzx"},"content":"    @Test","lastModifiedDate":"2024-04-14"},{"lineNumber":184,"author":{"gitId":"Jaspertzx"},"content":"    public void setPersons_listWithDuplicatePersons_throwsDuplicatePersonException() {","lastModifiedDate":"2024-04-14"},{"lineNumber":185,"author":{"gitId":"Jaspertzx"},"content":"        List\u003cClient\u003e listWithDuplicateClients \u003d Arrays.asList(ALICE, ALICE);","lastModifiedDate":"2024-04-14"},{"lineNumber":186,"author":{"gitId":"Jaspertzx"},"content":"        assertThrows(DuplicateClientException.class, () -\u003e uniqueClientList.setClients(listWithDuplicateClients));","lastModifiedDate":"2024-04-14"},{"lineNumber":187,"author":{"gitId":"Jaspertzx"},"content":"    }","lastModifiedDate":"2024-04-14"},{"lineNumber":188,"author":{"gitId":"Jaspertzx"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":189,"author":{"gitId":"Jaspertzx"},"content":"    @Test","lastModifiedDate":"2024-04-14"},{"lineNumber":190,"author":{"gitId":"Jaspertzx"},"content":"    public void asUnmodifiableObservableList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2024-04-14"},{"lineNumber":191,"author":{"gitId":"Jaspertzx"},"content":"        assertThrows(UnsupportedOperationException.class, ()","lastModifiedDate":"2024-04-14"},{"lineNumber":192,"author":{"gitId":"Jaspertzx"},"content":"                -\u003e uniqueClientList.asUnmodifiableObservableList().remove(0));","lastModifiedDate":"2024-04-14"},{"lineNumber":193,"author":{"gitId":"Jaspertzx"},"content":"    }","lastModifiedDate":"2024-04-14"},{"lineNumber":194,"author":{"gitId":"Jaspertzx"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":195,"author":{"gitId":"Jaspertzx"},"content":"    @Test","lastModifiedDate":"2024-04-14"},{"lineNumber":196,"author":{"gitId":"Jaspertzx"},"content":"    public void toStringMethod() {","lastModifiedDate":"2024-04-14"},{"lineNumber":197,"author":{"gitId":"Jaspertzx"},"content":"        assertEquals(uniqueClientList.asUnmodifiableObservableList().toString(), uniqueClientList.toString());","lastModifiedDate":"2024-04-14"},{"lineNumber":198,"author":{"gitId":"Jaspertzx"},"content":"    }","lastModifiedDate":"2024-04-14"},{"lineNumber":199,"author":{"gitId":"Jaspertzx"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":200,"author":{"gitId":"Jaspertzx"},"content":"    @Test","lastModifiedDate":"2024-04-14"},{"lineNumber":201,"author":{"gitId":"Jaspertzx"},"content":"    public void setPersonsAndAddOrder_nullUniquePersonList_throwsNullPointerException() {","lastModifiedDate":"2024-04-14"},{"lineNumber":202,"author":{"gitId":"Jaspertzx"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueClientList.setClientAndAddOrder(ALICE, null,","lastModifiedDate":"2024-04-14"},{"lineNumber":203,"author":{"gitId":"Jaspertzx"},"content":"                null));","lastModifiedDate":"2024-04-14"},{"lineNumber":204,"author":{"gitId":"Jaspertzx"},"content":"    }","lastModifiedDate":"2024-04-14"},{"lineNumber":205,"author":{"gitId":"Jaspertzx"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":206,"author":{"gitId":"Jaspertzx"},"content":"    @Test","lastModifiedDate":"2024-04-14"},{"lineNumber":207,"author":{"gitId":"Jaspertzx"},"content":"    public void setPersonsAndAddOrder_nullList_throwsNullPointerException() {","lastModifiedDate":"2024-04-14"},{"lineNumber":208,"author":{"gitId":"Jaspertzx"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueClientList.setClientAndAddOrder(null,","lastModifiedDate":"2024-04-14"},{"lineNumber":209,"author":{"gitId":"Jaspertzx"},"content":"                null, null));","lastModifiedDate":"2024-04-14"},{"lineNumber":210,"author":{"gitId":"Jaspertzx"},"content":"    }","lastModifiedDate":"2024-04-14"},{"lineNumber":211,"author":{"gitId":"Jaspertzx"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":212,"author":{"gitId":"Jaspertzx"},"content":"    @Test","lastModifiedDate":"2024-04-14"},{"lineNumber":213,"author":{"gitId":"Jaspertzx"},"content":"    public void setPersonAndAddOrder_validPersonAndOrder_success() {","lastModifiedDate":"2024-04-14"},{"lineNumber":214,"author":{"gitId":"Jaspertzx"},"content":"        UniqueClientList uniqueClientList \u003d new UniqueClientList();","lastModifiedDate":"2024-04-14"},{"lineNumber":215,"author":{"gitId":"Jaspertzx"},"content":"        Client originalClient \u003d new ClientBuilder(ALICE).build();","lastModifiedDate":"2024-04-14"},{"lineNumber":216,"author":{"gitId":"Jaspertzx"},"content":"        Client editedClient \u003d new ClientBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).build();","lastModifiedDate":"2024-04-14"},{"lineNumber":217,"author":{"gitId":"Jaspertzx"},"content":"        OrderBuilder orderBuilder \u003d new OrderBuilder();","lastModifiedDate":"2024-04-14"},{"lineNumber":218,"author":{"gitId":"Jaspertzx"},"content":"        Order newOrder \u003d orderBuilder.build();","lastModifiedDate":"2024-04-14"},{"lineNumber":219,"author":{"gitId":"Jaspertzx"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":220,"author":{"gitId":"Jaspertzx"},"content":"        uniqueClientList.add(originalClient);","lastModifiedDate":"2024-04-14"},{"lineNumber":221,"author":{"gitId":"Jaspertzx"},"content":"        assertDoesNotThrow(() -\u003e uniqueClientList.setClientAndAddOrder(originalClient, editedClient, newOrder));","lastModifiedDate":"2024-04-14"},{"lineNumber":222,"author":{"gitId":"Jaspertzx"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":223,"author":{"gitId":"Jaspertzx"},"content":"        assertTrue(uniqueClientList.contains(editedClient));","lastModifiedDate":"2024-04-14"},{"lineNumber":224,"author":{"gitId":"Jaspertzx"},"content":"    }","lastModifiedDate":"2024-04-14"},{"lineNumber":225,"author":{"gitId":"Jaspertzx"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":226,"author":{"gitId":"Jaspertzx"},"content":"    @Test","lastModifiedDate":"2024-04-14"},{"lineNumber":227,"author":{"gitId":"Jaspertzx"},"content":"    public void setPersonsAndDeleteOrder_nullUniquePersonList_throwsNullPointerException() {","lastModifiedDate":"2024-04-14"},{"lineNumber":228,"author":{"gitId":"Jaspertzx"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueClientList.setClientAndDeleteOrder(BOB, null,","lastModifiedDate":"2024-04-14"},{"lineNumber":229,"author":{"gitId":"Jaspertzx"},"content":"                null));","lastModifiedDate":"2024-04-14"},{"lineNumber":230,"author":{"gitId":"Jaspertzx"},"content":"    }","lastModifiedDate":"2024-04-14"},{"lineNumber":231,"author":{"gitId":"Jaspertzx"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":232,"author":{"gitId":"Jaspertzx"},"content":"    @Test","lastModifiedDate":"2024-04-14"},{"lineNumber":233,"author":{"gitId":"Jaspertzx"},"content":"    public void setPersonsAndDeleteOrder_nullList_throwsNullPointerException() {","lastModifiedDate":"2024-04-14"},{"lineNumber":234,"author":{"gitId":"Jaspertzx"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueClientList.setClientAndDeleteOrder(null,","lastModifiedDate":"2024-04-14"},{"lineNumber":235,"author":{"gitId":"Jaspertzx"},"content":"                null, null));","lastModifiedDate":"2024-04-14"},{"lineNumber":236,"author":{"gitId":"Jaspertzx"},"content":"    }","lastModifiedDate":"2024-04-14"},{"lineNumber":237,"author":{"gitId":"Jaspertzx"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":238,"author":{"gitId":"Jaspertzx"},"content":"    @Test","lastModifiedDate":"2024-04-14"},{"lineNumber":239,"author":{"gitId":"Jaspertzx"},"content":"    public void setPersonAndDeleteOrder_orderDoesNotExist_personUnchanged() {","lastModifiedDate":"2024-04-14"},{"lineNumber":240,"author":{"gitId":"Jaspertzx"},"content":"        UniqueClientList uniqueClientList \u003d new UniqueClientList();","lastModifiedDate":"2024-04-14"},{"lineNumber":241,"author":{"gitId":"Jaspertzx"},"content":"        Client originalClient \u003d new ClientBuilder(ALICE).build();","lastModifiedDate":"2024-04-14"},{"lineNumber":242,"author":{"gitId":"Jaspertzx"},"content":"        Client editedClient \u003d new ClientBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).build();","lastModifiedDate":"2024-04-14"},{"lineNumber":243,"author":{"gitId":"Jaspertzx"},"content":"        OrderBuilder orderBuilder \u003d new OrderBuilder();","lastModifiedDate":"2024-04-14"},{"lineNumber":244,"author":{"gitId":"Jaspertzx"},"content":"        Order newOrder \u003d orderBuilder.build();","lastModifiedDate":"2024-04-14"},{"lineNumber":245,"author":{"gitId":"Jaspertzx"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":246,"author":{"gitId":"Jaspertzx"},"content":"        uniqueClientList.add(originalClient);","lastModifiedDate":"2024-04-14"},{"lineNumber":247,"author":{"gitId":"Jaspertzx"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":248,"author":{"gitId":"Jaspertzx"},"content":"        assertDoesNotThrow(() -\u003e uniqueClientList.setClientAndDeleteOrder(originalClient, editedClient, newOrder));","lastModifiedDate":"2024-04-14"},{"lineNumber":249,"author":{"gitId":"Jaspertzx"},"content":"    }","lastModifiedDate":"2024-04-14"},{"lineNumber":250,"author":{"gitId":"Jaspertzx"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":251,"author":{"gitId":"Jaspertzx"},"content":"    @Test","lastModifiedDate":"2024-04-14"},{"lineNumber":252,"author":{"gitId":"Jaspertzx"},"content":"    public void testEquals_sameInput() {","lastModifiedDate":"2024-04-14"},{"lineNumber":253,"author":{"gitId":"Jaspertzx"},"content":"        UniqueClientList uniqueClientList \u003d new UniqueClientList();","lastModifiedDate":"2024-04-14"},{"lineNumber":254,"author":{"gitId":"Jaspertzx"},"content":"        assertEquals(uniqueClientList, uniqueClientList);","lastModifiedDate":"2024-04-14"},{"lineNumber":255,"author":{"gitId":"Jaspertzx"},"content":"    }","lastModifiedDate":"2024-04-14"},{"lineNumber":256,"author":{"gitId":"Jaspertzx"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":257,"author":{"gitId":"Jaspertzx"},"content":"    @Test","lastModifiedDate":"2024-04-14"},{"lineNumber":258,"author":{"gitId":"Jaspertzx"},"content":"    public void testEquals_sameOutput() {","lastModifiedDate":"2024-04-14"},{"lineNumber":259,"author":{"gitId":"Jaspertzx"},"content":"        UniqueClientList list1 \u003d new UniqueClientList();","lastModifiedDate":"2024-04-14"},{"lineNumber":260,"author":{"gitId":"Jaspertzx"},"content":"        UniqueClientList list2 \u003d new UniqueClientList();","lastModifiedDate":"2024-04-14"},{"lineNumber":261,"author":{"gitId":"Jaspertzx"},"content":"        list1.add(ALICE);","lastModifiedDate":"2024-04-14"},{"lineNumber":262,"author":{"gitId":"Jaspertzx"},"content":"        list2.add(ALICE);","lastModifiedDate":"2024-04-14"},{"lineNumber":263,"author":{"gitId":"Jaspertzx"},"content":"        assertEquals(list1.equals(list2), list2.equals(list1));","lastModifiedDate":"2024-04-14"},{"lineNumber":264,"author":{"gitId":"Jaspertzx"},"content":"    }","lastModifiedDate":"2024-04-14"},{"lineNumber":265,"author":{"gitId":"Jaspertzx"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":266,"author":{"gitId":"Jaspertzx"},"content":"    @Test","lastModifiedDate":"2024-04-14"},{"lineNumber":267,"author":{"gitId":"Jaspertzx"},"content":"    public void testHashCode() {","lastModifiedDate":"2024-04-14"},{"lineNumber":268,"author":{"gitId":"Jaspertzx"},"content":"        UniqueClientList uniqueClientList \u003d new UniqueClientList();","lastModifiedDate":"2024-04-14"},{"lineNumber":269,"author":{"gitId":"Jaspertzx"},"content":"        int initialHashCode \u003d uniqueClientList.hashCode();","lastModifiedDate":"2024-04-14"},{"lineNumber":270,"author":{"gitId":"Jaspertzx"},"content":"        for (int i \u003d 0; i \u003c 10; i++) {","lastModifiedDate":"2024-04-14"},{"lineNumber":271,"author":{"gitId":"Jaspertzx"},"content":"            assertEquals(initialHashCode, uniqueClientList.hashCode());","lastModifiedDate":"2024-04-14"},{"lineNumber":272,"author":{"gitId":"Jaspertzx"},"content":"        }","lastModifiedDate":"2024-04-14"},{"lineNumber":273,"author":{"gitId":"Jaspertzx"},"content":"    }","lastModifiedDate":"2024-04-14"},{"lineNumber":274,"author":{"gitId":"Jaspertzx"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":275,"author":{"gitId":"Jaspertzx"},"content":"    public void equals() {","lastModifiedDate":"2024-04-14"},{"lineNumber":276,"author":{"gitId":"Jaspertzx"},"content":"        assertTrue(uniqueClientList.equals(uniqueClientList));","lastModifiedDate":"2024-04-14"},{"lineNumber":277,"author":{"gitId":"Jaspertzx"},"content":"        UniqueClientList uniqueClientList2 \u003d new UniqueClientList();","lastModifiedDate":"2024-04-14"},{"lineNumber":278,"author":{"gitId":"Jaspertzx"},"content":"        uniqueClientList2.add(new ClientBuilder().build());","lastModifiedDate":"2024-04-14"},{"lineNumber":279,"author":{"gitId":"Jaspertzx"},"content":"        assertFalse(uniqueClientList.equals(uniqueClientList2));","lastModifiedDate":"2024-04-14"},{"lineNumber":280,"author":{"gitId":"Jaspertzx"},"content":"    }","lastModifiedDate":"2024-04-14"},{"lineNumber":281,"author":{"gitId":"Jaspertzx"},"content":"}","lastModifiedDate":"2024-04-14"}],"authorContributionMap":{"Jaspertzx":281}},{"path":"src/test/java/seedu/address/model/order/DeadlineTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"rertyy"},"content":"package seedu.address.model.order;","lastModifiedDate":"2024-03-17"},{"lineNumber":2,"author":{"gitId":"rertyy"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":3,"author":{"gitId":"rertyy"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-03-17"},{"lineNumber":4,"author":{"gitId":"rertyy"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2024-03-17"},{"lineNumber":5,"author":{"gitId":"rertyy"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2024-03-17"},{"lineNumber":6,"author":{"gitId":"rertyy"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2024-03-17"},{"lineNumber":7,"author":{"gitId":"rertyy"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2024-03-17"},{"lineNumber":8,"author":{"gitId":"rertyy"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":9,"author":{"gitId":"rertyy"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-17"},{"lineNumber":10,"author":{"gitId":"rertyy"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":11,"author":{"gitId":"rertyy"},"content":"class DeadlineTest {","lastModifiedDate":"2024-03-17"},{"lineNumber":12,"author":{"gitId":"rertyy"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":13,"author":{"gitId":"rertyy"},"content":"    @Test","lastModifiedDate":"2024-03-17"},{"lineNumber":14,"author":{"gitId":"rertyy"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2024-03-17"},{"lineNumber":15,"author":{"gitId":"rertyy"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Deadline(null));","lastModifiedDate":"2024-03-17"},{"lineNumber":16,"author":{"gitId":"rertyy"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":17,"author":{"gitId":"rertyy"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":18,"author":{"gitId":"rertyy"},"content":"    @Test","lastModifiedDate":"2024-03-17"},{"lineNumber":19,"author":{"gitId":"rertyy"},"content":"    public void constructor_invalidDeadline_throwsIllegalArgumentException() {","lastModifiedDate":"2024-03-17"},{"lineNumber":20,"author":{"gitId":"rertyy"},"content":"        String invalidDeadline \u003d \"\";","lastModifiedDate":"2024-03-17"},{"lineNumber":21,"author":{"gitId":"rertyy"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Deadline(invalidDeadline));","lastModifiedDate":"2024-03-17"},{"lineNumber":22,"author":{"gitId":"rertyy"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":23,"author":{"gitId":"rertyy"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":24,"author":{"gitId":"rertyy"},"content":"    @Test","lastModifiedDate":"2024-03-17"},{"lineNumber":25,"author":{"gitId":"rertyy"},"content":"    public void isValidDeadline() {","lastModifiedDate":"2024-03-17"},{"lineNumber":26,"author":{"gitId":"rertyy"},"content":"        // null deadline","lastModifiedDate":"2024-03-17"},{"lineNumber":27,"author":{"gitId":"rertyy"},"content":"        assertThrows(NullPointerException.class, () -\u003e Deadline.isValidDeadline(null));","lastModifiedDate":"2024-03-17"},{"lineNumber":28,"author":{"gitId":"rertyy"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":29,"author":{"gitId":"rertyy"},"content":"        // invalid deadlines","lastModifiedDate":"2024-03-17"},{"lineNumber":30,"author":{"gitId":"rertyy"},"content":"        assertFalse(Deadline.isValidDeadline(\"\")); // empty string","lastModifiedDate":"2024-03-17"},{"lineNumber":31,"author":{"gitId":"rertyy"},"content":"        assertFalse(Deadline.isValidDeadline(\" \")); // spaces only","lastModifiedDate":"2024-03-17"},{"lineNumber":32,"author":{"gitId":"rertyy"},"content":"        assertFalse(Deadline.isValidDeadline(\"11-15-2024 21:51\")); // invalid date format","lastModifiedDate":"2024-03-17"},{"lineNumber":33,"author":{"gitId":"rertyy"},"content":"        assertFalse(Deadline.isValidDeadline(\"41-15-2024 21:51\")); // invalid date","lastModifiedDate":"2024-03-17"},{"lineNumber":34,"author":{"gitId":"rertyy"},"content":"        assertFalse(Deadline.isValidDeadline(\"15-41-2024 21:51\")); // invalid date","lastModifiedDate":"2024-03-17"},{"lineNumber":35,"author":{"gitId":"rertyy"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":36,"author":{"gitId":"rertyy"},"content":"        // valid deadlines","lastModifiedDate":"2024-03-17"},{"lineNumber":37,"author":{"gitId":"rertyy"},"content":"        assertTrue(Deadline.isValidDeadline(\"15-12-3024 21:51\")); // long deadline","lastModifiedDate":"2024-03-17"},{"lineNumber":38,"author":{"gitId":"rertyy"},"content":"        assertTrue(Deadline.isValidDeadline(\"11-05-2024 21:51\"));","lastModifiedDate":"2024-03-17"},{"lineNumber":39,"author":{"gitId":"rertyy"},"content":"        assertTrue(Deadline.isValidDeadline(\"01-05-2024 01:01\"));","lastModifiedDate":"2024-03-17"},{"lineNumber":40,"author":{"gitId":"rertyy"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":41,"author":{"gitId":"rertyy"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":42,"author":{"gitId":"Jaspertzx"},"content":"    @Test","lastModifiedDate":"2024-04-03"},{"lineNumber":43,"author":{"gitId":"Jaspertzx"},"content":"    public void compareDeadline() {","lastModifiedDate":"2024-04-03"},{"lineNumber":44,"author":{"gitId":"Jaspertzx"},"content":"        Deadline deadline \u003d new Deadline(\"01-01-2024 00:00\");","lastModifiedDate":"2024-04-03"},{"lineNumber":45,"author":{"gitId":"Jaspertzx"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":46,"author":{"gitId":"Jaspertzx"},"content":"        // smaller values -\u003e returns 1","lastModifiedDate":"2024-04-03"},{"lineNumber":47,"author":{"gitId":"Jaspertzx"},"content":"        assertEquals(1, deadline.compareTo(new Deadline(\"01-01-2023 00:00\")));","lastModifiedDate":"2024-04-03"},{"lineNumber":48,"author":{"gitId":"Jaspertzx"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":49,"author":{"gitId":"Jaspertzx"},"content":"        // bigger values -\u003e returns -1","lastModifiedDate":"2024-04-03"},{"lineNumber":50,"author":{"gitId":"Jaspertzx"},"content":"        assertEquals(-1, deadline.compareTo(new Deadline(\"01-01-2024 01:00\")));","lastModifiedDate":"2024-04-03"},{"lineNumber":51,"author":{"gitId":"Jaspertzx"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":52,"author":{"gitId":"Jaspertzx"},"content":"        // same values -\u003e returns 0","lastModifiedDate":"2024-04-03"},{"lineNumber":53,"author":{"gitId":"Jaspertzx"},"content":"        assertEquals(0, deadline.compareTo(new Deadline(\"01-01-2024 00:00\")));","lastModifiedDate":"2024-04-03"},{"lineNumber":54,"author":{"gitId":"Jaspertzx"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":55,"author":{"gitId":"Jaspertzx"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":56,"author":{"gitId":"rertyy"},"content":"    @Test","lastModifiedDate":"2024-03-17"},{"lineNumber":57,"author":{"gitId":"rertyy"},"content":"    public void equals() {","lastModifiedDate":"2024-03-17"},{"lineNumber":58,"author":{"gitId":"rertyy"},"content":"        Deadline deadline \u003d new Deadline(\"11-05-2024 21:51\");","lastModifiedDate":"2024-03-17"},{"lineNumber":59,"author":{"gitId":"rertyy"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":60,"author":{"gitId":"rertyy"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2024-03-17"},{"lineNumber":61,"author":{"gitId":"rertyy"},"content":"        assertEquals(deadline, new Deadline(\"11-05-2024 21:51\"));","lastModifiedDate":"2024-03-17"},{"lineNumber":62,"author":{"gitId":"rertyy"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":63,"author":{"gitId":"rertyy"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2024-03-17"},{"lineNumber":64,"author":{"gitId":"rertyy"},"content":"        assertEquals(deadline, deadline);","lastModifiedDate":"2024-03-17"},{"lineNumber":65,"author":{"gitId":"rertyy"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":66,"author":{"gitId":"rertyy"},"content":"        // null -\u003e returns false","lastModifiedDate":"2024-03-17"},{"lineNumber":67,"author":{"gitId":"rertyy"},"content":"        assertNotEquals(null, deadline);","lastModifiedDate":"2024-03-17"},{"lineNumber":68,"author":{"gitId":"rertyy"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":69,"author":{"gitId":"rertyy"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2024-03-17"},{"lineNumber":70,"author":{"gitId":"rertyy"},"content":"        assertNotEquals(deadline, 0.0);","lastModifiedDate":"2024-03-17"},{"lineNumber":71,"author":{"gitId":"rertyy"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":72,"author":{"gitId":"rertyy"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2024-03-17"},{"lineNumber":73,"author":{"gitId":"rertyy"},"content":"        assertNotEquals(deadline, new Deadline(\"11-05-2024 21:52\"));","lastModifiedDate":"2024-03-17"},{"lineNumber":74,"author":{"gitId":"rertyy"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":75,"author":{"gitId":"rertyy"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":76,"author":{"gitId":"rertyy"},"content":"}","lastModifiedDate":"2024-03-17"}],"authorContributionMap":{"rertyy":62,"Jaspertzx":14}},{"path":"src/test/java/seedu/address/model/order/OrderDateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"rertyy"},"content":"package seedu.address.model.order;","lastModifiedDate":"2024-03-17"},{"lineNumber":2,"author":{"gitId":"rertyy"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":3,"author":{"gitId":"rertyy"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-03-17"},{"lineNumber":4,"author":{"gitId":"rertyy"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2024-03-17"},{"lineNumber":5,"author":{"gitId":"rertyy"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2024-03-17"},{"lineNumber":6,"author":{"gitId":"rertyy"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2024-03-17"},{"lineNumber":7,"author":{"gitId":"rertyy"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2024-03-17"},{"lineNumber":8,"author":{"gitId":"rertyy"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":9,"author":{"gitId":"rertyy"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-17"},{"lineNumber":10,"author":{"gitId":"rertyy"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":11,"author":{"gitId":"rertyy"},"content":"class OrderDateTest {","lastModifiedDate":"2024-03-17"},{"lineNumber":12,"author":{"gitId":"rertyy"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":13,"author":{"gitId":"rertyy"},"content":"    @Test","lastModifiedDate":"2024-03-17"},{"lineNumber":14,"author":{"gitId":"rertyy"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2024-03-17"},{"lineNumber":15,"author":{"gitId":"rertyy"},"content":"        assertThrows(NullPointerException.class, () -\u003e new OrderDate(null));","lastModifiedDate":"2024-03-17"},{"lineNumber":16,"author":{"gitId":"rertyy"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":17,"author":{"gitId":"rertyy"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":18,"author":{"gitId":"rertyy"},"content":"    @Test","lastModifiedDate":"2024-03-17"},{"lineNumber":19,"author":{"gitId":"rertyy"},"content":"    public void constructor_invalidOrderDate_throwsIllegalArgumentException() {","lastModifiedDate":"2024-03-17"},{"lineNumber":20,"author":{"gitId":"rertyy"},"content":"        String invalidOrderDate \u003d \"\";","lastModifiedDate":"2024-03-17"},{"lineNumber":21,"author":{"gitId":"rertyy"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new OrderDate(invalidOrderDate));","lastModifiedDate":"2024-03-17"},{"lineNumber":22,"author":{"gitId":"rertyy"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":23,"author":{"gitId":"rertyy"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":24,"author":{"gitId":"rertyy"},"content":"    @Test","lastModifiedDate":"2024-03-17"},{"lineNumber":25,"author":{"gitId":"rertyy"},"content":"    public void isValidOrderDate() {","lastModifiedDate":"2024-03-17"},{"lineNumber":26,"author":{"gitId":"rertyy"},"content":"        // null OrderDate","lastModifiedDate":"2024-03-17"},{"lineNumber":27,"author":{"gitId":"rertyy"},"content":"        assertThrows(NullPointerException.class, () -\u003e OrderDate.isValidOrderDate(null));","lastModifiedDate":"2024-03-17"},{"lineNumber":28,"author":{"gitId":"rertyy"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":29,"author":{"gitId":"rertyy"},"content":"        // invalid OrderDates","lastModifiedDate":"2024-03-17"},{"lineNumber":30,"author":{"gitId":"rertyy"},"content":"        assertFalse(OrderDate.isValidOrderDate(\"\")); // empty string","lastModifiedDate":"2024-03-17"},{"lineNumber":31,"author":{"gitId":"rertyy"},"content":"        assertFalse(OrderDate.isValidOrderDate(\" \")); // spaces only","lastModifiedDate":"2024-03-17"},{"lineNumber":32,"author":{"gitId":"rertyy"},"content":"        assertFalse(OrderDate.isValidOrderDate(\"11-15-2024 21:51\")); // invalid date format","lastModifiedDate":"2024-03-17"},{"lineNumber":33,"author":{"gitId":"rertyy"},"content":"        assertFalse(OrderDate.isValidOrderDate(\"41-15-2024 21:51\")); // invalid date","lastModifiedDate":"2024-03-17"},{"lineNumber":34,"author":{"gitId":"rertyy"},"content":"        assertFalse(OrderDate.isValidOrderDate(\"15-41-2024 21:51\")); // invalid date","lastModifiedDate":"2024-03-17"},{"lineNumber":35,"author":{"gitId":"rertyy"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":36,"author":{"gitId":"rertyy"},"content":"        // valid OrderDates","lastModifiedDate":"2024-03-17"},{"lineNumber":37,"author":{"gitId":"rertyy"},"content":"        assertTrue(OrderDate.isValidOrderDate(\"15-12-3024 21:51\")); // long OrderDate","lastModifiedDate":"2024-03-17"},{"lineNumber":38,"author":{"gitId":"rertyy"},"content":"        assertTrue(OrderDate.isValidOrderDate(\"11-05-2024 21:51\"));","lastModifiedDate":"2024-03-17"},{"lineNumber":39,"author":{"gitId":"rertyy"},"content":"        assertTrue(OrderDate.isValidOrderDate(\"01-05-2024 01:01\"));","lastModifiedDate":"2024-03-17"},{"lineNumber":40,"author":{"gitId":"rertyy"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":41,"author":{"gitId":"rertyy"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":42,"author":{"gitId":"rertyy"},"content":"    @Test","lastModifiedDate":"2024-03-17"},{"lineNumber":43,"author":{"gitId":"rertyy"},"content":"    public void equals() {","lastModifiedDate":"2024-03-17"},{"lineNumber":44,"author":{"gitId":"rertyy"},"content":"        OrderDate orderDate \u003d new OrderDate(\"11-05-2024 21:51\");","lastModifiedDate":"2024-03-17"},{"lineNumber":45,"author":{"gitId":"rertyy"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":46,"author":{"gitId":"rertyy"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2024-03-17"},{"lineNumber":47,"author":{"gitId":"rertyy"},"content":"        assertEquals(orderDate, new OrderDate(\"11-05-2024 21:51\"));","lastModifiedDate":"2024-03-17"},{"lineNumber":48,"author":{"gitId":"rertyy"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":49,"author":{"gitId":"rertyy"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2024-03-17"},{"lineNumber":50,"author":{"gitId":"rertyy"},"content":"        assertEquals(orderDate, orderDate);","lastModifiedDate":"2024-03-17"},{"lineNumber":51,"author":{"gitId":"rertyy"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":52,"author":{"gitId":"rertyy"},"content":"        // null -\u003e returns false","lastModifiedDate":"2024-03-17"},{"lineNumber":53,"author":{"gitId":"rertyy"},"content":"        assertNotEquals(null, orderDate);","lastModifiedDate":"2024-03-17"},{"lineNumber":54,"author":{"gitId":"rertyy"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":55,"author":{"gitId":"rertyy"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2024-03-17"},{"lineNumber":56,"author":{"gitId":"rertyy"},"content":"        assertNotEquals(orderDate, 0.0);","lastModifiedDate":"2024-03-17"},{"lineNumber":57,"author":{"gitId":"rertyy"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":58,"author":{"gitId":"rertyy"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2024-03-17"},{"lineNumber":59,"author":{"gitId":"rertyy"},"content":"        assertNotEquals(orderDate, new OrderDate(\"11-05-2024 21:52\"));","lastModifiedDate":"2024-03-17"},{"lineNumber":60,"author":{"gitId":"rertyy"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":61,"author":{"gitId":"rertyy"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":62,"author":{"gitId":"rertyy"},"content":"}","lastModifiedDate":"2024-03-17"}],"authorContributionMap":{"rertyy":62}},{"path":"src/test/java/seedu/address/model/order/OrderIdTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"rertyy"},"content":"package seedu.address.model.order;","lastModifiedDate":"2024-03-17"},{"lineNumber":2,"author":{"gitId":"rertyy"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":3,"author":{"gitId":"rertyy"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-03-17"},{"lineNumber":4,"author":{"gitId":"rertyy"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2024-03-17"},{"lineNumber":5,"author":{"gitId":"rertyy"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2024-03-17"},{"lineNumber":6,"author":{"gitId":"rertyy"},"content":"import static seedu.address.testutil.OrderBuilder.DEFAULT_ORDER_ID;","lastModifiedDate":"2024-03-17"},{"lineNumber":7,"author":{"gitId":"rertyy"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":8,"author":{"gitId":"rertyy"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-17"},{"lineNumber":9,"author":{"gitId":"rertyy"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":10,"author":{"gitId":"rertyy"},"content":"class OrderIdTest {","lastModifiedDate":"2024-03-17"},{"lineNumber":11,"author":{"gitId":"rertyy"},"content":"    @Test","lastModifiedDate":"2024-03-17"},{"lineNumber":12,"author":{"gitId":"rertyy"},"content":"    void constructor_invalidOrderId_throwsIllegalArgumentException() {","lastModifiedDate":"2024-03-17"},{"lineNumber":13,"author":{"gitId":"rertyy"},"content":"        String invalidOrderId \u003d \"\";","lastModifiedDate":"2024-03-17"},{"lineNumber":14,"author":{"gitId":"rertyy"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new OrderId(invalidOrderId));","lastModifiedDate":"2024-03-17"},{"lineNumber":15,"author":{"gitId":"rertyy"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":16,"author":{"gitId":"rertyy"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":17,"author":{"gitId":"rertyy"},"content":"    @Test","lastModifiedDate":"2024-03-17"},{"lineNumber":18,"author":{"gitId":"rertyy"},"content":"    void testEquals() {","lastModifiedDate":"2024-03-17"},{"lineNumber":19,"author":{"gitId":"rertyy"},"content":"        OrderId orderId \u003d new OrderId();","lastModifiedDate":"2024-03-17"},{"lineNumber":20,"author":{"gitId":"rertyy"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":21,"author":{"gitId":"rertyy"},"content":"        // different object -\u003e negligible chance to be equals","lastModifiedDate":"2024-03-17"},{"lineNumber":22,"author":{"gitId":"rertyy"},"content":"        assertNotEquals(orderId, new OrderId());","lastModifiedDate":"2024-03-17"},{"lineNumber":23,"author":{"gitId":"rertyy"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":24,"author":{"gitId":"rertyy"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2024-03-17"},{"lineNumber":25,"author":{"gitId":"rertyy"},"content":"        OrderId fixedOrderId1 \u003d new OrderId(DEFAULT_ORDER_ID);","lastModifiedDate":"2024-03-17"},{"lineNumber":26,"author":{"gitId":"rertyy"},"content":"        OrderId fixedOrderId2 \u003d new OrderId(DEFAULT_ORDER_ID);","lastModifiedDate":"2024-03-17"},{"lineNumber":27,"author":{"gitId":"rertyy"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":28,"author":{"gitId":"rertyy"},"content":"        assertEquals(fixedOrderId1, fixedOrderId2);","lastModifiedDate":"2024-03-17"},{"lineNumber":29,"author":{"gitId":"rertyy"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":30,"author":{"gitId":"rertyy"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2024-03-17"},{"lineNumber":31,"author":{"gitId":"rertyy"},"content":"        assertEquals(orderId, orderId);","lastModifiedDate":"2024-03-17"},{"lineNumber":32,"author":{"gitId":"rertyy"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":33,"author":{"gitId":"rertyy"},"content":"        // same object representation -\u003e returns true","lastModifiedDate":"2024-03-17"},{"lineNumber":34,"author":{"gitId":"rertyy"},"content":"        assertEquals(orderId, orderId.toString());","lastModifiedDate":"2024-03-17"},{"lineNumber":35,"author":{"gitId":"rertyy"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":36,"author":{"gitId":"rertyy"},"content":"        // null -\u003e returns false","lastModifiedDate":"2024-03-17"},{"lineNumber":37,"author":{"gitId":"rertyy"},"content":"        assertNotEquals(orderId, null);","lastModifiedDate":"2024-03-17"},{"lineNumber":38,"author":{"gitId":"rertyy"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":39,"author":{"gitId":"rertyy"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":40,"author":{"gitId":"rertyy"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":41,"author":{"gitId":"rertyy"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":42,"author":{"gitId":"rertyy"},"content":"}","lastModifiedDate":"2024-03-17"}],"authorContributionMap":{"rertyy":42}},{"path":"src/test/java/seedu/address/model/order/OrderNameContainsKeywordsPredicateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"shavonneg"},"content":"package seedu.address.model.order;","lastModifiedDate":"2024-03-19"},{"lineNumber":2,"author":{"gitId":"shavonneg"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":3,"author":{"gitId":"shavonneg"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-03-19"},{"lineNumber":4,"author":{"gitId":"shavonneg"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2024-03-19"},{"lineNumber":5,"author":{"gitId":"shavonneg"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2024-03-19"},{"lineNumber":6,"author":{"gitId":"shavonneg"},"content":"import static seedu.address.testutil.TypicalOrders.ROSES;","lastModifiedDate":"2024-03-19"},{"lineNumber":7,"author":{"gitId":"shavonneg"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":8,"author":{"gitId":"shavonneg"},"content":"import java.util.Arrays;","lastModifiedDate":"2024-03-19"},{"lineNumber":9,"author":{"gitId":"shavonneg"},"content":"import java.util.Collections;","lastModifiedDate":"2024-03-19"},{"lineNumber":10,"author":{"gitId":"shavonneg"},"content":"import java.util.List;","lastModifiedDate":"2024-03-19"},{"lineNumber":11,"author":{"gitId":"shavonneg"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":12,"author":{"gitId":"shavonneg"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-19"},{"lineNumber":13,"author":{"gitId":"shavonneg"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":14,"author":{"gitId":"shavonneg"},"content":"import seedu.address.testutil.OrderBuilder;","lastModifiedDate":"2024-03-19"},{"lineNumber":15,"author":{"gitId":"shavonneg"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":16,"author":{"gitId":"shavonneg"},"content":"public class OrderNameContainsKeywordsPredicateTest {","lastModifiedDate":"2024-03-19"},{"lineNumber":17,"author":{"gitId":"shavonneg"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":18,"author":{"gitId":"shavonneg"},"content":"    @Test","lastModifiedDate":"2024-03-19"},{"lineNumber":19,"author":{"gitId":"shavonneg"},"content":"    public void equals() {","lastModifiedDate":"2024-03-19"},{"lineNumber":20,"author":{"gitId":"shavonneg"},"content":"        List\u003cString\u003e firstPredicateKeywordList \u003d Collections.singletonList(\"first\");","lastModifiedDate":"2024-03-19"},{"lineNumber":21,"author":{"gitId":"shavonneg"},"content":"        List\u003cString\u003e secondPredicateKeywordList \u003d Arrays.asList(\"first\", \"second\");","lastModifiedDate":"2024-03-19"},{"lineNumber":22,"author":{"gitId":"shavonneg"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":23,"author":{"gitId":"shavonneg"},"content":"        OrderNameContainsKeywordsPredicate firstPredicate \u003d new","lastModifiedDate":"2024-03-19"},{"lineNumber":24,"author":{"gitId":"shavonneg"},"content":"                OrderNameContainsKeywordsPredicate(firstPredicateKeywordList);","lastModifiedDate":"2024-03-19"},{"lineNumber":25,"author":{"gitId":"shavonneg"},"content":"        OrderNameContainsKeywordsPredicate secondPredicate \u003d new","lastModifiedDate":"2024-03-19"},{"lineNumber":26,"author":{"gitId":"shavonneg"},"content":"                OrderNameContainsKeywordsPredicate(secondPredicateKeywordList);","lastModifiedDate":"2024-03-19"},{"lineNumber":27,"author":{"gitId":"shavonneg"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":28,"author":{"gitId":"shavonneg"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2024-03-19"},{"lineNumber":29,"author":{"gitId":"shavonneg"},"content":"        assertEquals(firstPredicate, firstPredicate);","lastModifiedDate":"2024-03-19"},{"lineNumber":30,"author":{"gitId":"shavonneg"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":31,"author":{"gitId":"shavonneg"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2024-03-19"},{"lineNumber":32,"author":{"gitId":"shavonneg"},"content":"        OrderNameContainsKeywordsPredicate firstPredicateCopy \u003d new","lastModifiedDate":"2024-03-19"},{"lineNumber":33,"author":{"gitId":"shavonneg"},"content":"                OrderNameContainsKeywordsPredicate(firstPredicateKeywordList);","lastModifiedDate":"2024-03-19"},{"lineNumber":34,"author":{"gitId":"shavonneg"},"content":"        assertEquals(firstPredicate, firstPredicateCopy);","lastModifiedDate":"2024-03-19"},{"lineNumber":35,"author":{"gitId":"shavonneg"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":36,"author":{"gitId":"shavonneg"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2024-03-19"},{"lineNumber":37,"author":{"gitId":"shavonneg"},"content":"        assertNotEquals(1, firstPredicate);","lastModifiedDate":"2024-03-19"},{"lineNumber":38,"author":{"gitId":"shavonneg"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":39,"author":{"gitId":"shavonneg"},"content":"        // null -\u003e returns false","lastModifiedDate":"2024-03-19"},{"lineNumber":40,"author":{"gitId":"shavonneg"},"content":"        assertNotEquals(null, firstPredicate);","lastModifiedDate":"2024-03-19"},{"lineNumber":41,"author":{"gitId":"shavonneg"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":42,"author":{"gitId":"Jaspertzx"},"content":"        // different client -\u003e returns false","lastModifiedDate":"2024-04-14"},{"lineNumber":43,"author":{"gitId":"shavonneg"},"content":"        assertFalse(firstPredicate.equals(secondPredicate));","lastModifiedDate":"2024-03-19"},{"lineNumber":44,"author":{"gitId":"shavonneg"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":45,"author":{"gitId":"shavonneg"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":46,"author":{"gitId":"shavonneg"},"content":"    @Test","lastModifiedDate":"2024-03-19"},{"lineNumber":47,"author":{"gitId":"shavonneg"},"content":"    public void test_nameDoesNotContainKeywords_returnsFalse() {","lastModifiedDate":"2024-03-19"},{"lineNumber":48,"author":{"gitId":"shavonneg"},"content":"        // Zero keywords","lastModifiedDate":"2024-03-19"},{"lineNumber":49,"author":{"gitId":"shavonneg"},"content":"        OrderNameContainsKeywordsPredicate predicate \u003d new OrderNameContainsKeywordsPredicate(Collections.emptyList());","lastModifiedDate":"2024-03-19"},{"lineNumber":50,"author":{"gitId":"kailinteoo"},"content":"        assertFalse(predicate.test(new OrderBuilder(ROSES).withPrice(\"200\").build()));","lastModifiedDate":"2024-03-28"},{"lineNumber":51,"author":{"gitId":"shavonneg"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":52,"author":{"gitId":"shavonneg"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":53,"author":{"gitId":"shavonneg"},"content":"    @Test","lastModifiedDate":"2024-03-19"},{"lineNumber":54,"author":{"gitId":"shavonneg"},"content":"    public void toStringMethod() {","lastModifiedDate":"2024-03-19"},{"lineNumber":55,"author":{"gitId":"shavonneg"},"content":"        List\u003cString\u003e keywords \u003d List.of(\"keyword1\", \"keyword2\");","lastModifiedDate":"2024-03-19"},{"lineNumber":56,"author":{"gitId":"shavonneg"},"content":"        OrderNameContainsKeywordsPredicate predicate \u003d new OrderNameContainsKeywordsPredicate(keywords);","lastModifiedDate":"2024-03-19"},{"lineNumber":57,"author":{"gitId":"shavonneg"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":58,"author":{"gitId":"shavonneg"},"content":"        String expected \u003d OrderNameContainsKeywordsPredicate.class.getCanonicalName() + \"{keywords\u003d\" + keywords + \"}\";","lastModifiedDate":"2024-03-19"},{"lineNumber":59,"author":{"gitId":"shavonneg"},"content":"        assertEquals(expected, predicate.toString());","lastModifiedDate":"2024-03-19"},{"lineNumber":60,"author":{"gitId":"shavonneg"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":61,"author":{"gitId":"shavonneg"},"content":"}","lastModifiedDate":"2024-03-19"},{"lineNumber":62,"author":{"gitId":"shavonneg"},"content":"","lastModifiedDate":"2024-03-19"}],"authorContributionMap":{"kailinteoo":1,"shavonneg":60,"Jaspertzx":1}},{"path":"src/test/java/seedu/address/model/order/OrderTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"rertyy"},"content":"package seedu.address.model.order;","lastModifiedDate":"2024-03-17"},{"lineNumber":2,"author":{"gitId":"rertyy"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":3,"author":{"gitId":"rertyy"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-03-17"},{"lineNumber":4,"author":{"gitId":"rertyy"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2024-03-17"},{"lineNumber":5,"author":{"gitId":"rertyy"},"content":"import static seedu.address.testutil.TypicalOrders.LILIES;","lastModifiedDate":"2024-03-17"},{"lineNumber":6,"author":{"gitId":"rertyy"},"content":"import static seedu.address.testutil.TypicalOrders.ROSES;","lastModifiedDate":"2024-03-17"},{"lineNumber":7,"author":{"gitId":"rertyy"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":8,"author":{"gitId":"rertyy"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-17"},{"lineNumber":9,"author":{"gitId":"rertyy"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":10,"author":{"gitId":"rertyy"},"content":"import seedu.address.testutil.OrderBuilder;","lastModifiedDate":"2024-03-17"},{"lineNumber":11,"author":{"gitId":"Jaspertzx"},"content":"import seedu.address.testutil.TypicalClients;","lastModifiedDate":"2024-04-14"},{"lineNumber":12,"author":{"gitId":"rertyy"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":13,"author":{"gitId":"rertyy"},"content":"class OrderTest {","lastModifiedDate":"2024-03-17"},{"lineNumber":14,"author":{"gitId":"rertyy"},"content":"    @Test","lastModifiedDate":"2024-03-17"},{"lineNumber":15,"author":{"gitId":"rertyy"},"content":"    public void equals() {","lastModifiedDate":"2024-03-17"},{"lineNumber":16,"author":{"gitId":"rertyy"},"content":"        Order rosesCopy \u003d new OrderBuilder(ROSES).build();","lastModifiedDate":"2024-03-17"},{"lineNumber":17,"author":{"gitId":"rertyy"},"content":"        assertEquals(ROSES, rosesCopy);","lastModifiedDate":"2024-03-17"},{"lineNumber":18,"author":{"gitId":"rertyy"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":19,"author":{"gitId":"rertyy"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2024-03-17"},{"lineNumber":20,"author":{"gitId":"rertyy"},"content":"        assertEquals(ROSES, ROSES);","lastModifiedDate":"2024-03-17"},{"lineNumber":21,"author":{"gitId":"rertyy"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":22,"author":{"gitId":"rertyy"},"content":"        // null -\u003e returns false","lastModifiedDate":"2024-03-17"},{"lineNumber":23,"author":{"gitId":"rertyy"},"content":"        assertNotEquals(ROSES, null);","lastModifiedDate":"2024-03-17"},{"lineNumber":24,"author":{"gitId":"rertyy"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":25,"author":{"gitId":"rertyy"},"content":"        // different type -\u003e returns false","lastModifiedDate":"2024-03-17"},{"lineNumber":26,"author":{"gitId":"rertyy"},"content":"        assertNotEquals(ROSES, 5);","lastModifiedDate":"2024-03-17"},{"lineNumber":27,"author":{"gitId":"rertyy"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":28,"author":{"gitId":"rertyy"},"content":"        // different order -\u003e returns false","lastModifiedDate":"2024-03-17"},{"lineNumber":29,"author":{"gitId":"rertyy"},"content":"        assertNotEquals(ROSES, LILIES);","lastModifiedDate":"2024-03-17"},{"lineNumber":30,"author":{"gitId":"rertyy"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":31,"author":{"gitId":"rertyy"},"content":"        // EditedRoses","lastModifiedDate":"2024-03-17"},{"lineNumber":32,"author":{"gitId":"rertyy"},"content":"        Order editedRoses;","lastModifiedDate":"2024-03-17"},{"lineNumber":33,"author":{"gitId":"rertyy"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":34,"author":{"gitId":"rertyy"},"content":"        Order nullRoses;","lastModifiedDate":"2024-03-29"},{"lineNumber":35,"author":{"gitId":"rertyy"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":36,"author":{"gitId":"kailinteoo"},"content":"        // different price -\u003e returns false","lastModifiedDate":"2024-03-28"},{"lineNumber":37,"author":{"gitId":"kailinteoo"},"content":"        editedRoses \u003d new OrderBuilder(ROSES).withPrice(\"200\").build();","lastModifiedDate":"2024-03-28"},{"lineNumber":38,"author":{"gitId":"rertyy"},"content":"        assertNotEquals(ROSES, editedRoses);","lastModifiedDate":"2024-03-17"},{"lineNumber":39,"author":{"gitId":"rertyy"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":40,"author":{"gitId":"rertyy"},"content":"        // different deadline -\u003e returns false","lastModifiedDate":"2024-03-17"},{"lineNumber":41,"author":{"gitId":"rertyy"},"content":"        editedRoses \u003d new OrderBuilder(ROSES)","lastModifiedDate":"2024-03-17"},{"lineNumber":42,"author":{"gitId":"rertyy"},"content":"                .withDeadline(\"11-05-2024 21:51\")","lastModifiedDate":"2024-03-17"},{"lineNumber":43,"author":{"gitId":"rertyy"},"content":"                .build();","lastModifiedDate":"2024-03-17"},{"lineNumber":44,"author":{"gitId":"rertyy"},"content":"        assertNotEquals(ROSES, editedRoses);","lastModifiedDate":"2024-03-17"},{"lineNumber":45,"author":{"gitId":"rertyy"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":46,"author":{"gitId":"rertyy"},"content":"        // different order date -\u003e returns false","lastModifiedDate":"2024-03-17"},{"lineNumber":47,"author":{"gitId":"rertyy"},"content":"        editedRoses \u003d new OrderBuilder(ROSES)","lastModifiedDate":"2024-03-17"},{"lineNumber":48,"author":{"gitId":"rertyy"},"content":"                .withOrderDate(\"11-05-2024 21:51\")","lastModifiedDate":"2024-03-17"},{"lineNumber":49,"author":{"gitId":"rertyy"},"content":"                .build();","lastModifiedDate":"2024-03-17"},{"lineNumber":50,"author":{"gitId":"rertyy"},"content":"        assertNotEquals(ROSES, editedRoses);","lastModifiedDate":"2024-03-17"},{"lineNumber":51,"author":{"gitId":"rertyy"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":52,"author":{"gitId":"rertyy"},"content":"        // different remark -\u003e returns false","lastModifiedDate":"2024-03-17"},{"lineNumber":53,"author":{"gitId":"rertyy"},"content":"        editedRoses \u003d new OrderBuilder(ROSES)","lastModifiedDate":"2024-03-17"},{"lineNumber":54,"author":{"gitId":"rertyy"},"content":"                .withRemark(\"Different remark\")","lastModifiedDate":"2024-03-17"},{"lineNumber":55,"author":{"gitId":"rertyy"},"content":"                .build();","lastModifiedDate":"2024-03-17"},{"lineNumber":56,"author":{"gitId":"rertyy"},"content":"        assertNotEquals(ROSES, editedRoses);","lastModifiedDate":"2024-03-17"},{"lineNumber":57,"author":{"gitId":"rertyy"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":58,"author":{"gitId":"rertyy"},"content":"        // different status -\u003e returns false","lastModifiedDate":"2024-03-17"},{"lineNumber":59,"author":{"gitId":"rertyy"},"content":"        editedRoses \u003d new OrderBuilder(ROSES)","lastModifiedDate":"2024-03-17"},{"lineNumber":60,"author":{"gitId":"rertyy"},"content":"                .withStatus(\"PENDING\")","lastModifiedDate":"2024-03-17"},{"lineNumber":61,"author":{"gitId":"rertyy"},"content":"                .build();","lastModifiedDate":"2024-03-17"},{"lineNumber":62,"author":{"gitId":"rertyy"},"content":"        assertNotEquals(ROSES, editedRoses);","lastModifiedDate":"2024-03-17"},{"lineNumber":63,"author":{"gitId":"rertyy"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":64,"author":{"gitId":"rertyy"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":65,"author":{"gitId":"rertyy"},"content":"        // different orderId -\u003e returns false","lastModifiedDate":"2024-03-17"},{"lineNumber":66,"author":{"gitId":"rertyy"},"content":"        editedRoses \u003d new OrderBuilder(ROSES)","lastModifiedDate":"2024-03-17"},{"lineNumber":67,"author":{"gitId":"rertyy"},"content":"                .withOrderId(\"434d72c4-f045-448c-84a7-6d70704e9730\")","lastModifiedDate":"2024-03-17"},{"lineNumber":68,"author":{"gitId":"rertyy"},"content":"                .build();","lastModifiedDate":"2024-03-17"},{"lineNumber":69,"author":{"gitId":"rertyy"},"content":"        assertNotEquals(ROSES, editedRoses);","lastModifiedDate":"2024-03-17"},{"lineNumber":70,"author":{"gitId":"rertyy"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":71,"author":{"gitId":"Jaspertzx"},"content":"        // different client -\u003e returns false","lastModifiedDate":"2024-04-14"},{"lineNumber":72,"author":{"gitId":"rertyy"},"content":"        editedRoses \u003d new OrderBuilder(ROSES)","lastModifiedDate":"2024-03-29"},{"lineNumber":73,"author":{"gitId":"Jaspertzx"},"content":"                .withPerson(TypicalClients.CARL)","lastModifiedDate":"2024-04-14"},{"lineNumber":74,"author":{"gitId":"rertyy"},"content":"                .build();","lastModifiedDate":"2024-03-29"},{"lineNumber":75,"author":{"gitId":"rertyy"},"content":"        assertNotEquals(ROSES, editedRoses);","lastModifiedDate":"2024-03-29"},{"lineNumber":76,"author":{"gitId":"rertyy"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":77,"author":{"gitId":"rertyy"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":78,"author":{"gitId":"rertyy"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":79,"author":{"gitId":"rertyy"},"content":"    @Test","lastModifiedDate":"2024-03-17"},{"lineNumber":80,"author":{"gitId":"rertyy"},"content":"    public void toStringMethod() {","lastModifiedDate":"2024-03-17"},{"lineNumber":81,"author":{"gitId":"rertyy"},"content":"        String expected \u003d Order.class.getCanonicalName()","lastModifiedDate":"2024-03-17"},{"lineNumber":82,"author":{"gitId":"rertyy"},"content":"                + \"{orderId\u003d\" + ROSES.getOrderId()","lastModifiedDate":"2024-03-17"},{"lineNumber":83,"author":{"gitId":"rertyy"},"content":"                + \", orderDate\u003d\" + ROSES.getOrderDate()","lastModifiedDate":"2024-03-17"},{"lineNumber":84,"author":{"gitId":"rertyy"},"content":"                + \", deadline\u003d\" + ROSES.getDeadline()","lastModifiedDate":"2024-03-17"},{"lineNumber":85,"author":{"gitId":"kailinteoo"},"content":"                + \", price\u003d\" + ROSES.getPrice()","lastModifiedDate":"2024-03-28"},{"lineNumber":86,"author":{"gitId":"rertyy"},"content":"                + \", remark\u003d\" + ROSES.getRemark()","lastModifiedDate":"2024-03-17"},{"lineNumber":87,"author":{"gitId":"rertyy"},"content":"                + \", status\u003d\" + ROSES.getStatus()","lastModifiedDate":"2024-03-17"},{"lineNumber":88,"author":{"gitId":"rertyy"},"content":"                + \"}\";","lastModifiedDate":"2024-03-17"},{"lineNumber":89,"author":{"gitId":"rertyy"},"content":"        assertEquals(expected, ROSES.toString());","lastModifiedDate":"2024-03-17"},{"lineNumber":90,"author":{"gitId":"rertyy"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":91,"author":{"gitId":"rertyy"},"content":"}","lastModifiedDate":"2024-03-17"},{"lineNumber":92,"author":{"gitId":"rertyy"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":93,"author":{"gitId":"rertyy"},"content":"","lastModifiedDate":"2024-03-17"}],"authorContributionMap":{"kailinteoo":3,"rertyy":87,"Jaspertzx":3}},{"path":"src/test/java/seedu/address/model/order/PriceTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"kailinteoo"},"content":"package seedu.address.model.order;","lastModifiedDate":"2024-03-28"},{"lineNumber":2,"author":{"gitId":"kailinteoo"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":3,"author":{"gitId":"kailinteoo"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-03-28"},{"lineNumber":4,"author":{"gitId":"kailinteoo"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2024-03-28"},{"lineNumber":5,"author":{"gitId":"kailinteoo"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2024-03-28"},{"lineNumber":6,"author":{"gitId":"kailinteoo"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2024-03-28"},{"lineNumber":7,"author":{"gitId":"kailinteoo"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2024-03-28"},{"lineNumber":8,"author":{"gitId":"kailinteoo"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":9,"author":{"gitId":"kailinteoo"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-28"},{"lineNumber":10,"author":{"gitId":"kailinteoo"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":11,"author":{"gitId":"kailinteoo"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":12,"author":{"gitId":"kailinteoo"},"content":"class PriceTest {","lastModifiedDate":"2024-03-28"},{"lineNumber":13,"author":{"gitId":"kailinteoo"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":14,"author":{"gitId":"kailinteoo"},"content":"    @Test","lastModifiedDate":"2024-03-28"},{"lineNumber":15,"author":{"gitId":"kailinteoo"},"content":"    void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2024-03-28"},{"lineNumber":16,"author":{"gitId":"kailinteoo"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Price(null));","lastModifiedDate":"2024-03-28"},{"lineNumber":17,"author":{"gitId":"kailinteoo"},"content":"    }","lastModifiedDate":"2024-03-28"},{"lineNumber":18,"author":{"gitId":"kailinteoo"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":19,"author":{"gitId":"kailinteoo"},"content":"    @Test","lastModifiedDate":"2024-03-28"},{"lineNumber":20,"author":{"gitId":"kailinteoo"},"content":"    void constructor_invalidPriceEmpty_throwsIllegalArgumentException() {","lastModifiedDate":"2024-03-28"},{"lineNumber":21,"author":{"gitId":"kailinteoo"},"content":"        String invalidPrice \u003d \"\";","lastModifiedDate":"2024-03-28"},{"lineNumber":22,"author":{"gitId":"kailinteoo"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Price(invalidPrice));","lastModifiedDate":"2024-03-28"},{"lineNumber":23,"author":{"gitId":"kailinteoo"},"content":"    }","lastModifiedDate":"2024-03-28"},{"lineNumber":24,"author":{"gitId":"kailinteoo"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":25,"author":{"gitId":"kailinteoo"},"content":"    @Test","lastModifiedDate":"2024-03-28"},{"lineNumber":26,"author":{"gitId":"kailinteoo"},"content":"    void constructor_invalidPriceNegative_throwsIllegalArgumentException() {","lastModifiedDate":"2024-03-28"},{"lineNumber":27,"author":{"gitId":"kailinteoo"},"content":"        String invalidPrice \u003d \"-1\";","lastModifiedDate":"2024-03-28"},{"lineNumber":28,"author":{"gitId":"kailinteoo"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Price(invalidPrice));","lastModifiedDate":"2024-03-28"},{"lineNumber":29,"author":{"gitId":"kailinteoo"},"content":"    }","lastModifiedDate":"2024-03-28"},{"lineNumber":30,"author":{"gitId":"kailinteoo"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":31,"author":{"gitId":"kailinteoo"},"content":"    @Test","lastModifiedDate":"2024-03-28"},{"lineNumber":32,"author":{"gitId":"kailinteoo"},"content":"    void isValidPrice() {","lastModifiedDate":"2024-03-28"},{"lineNumber":33,"author":{"gitId":"kailinteoo"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":34,"author":{"gitId":"kailinteoo"},"content":"        assertThrows(NullPointerException.class, () -\u003e Price.isValidPrice(null));","lastModifiedDate":"2024-03-29"},{"lineNumber":35,"author":{"gitId":"Jaspertzx"},"content":"        assertFalse(Price.isValidPrice(\"\"));","lastModifiedDate":"2024-04-14"},{"lineNumber":36,"author":{"gitId":"kailinteoo"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":37,"author":{"gitId":"kailinteoo"},"content":"        assertFalse(Price.isValidPrice(\"-1\"));","lastModifiedDate":"2024-03-28"},{"lineNumber":38,"author":{"gitId":"kailinteoo"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":39,"author":{"gitId":"kailinteoo"},"content":"        assertThrows(NumberFormatException.class, () -\u003e Price.isValidPrice(\" \"));","lastModifiedDate":"2024-03-28"},{"lineNumber":40,"author":{"gitId":"Jaspertzx"},"content":"        assertTrue(Price.isValidPrice(\"0\"));","lastModifiedDate":"2024-04-08"},{"lineNumber":41,"author":{"gitId":"kailinteoo"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":42,"author":{"gitId":"kailinteoo"},"content":"        assertTrue(Price.isValidPrice(\"1\"));","lastModifiedDate":"2024-03-28"},{"lineNumber":43,"author":{"gitId":"kailinteoo"},"content":"        assertTrue(Price.isValidPrice(\"100\"));","lastModifiedDate":"2024-03-28"},{"lineNumber":44,"author":{"gitId":"kailinteoo"},"content":"        assertTrue(Price.isValidPrice(\"1.5\"));","lastModifiedDate":"2024-03-29"},{"lineNumber":45,"author":{"gitId":"kailinteoo"},"content":"        assertTrue(Price.isValidPrice(\"1.55\"));","lastModifiedDate":"2024-03-29"},{"lineNumber":46,"author":{"gitId":"kailinteoo"},"content":"        assertTrue(Price.isValidPrice(\"1.500\"));","lastModifiedDate":"2024-03-29"},{"lineNumber":47,"author":{"gitId":"kailinteoo"},"content":"    }","lastModifiedDate":"2024-03-28"},{"lineNumber":48,"author":{"gitId":"kailinteoo"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":49,"author":{"gitId":"kailinteoo"},"content":"    @Test","lastModifiedDate":"2024-03-28"},{"lineNumber":50,"author":{"gitId":"kailinteoo"},"content":"    void testEquals() {","lastModifiedDate":"2024-03-28"},{"lineNumber":51,"author":{"gitId":"kailinteoo"},"content":"        Price price \u003d new Price(\"1\");","lastModifiedDate":"2024-03-28"},{"lineNumber":52,"author":{"gitId":"kailinteoo"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":53,"author":{"gitId":"kailinteoo"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2024-03-28"},{"lineNumber":54,"author":{"gitId":"kailinteoo"},"content":"        assertEquals(price, new Price(\"1\"));","lastModifiedDate":"2024-03-28"},{"lineNumber":55,"author":{"gitId":"kailinteoo"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":56,"author":{"gitId":"kailinteoo"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2024-03-28"},{"lineNumber":57,"author":{"gitId":"kailinteoo"},"content":"        assertEquals(price, price);","lastModifiedDate":"2024-03-28"},{"lineNumber":58,"author":{"gitId":"kailinteoo"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":59,"author":{"gitId":"kailinteoo"},"content":"        // null -\u003e returns false","lastModifiedDate":"2024-03-28"},{"lineNumber":60,"author":{"gitId":"kailinteoo"},"content":"        assertNotEquals(null, price);","lastModifiedDate":"2024-03-28"},{"lineNumber":61,"author":{"gitId":"kailinteoo"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":62,"author":{"gitId":"kailinteoo"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2024-03-28"},{"lineNumber":63,"author":{"gitId":"kailinteoo"},"content":"        assertNotEquals(price, 0.0);","lastModifiedDate":"2024-03-28"},{"lineNumber":64,"author":{"gitId":"kailinteoo"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":65,"author":{"gitId":"kailinteoo"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2024-03-28"},{"lineNumber":66,"author":{"gitId":"kailinteoo"},"content":"        assertNotEquals(price, new Price(\"2\"));","lastModifiedDate":"2024-03-28"},{"lineNumber":67,"author":{"gitId":"kailinteoo"},"content":"    }","lastModifiedDate":"2024-03-28"},{"lineNumber":68,"author":{"gitId":"kailinteoo"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":69,"author":{"gitId":"kailinteoo"},"content":"}","lastModifiedDate":"2024-03-28"}],"authorContributionMap":{"kailinteoo":67,"Jaspertzx":2}},{"path":"src/test/java/seedu/address/model/order/RemarkTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"rertyy"},"content":"package seedu.address.model.order;","lastModifiedDate":"2024-03-17"},{"lineNumber":2,"author":{"gitId":"rertyy"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":3,"author":{"gitId":"rertyy"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-03-17"},{"lineNumber":4,"author":{"gitId":"rertyy"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2024-03-17"},{"lineNumber":5,"author":{"gitId":"rertyy"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2024-03-17"},{"lineNumber":6,"author":{"gitId":"rertyy"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2024-03-17"},{"lineNumber":7,"author":{"gitId":"rertyy"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2024-03-17"},{"lineNumber":8,"author":{"gitId":"rertyy"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":9,"author":{"gitId":"rertyy"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-17"},{"lineNumber":10,"author":{"gitId":"rertyy"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":11,"author":{"gitId":"rertyy"},"content":"class RemarkTest {","lastModifiedDate":"2024-03-17"},{"lineNumber":12,"author":{"gitId":"rertyy"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":13,"author":{"gitId":"rertyy"},"content":"    @Test","lastModifiedDate":"2024-03-17"},{"lineNumber":14,"author":{"gitId":"rertyy"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2024-03-17"},{"lineNumber":15,"author":{"gitId":"rertyy"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Remark(null));","lastModifiedDate":"2024-03-17"},{"lineNumber":16,"author":{"gitId":"rertyy"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":17,"author":{"gitId":"rertyy"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":18,"author":{"gitId":"rertyy"},"content":"    @Test","lastModifiedDate":"2024-03-17"},{"lineNumber":19,"author":{"gitId":"rertyy"},"content":"    public void constructor_invalidRemark_throwsIllegalArgumentException() {","lastModifiedDate":"2024-03-17"},{"lineNumber":20,"author":{"gitId":"rertyy"},"content":"        String invalidRemark \u003d \"\";","lastModifiedDate":"2024-03-17"},{"lineNumber":21,"author":{"gitId":"rertyy"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Remark(invalidRemark));","lastModifiedDate":"2024-03-17"},{"lineNumber":22,"author":{"gitId":"rertyy"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":23,"author":{"gitId":"rertyy"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":24,"author":{"gitId":"rertyy"},"content":"    @Test","lastModifiedDate":"2024-03-17"},{"lineNumber":25,"author":{"gitId":"rertyy"},"content":"    public void isValidRemark() {","lastModifiedDate":"2024-03-17"},{"lineNumber":26,"author":{"gitId":"rertyy"},"content":"        // null remark","lastModifiedDate":"2024-03-17"},{"lineNumber":27,"author":{"gitId":"rertyy"},"content":"        assertThrows(NullPointerException.class, () -\u003e Remark.isValidRemark(null));","lastModifiedDate":"2024-03-17"},{"lineNumber":28,"author":{"gitId":"rertyy"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":29,"author":{"gitId":"rertyy"},"content":"        // invalid remarks","lastModifiedDate":"2024-03-17"},{"lineNumber":30,"author":{"gitId":"rertyy"},"content":"        assertFalse(Remark.isValidRemark(\"\")); // empty string","lastModifiedDate":"2024-03-17"},{"lineNumber":31,"author":{"gitId":"rertyy"},"content":"        assertFalse(Remark.isValidRemark(\" \")); // spaces only","lastModifiedDate":"2024-03-17"},{"lineNumber":32,"author":{"gitId":"rertyy"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":33,"author":{"gitId":"rertyy"},"content":"        // valid remarks","lastModifiedDate":"2024-03-17"},{"lineNumber":34,"author":{"gitId":"rertyy"},"content":"        assertTrue(Remark.isValidRemark(\"A valid remark.\")); // Non-empty remark","lastModifiedDate":"2024-03-17"},{"lineNumber":35,"author":{"gitId":"rertyy"},"content":"        assertTrue(Remark.isValidRemark(\"12345\")); // Numbers only","lastModifiedDate":"2024-03-17"},{"lineNumber":36,"author":{"gitId":"rertyy"},"content":"        assertTrue(Remark.isValidRemark(\"Remark with spaces\")); // Contains spaces","lastModifiedDate":"2024-03-17"},{"lineNumber":37,"author":{"gitId":"rertyy"},"content":"        assertTrue(Remark.isValidRemark(\"Remark-with-dashes\")); // Contains dashes","lastModifiedDate":"2024-03-17"},{"lineNumber":38,"author":{"gitId":"rertyy"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":39,"author":{"gitId":"rertyy"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":40,"author":{"gitId":"rertyy"},"content":"    @Test","lastModifiedDate":"2024-03-17"},{"lineNumber":41,"author":{"gitId":"rertyy"},"content":"    public void equals() {","lastModifiedDate":"2024-03-17"},{"lineNumber":42,"author":{"gitId":"rertyy"},"content":"        Remark remark \u003d new Remark(\"A valid remark.\");","lastModifiedDate":"2024-03-17"},{"lineNumber":43,"author":{"gitId":"rertyy"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":44,"author":{"gitId":"rertyy"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2024-03-17"},{"lineNumber":45,"author":{"gitId":"rertyy"},"content":"        assertEquals(remark, new Remark(\"A valid remark.\"));","lastModifiedDate":"2024-03-17"},{"lineNumber":46,"author":{"gitId":"rertyy"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":47,"author":{"gitId":"rertyy"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2024-03-17"},{"lineNumber":48,"author":{"gitId":"rertyy"},"content":"        assertEquals(remark, remark);","lastModifiedDate":"2024-03-17"},{"lineNumber":49,"author":{"gitId":"rertyy"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":50,"author":{"gitId":"rertyy"},"content":"        // null -\u003e returns false","lastModifiedDate":"2024-03-17"},{"lineNumber":51,"author":{"gitId":"rertyy"},"content":"        assertNotEquals(null, remark);","lastModifiedDate":"2024-03-17"},{"lineNumber":52,"author":{"gitId":"rertyy"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":53,"author":{"gitId":"rertyy"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2024-03-17"},{"lineNumber":54,"author":{"gitId":"rertyy"},"content":"        assertNotEquals(remark, 0.0);","lastModifiedDate":"2024-03-17"},{"lineNumber":55,"author":{"gitId":"rertyy"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":56,"author":{"gitId":"rertyy"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2024-03-17"},{"lineNumber":57,"author":{"gitId":"rertyy"},"content":"        assertNotEquals(remark, new Remark(\"Another remark\"));","lastModifiedDate":"2024-03-17"},{"lineNumber":58,"author":{"gitId":"rertyy"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":59,"author":{"gitId":"rertyy"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":60,"author":{"gitId":"rertyy"},"content":"}","lastModifiedDate":"2024-03-17"}],"authorContributionMap":{"rertyy":60}},{"path":"src/test/java/seedu/address/model/order/StatusTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"rertyy"},"content":"package seedu.address.model.order;","lastModifiedDate":"2024-03-17"},{"lineNumber":2,"author":{"gitId":"rertyy"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":3,"author":{"gitId":"rertyy"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-03-17"},{"lineNumber":4,"author":{"gitId":"rertyy"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2024-03-17"},{"lineNumber":5,"author":{"gitId":"rertyy"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2024-03-17"},{"lineNumber":6,"author":{"gitId":"rertyy"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2024-03-17"},{"lineNumber":7,"author":{"gitId":"rertyy"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2024-03-17"},{"lineNumber":8,"author":{"gitId":"rertyy"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":9,"author":{"gitId":"rertyy"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-17"},{"lineNumber":10,"author":{"gitId":"rertyy"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":11,"author":{"gitId":"rertyy"},"content":"class StatusTest {","lastModifiedDate":"2024-03-17"},{"lineNumber":12,"author":{"gitId":"rertyy"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":13,"author":{"gitId":"rertyy"},"content":"    @Test","lastModifiedDate":"2024-03-17"},{"lineNumber":14,"author":{"gitId":"rertyy"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2024-03-17"},{"lineNumber":15,"author":{"gitId":"rertyy"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Status(null));","lastModifiedDate":"2024-03-17"},{"lineNumber":16,"author":{"gitId":"rertyy"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":17,"author":{"gitId":"rertyy"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":18,"author":{"gitId":"rertyy"},"content":"    @Test","lastModifiedDate":"2024-03-17"},{"lineNumber":19,"author":{"gitId":"rertyy"},"content":"    public void constructor_invalidStatus_throwsIllegalArgumentException() {","lastModifiedDate":"2024-03-17"},{"lineNumber":20,"author":{"gitId":"rertyy"},"content":"        String invalidStatus \u003d \"invalid\";","lastModifiedDate":"2024-03-17"},{"lineNumber":21,"author":{"gitId":"rertyy"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Status(invalidStatus));","lastModifiedDate":"2024-03-17"},{"lineNumber":22,"author":{"gitId":"rertyy"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":23,"author":{"gitId":"rertyy"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":24,"author":{"gitId":"shavonneg"},"content":"    @Test","lastModifiedDate":"2024-03-30"},{"lineNumber":25,"author":{"gitId":"shavonneg"},"content":"    public void getStatus_returnsCorrectStatus() {","lastModifiedDate":"2024-03-30"},{"lineNumber":26,"author":{"gitId":"shavonneg"},"content":"        Status.StatusEnum expectedStatus \u003d Status.StatusEnum.valueOf(\"PENDING\");","lastModifiedDate":"2024-03-30"},{"lineNumber":27,"author":{"gitId":"shavonneg"},"content":"        Status status \u003d new Status(\"PENDING\");","lastModifiedDate":"2024-03-30"},{"lineNumber":28,"author":{"gitId":"shavonneg"},"content":"        Status.StatusEnum actualStatus \u003d status.getStatusEnum();","lastModifiedDate":"2024-03-30"},{"lineNumber":29,"author":{"gitId":"shavonneg"},"content":"        assertEquals(expectedStatus, actualStatus, \"getStatus should return the correct status.\");","lastModifiedDate":"2024-03-30"},{"lineNumber":30,"author":{"gitId":"shavonneg"},"content":"    }","lastModifiedDate":"2024-03-30"},{"lineNumber":31,"author":{"gitId":"shavonneg"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":32,"author":{"gitId":"rertyy"},"content":"    @Test","lastModifiedDate":"2024-03-17"},{"lineNumber":33,"author":{"gitId":"rertyy"},"content":"    public void isValidStatus() {","lastModifiedDate":"2024-03-17"},{"lineNumber":34,"author":{"gitId":"rertyy"},"content":"        // null status","lastModifiedDate":"2024-03-17"},{"lineNumber":35,"author":{"gitId":"rertyy"},"content":"        assertThrows(NullPointerException.class, () -\u003e Status.isValidStatus(null));","lastModifiedDate":"2024-03-17"},{"lineNumber":36,"author":{"gitId":"rertyy"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":37,"author":{"gitId":"rertyy"},"content":"        // invalid statuses","lastModifiedDate":"2024-03-17"},{"lineNumber":38,"author":{"gitId":"rertyy"},"content":"        assertFalse(Status.isValidStatus(\"invalid\")); // Not matching any status enum","lastModifiedDate":"2024-03-17"},{"lineNumber":39,"author":{"gitId":"rertyy"},"content":"        assertFalse(Status.isValidStatus(\"\")); // Not matching any status enum","lastModifiedDate":"2024-03-17"},{"lineNumber":40,"author":{"gitId":"rertyy"},"content":"        assertFalse(Status.isValidStatus(\" \")); // Empty string","lastModifiedDate":"2024-03-17"},{"lineNumber":41,"author":{"gitId":"rertyy"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":42,"author":{"gitId":"rertyy"},"content":"        // valid statuses","lastModifiedDate":"2024-03-17"},{"lineNumber":43,"author":{"gitId":"rertyy"},"content":"        assertTrue(Status.isValidStatus(\"pending\"));","lastModifiedDate":"2024-03-17"},{"lineNumber":44,"author":{"gitId":"rertyy"},"content":"        assertTrue(Status.isValidStatus(\"completed\"));","lastModifiedDate":"2024-03-17"},{"lineNumber":45,"author":{"gitId":"rertyy"},"content":"        assertTrue(Status.isValidStatus(\"canceled\"));","lastModifiedDate":"2024-03-17"},{"lineNumber":46,"author":{"gitId":"rertyy"},"content":"        assertTrue(Status.isValidStatus(\"PENDING\")); // Case insensitivity","lastModifiedDate":"2024-03-17"},{"lineNumber":47,"author":{"gitId":"rertyy"},"content":"        assertTrue(Status.isValidStatus(\"COMPLETED\")); // Case insensitivity","lastModifiedDate":"2024-03-17"},{"lineNumber":48,"author":{"gitId":"rertyy"},"content":"        assertTrue(Status.isValidStatus(\"CANCELED\")); // Case insensitivity","lastModifiedDate":"2024-03-17"},{"lineNumber":49,"author":{"gitId":"rertyy"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":50,"author":{"gitId":"rertyy"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":51,"author":{"gitId":"rertyy"},"content":"    @Test","lastModifiedDate":"2024-03-17"},{"lineNumber":52,"author":{"gitId":"rertyy"},"content":"    public void equals() {","lastModifiedDate":"2024-03-17"},{"lineNumber":53,"author":{"gitId":"rertyy"},"content":"        Status status \u003d new Status(\"pending\");","lastModifiedDate":"2024-03-17"},{"lineNumber":54,"author":{"gitId":"rertyy"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":55,"author":{"gitId":"rertyy"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2024-03-17"},{"lineNumber":56,"author":{"gitId":"rertyy"},"content":"        assertEquals(status, new Status(\"pending\"));","lastModifiedDate":"2024-03-17"},{"lineNumber":57,"author":{"gitId":"rertyy"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":58,"author":{"gitId":"rertyy"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2024-03-17"},{"lineNumber":59,"author":{"gitId":"rertyy"},"content":"        assertEquals(status, status);","lastModifiedDate":"2024-03-17"},{"lineNumber":60,"author":{"gitId":"rertyy"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":61,"author":{"gitId":"rertyy"},"content":"        // null -\u003e returns false","lastModifiedDate":"2024-03-17"},{"lineNumber":62,"author":{"gitId":"rertyy"},"content":"        assertNotEquals(null, status);","lastModifiedDate":"2024-03-17"},{"lineNumber":63,"author":{"gitId":"rertyy"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":64,"author":{"gitId":"rertyy"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2024-03-17"},{"lineNumber":65,"author":{"gitId":"rertyy"},"content":"        assertNotEquals(status, 5.0);","lastModifiedDate":"2024-03-17"},{"lineNumber":66,"author":{"gitId":"rertyy"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":67,"author":{"gitId":"rertyy"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2024-03-17"},{"lineNumber":68,"author":{"gitId":"rertyy"},"content":"        assertNotEquals(status, new Status(\"completed\"));","lastModifiedDate":"2024-03-17"},{"lineNumber":69,"author":{"gitId":"rertyy"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":70,"author":{"gitId":"rertyy"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":71,"author":{"gitId":"rertyy"},"content":"}","lastModifiedDate":"2024-03-17"}],"authorContributionMap":{"shavonneg":8,"rertyy":63}},{"path":"src/test/java/seedu/address/storage/JsonAdaptedClientTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"Jaspertzx"},"content":"import static seedu.address.storage.JsonAdaptedClient.MISSING_FIELD_MESSAGE_FORMAT;","lastModifiedDate":"2024-04-14"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":6,"author":{"gitId":"Jaspertzx"},"content":"import static seedu.address.testutil.TypicalClients.BENSON;","lastModifiedDate":"2024-04-14"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"Jaspertzx"},"content":"import seedu.address.model.client.Address;","lastModifiedDate":"2024-04-14"},{"lineNumber":16,"author":{"gitId":"Jaspertzx"},"content":"import seedu.address.model.client.Email;","lastModifiedDate":"2024-04-14"},{"lineNumber":17,"author":{"gitId":"Jaspertzx"},"content":"import seedu.address.model.client.Name;","lastModifiedDate":"2024-04-14"},{"lineNumber":18,"author":{"gitId":"Jaspertzx"},"content":"import seedu.address.model.client.Phone;","lastModifiedDate":"2024-04-14"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"Jaspertzx"},"content":"public class JsonAdaptedClientTest {","lastModifiedDate":"2024-04-14"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final String INVALID_NAME \u003d \"R@chel\";","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final String INVALID_PHONE \u003d \"+651234\";","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private static final String INVALID_ADDRESS \u003d \" \";","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private static final String INVALID_EMAIL \u003d \"example.com\";","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private static final String INVALID_TAG \u003d \"#friend\";","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"kailinteoo"},"content":"    private static final String INVALID_ORDERID \u003d \"#FXXXXXXXX\";","lastModifiedDate":"2024-03-19"},{"lineNumber":27,"author":{"gitId":"kailinteoo"},"content":"    private static final String INVALID_ORDERDATE \u003d \"24/D/23\";","lastModifiedDate":"2024-03-19"},{"lineNumber":28,"author":{"gitId":"kailinteoo"},"content":"    private static final String INVALID_DEADLINE \u003d \"24/D/23\";","lastModifiedDate":"2024-03-19"},{"lineNumber":29,"author":{"gitId":"kailinteoo"},"content":"    private static final String INVALID_PRICE \u003d \"@6.7\";","lastModifiedDate":"2024-03-28"},{"lineNumber":30,"author":{"gitId":"kailinteoo"},"content":"    private static final String INVALID_REMARK \u003d \"%HOME\";","lastModifiedDate":"2024-03-19"},{"lineNumber":31,"author":{"gitId":"kailinteoo"},"content":"    private static final String INVALID_STATUS \u003d \"#NOW\";","lastModifiedDate":"2024-03-19"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private static final String VALID_NAME \u003d BENSON.getName().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private static final String VALID_PHONE \u003d BENSON.getPhone().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private static final String VALID_EMAIL \u003d BENSON.getEmail().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private static final String VALID_ADDRESS \u003d BENSON.getAddress().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private static final List\u003cJsonAdaptedTag\u003e VALID_TAGS \u003d BENSON.getTags().stream()","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            .map(JsonAdaptedTag::new)","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            .collect(Collectors.toList());","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"kailinteoo"},"content":"    private static final List\u003cJsonAdaptedOrder\u003e VALID_ORDERS \u003d BENSON.getOrders().stream()","lastModifiedDate":"2024-03-19"},{"lineNumber":41,"author":{"gitId":"kailinteoo"},"content":"            .map(JsonAdaptedOrder::new)","lastModifiedDate":"2024-03-19"},{"lineNumber":42,"author":{"gitId":"kailinteoo"},"content":"            .collect(Collectors.toList());","lastModifiedDate":"2024-03-19"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public void toModelType_validPersonDetails_returnsPerson() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"Jaspertzx"},"content":"        JsonAdaptedClient person \u003d new JsonAdaptedClient(BENSON);","lastModifiedDate":"2024-04-14"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertEquals(BENSON, person.toModelType());","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void toModelType_invalidName_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"Jaspertzx"},"content":"        JsonAdaptedClient person \u003d","lastModifiedDate":"2024-04-14"},{"lineNumber":53,"author":{"gitId":"Jaspertzx"},"content":"                new JsonAdaptedClient(INVALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS, VALID_TAGS, VALID_ORDERS);","lastModifiedDate":"2024-04-14"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Name.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public void toModelType_nullName_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":60,"author":{"gitId":"Jaspertzx"},"content":"        JsonAdaptedClient person \u003d new JsonAdaptedClient(null, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS,","lastModifiedDate":"2024-04-14"},{"lineNumber":61,"author":{"gitId":"kailinteoo"},"content":"                VALID_TAGS, VALID_ORDERS);","lastModifiedDate":"2024-03-19"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public void toModelType_invalidPhone_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":68,"author":{"gitId":"Jaspertzx"},"content":"        JsonAdaptedClient person \u003d","lastModifiedDate":"2024-04-14"},{"lineNumber":69,"author":{"gitId":"Jaspertzx"},"content":"                new JsonAdaptedClient(VALID_NAME, INVALID_PHONE, VALID_EMAIL, VALID_ADDRESS, VALID_TAGS, VALID_ORDERS);","lastModifiedDate":"2024-04-14"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Phone.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public void toModelType_nullPhone_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":76,"author":{"gitId":"Jaspertzx"},"content":"        JsonAdaptedClient person \u003d new JsonAdaptedClient(VALID_NAME, null, VALID_EMAIL, VALID_ADDRESS,","lastModifiedDate":"2024-04-14"},{"lineNumber":77,"author":{"gitId":"kailinteoo"},"content":"                VALID_TAGS, VALID_ORDERS);","lastModifiedDate":"2024-03-19"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Phone.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public void toModelType_invalidEmail_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":84,"author":{"gitId":"Jaspertzx"},"content":"        JsonAdaptedClient person \u003d","lastModifiedDate":"2024-04-14"},{"lineNumber":85,"author":{"gitId":"Jaspertzx"},"content":"                new JsonAdaptedClient(VALID_NAME, VALID_PHONE, INVALID_EMAIL, VALID_ADDRESS, VALID_TAGS, VALID_ORDERS);","lastModifiedDate":"2024-04-14"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Email.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    public void toModelType_nullEmail_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":92,"author":{"gitId":"Jaspertzx"},"content":"        JsonAdaptedClient person \u003d new JsonAdaptedClient(VALID_NAME, VALID_PHONE, null, VALID_ADDRESS,","lastModifiedDate":"2024-04-14"},{"lineNumber":93,"author":{"gitId":"kailinteoo"},"content":"                VALID_TAGS, VALID_ORDERS);","lastModifiedDate":"2024-03-19"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Email.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    public void toModelType_invalidAddress_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":100,"author":{"gitId":"Jaspertzx"},"content":"        JsonAdaptedClient person \u003d","lastModifiedDate":"2024-04-14"},{"lineNumber":101,"author":{"gitId":"Jaspertzx"},"content":"                new JsonAdaptedClient(VALID_NAME, VALID_PHONE, VALID_EMAIL, INVALID_ADDRESS, VALID_TAGS, VALID_ORDERS);","lastModifiedDate":"2024-04-14"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Address.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    public void toModelType_nullAddress_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":108,"author":{"gitId":"Jaspertzx"},"content":"        JsonAdaptedClient person \u003d new JsonAdaptedClient(VALID_NAME, VALID_PHONE, VALID_EMAIL, null,","lastModifiedDate":"2024-04-14"},{"lineNumber":109,"author":{"gitId":"kailinteoo"},"content":"                VALID_TAGS, VALID_ORDERS);","lastModifiedDate":"2024-03-19"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Address.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    public void toModelType_invalidTags_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        List\u003cJsonAdaptedTag\u003e invalidTags \u003d new ArrayList\u003c\u003e(VALID_TAGS);","lastModifiedDate":"2018-08-13"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        invalidTags.add(new JsonAdaptedTag(INVALID_TAG));","lastModifiedDate":"2018-08-13"},{"lineNumber":118,"author":{"gitId":"Jaspertzx"},"content":"        JsonAdaptedClient person \u003d","lastModifiedDate":"2024-04-14"},{"lineNumber":119,"author":{"gitId":"Jaspertzx"},"content":"                new JsonAdaptedClient(VALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS, invalidTags, VALID_ORDERS);","lastModifiedDate":"2024-04-14"},{"lineNumber":120,"author":{"gitId":"kailinteoo"},"content":"        assertThrows(IllegalValueException.class, person::toModelType);","lastModifiedDate":"2024-03-19"},{"lineNumber":121,"author":{"gitId":"kailinteoo"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":122,"author":{"gitId":"kailinteoo"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":123,"author":{"gitId":"kailinteoo"},"content":"    @Test","lastModifiedDate":"2024-03-19"},{"lineNumber":124,"author":{"gitId":"kailinteoo"},"content":"    public void toModelType_invalidOrders_throwsIllegalValueException() {","lastModifiedDate":"2024-03-19"},{"lineNumber":125,"author":{"gitId":"kailinteoo"},"content":"        List\u003cJsonAdaptedOrder\u003e invalidOrders \u003d new ArrayList\u003c\u003e(VALID_ORDERS);","lastModifiedDate":"2024-03-19"},{"lineNumber":126,"author":{"gitId":"kailinteoo"},"content":"        invalidOrders.add(new JsonAdaptedOrder(INVALID_ORDERID, INVALID_ORDERDATE, INVALID_DEADLINE, INVALID_PRICE,","lastModifiedDate":"2024-03-28"},{"lineNumber":127,"author":{"gitId":"kailinteoo"},"content":"                INVALID_REMARK, INVALID_STATUS));","lastModifiedDate":"2024-03-19"},{"lineNumber":128,"author":{"gitId":"Jaspertzx"},"content":"        JsonAdaptedClient person \u003d","lastModifiedDate":"2024-04-14"},{"lineNumber":129,"author":{"gitId":"Jaspertzx"},"content":"                new JsonAdaptedClient(VALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS, VALID_TAGS, invalidOrders);","lastModifiedDate":"2024-04-14"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":133,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"kailinteoo":21,"Jaspertzx":24,"-":88}},{"path":"src/test/java/seedu/address/storage/JsonAdaptedOrderTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"kailinteoo"},"content":"package seedu.address.storage;","lastModifiedDate":"2024-03-19"},{"lineNumber":2,"author":{"gitId":"kailinteoo"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":3,"author":{"gitId":"kailinteoo"},"content":"import static seedu.address.storage.JsonAdaptedOrder.MISSING_FIELD_MESSAGE_FORMAT;","lastModifiedDate":"2024-03-19"},{"lineNumber":4,"author":{"gitId":"kailinteoo"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2024-03-19"},{"lineNumber":5,"author":{"gitId":"kailinteoo"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":6,"author":{"gitId":"kailinteoo"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-19"},{"lineNumber":7,"author":{"gitId":"kailinteoo"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":8,"author":{"gitId":"kailinteoo"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2024-03-19"},{"lineNumber":9,"author":{"gitId":"kailinteoo"},"content":"import seedu.address.model.order.Deadline;","lastModifiedDate":"2024-03-19"},{"lineNumber":10,"author":{"gitId":"kailinteoo"},"content":"import seedu.address.model.order.OrderDate;","lastModifiedDate":"2024-03-19"},{"lineNumber":11,"author":{"gitId":"kailinteoo"},"content":"import seedu.address.model.order.OrderId;","lastModifiedDate":"2024-03-19"},{"lineNumber":12,"author":{"gitId":"kailinteoo"},"content":"import seedu.address.model.order.Price;","lastModifiedDate":"2024-03-28"},{"lineNumber":13,"author":{"gitId":"kailinteoo"},"content":"import seedu.address.model.order.Remark;","lastModifiedDate":"2024-03-19"},{"lineNumber":14,"author":{"gitId":"kailinteoo"},"content":"import seedu.address.model.order.Status;","lastModifiedDate":"2024-03-19"},{"lineNumber":15,"author":{"gitId":"kailinteoo"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":16,"author":{"gitId":"kailinteoo"},"content":"public class JsonAdaptedOrderTest {","lastModifiedDate":"2024-03-19"},{"lineNumber":17,"author":{"gitId":"kailinteoo"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":18,"author":{"gitId":"kailinteoo"},"content":"    private static final String INVALID_ORDERID \u003d \"\";","lastModifiedDate":"2024-03-20"},{"lineNumber":19,"author":{"gitId":"kailinteoo"},"content":"    private static final String INVALID_ORDERDATE \u003d \"41-15-2024 21:51\";","lastModifiedDate":"2024-03-20"},{"lineNumber":20,"author":{"gitId":"kailinteoo"},"content":"    private static final String INVALID_DEADLINE \u003d \"41-15-2024 21:51\";","lastModifiedDate":"2024-03-20"},{"lineNumber":21,"author":{"gitId":"Jaspertzx"},"content":"    private static final String INVALID_PRICE \u003d \"-1\";","lastModifiedDate":"2024-04-08"},{"lineNumber":22,"author":{"gitId":"kailinteoo"},"content":"    private static final String INVALID_REMARK \u003d \"\";","lastModifiedDate":"2024-03-20"},{"lineNumber":23,"author":{"gitId":"kailinteoo"},"content":"    private static final String INVALID_STATUS \u003d \"invalid\";","lastModifiedDate":"2024-03-20"},{"lineNumber":24,"author":{"gitId":"kailinteoo"},"content":"    private static final String VALID_ORDERID \u003d \"69c25c8d-9e34-4d9d-8bad-e378f203ae73\";","lastModifiedDate":"2024-03-19"},{"lineNumber":25,"author":{"gitId":"kailinteoo"},"content":"    private static final String VALID_ORDERDATE \u003d \"01-03-2024 23:59\";","lastModifiedDate":"2024-03-19"},{"lineNumber":26,"author":{"gitId":"kailinteoo"},"content":"    private static final String VALID_DEADLINE \u003d \"01-04-2024 23:59\";","lastModifiedDate":"2024-03-19"},{"lineNumber":27,"author":{"gitId":"kailinteoo"},"content":"    private static final String VALID_PRICE \u003d \"50\";","lastModifiedDate":"2024-03-28"},{"lineNumber":28,"author":{"gitId":"kailinteoo"},"content":"    private static final String VALID_REMARK \u003d \"No remark\";","lastModifiedDate":"2024-03-19"},{"lineNumber":29,"author":{"gitId":"kailinteoo"},"content":"    private static final String VALID_STATUS \u003d \"CANCELED\";","lastModifiedDate":"2024-03-19"},{"lineNumber":30,"author":{"gitId":"kailinteoo"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":31,"author":{"gitId":"kailinteoo"},"content":"    /*@Test","lastModifiedDate":"2024-03-20"},{"lineNumber":32,"author":{"gitId":"kailinteoo"},"content":"    public void toModelType_validOrderDetails_returnsOrder() throws Exception {","lastModifiedDate":"2024-03-20"},{"lineNumber":33,"author":{"gitId":"kailinteoo"},"content":"        JsonAdaptedOrder order \u003d new JsonAdaptedOrder(ROSES);","lastModifiedDate":"2024-03-20"},{"lineNumber":34,"author":{"gitId":"kailinteoo"},"content":"        assertEquals(ROSES, order.toModelType());","lastModifiedDate":"2024-03-20"},{"lineNumber":35,"author":{"gitId":"kailinteoo"},"content":"    }*/","lastModifiedDate":"2024-03-20"},{"lineNumber":36,"author":{"gitId":"kailinteoo"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":37,"author":{"gitId":"kailinteoo"},"content":"    @Test","lastModifiedDate":"2024-03-19"},{"lineNumber":38,"author":{"gitId":"kailinteoo"},"content":"    public void toModelType_invalidOrderId_throwsIllegalValueException() {","lastModifiedDate":"2024-03-19"},{"lineNumber":39,"author":{"gitId":"kailinteoo"},"content":"        JsonAdaptedOrder order \u003d","lastModifiedDate":"2024-03-19"},{"lineNumber":40,"author":{"gitId":"kailinteoo"},"content":"                new JsonAdaptedOrder(INVALID_ORDERID, VALID_ORDERDATE, VALID_DEADLINE, VALID_PRICE,","lastModifiedDate":"2024-03-28"},{"lineNumber":41,"author":{"gitId":"kailinteoo"},"content":"                        VALID_REMARK, VALID_STATUS);","lastModifiedDate":"2024-03-19"},{"lineNumber":42,"author":{"gitId":"kailinteoo"},"content":"        String expectedMessage \u003d OrderId.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2024-03-19"},{"lineNumber":43,"author":{"gitId":"kailinteoo"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, order::toModelType);","lastModifiedDate":"2024-03-19"},{"lineNumber":44,"author":{"gitId":"kailinteoo"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":45,"author":{"gitId":"kailinteoo"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":46,"author":{"gitId":"kailinteoo"},"content":"    @Test","lastModifiedDate":"2024-03-19"},{"lineNumber":47,"author":{"gitId":"kailinteoo"},"content":"    public void toModelType_nullOrderId_throwsIllegalValueException() {","lastModifiedDate":"2024-03-19"},{"lineNumber":48,"author":{"gitId":"kailinteoo"},"content":"        JsonAdaptedOrder order \u003d","lastModifiedDate":"2024-03-19"},{"lineNumber":49,"author":{"gitId":"kailinteoo"},"content":"                new JsonAdaptedOrder(null, VALID_ORDERDATE, VALID_DEADLINE, VALID_PRICE,","lastModifiedDate":"2024-03-28"},{"lineNumber":50,"author":{"gitId":"kailinteoo"},"content":"                        VALID_REMARK, VALID_STATUS);","lastModifiedDate":"2024-03-19"},{"lineNumber":51,"author":{"gitId":"kailinteoo"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, OrderId.class.getSimpleName());","lastModifiedDate":"2024-03-19"},{"lineNumber":52,"author":{"gitId":"kailinteoo"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, order::toModelType);","lastModifiedDate":"2024-03-19"},{"lineNumber":53,"author":{"gitId":"kailinteoo"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":54,"author":{"gitId":"kailinteoo"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":55,"author":{"gitId":"kailinteoo"},"content":"    @Test","lastModifiedDate":"2024-03-20"},{"lineNumber":56,"author":{"gitId":"kailinteoo"},"content":"    public void toModelType_invalidOrderDate_throwsIllegalValueException() {","lastModifiedDate":"2024-03-20"},{"lineNumber":57,"author":{"gitId":"kailinteoo"},"content":"        JsonAdaptedOrder order \u003d","lastModifiedDate":"2024-03-20"},{"lineNumber":58,"author":{"gitId":"kailinteoo"},"content":"                new JsonAdaptedOrder(VALID_ORDERID, INVALID_ORDERDATE, VALID_DEADLINE, VALID_PRICE,","lastModifiedDate":"2024-03-28"},{"lineNumber":59,"author":{"gitId":"kailinteoo"},"content":"                        VALID_REMARK, VALID_STATUS);","lastModifiedDate":"2024-03-20"},{"lineNumber":60,"author":{"gitId":"kailinteoo"},"content":"        String expectedMessage \u003d OrderDate.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2024-03-20"},{"lineNumber":61,"author":{"gitId":"kailinteoo"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, order::toModelType);","lastModifiedDate":"2024-03-20"},{"lineNumber":62,"author":{"gitId":"kailinteoo"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":63,"author":{"gitId":"kailinteoo"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":64,"author":{"gitId":"kailinteoo"},"content":"    @Test","lastModifiedDate":"2024-03-19"},{"lineNumber":65,"author":{"gitId":"kailinteoo"},"content":"    public void toModelType_nullOrderDate_throwsIllegalValueException() {","lastModifiedDate":"2024-03-19"},{"lineNumber":66,"author":{"gitId":"kailinteoo"},"content":"        JsonAdaptedOrder order \u003d","lastModifiedDate":"2024-03-19"},{"lineNumber":67,"author":{"gitId":"kailinteoo"},"content":"                new JsonAdaptedOrder(VALID_ORDERID, null, VALID_DEADLINE, VALID_PRICE,","lastModifiedDate":"2024-03-28"},{"lineNumber":68,"author":{"gitId":"kailinteoo"},"content":"                        VALID_REMARK, VALID_STATUS);","lastModifiedDate":"2024-03-19"},{"lineNumber":69,"author":{"gitId":"kailinteoo"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, OrderDate.class.getSimpleName());","lastModifiedDate":"2024-03-19"},{"lineNumber":70,"author":{"gitId":"kailinteoo"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, order::toModelType);","lastModifiedDate":"2024-03-19"},{"lineNumber":71,"author":{"gitId":"kailinteoo"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":72,"author":{"gitId":"kailinteoo"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":73,"author":{"gitId":"kailinteoo"},"content":"    @Test","lastModifiedDate":"2024-03-20"},{"lineNumber":74,"author":{"gitId":"kailinteoo"},"content":"    public void toModelType_invalidDeadline_throwsIllegalValueException() {","lastModifiedDate":"2024-03-20"},{"lineNumber":75,"author":{"gitId":"kailinteoo"},"content":"        JsonAdaptedOrder order \u003d","lastModifiedDate":"2024-03-20"},{"lineNumber":76,"author":{"gitId":"kailinteoo"},"content":"                new JsonAdaptedOrder(VALID_ORDERID, VALID_ORDERDATE, INVALID_DEADLINE, VALID_PRICE,","lastModifiedDate":"2024-03-28"},{"lineNumber":77,"author":{"gitId":"kailinteoo"},"content":"                        VALID_REMARK, VALID_STATUS);","lastModifiedDate":"2024-03-20"},{"lineNumber":78,"author":{"gitId":"kailinteoo"},"content":"        String expectedMessage \u003d Deadline.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2024-03-20"},{"lineNumber":79,"author":{"gitId":"kailinteoo"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, order::toModelType);","lastModifiedDate":"2024-03-20"},{"lineNumber":80,"author":{"gitId":"kailinteoo"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":81,"author":{"gitId":"kailinteoo"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":82,"author":{"gitId":"kailinteoo"},"content":"    @Test","lastModifiedDate":"2024-03-19"},{"lineNumber":83,"author":{"gitId":"kailinteoo"},"content":"    public void toModelType_nullDeadline_throwsIllegalValueException() {","lastModifiedDate":"2024-03-19"},{"lineNumber":84,"author":{"gitId":"kailinteoo"},"content":"        JsonAdaptedOrder order \u003d","lastModifiedDate":"2024-03-19"},{"lineNumber":85,"author":{"gitId":"kailinteoo"},"content":"                new JsonAdaptedOrder(VALID_ORDERID, VALID_ORDERDATE, null, VALID_PRICE,","lastModifiedDate":"2024-03-28"},{"lineNumber":86,"author":{"gitId":"kailinteoo"},"content":"                        VALID_REMARK, VALID_STATUS);","lastModifiedDate":"2024-03-19"},{"lineNumber":87,"author":{"gitId":"kailinteoo"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Deadline.class.getSimpleName());","lastModifiedDate":"2024-03-19"},{"lineNumber":88,"author":{"gitId":"kailinteoo"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, order::toModelType);","lastModifiedDate":"2024-03-19"},{"lineNumber":89,"author":{"gitId":"kailinteoo"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":90,"author":{"gitId":"kailinteoo"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":91,"author":{"gitId":"kailinteoo"},"content":"    @Test","lastModifiedDate":"2024-03-20"},{"lineNumber":92,"author":{"gitId":"kailinteoo"},"content":"    public void toModelType_invalidPrice_throwsIllegalValueException() {","lastModifiedDate":"2024-03-28"},{"lineNumber":93,"author":{"gitId":"kailinteoo"},"content":"        JsonAdaptedOrder order \u003d","lastModifiedDate":"2024-03-20"},{"lineNumber":94,"author":{"gitId":"kailinteoo"},"content":"                new JsonAdaptedOrder(VALID_ORDERID, VALID_ORDERDATE, VALID_DEADLINE, INVALID_PRICE,","lastModifiedDate":"2024-03-28"},{"lineNumber":95,"author":{"gitId":"kailinteoo"},"content":"                        VALID_REMARK, VALID_STATUS);","lastModifiedDate":"2024-03-20"},{"lineNumber":96,"author":{"gitId":"kailinteoo"},"content":"        String expectedMessage \u003d Price.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2024-03-28"},{"lineNumber":97,"author":{"gitId":"kailinteoo"},"content":"        assertThrows(NumberFormatException.class, expectedMessage, order::toModelType);","lastModifiedDate":"2024-03-20"},{"lineNumber":98,"author":{"gitId":"kailinteoo"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":99,"author":{"gitId":"kailinteoo"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":100,"author":{"gitId":"kailinteoo"},"content":"    @Test","lastModifiedDate":"2024-03-19"},{"lineNumber":101,"author":{"gitId":"kailinteoo"},"content":"    public void toModelType_nullPrice_throwsIllegalValueException() {","lastModifiedDate":"2024-03-28"},{"lineNumber":102,"author":{"gitId":"kailinteoo"},"content":"        JsonAdaptedOrder order \u003d","lastModifiedDate":"2024-03-19"},{"lineNumber":103,"author":{"gitId":"kailinteoo"},"content":"                new JsonAdaptedOrder(VALID_ORDERID, VALID_ORDERDATE, VALID_DEADLINE, null,","lastModifiedDate":"2024-03-19"},{"lineNumber":104,"author":{"gitId":"kailinteoo"},"content":"                        VALID_REMARK, VALID_STATUS);","lastModifiedDate":"2024-03-19"},{"lineNumber":105,"author":{"gitId":"kailinteoo"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Price.class.getSimpleName());","lastModifiedDate":"2024-03-28"},{"lineNumber":106,"author":{"gitId":"kailinteoo"},"content":"        assertThrows(NumberFormatException.class, expectedMessage, order::toModelType);","lastModifiedDate":"2024-03-20"},{"lineNumber":107,"author":{"gitId":"kailinteoo"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":108,"author":{"gitId":"kailinteoo"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":109,"author":{"gitId":"kailinteoo"},"content":"    @Test","lastModifiedDate":"2024-03-20"},{"lineNumber":110,"author":{"gitId":"kailinteoo"},"content":"    public void toModelType_invalidRemark_throwsIllegalValueException() {","lastModifiedDate":"2024-03-20"},{"lineNumber":111,"author":{"gitId":"kailinteoo"},"content":"        JsonAdaptedOrder order \u003d","lastModifiedDate":"2024-03-20"},{"lineNumber":112,"author":{"gitId":"kailinteoo"},"content":"                new JsonAdaptedOrder(VALID_ORDERID, VALID_ORDERDATE, VALID_DEADLINE, VALID_PRICE,","lastModifiedDate":"2024-03-28"},{"lineNumber":113,"author":{"gitId":"kailinteoo"},"content":"                        INVALID_REMARK, VALID_STATUS);","lastModifiedDate":"2024-03-20"},{"lineNumber":114,"author":{"gitId":"kailinteoo"},"content":"        String expectedMessage \u003d Remark.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2024-03-20"},{"lineNumber":115,"author":{"gitId":"kailinteoo"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, order::toModelType);","lastModifiedDate":"2024-03-20"},{"lineNumber":116,"author":{"gitId":"kailinteoo"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":117,"author":{"gitId":"kailinteoo"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":118,"author":{"gitId":"kailinteoo"},"content":"    @Test","lastModifiedDate":"2024-03-19"},{"lineNumber":119,"author":{"gitId":"kailinteoo"},"content":"    public void toModelType_nullRemark_throwsIllegalValueException() {","lastModifiedDate":"2024-03-19"},{"lineNumber":120,"author":{"gitId":"kailinteoo"},"content":"        JsonAdaptedOrder order \u003d","lastModifiedDate":"2024-03-19"},{"lineNumber":121,"author":{"gitId":"kailinteoo"},"content":"                new JsonAdaptedOrder(VALID_ORDERID, VALID_ORDERDATE, VALID_DEADLINE, VALID_PRICE,","lastModifiedDate":"2024-03-28"},{"lineNumber":122,"author":{"gitId":"kailinteoo"},"content":"                        null, VALID_STATUS);","lastModifiedDate":"2024-03-19"},{"lineNumber":123,"author":{"gitId":"kailinteoo"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Remark.class.getSimpleName());","lastModifiedDate":"2024-03-19"},{"lineNumber":124,"author":{"gitId":"kailinteoo"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, order::toModelType);","lastModifiedDate":"2024-03-19"},{"lineNumber":125,"author":{"gitId":"kailinteoo"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":126,"author":{"gitId":"kailinteoo"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":127,"author":{"gitId":"kailinteoo"},"content":"    @Test","lastModifiedDate":"2024-03-20"},{"lineNumber":128,"author":{"gitId":"kailinteoo"},"content":"    public void toModelType_invalidStatus_throwsIllegalValueException() {","lastModifiedDate":"2024-03-20"},{"lineNumber":129,"author":{"gitId":"kailinteoo"},"content":"        JsonAdaptedOrder order \u003d","lastModifiedDate":"2024-03-20"},{"lineNumber":130,"author":{"gitId":"kailinteoo"},"content":"                new JsonAdaptedOrder(VALID_ORDERID, VALID_ORDERDATE, VALID_DEADLINE, VALID_PRICE,","lastModifiedDate":"2024-03-28"},{"lineNumber":131,"author":{"gitId":"kailinteoo"},"content":"                        VALID_REMARK, INVALID_STATUS);","lastModifiedDate":"2024-03-20"},{"lineNumber":132,"author":{"gitId":"kailinteoo"},"content":"        String expectedMessage \u003d Status.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2024-03-20"},{"lineNumber":133,"author":{"gitId":"kailinteoo"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, order::toModelType);","lastModifiedDate":"2024-03-20"},{"lineNumber":134,"author":{"gitId":"kailinteoo"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":135,"author":{"gitId":"kailinteoo"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":136,"author":{"gitId":"kailinteoo"},"content":"    @Test","lastModifiedDate":"2024-03-19"},{"lineNumber":137,"author":{"gitId":"kailinteoo"},"content":"    public void toModelType_nullStatus_throwsIllegalValueException() {","lastModifiedDate":"2024-03-19"},{"lineNumber":138,"author":{"gitId":"kailinteoo"},"content":"        JsonAdaptedOrder order \u003d","lastModifiedDate":"2024-03-19"},{"lineNumber":139,"author":{"gitId":"kailinteoo"},"content":"                new JsonAdaptedOrder(VALID_ORDERID, VALID_ORDERDATE, VALID_DEADLINE, VALID_PRICE,","lastModifiedDate":"2024-03-28"},{"lineNumber":140,"author":{"gitId":"kailinteoo"},"content":"                        VALID_REMARK, null);","lastModifiedDate":"2024-03-19"},{"lineNumber":141,"author":{"gitId":"kailinteoo"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Status.class.getSimpleName());","lastModifiedDate":"2024-03-19"},{"lineNumber":142,"author":{"gitId":"kailinteoo"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, order::toModelType);","lastModifiedDate":"2024-03-19"},{"lineNumber":143,"author":{"gitId":"kailinteoo"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":144,"author":{"gitId":"kailinteoo"},"content":"}","lastModifiedDate":"2024-03-19"},{"lineNumber":145,"author":{"gitId":"kailinteoo"},"content":"","lastModifiedDate":"2024-03-19"}],"authorContributionMap":{"kailinteoo":144,"Jaspertzx":1}},{"path":"src/test/java/seedu/address/storage/JsonBookKeeperStorageTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":6,"author":{"gitId":"Jaspertzx"},"content":"import static seedu.address.testutil.TypicalClients.ALICE;","lastModifiedDate":"2024-04-14"},{"lineNumber":7,"author":{"gitId":"Jaspertzx"},"content":"import static seedu.address.testutil.TypicalClients.HOON;","lastModifiedDate":"2024-04-14"},{"lineNumber":8,"author":{"gitId":"Jaspertzx"},"content":"import static seedu.address.testutil.TypicalClients.IDA;","lastModifiedDate":"2024-04-14"},{"lineNumber":9,"author":{"gitId":"Jaspertzx"},"content":"import static seedu.address.testutil.TypicalClients.getTypicalAddressBook;","lastModifiedDate":"2024-04-14"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.DataLoadingException;","lastModifiedDate":"2023-06-14"},{"lineNumber":19,"author":{"gitId":"Jaspertzx"},"content":"import seedu.address.model.BookKeeper;","lastModifiedDate":"2024-04-14"},{"lineNumber":20,"author":{"gitId":"Jaspertzx"},"content":"import seedu.address.model.ReadOnlyBookKeeper;","lastModifiedDate":"2024-04-14"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"Jaspertzx"},"content":"public class JsonBookKeeperStorageTest {","lastModifiedDate":"2024-04-14"},{"lineNumber":23,"author":{"gitId":"Jaspertzx"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\",","lastModifiedDate":"2024-04-14"},{"lineNumber":24,"author":{"gitId":"Jaspertzx"},"content":"            \"JsonBookKeeperStorageTest\");","lastModifiedDate":"2024-04-14"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public Path testFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public void readAddressBook_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e readAddressBook(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"Jaspertzx"},"content":"    private java.util.Optional\u003cReadOnlyBookKeeper\u003e readAddressBook(String filePath) throws Exception {","lastModifiedDate":"2024-04-14"},{"lineNumber":35,"author":{"gitId":"Jaspertzx"},"content":"        return new JsonBookKeeperStorage(Paths.get(filePath)).readAddressBook(addToTestDataPathIfNotNull(filePath));","lastModifiedDate":"2024-04-14"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private Path addToTestDataPathIfNotNull(String prefsFileInTestDataFolder) {","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return prefsFileInTestDataFolder !\u003d null","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"                ? TEST_DATA_FOLDER.resolve(prefsFileInTestDataFolder)","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"                : null;","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public void read_missingFile_emptyResult() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertFalse(readAddressBook(\"NonExistentFile.json\").isPresent());","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public void read_notJsonFormat_exceptionThrown() {","lastModifiedDate":"2019-03-23"},{"lineNumber":51,"author":{"gitId":"Jaspertzx"},"content":"        assertThrows(DataLoadingException.class, () -\u003e readAddressBook(\"notJsonFormatBookKeeper.json\"));","lastModifiedDate":"2024-04-14"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public void readAddressBook_invalidPersonAddressBook_throwDataLoadingException() {","lastModifiedDate":"2023-06-14"},{"lineNumber":56,"author":{"gitId":"Jaspertzx"},"content":"        assertThrows(DataLoadingException.class, () -\u003e readAddressBook(\"invalidClientBookKeeper.json\"));","lastModifiedDate":"2024-04-14"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public void readAddressBook_invalidAndValidPersonAddressBook_throwDataLoadingException() {","lastModifiedDate":"2023-06-14"},{"lineNumber":61,"author":{"gitId":"Jaspertzx"},"content":"        assertThrows(DataLoadingException.class, () -\u003e readAddressBook(\"invalidAndValidClientBookKeeper.json\"));","lastModifiedDate":"2024-04-14"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public void readAndSaveAddressBook_allInOrder_success() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        Path filePath \u003d testFolder.resolve(\"TempAddressBook.json\");","lastModifiedDate":"2019-04-25"},{"lineNumber":67,"author":{"gitId":"Jaspertzx"},"content":"        BookKeeper original \u003d getTypicalAddressBook();","lastModifiedDate":"2024-04-14"},{"lineNumber":68,"author":{"gitId":"Jaspertzx"},"content":"        JsonBookKeeperStorage jsonAddressBookStorage \u003d new JsonBookKeeperStorage(filePath);","lastModifiedDate":"2024-04-14"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        // Save in new file and read back","lastModifiedDate":"2018-08-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        jsonAddressBookStorage.saveAddressBook(original, filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":72,"author":{"gitId":"Jaspertzx"},"content":"        ReadOnlyBookKeeper readBack \u003d jsonAddressBookStorage.readAddressBook(filePath).get();","lastModifiedDate":"2024-04-14"},{"lineNumber":73,"author":{"gitId":"Jaspertzx"},"content":"        assertEquals(original, new BookKeeper(readBack));","lastModifiedDate":"2024-04-14"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        // Modify data, overwrite exiting file, and read back","lastModifiedDate":"2018-08-13"},{"lineNumber":76,"author":{"gitId":"Jaspertzx"},"content":"        original.addClient(HOON);","lastModifiedDate":"2024-04-14"},{"lineNumber":77,"author":{"gitId":"Jaspertzx"},"content":"        original.removeClient(ALICE);","lastModifiedDate":"2024-04-14"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        jsonAddressBookStorage.saveAddressBook(original, filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        readBack \u003d jsonAddressBookStorage.readAddressBook(filePath).get();","lastModifiedDate":"2018-08-13"},{"lineNumber":80,"author":{"gitId":"Jaspertzx"},"content":"        assertEquals(original, new BookKeeper(readBack));","lastModifiedDate":"2024-04-14"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        // Save and read without specifying file path","lastModifiedDate":"2018-08-13"},{"lineNumber":83,"author":{"gitId":"Jaspertzx"},"content":"        original.addClient(IDA);","lastModifiedDate":"2024-04-14"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        jsonAddressBookStorage.saveAddressBook(original); // file path not specified","lastModifiedDate":"2018-08-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        readBack \u003d jsonAddressBookStorage.readAddressBook().get(); // file path not specified","lastModifiedDate":"2018-08-13"},{"lineNumber":86,"author":{"gitId":"Jaspertzx"},"content":"        assertEquals(original, new BookKeeper(readBack));","lastModifiedDate":"2024-04-14"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    public void saveAddressBook_nullAddressBook_throwsNullPointerException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveAddressBook(null, \"SomeFile.json\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     * Saves {@code addressBook} at the specified {@code filePath}.","lastModifiedDate":"2018-08-13"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":98,"author":{"gitId":"Jaspertzx"},"content":"    private void saveAddressBook(ReadOnlyBookKeeper addressBook, String filePath) {","lastModifiedDate":"2024-04-14"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-08-13"},{"lineNumber":100,"author":{"gitId":"Jaspertzx"},"content":"            new JsonBookKeeperStorage(Paths.get(filePath))","lastModifiedDate":"2024-04-14"},{"lineNumber":101,"author":{"gitId":"-"},"content":"                    .saveAddressBook(addressBook, addToTestDataPathIfNotNull(filePath));","lastModifiedDate":"2018-08-13"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2018-08-13"},{"lineNumber":103,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"There should not be an error writing to the file.\", ioe);","lastModifiedDate":"2018-08-13"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    public void saveAddressBook_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":109,"author":{"gitId":"Jaspertzx"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveAddressBook(new BookKeeper(), null));","lastModifiedDate":"2024-04-14"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":111,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"Jaspertzx":26,"-":85}},{"path":"src/test/java/seedu/address/storage/JsonSerializableBookKeeperTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.JsonUtil;","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"Jaspertzx"},"content":"import seedu.address.model.BookKeeper;","lastModifiedDate":"2024-04-14"},{"lineNumber":14,"author":{"gitId":"Jaspertzx"},"content":"import seedu.address.testutil.TypicalClients;","lastModifiedDate":"2024-04-14"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"Jaspertzx"},"content":"public class JsonSerializableBookKeeperTest {","lastModifiedDate":"2024-04-14"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"Jaspertzx"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"JsonSerializableBookKeeperTest\");","lastModifiedDate":"2024-04-14"},{"lineNumber":19,"author":{"gitId":"Jaspertzx"},"content":"    private static final Path TYPICAL_PERSONS_FILE \u003d TEST_DATA_FOLDER.resolve(\"typicalClientsBookKeeper.json\");","lastModifiedDate":"2024-04-14"},{"lineNumber":20,"author":{"gitId":"Jaspertzx"},"content":"    private static final Path INVALID_PERSON_FILE \u003d TEST_DATA_FOLDER.resolve(\"invalidClientBookKeeper.json\");","lastModifiedDate":"2024-04-14"},{"lineNumber":21,"author":{"gitId":"Jaspertzx"},"content":"    private static final Path DUPLICATE_PERSON_FILE \u003d TEST_DATA_FOLDER.resolve(\"duplicateClientBookKeeper.json\");","lastModifiedDate":"2024-04-14"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void toModelType_typicalPersonsFile_success() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"Jaspertzx"},"content":"        JsonSerializableBookKeeper dataFromFile \u003d JsonUtil.readJsonFile(TYPICAL_PERSONS_FILE,","lastModifiedDate":"2024-04-14"},{"lineNumber":26,"author":{"gitId":"Jaspertzx"},"content":"                JsonSerializableBookKeeper.class).get();","lastModifiedDate":"2024-04-14"},{"lineNumber":27,"author":{"gitId":"Jaspertzx"},"content":"        BookKeeper bookKeeperFromFile \u003d dataFromFile.toModelType();","lastModifiedDate":"2024-04-14"},{"lineNumber":28,"author":{"gitId":"Jaspertzx"},"content":"        BookKeeper typicalPersonsBookKeeper \u003d TypicalClients.getTypicalAddressBook();","lastModifiedDate":"2024-04-14"},{"lineNumber":29,"author":{"gitId":"Jaspertzx"},"content":"        assertEquals(bookKeeperFromFile, typicalPersonsBookKeeper);","lastModifiedDate":"2024-04-14"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public void toModelType_invalidPersonFile_throwsIllegalValueException() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"Jaspertzx"},"content":"        JsonSerializableBookKeeper dataFromFile \u003d JsonUtil.readJsonFile(INVALID_PERSON_FILE,","lastModifiedDate":"2024-04-14"},{"lineNumber":35,"author":{"gitId":"Jaspertzx"},"content":"                JsonSerializableBookKeeper.class).get();","lastModifiedDate":"2024-04-14"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, dataFromFile::toModelType);","lastModifiedDate":"2019-03-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public void toModelType_duplicatePersons_throwsIllegalValueException() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"Jaspertzx"},"content":"        JsonSerializableBookKeeper dataFromFile \u003d JsonUtil.readJsonFile(DUPLICATE_PERSON_FILE,","lastModifiedDate":"2024-04-14"},{"lineNumber":42,"author":{"gitId":"Jaspertzx"},"content":"                JsonSerializableBookKeeper.class).get();","lastModifiedDate":"2024-04-14"},{"lineNumber":43,"author":{"gitId":"Jaspertzx"},"content":"        assertThrows(IllegalValueException.class, JsonSerializableBookKeeper.MESSAGE_DUPLICATE_CLIENT,","lastModifiedDate":"2024-04-14"},{"lineNumber":44,"author":{"gitId":"-"},"content":"                dataFromFile::toModelType);","lastModifiedDate":"2019-03-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"Jaspertzx":17,"-":30}},{"path":"src/test/java/seedu/address/storage/JsonUserPrefsStorageTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2016-09-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.DataLoadingException;","lastModifiedDate":"2023-06-14"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class JsonUserPrefsStorageTest {","lastModifiedDate":"2016-10-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"JsonUserPrefsStorageTest\");","lastModifiedDate":"2018-04-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public Path testFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void readUserPrefs_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e readUserPrefs(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private Optional\u003cUserPrefs\u003e readUserPrefs(String userPrefsFileInTestDataFolder) throws DataLoadingException {","lastModifiedDate":"2023-06-14"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        Path prefsFilePath \u003d addToTestDataPathIfNotNull(userPrefsFileInTestDataFolder);","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return new JsonUserPrefsStorage(prefsFilePath).readUserPrefs(prefsFilePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void readUserPrefs_missingFile_emptyResult() throws DataLoadingException {","lastModifiedDate":"2023-06-14"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertFalse(readUserPrefs(\"NonExistentFile.json\").isPresent());","lastModifiedDate":"2016-09-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public void readUserPrefs_notJsonFormat_exceptionThrown() {","lastModifiedDate":"2019-03-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertThrows(DataLoadingException.class, () -\u003e readUserPrefs(\"NotJsonFormatUserPrefs.json\"));","lastModifiedDate":"2023-06-14"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    private Path addToTestDataPathIfNotNull(String userPrefsFileInTestDataFolder) {","lastModifiedDate":"2018-04-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        return userPrefsFileInTestDataFolder !\u003d null","lastModifiedDate":"2016-09-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"                ? TEST_DATA_FOLDER.resolve(userPrefsFileInTestDataFolder)","lastModifiedDate":"2018-04-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"                : null;","lastModifiedDate":"2016-09-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public void readUserPrefs_fileInOrder_successfullyRead() throws DataLoadingException {","lastModifiedDate":"2023-06-14"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        UserPrefs expected \u003d getTypicalUserPrefs();","lastModifiedDate":"2017-02-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        UserPrefs actual \u003d readUserPrefs(\"TypicalUserPref.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public void readUserPrefs_valuesMissingFromFile_defaultValuesUsed() throws DataLoadingException {","lastModifiedDate":"2023-06-14"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        UserPrefs actual \u003d readUserPrefs(\"EmptyUserPrefs.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertEquals(new UserPrefs(), actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public void readUserPrefs_extraValuesInFile_extraValuesIgnored() throws DataLoadingException {","lastModifiedDate":"2023-06-14"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        UserPrefs expected \u003d getTypicalUserPrefs();","lastModifiedDate":"2017-02-25"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        UserPrefs actual \u003d readUserPrefs(\"ExtraValuesUserPref.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    private UserPrefs getTypicalUserPrefs() {","lastModifiedDate":"2017-02-25"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2017-02-25"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(new GuiSettings(1000, 500, 300, 100));","lastModifiedDate":"2018-11-27"},{"lineNumber":76,"author":{"gitId":"kailinteoo"},"content":"        userPrefs.setAddressBookFilePath(Paths.get(\"bookkeeper.json\"));","lastModifiedDate":"2024-04-14"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        return userPrefs;","lastModifiedDate":"2017-02-25"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-25"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public void savePrefs_nullPrefs_throwsNullPointerException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveUserPrefs(null, \"SomeFile.json\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public void saveUserPrefs_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveUserPrefs(new UserPrefs(), null));","lastModifiedDate":"2019-03-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-15"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     * Saves {@code userPrefs} at the specified {@code prefsFileInTestDataFolder} filepath.","lastModifiedDate":"2017-08-15"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-15"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    private void saveUserPrefs(UserPrefs userPrefs, String prefsFileInTestDataFolder) {","lastModifiedDate":"2017-08-15"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-08-15"},{"lineNumber":95,"author":{"gitId":"-"},"content":"            new JsonUserPrefsStorage(addToTestDataPathIfNotNull(prefsFileInTestDataFolder))","lastModifiedDate":"2016-10-12"},{"lineNumber":96,"author":{"gitId":"-"},"content":"                    .saveUserPrefs(userPrefs);","lastModifiedDate":"2016-10-12"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2017-08-15"},{"lineNumber":98,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"There should not be an error writing to the file\", ioe);","lastModifiedDate":"2017-08-15"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-08-15"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    public void saveUserPrefs_allInOrder_success() throws DataLoadingException, IOException {","lastModifiedDate":"2023-06-14"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        UserPrefs original \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        original.setGuiSettings(new GuiSettings(1200, 200, 0, 2));","lastModifiedDate":"2018-11-27"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        Path pefsFilePath \u003d testFolder.resolve(\"TempPrefs.json\");","lastModifiedDate":"2019-04-25"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage jsonUserPrefsStorage \u003d new JsonUserPrefsStorage(pefsFilePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        // Try writing when the file doesn\u0027t exist","lastModifiedDate":"2016-09-24"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        jsonUserPrefsStorage.saveUserPrefs(original);","lastModifiedDate":"2016-10-01"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        UserPrefs readBack \u003d jsonUserPrefsStorage.readUserPrefs().get();","lastModifiedDate":"2016-10-01"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertEquals(original, readBack);","lastModifiedDate":"2016-09-24"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        // Try saving when the file exists","lastModifiedDate":"2016-09-24"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        original.setGuiSettings(new GuiSettings(5, 5, 5, 5));","lastModifiedDate":"2018-11-27"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        jsonUserPrefsStorage.saveUserPrefs(original);","lastModifiedDate":"2016-10-01"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        readBack \u003d jsonUserPrefsStorage.readUserPrefs().get();","lastModifiedDate":"2016-10-01"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        assertEquals(original, readBack);","lastModifiedDate":"2016-09-24"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":123,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-24"}],"authorContributionMap":{"kailinteoo":1,"-":122}},{"path":"src/test/java/seedu/address/storage/StorageManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"Jaspertzx"},"content":"import static seedu.address.testutil.TypicalClients.getTypicalAddressBook;","lastModifiedDate":"2024-04-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":14,"author":{"gitId":"Jaspertzx"},"content":"import seedu.address.model.BookKeeper;","lastModifiedDate":"2024-04-14"},{"lineNumber":15,"author":{"gitId":"Jaspertzx"},"content":"import seedu.address.model.ReadOnlyBookKeeper;","lastModifiedDate":"2024-04-14"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class StorageManagerTest {","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public Path testFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private StorageManager storageManager;","lastModifiedDate":"2017-04-01"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2016-10-19"},{"lineNumber":27,"author":{"gitId":"Jaspertzx"},"content":"        JsonBookKeeperStorage addressBookStorage \u003d new JsonBookKeeperStorage(getTempFilePath(\"ab\"));","lastModifiedDate":"2024-04-14"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(getTempFilePath(\"prefs\"));","lastModifiedDate":"2017-02-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        storageManager \u003d new StorageManager(addressBookStorage, userPrefsStorage);","lastModifiedDate":"2017-02-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private Path getTempFilePath(String fileName) {","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return testFolder.resolve(fileName);","lastModifiedDate":"2019-04-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void prefsReadSave() throws Exception {","lastModifiedDate":"2016-10-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-09-28"},{"lineNumber":39,"author":{"gitId":"-"},"content":"         * Note: This is an integration test that verifies the StorageManager is properly wired to the","lastModifiedDate":"2016-09-28"},{"lineNumber":40,"author":{"gitId":"-"},"content":"         * {@link JsonUserPrefsStorage} class.","lastModifiedDate":"2016-10-01"},{"lineNumber":41,"author":{"gitId":"-"},"content":"         * More extensive testing of UserPref saving/reading is done in {@link JsonUserPrefsStorageTest} class.","lastModifiedDate":"2016-10-01"},{"lineNumber":42,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-09-28"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        UserPrefs original \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        original.setGuiSettings(new GuiSettings(300, 600, 4, 6));","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        storageManager.saveUserPrefs(original);","lastModifiedDate":"2016-09-28"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        UserPrefs retrieved \u003d storageManager.readUserPrefs().get();","lastModifiedDate":"2016-09-28"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertEquals(original, retrieved);","lastModifiedDate":"2016-09-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void addressBookReadSave() throws Exception {","lastModifiedDate":"2016-09-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-10-16"},{"lineNumber":53,"author":{"gitId":"-"},"content":"         * Note: This is an integration test that verifies the StorageManager is properly wired to the","lastModifiedDate":"2016-10-16"},{"lineNumber":54,"author":{"gitId":"Jaspertzx"},"content":"         * {@link JsonBookKeeperStorage} class.","lastModifiedDate":"2024-04-14"},{"lineNumber":55,"author":{"gitId":"Jaspertzx"},"content":"         * More extensive testing of UserPref saving/reading is done in {@link JsonBookKeeperStorageTest} class.","lastModifiedDate":"2024-04-14"},{"lineNumber":56,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-10-16"},{"lineNumber":57,"author":{"gitId":"Jaspertzx"},"content":"        BookKeeper original \u003d getTypicalAddressBook();","lastModifiedDate":"2024-04-14"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        storageManager.saveAddressBook(original);","lastModifiedDate":"2016-09-28"},{"lineNumber":59,"author":{"gitId":"Jaspertzx"},"content":"        ReadOnlyBookKeeper retrieved \u003d storageManager.readAddressBook().get();","lastModifiedDate":"2024-04-14"},{"lineNumber":60,"author":{"gitId":"Jaspertzx"},"content":"        assertEquals(original, new BookKeeper(retrieved));","lastModifiedDate":"2024-04-14"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-01"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public void getAddressBookFilePath() {","lastModifiedDate":"2016-10-01"},{"lineNumber":65,"author":{"gitId":"Jaspertzx"},"content":"        assertNotNull(storageManager.getBookKeeperFilePath());","lastModifiedDate":"2024-04-14"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-01"},{"lineNumber":68,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"Jaspertzx":10,"-":58}},{"path":"src/test/java/seedu/address/testutil/Assert.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2017-07-17"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-17"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Assertions;","lastModifiedDate":"2019-03-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.function.Executable;","lastModifiedDate":"2019-03-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-03-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-07-17"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * A set of assertion methods useful for writing tests.","lastModifiedDate":"2017-07-17"},{"lineNumber":8,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-07-17"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class Assert {","lastModifiedDate":"2017-07-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"     * Asserts that the {@code executable} throws the {@code expectedType} Exception.","lastModifiedDate":"2019-03-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"     * This is a wrapper method that invokes {@link Assertions#assertThrows(Class, Executable)}, to maintain consistency","lastModifiedDate":"2019-03-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     * with our custom {@link #assertThrows(Class, String, Executable)} method.","lastModifiedDate":"2019-03-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * To standardize API calls in this project, users should use this method instead of","lastModifiedDate":"2019-03-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * {@link Assertions#assertThrows(Class, Executable)}.","lastModifiedDate":"2019-03-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public static void assertThrows(Class\u003c? extends Throwable\u003e expectedType, Executable executable) {","lastModifiedDate":"2019-03-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        Assertions.assertThrows(expectedType, executable);","lastModifiedDate":"2019-03-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-02-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-02-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-02-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Asserts that the {@code executable} throws the {@code expectedType} Exception with the {@code expectedMessage}.","lastModifiedDate":"2019-03-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * If there\u0027s no need for the verification of the exception\u0027s error message, call","lastModifiedDate":"2018-02-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * {@link #assertThrows(Class, Executable)} instead.","lastModifiedDate":"2019-03-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2019-03-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * @see #assertThrows(Class, Executable)","lastModifiedDate":"2019-03-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-02-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public static void assertThrows(Class\u003c? extends Throwable\u003e expectedType, String expectedMessage,","lastModifiedDate":"2019-03-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            Executable executable) {","lastModifiedDate":"2019-03-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        Throwable thrownException \u003d Assertions.assertThrows(expectedType, executable);","lastModifiedDate":"2019-03-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        Assertions.assertEquals(expectedMessage, thrownException.getMessage());","lastModifiedDate":"2019-03-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-17"},{"lineNumber":34,"author":{"gitId":"Jaspertzx"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":35,"author":{"gitId":"Jaspertzx"},"content":"    /**","lastModifiedDate":"2024-03-19"},{"lineNumber":36,"author":{"gitId":"Jaspertzx"},"content":"     * Asserts that executing the {@code executable} throws an exception of the {@code expectedType}.","lastModifiedDate":"2024-03-19"},{"lineNumber":37,"author":{"gitId":"Jaspertzx"},"content":"     *","lastModifiedDate":"2024-03-19"},{"lineNumber":38,"author":{"gitId":"Jaspertzx"},"content":"     * @param expectedType The class of the Exception expected to be thrown.","lastModifiedDate":"2024-03-19"},{"lineNumber":39,"author":{"gitId":"Jaspertzx"},"content":"     * @param executable The executable code block that is expected to throw the exception.","lastModifiedDate":"2024-03-19"},{"lineNumber":40,"author":{"gitId":"Jaspertzx"},"content":"     */","lastModifiedDate":"2024-03-19"},{"lineNumber":41,"author":{"gitId":"Jaspertzx"},"content":"    public static void assertThrowsExactly(Class\u003c? extends Throwable\u003e","lastModifiedDate":"2024-03-19"},{"lineNumber":42,"author":{"gitId":"Jaspertzx"},"content":"                                                   expectedType, Executable executable, String expectedMessage) {","lastModifiedDate":"2024-03-19"},{"lineNumber":43,"author":{"gitId":"Jaspertzx"},"content":"        Throwable thrownException \u003d Assertions.assertThrows(expectedType, executable);","lastModifiedDate":"2024-03-19"},{"lineNumber":44,"author":{"gitId":"Jaspertzx"},"content":"        Assertions.assertTrue(expectedType.isInstance(thrownException),","lastModifiedDate":"2024-03-19"},{"lineNumber":45,"author":{"gitId":"Jaspertzx"},"content":"                \"Expected thrown exception to be exactly of type \"","lastModifiedDate":"2024-03-19"},{"lineNumber":46,"author":{"gitId":"Jaspertzx"},"content":"                + expectedType.getSimpleName()","lastModifiedDate":"2024-03-19"},{"lineNumber":47,"author":{"gitId":"Jaspertzx"},"content":"                + \" but was \" + thrownException.getClass().getSimpleName());","lastModifiedDate":"2024-03-19"},{"lineNumber":48,"author":{"gitId":"Jaspertzx"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":49,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-07-17"}],"authorContributionMap":{"Jaspertzx":15,"-":34}},{"path":"src/test/java/seedu/address/testutil/BookKeeperBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Jaspertzx"},"content":"package seedu.address.testutil;","lastModifiedDate":"2024-04-14"},{"lineNumber":2,"author":{"gitId":"Jaspertzx"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":3,"author":{"gitId":"Jaspertzx"},"content":"import seedu.address.model.BookKeeper;","lastModifiedDate":"2024-04-14"},{"lineNumber":4,"author":{"gitId":"Jaspertzx"},"content":"import seedu.address.model.client.Client;","lastModifiedDate":"2024-04-14"},{"lineNumber":5,"author":{"gitId":"Jaspertzx"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":6,"author":{"gitId":"Jaspertzx"},"content":"/**","lastModifiedDate":"2024-04-14"},{"lineNumber":7,"author":{"gitId":"Jaspertzx"},"content":" * A utility class to help with building Addressbook objects.","lastModifiedDate":"2024-04-14"},{"lineNumber":8,"author":{"gitId":"Jaspertzx"},"content":" * Example usage: \u003cbr\u003e","lastModifiedDate":"2024-04-14"},{"lineNumber":9,"author":{"gitId":"Jaspertzx"},"content":" *     {@code BookKeeper ab \u003d new BookKeeperBuilder().withPerson(\"John\", \"Doe\").build();}","lastModifiedDate":"2024-04-14"},{"lineNumber":10,"author":{"gitId":"Jaspertzx"},"content":" */","lastModifiedDate":"2024-04-14"},{"lineNumber":11,"author":{"gitId":"Jaspertzx"},"content":"public class BookKeeperBuilder {","lastModifiedDate":"2024-04-14"},{"lineNumber":12,"author":{"gitId":"Jaspertzx"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":13,"author":{"gitId":"Jaspertzx"},"content":"    private BookKeeper bookKeeper;","lastModifiedDate":"2024-04-14"},{"lineNumber":14,"author":{"gitId":"Jaspertzx"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":15,"author":{"gitId":"Jaspertzx"},"content":"    public BookKeeperBuilder() {","lastModifiedDate":"2024-04-14"},{"lineNumber":16,"author":{"gitId":"Jaspertzx"},"content":"        bookKeeper \u003d new BookKeeper();","lastModifiedDate":"2024-04-14"},{"lineNumber":17,"author":{"gitId":"Jaspertzx"},"content":"    }","lastModifiedDate":"2024-04-14"},{"lineNumber":18,"author":{"gitId":"Jaspertzx"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":19,"author":{"gitId":"Jaspertzx"},"content":"    public BookKeeperBuilder(BookKeeper bookKeeper) {","lastModifiedDate":"2024-04-14"},{"lineNumber":20,"author":{"gitId":"Jaspertzx"},"content":"        this.bookKeeper \u003d bookKeeper;","lastModifiedDate":"2024-04-14"},{"lineNumber":21,"author":{"gitId":"Jaspertzx"},"content":"    }","lastModifiedDate":"2024-04-14"},{"lineNumber":22,"author":{"gitId":"Jaspertzx"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":23,"author":{"gitId":"Jaspertzx"},"content":"    /**","lastModifiedDate":"2024-04-14"},{"lineNumber":24,"author":{"gitId":"Jaspertzx"},"content":"     * Adds a new {@code Client} to the {@code BookKeeper} that we are building.","lastModifiedDate":"2024-04-14"},{"lineNumber":25,"author":{"gitId":"Jaspertzx"},"content":"     */","lastModifiedDate":"2024-04-14"},{"lineNumber":26,"author":{"gitId":"Jaspertzx"},"content":"    public BookKeeperBuilder withPerson(Client client) {","lastModifiedDate":"2024-04-14"},{"lineNumber":27,"author":{"gitId":"Jaspertzx"},"content":"        bookKeeper.addClient(client);","lastModifiedDate":"2024-04-14"},{"lineNumber":28,"author":{"gitId":"Jaspertzx"},"content":"        return this;","lastModifiedDate":"2024-04-14"},{"lineNumber":29,"author":{"gitId":"Jaspertzx"},"content":"    }","lastModifiedDate":"2024-04-14"},{"lineNumber":30,"author":{"gitId":"Jaspertzx"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":31,"author":{"gitId":"Jaspertzx"},"content":"    public BookKeeper build() {","lastModifiedDate":"2024-04-14"},{"lineNumber":32,"author":{"gitId":"Jaspertzx"},"content":"        return bookKeeper;","lastModifiedDate":"2024-04-14"},{"lineNumber":33,"author":{"gitId":"Jaspertzx"},"content":"    }","lastModifiedDate":"2024-04-14"},{"lineNumber":34,"author":{"gitId":"Jaspertzx"},"content":"}","lastModifiedDate":"2024-04-14"}],"authorContributionMap":{"Jaspertzx":34}},{"path":"src/test/java/seedu/address/testutil/ClientBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2016-09-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":3,"author":{"gitId":"shavonneg"},"content":"import java.util.HashSet;","lastModifiedDate":"2024-03-19"},{"lineNumber":4,"author":{"gitId":"shavonneg"},"content":"import java.util.Set;","lastModifiedDate":"2024-03-19"},{"lineNumber":5,"author":{"gitId":"shavonneg"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":6,"author":{"gitId":"Jaspertzx"},"content":"import seedu.address.model.client.Address;","lastModifiedDate":"2024-04-14"},{"lineNumber":7,"author":{"gitId":"Jaspertzx"},"content":"import seedu.address.model.client.Client;","lastModifiedDate":"2024-04-14"},{"lineNumber":8,"author":{"gitId":"Jaspertzx"},"content":"import seedu.address.model.client.Email;","lastModifiedDate":"2024-04-14"},{"lineNumber":9,"author":{"gitId":"Jaspertzx"},"content":"import seedu.address.model.client.Name;","lastModifiedDate":"2024-04-14"},{"lineNumber":10,"author":{"gitId":"Jaspertzx"},"content":"import seedu.address.model.client.Phone;","lastModifiedDate":"2024-04-14"},{"lineNumber":11,"author":{"gitId":"Jaspertzx"},"content":"import seedu.address.model.order.Order;","lastModifiedDate":"2024-03-27"},{"lineNumber":12,"author":{"gitId":"shavonneg"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2024-03-19"},{"lineNumber":13,"author":{"gitId":"shavonneg"},"content":"import seedu.address.model.util.SampleDataUtil;","lastModifiedDate":"2024-03-19"},{"lineNumber":14,"author":{"gitId":"shavonneg"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-03"},{"lineNumber":16,"author":{"gitId":"Jaspertzx"},"content":" * A utility class to help with building Client objects.","lastModifiedDate":"2024-04-14"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-03"},{"lineNumber":18,"author":{"gitId":"Jaspertzx"},"content":"public class ClientBuilder {","lastModifiedDate":"2024-04-14"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_NAME \u003d \"Amy Bee\";","lastModifiedDate":"2020-12-18"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_PHONE \u003d \"85355255\";","lastModifiedDate":"2017-04-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_EMAIL \u003d \"amy@gmail.com\";","lastModifiedDate":"2020-12-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_ADDRESS \u003d \"123, Jurong West Ave 6, #08-111\";","lastModifiedDate":"2017-04-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private Name name;","lastModifiedDate":"2017-12-20"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private Phone phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private Email email;","lastModifiedDate":"2017-12-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private Address address;","lastModifiedDate":"2017-12-20"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private Set\u003cTag\u003e tags;","lastModifiedDate":"2017-12-20"},{"lineNumber":30,"author":{"gitId":"Jaspertzx"},"content":"    private Set\u003cOrder\u003e orders;","lastModifiedDate":"2024-03-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":33,"author":{"gitId":"Jaspertzx"},"content":"     * Creates a {@code ClientBuilder} with the default details.","lastModifiedDate":"2024-04-14"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":35,"author":{"gitId":"Jaspertzx"},"content":"    public ClientBuilder() {","lastModifiedDate":"2024-04-14"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        name \u003d new Name(DEFAULT_NAME);","lastModifiedDate":"2017-12-20"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        phone \u003d new Phone(DEFAULT_PHONE);","lastModifiedDate":"2017-12-20"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        email \u003d new Email(DEFAULT_EMAIL);","lastModifiedDate":"2017-12-20"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        address \u003d new Address(DEFAULT_ADDRESS);","lastModifiedDate":"2017-12-20"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2018-03-26"},{"lineNumber":41,"author":{"gitId":"Jaspertzx"},"content":"        orders \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2024-03-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-11"},{"lineNumber":45,"author":{"gitId":"Jaspertzx"},"content":"     * Initializes the ClientBuilder with the data of {@code clientToCopy}.","lastModifiedDate":"2024-04-14"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-11"},{"lineNumber":47,"author":{"gitId":"Jaspertzx"},"content":"    public ClientBuilder(Client clientToCopy) {","lastModifiedDate":"2024-04-14"},{"lineNumber":48,"author":{"gitId":"Jaspertzx"},"content":"        name \u003d clientToCopy.getName();","lastModifiedDate":"2024-04-14"},{"lineNumber":49,"author":{"gitId":"Jaspertzx"},"content":"        phone \u003d clientToCopy.getPhone();","lastModifiedDate":"2024-04-14"},{"lineNumber":50,"author":{"gitId":"Jaspertzx"},"content":"        email \u003d clientToCopy.getEmail();","lastModifiedDate":"2024-04-14"},{"lineNumber":51,"author":{"gitId":"Jaspertzx"},"content":"        address \u003d clientToCopy.getAddress();","lastModifiedDate":"2024-04-14"},{"lineNumber":52,"author":{"gitId":"Jaspertzx"},"content":"        tags \u003d new HashSet\u003c\u003e(clientToCopy.getTags());","lastModifiedDate":"2024-04-14"},{"lineNumber":53,"author":{"gitId":"Jaspertzx"},"content":"        orders \u003d new HashSet\u003c\u003e(clientToCopy.getOrders());","lastModifiedDate":"2024-04-14"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-11"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-11"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":57,"author":{"gitId":"Jaspertzx"},"content":"     * Sets the {@code Name} of the {@code Client} that we are building.","lastModifiedDate":"2024-04-14"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":59,"author":{"gitId":"Jaspertzx"},"content":"    public ClientBuilder withName(String name) {","lastModifiedDate":"2024-04-14"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        this.name \u003d new Name(name);","lastModifiedDate":"2017-12-20"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":65,"author":{"gitId":"Jaspertzx"},"content":"     * Parses the {@code tags} into a {@code Set\u003cTag\u003e} and set it to the {@code Client} that we are building.","lastModifiedDate":"2024-04-14"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":67,"author":{"gitId":"Jaspertzx"},"content":"    public ClientBuilder withTags(String... tags) {","lastModifiedDate":"2024-04-14"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        this.tags \u003d SampleDataUtil.getTagSet(tags);","lastModifiedDate":"2017-12-20"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":73,"author":{"gitId":"Jaspertzx"},"content":"     * Sets the {@code Address} of the {@code Client} that we are building.","lastModifiedDate":"2024-04-14"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":75,"author":{"gitId":"Jaspertzx"},"content":"    public ClientBuilder withAddress(String address) {","lastModifiedDate":"2024-04-14"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        this.address \u003d new Address(address);","lastModifiedDate":"2017-12-20"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":81,"author":{"gitId":"Jaspertzx"},"content":"     * Sets the {@code Phone} of the {@code Client} that we are building.","lastModifiedDate":"2024-04-14"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":83,"author":{"gitId":"Jaspertzx"},"content":"    public ClientBuilder withPhone(String phone) {","lastModifiedDate":"2024-04-14"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        this.phone \u003d new Phone(phone);","lastModifiedDate":"2017-12-20"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":89,"author":{"gitId":"Jaspertzx"},"content":"     * Sets the {@code Email} of the {@code Client} that we are building.","lastModifiedDate":"2024-04-14"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":91,"author":{"gitId":"Jaspertzx"},"content":"    public ClientBuilder withEmail(String email) {","lastModifiedDate":"2024-04-14"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        this.email \u003d new Email(email);","lastModifiedDate":"2017-12-20"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":96,"author":{"gitId":"Jaspertzx"},"content":"    public Client build() {","lastModifiedDate":"2024-04-14"},{"lineNumber":97,"author":{"gitId":"Jaspertzx"},"content":"        return new Client(name, phone, email, address, tags, orders);","lastModifiedDate":"2024-04-14"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":100,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-03"}],"authorContributionMap":{"shavonneg":6,"Jaspertzx":32,"-":62}},{"path":"src/test/java/seedu/address/testutil/ClientUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2017-04-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-05-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-05-09"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-05-09"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-05-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2018-03-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-26"},{"lineNumber":11,"author":{"gitId":"Jaspertzx"},"content":"import seedu.address.logic.commands.client.AddCommand;","lastModifiedDate":"2024-04-14"},{"lineNumber":12,"author":{"gitId":"Jaspertzx"},"content":"import seedu.address.logic.commands.client.EditCommand;","lastModifiedDate":"2024-04-14"},{"lineNumber":13,"author":{"gitId":"Jaspertzx"},"content":"import seedu.address.model.client.Client;","lastModifiedDate":"2024-04-14"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2018-03-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-04-05"},{"lineNumber":17,"author":{"gitId":"Jaspertzx"},"content":" * A utility class for Client.","lastModifiedDate":"2024-04-14"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-04-05"},{"lineNumber":19,"author":{"gitId":"Jaspertzx"},"content":"public class ClientUtil {","lastModifiedDate":"2024-04-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-04-05"},{"lineNumber":22,"author":{"gitId":"Jaspertzx"},"content":"     * Returns an add command string for adding the {@code client}.","lastModifiedDate":"2024-04-14"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-04-05"},{"lineNumber":24,"author":{"gitId":"Jaspertzx"},"content":"    public static String getAddCommand(Client client) {","lastModifiedDate":"2024-04-14"},{"lineNumber":25,"author":{"gitId":"Jaspertzx"},"content":"        return AddCommand.COMMAND_WORD + \" \" + getPersonDetails(client);","lastModifiedDate":"2024-04-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-04-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-04-06"},{"lineNumber":29,"author":{"gitId":"Jaspertzx"},"content":"     * Returns the part of command string for the given {@code client}\u0027s details.","lastModifiedDate":"2024-04-14"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-04-06"},{"lineNumber":31,"author":{"gitId":"Jaspertzx"},"content":"    public static String getPersonDetails(Client client) {","lastModifiedDate":"2024-04-14"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2017-04-05"},{"lineNumber":33,"author":{"gitId":"Jaspertzx"},"content":"        sb.append(PREFIX_NAME + client.getName().fullName + \" \");","lastModifiedDate":"2024-04-14"},{"lineNumber":34,"author":{"gitId":"Jaspertzx"},"content":"        sb.append(PREFIX_PHONE + client.getPhone().value + \" \");","lastModifiedDate":"2024-04-14"},{"lineNumber":35,"author":{"gitId":"Jaspertzx"},"content":"        sb.append(PREFIX_EMAIL + client.getEmail().value + \" \");","lastModifiedDate":"2024-04-14"},{"lineNumber":36,"author":{"gitId":"Jaspertzx"},"content":"        sb.append(PREFIX_ADDRESS + client.getAddress().value + \" \");","lastModifiedDate":"2024-04-14"},{"lineNumber":37,"author":{"gitId":"Jaspertzx"},"content":"        client.getTags().stream().forEach(","lastModifiedDate":"2024-04-14"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            s -\u003e sb.append(PREFIX_TAG + s.tagName + \" \")","lastModifiedDate":"2017-05-09"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        );","lastModifiedDate":"2017-05-09"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2017-04-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-04-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-26"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-26"},{"lineNumber":44,"author":{"gitId":"Jaspertzx"},"content":"     * Returns the part of command string for the given {@code EditClientDescriptor}\u0027s details.","lastModifiedDate":"2024-04-14"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-26"},{"lineNumber":46,"author":{"gitId":"Jaspertzx"},"content":"    public static String getEditPersonDescriptorDetails(EditCommand.EditClientDescriptor descriptor) {","lastModifiedDate":"2024-04-14"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2018-03-26"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        descriptor.getName().ifPresent(name -\u003e sb.append(PREFIX_NAME).append(name.fullName).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        descriptor.getPhone().ifPresent(phone -\u003e sb.append(PREFIX_PHONE).append(phone.value).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        descriptor.getEmail().ifPresent(email -\u003e sb.append(PREFIX_EMAIL).append(email.value).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        descriptor.getAddress().ifPresent(address -\u003e sb.append(PREFIX_ADDRESS).append(address.value).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        if (descriptor.getTags().isPresent()) {","lastModifiedDate":"2018-03-26"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            Set\u003cTag\u003e tags \u003d descriptor.getTags().get();","lastModifiedDate":"2018-03-26"},{"lineNumber":54,"author":{"gitId":"-"},"content":"            if (tags.isEmpty()) {","lastModifiedDate":"2018-03-26"},{"lineNumber":55,"author":{"gitId":"-"},"content":"                sb.append(PREFIX_TAG);","lastModifiedDate":"2018-03-26"},{"lineNumber":56,"author":{"gitId":"-"},"content":"            } else {","lastModifiedDate":"2018-03-26"},{"lineNumber":57,"author":{"gitId":"-"},"content":"                tags.forEach(s -\u003e sb.append(PREFIX_TAG).append(s.tagName).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":58,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-03-26"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-03-26"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2018-03-26"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-26"},{"lineNumber":62,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-04-05"}],"authorContributionMap":{"Jaspertzx":17,"-":45}},{"path":"src/test/java/seedu/address/testutil/EditClientDescriptorBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Jaspertzx"},"content":"package seedu.address.testutil;","lastModifiedDate":"2024-04-14"},{"lineNumber":2,"author":{"gitId":"Jaspertzx"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":3,"author":{"gitId":"Jaspertzx"},"content":"import java.util.Set;","lastModifiedDate":"2024-04-14"},{"lineNumber":4,"author":{"gitId":"Jaspertzx"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2024-04-14"},{"lineNumber":5,"author":{"gitId":"Jaspertzx"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2024-04-14"},{"lineNumber":6,"author":{"gitId":"Jaspertzx"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":7,"author":{"gitId":"Jaspertzx"},"content":"import seedu.address.logic.commands.client.EditCommand.EditClientDescriptor;","lastModifiedDate":"2024-04-14"},{"lineNumber":8,"author":{"gitId":"Jaspertzx"},"content":"import seedu.address.model.client.Address;","lastModifiedDate":"2024-04-14"},{"lineNumber":9,"author":{"gitId":"Jaspertzx"},"content":"import seedu.address.model.client.Client;","lastModifiedDate":"2024-04-14"},{"lineNumber":10,"author":{"gitId":"Jaspertzx"},"content":"import seedu.address.model.client.Email;","lastModifiedDate":"2024-04-14"},{"lineNumber":11,"author":{"gitId":"Jaspertzx"},"content":"import seedu.address.model.client.Name;","lastModifiedDate":"2024-04-14"},{"lineNumber":12,"author":{"gitId":"Jaspertzx"},"content":"import seedu.address.model.client.Phone;","lastModifiedDate":"2024-04-14"},{"lineNumber":13,"author":{"gitId":"Jaspertzx"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2024-04-14"},{"lineNumber":14,"author":{"gitId":"Jaspertzx"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":15,"author":{"gitId":"Jaspertzx"},"content":"/**","lastModifiedDate":"2024-04-14"},{"lineNumber":16,"author":{"gitId":"Jaspertzx"},"content":" * A utility class to help with building EditClientDescriptor objects.","lastModifiedDate":"2024-04-14"},{"lineNumber":17,"author":{"gitId":"Jaspertzx"},"content":" */","lastModifiedDate":"2024-04-14"},{"lineNumber":18,"author":{"gitId":"Jaspertzx"},"content":"public class EditClientDescriptorBuilder {","lastModifiedDate":"2024-04-14"},{"lineNumber":19,"author":{"gitId":"Jaspertzx"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":20,"author":{"gitId":"Jaspertzx"},"content":"    private EditClientDescriptor descriptor;","lastModifiedDate":"2024-04-14"},{"lineNumber":21,"author":{"gitId":"Jaspertzx"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":22,"author":{"gitId":"Jaspertzx"},"content":"    public EditClientDescriptorBuilder() {","lastModifiedDate":"2024-04-14"},{"lineNumber":23,"author":{"gitId":"Jaspertzx"},"content":"        descriptor \u003d new EditClientDescriptor();","lastModifiedDate":"2024-04-14"},{"lineNumber":24,"author":{"gitId":"Jaspertzx"},"content":"    }","lastModifiedDate":"2024-04-14"},{"lineNumber":25,"author":{"gitId":"Jaspertzx"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":26,"author":{"gitId":"Jaspertzx"},"content":"    public EditClientDescriptorBuilder(EditClientDescriptor descriptor) {","lastModifiedDate":"2024-04-14"},{"lineNumber":27,"author":{"gitId":"Jaspertzx"},"content":"        this.descriptor \u003d new EditClientDescriptor(descriptor);","lastModifiedDate":"2024-04-14"},{"lineNumber":28,"author":{"gitId":"Jaspertzx"},"content":"    }","lastModifiedDate":"2024-04-14"},{"lineNumber":29,"author":{"gitId":"Jaspertzx"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":30,"author":{"gitId":"Jaspertzx"},"content":"    /**","lastModifiedDate":"2024-04-14"},{"lineNumber":31,"author":{"gitId":"Jaspertzx"},"content":"     * Returns an {@code EditClientDescriptor} with fields containing {@code client}\u0027s details.","lastModifiedDate":"2024-04-14"},{"lineNumber":32,"author":{"gitId":"Jaspertzx"},"content":"     */","lastModifiedDate":"2024-04-14"},{"lineNumber":33,"author":{"gitId":"Jaspertzx"},"content":"    public EditClientDescriptorBuilder(Client client) {","lastModifiedDate":"2024-04-14"},{"lineNumber":34,"author":{"gitId":"Jaspertzx"},"content":"        descriptor \u003d new EditClientDescriptor();","lastModifiedDate":"2024-04-14"},{"lineNumber":35,"author":{"gitId":"Jaspertzx"},"content":"        descriptor.setName(client.getName());","lastModifiedDate":"2024-04-14"},{"lineNumber":36,"author":{"gitId":"Jaspertzx"},"content":"        descriptor.setPhone(client.getPhone());","lastModifiedDate":"2024-04-14"},{"lineNumber":37,"author":{"gitId":"Jaspertzx"},"content":"        descriptor.setEmail(client.getEmail());","lastModifiedDate":"2024-04-14"},{"lineNumber":38,"author":{"gitId":"Jaspertzx"},"content":"        descriptor.setAddress(client.getAddress());","lastModifiedDate":"2024-04-14"},{"lineNumber":39,"author":{"gitId":"Jaspertzx"},"content":"        descriptor.setTags(client.getTags());","lastModifiedDate":"2024-04-14"},{"lineNumber":40,"author":{"gitId":"Jaspertzx"},"content":"    }","lastModifiedDate":"2024-04-14"},{"lineNumber":41,"author":{"gitId":"Jaspertzx"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":42,"author":{"gitId":"Jaspertzx"},"content":"    /**","lastModifiedDate":"2024-04-14"},{"lineNumber":43,"author":{"gitId":"Jaspertzx"},"content":"     * Sets the {@code Name} of the {@code EditClientDescriptor} that we are building.","lastModifiedDate":"2024-04-14"},{"lineNumber":44,"author":{"gitId":"Jaspertzx"},"content":"     */","lastModifiedDate":"2024-04-14"},{"lineNumber":45,"author":{"gitId":"Jaspertzx"},"content":"    public EditClientDescriptorBuilder withName(String name) {","lastModifiedDate":"2024-04-14"},{"lineNumber":46,"author":{"gitId":"Jaspertzx"},"content":"        descriptor.setName(new Name(name));","lastModifiedDate":"2024-04-14"},{"lineNumber":47,"author":{"gitId":"Jaspertzx"},"content":"        return this;","lastModifiedDate":"2024-04-14"},{"lineNumber":48,"author":{"gitId":"Jaspertzx"},"content":"    }","lastModifiedDate":"2024-04-14"},{"lineNumber":49,"author":{"gitId":"Jaspertzx"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":50,"author":{"gitId":"Jaspertzx"},"content":"    /**","lastModifiedDate":"2024-04-14"},{"lineNumber":51,"author":{"gitId":"Jaspertzx"},"content":"     * Sets the {@code Phone} of the {@code EditClientDescriptor} that we are building.","lastModifiedDate":"2024-04-14"},{"lineNumber":52,"author":{"gitId":"Jaspertzx"},"content":"     */","lastModifiedDate":"2024-04-14"},{"lineNumber":53,"author":{"gitId":"Jaspertzx"},"content":"    public EditClientDescriptorBuilder withPhone(String phone) {","lastModifiedDate":"2024-04-14"},{"lineNumber":54,"author":{"gitId":"Jaspertzx"},"content":"        descriptor.setPhone(new Phone(phone));","lastModifiedDate":"2024-04-14"},{"lineNumber":55,"author":{"gitId":"Jaspertzx"},"content":"        return this;","lastModifiedDate":"2024-04-14"},{"lineNumber":56,"author":{"gitId":"Jaspertzx"},"content":"    }","lastModifiedDate":"2024-04-14"},{"lineNumber":57,"author":{"gitId":"Jaspertzx"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":58,"author":{"gitId":"Jaspertzx"},"content":"    /**","lastModifiedDate":"2024-04-14"},{"lineNumber":59,"author":{"gitId":"Jaspertzx"},"content":"     * Sets the {@code Email} of the {@code EditClientDescriptor} that we are building.","lastModifiedDate":"2024-04-14"},{"lineNumber":60,"author":{"gitId":"Jaspertzx"},"content":"     */","lastModifiedDate":"2024-04-14"},{"lineNumber":61,"author":{"gitId":"Jaspertzx"},"content":"    public EditClientDescriptorBuilder withEmail(String email) {","lastModifiedDate":"2024-04-14"},{"lineNumber":62,"author":{"gitId":"Jaspertzx"},"content":"        descriptor.setEmail(new Email(email));","lastModifiedDate":"2024-04-14"},{"lineNumber":63,"author":{"gitId":"Jaspertzx"},"content":"        return this;","lastModifiedDate":"2024-04-14"},{"lineNumber":64,"author":{"gitId":"Jaspertzx"},"content":"    }","lastModifiedDate":"2024-04-14"},{"lineNumber":65,"author":{"gitId":"Jaspertzx"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":66,"author":{"gitId":"Jaspertzx"},"content":"    /**","lastModifiedDate":"2024-04-14"},{"lineNumber":67,"author":{"gitId":"Jaspertzx"},"content":"     * Sets the {@code Address} of the {@code EditClientDescriptor} that we are building.","lastModifiedDate":"2024-04-14"},{"lineNumber":68,"author":{"gitId":"Jaspertzx"},"content":"     */","lastModifiedDate":"2024-04-14"},{"lineNumber":69,"author":{"gitId":"Jaspertzx"},"content":"    public EditClientDescriptorBuilder withAddress(String address) {","lastModifiedDate":"2024-04-14"},{"lineNumber":70,"author":{"gitId":"Jaspertzx"},"content":"        descriptor.setAddress(new Address(address));","lastModifiedDate":"2024-04-14"},{"lineNumber":71,"author":{"gitId":"Jaspertzx"},"content":"        return this;","lastModifiedDate":"2024-04-14"},{"lineNumber":72,"author":{"gitId":"Jaspertzx"},"content":"    }","lastModifiedDate":"2024-04-14"},{"lineNumber":73,"author":{"gitId":"Jaspertzx"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":74,"author":{"gitId":"Jaspertzx"},"content":"    /**","lastModifiedDate":"2024-04-14"},{"lineNumber":75,"author":{"gitId":"Jaspertzx"},"content":"     * Parses the {@code tags} into a {@code Set\u003cTag\u003e} and set it to the {@code EditClientDescriptor}","lastModifiedDate":"2024-04-14"},{"lineNumber":76,"author":{"gitId":"Jaspertzx"},"content":"     * that we are building.","lastModifiedDate":"2024-04-14"},{"lineNumber":77,"author":{"gitId":"Jaspertzx"},"content":"     */","lastModifiedDate":"2024-04-14"},{"lineNumber":78,"author":{"gitId":"Jaspertzx"},"content":"    public EditClientDescriptorBuilder withTags(String... tags) {","lastModifiedDate":"2024-04-14"},{"lineNumber":79,"author":{"gitId":"Jaspertzx"},"content":"        Set\u003cTag\u003e tagSet \u003d Stream.of(tags).map(Tag::new).collect(Collectors.toSet());","lastModifiedDate":"2024-04-14"},{"lineNumber":80,"author":{"gitId":"Jaspertzx"},"content":"        descriptor.setTags(tagSet);","lastModifiedDate":"2024-04-14"},{"lineNumber":81,"author":{"gitId":"Jaspertzx"},"content":"        return this;","lastModifiedDate":"2024-04-14"},{"lineNumber":82,"author":{"gitId":"Jaspertzx"},"content":"    }","lastModifiedDate":"2024-04-14"},{"lineNumber":83,"author":{"gitId":"Jaspertzx"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":84,"author":{"gitId":"Jaspertzx"},"content":"    public EditClientDescriptor build() {","lastModifiedDate":"2024-04-14"},{"lineNumber":85,"author":{"gitId":"Jaspertzx"},"content":"        return descriptor;","lastModifiedDate":"2024-04-14"},{"lineNumber":86,"author":{"gitId":"Jaspertzx"},"content":"    }","lastModifiedDate":"2024-04-14"},{"lineNumber":87,"author":{"gitId":"Jaspertzx"},"content":"}","lastModifiedDate":"2024-04-14"}],"authorContributionMap":{"Jaspertzx":87}},{"path":"src/test/java/seedu/address/testutil/EditOrderDescriptorBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"shavonneg"},"content":"package seedu.address.testutil;","lastModifiedDate":"2024-03-29"},{"lineNumber":2,"author":{"gitId":"shavonneg"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":3,"author":{"gitId":"Jaspertzx"},"content":"import seedu.address.logic.commands.order.EditOrderCommand.EditOrderDescriptor;","lastModifiedDate":"2024-04-14"},{"lineNumber":4,"author":{"gitId":"shavonneg"},"content":"import seedu.address.model.order.Deadline;","lastModifiedDate":"2024-03-29"},{"lineNumber":5,"author":{"gitId":"shavonneg"},"content":"import seedu.address.model.order.Order;","lastModifiedDate":"2024-03-29"},{"lineNumber":6,"author":{"gitId":"shavonneg"},"content":"import seedu.address.model.order.OrderDate;","lastModifiedDate":"2024-03-29"},{"lineNumber":7,"author":{"gitId":"shavonneg"},"content":"import seedu.address.model.order.Price;","lastModifiedDate":"2024-03-29"},{"lineNumber":8,"author":{"gitId":"shavonneg"},"content":"import seedu.address.model.order.Remark;","lastModifiedDate":"2024-03-29"},{"lineNumber":9,"author":{"gitId":"shavonneg"},"content":"import seedu.address.model.order.Status;","lastModifiedDate":"2024-03-29"},{"lineNumber":10,"author":{"gitId":"shavonneg"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":11,"author":{"gitId":"shavonneg"},"content":"/**","lastModifiedDate":"2024-03-29"},{"lineNumber":12,"author":{"gitId":"shavonneg"},"content":" * A utility class to help with building EditOrderDescriptor objects.","lastModifiedDate":"2024-03-29"},{"lineNumber":13,"author":{"gitId":"shavonneg"},"content":" */","lastModifiedDate":"2024-03-29"},{"lineNumber":14,"author":{"gitId":"shavonneg"},"content":"public class EditOrderDescriptorBuilder {","lastModifiedDate":"2024-03-29"},{"lineNumber":15,"author":{"gitId":"shavonneg"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":16,"author":{"gitId":"shavonneg"},"content":"    private EditOrderDescriptor descriptor;","lastModifiedDate":"2024-03-29"},{"lineNumber":17,"author":{"gitId":"shavonneg"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":18,"author":{"gitId":"shavonneg"},"content":"    public EditOrderDescriptorBuilder() {","lastModifiedDate":"2024-03-29"},{"lineNumber":19,"author":{"gitId":"shavonneg"},"content":"        descriptor \u003d new EditOrderDescriptor();","lastModifiedDate":"2024-03-29"},{"lineNumber":20,"author":{"gitId":"shavonneg"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":21,"author":{"gitId":"shavonneg"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":22,"author":{"gitId":"shavonneg"},"content":"    public EditOrderDescriptorBuilder(EditOrderDescriptor descriptor) {","lastModifiedDate":"2024-03-29"},{"lineNumber":23,"author":{"gitId":"shavonneg"},"content":"        this.descriptor \u003d new EditOrderDescriptor(descriptor);","lastModifiedDate":"2024-03-29"},{"lineNumber":24,"author":{"gitId":"shavonneg"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":25,"author":{"gitId":"shavonneg"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":26,"author":{"gitId":"shavonneg"},"content":"    /**","lastModifiedDate":"2024-03-29"},{"lineNumber":27,"author":{"gitId":"shavonneg"},"content":"     * Returns an {@code EditOrderDescriptor} with fields containing {@code order}\u0027s details.","lastModifiedDate":"2024-03-29"},{"lineNumber":28,"author":{"gitId":"shavonneg"},"content":"     */","lastModifiedDate":"2024-03-29"},{"lineNumber":29,"author":{"gitId":"shavonneg"},"content":"    public EditOrderDescriptorBuilder(Order order) {","lastModifiedDate":"2024-03-29"},{"lineNumber":30,"author":{"gitId":"shavonneg"},"content":"        descriptor \u003d new EditOrderDescriptor();","lastModifiedDate":"2024-03-29"},{"lineNumber":31,"author":{"gitId":"shavonneg"},"content":"        descriptor.setOrderDate(order.getOrderDate());","lastModifiedDate":"2024-03-29"},{"lineNumber":32,"author":{"gitId":"shavonneg"},"content":"        descriptor.setDeadline(order.getDeadline());","lastModifiedDate":"2024-03-29"},{"lineNumber":33,"author":{"gitId":"shavonneg"},"content":"        descriptor.setPrice(order.getPrice());","lastModifiedDate":"2024-03-29"},{"lineNumber":34,"author":{"gitId":"shavonneg"},"content":"        descriptor.setRemark(order.getRemark());","lastModifiedDate":"2024-03-29"},{"lineNumber":35,"author":{"gitId":"shavonneg"},"content":"        descriptor.setStatus(order.getStatus());","lastModifiedDate":"2024-03-29"},{"lineNumber":36,"author":{"gitId":"shavonneg"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":37,"author":{"gitId":"shavonneg"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":38,"author":{"gitId":"shavonneg"},"content":"    /**","lastModifiedDate":"2024-03-29"},{"lineNumber":39,"author":{"gitId":"shavonneg"},"content":"     * Sets the {@code OrderDate} of the {@code EditOrderDescriptor} that we are building.","lastModifiedDate":"2024-03-29"},{"lineNumber":40,"author":{"gitId":"shavonneg"},"content":"     */","lastModifiedDate":"2024-03-29"},{"lineNumber":41,"author":{"gitId":"shavonneg"},"content":"    public EditOrderDescriptorBuilder withOrderDate(String orderDate) {","lastModifiedDate":"2024-03-29"},{"lineNumber":42,"author":{"gitId":"shavonneg"},"content":"        descriptor.setOrderDate(new OrderDate(orderDate));","lastModifiedDate":"2024-03-29"},{"lineNumber":43,"author":{"gitId":"shavonneg"},"content":"        return this;","lastModifiedDate":"2024-03-29"},{"lineNumber":44,"author":{"gitId":"shavonneg"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":45,"author":{"gitId":"shavonneg"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":46,"author":{"gitId":"shavonneg"},"content":"    /**","lastModifiedDate":"2024-03-29"},{"lineNumber":47,"author":{"gitId":"shavonneg"},"content":"     * Sets the {@code Deadline} of the {@code EditOrderDescriptor} that we are building.","lastModifiedDate":"2024-03-29"},{"lineNumber":48,"author":{"gitId":"shavonneg"},"content":"     */","lastModifiedDate":"2024-03-29"},{"lineNumber":49,"author":{"gitId":"shavonneg"},"content":"    public EditOrderDescriptorBuilder withDeadline(String deadline) {","lastModifiedDate":"2024-03-29"},{"lineNumber":50,"author":{"gitId":"shavonneg"},"content":"        descriptor.setDeadline(new Deadline(deadline));","lastModifiedDate":"2024-03-29"},{"lineNumber":51,"author":{"gitId":"shavonneg"},"content":"        return this;","lastModifiedDate":"2024-03-29"},{"lineNumber":52,"author":{"gitId":"shavonneg"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":53,"author":{"gitId":"shavonneg"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":54,"author":{"gitId":"shavonneg"},"content":"    /**","lastModifiedDate":"2024-03-29"},{"lineNumber":55,"author":{"gitId":"shavonneg"},"content":"     * Sets the {@code Price} of the {@code EditOrderDescriptor} that we are building.","lastModifiedDate":"2024-03-29"},{"lineNumber":56,"author":{"gitId":"shavonneg"},"content":"     */","lastModifiedDate":"2024-03-29"},{"lineNumber":57,"author":{"gitId":"shavonneg"},"content":"    public EditOrderDescriptorBuilder withPrice(String price) {","lastModifiedDate":"2024-03-29"},{"lineNumber":58,"author":{"gitId":"shavonneg"},"content":"        descriptor.setPrice(new Price(price));","lastModifiedDate":"2024-03-29"},{"lineNumber":59,"author":{"gitId":"shavonneg"},"content":"        return this;","lastModifiedDate":"2024-03-29"},{"lineNumber":60,"author":{"gitId":"shavonneg"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":61,"author":{"gitId":"shavonneg"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":62,"author":{"gitId":"shavonneg"},"content":"    /**","lastModifiedDate":"2024-03-29"},{"lineNumber":63,"author":{"gitId":"shavonneg"},"content":"     * Sets the {@code Remark} of the {@code EditOrderDescriptor} that we are building.","lastModifiedDate":"2024-03-29"},{"lineNumber":64,"author":{"gitId":"shavonneg"},"content":"     */","lastModifiedDate":"2024-03-29"},{"lineNumber":65,"author":{"gitId":"shavonneg"},"content":"    public EditOrderDescriptorBuilder withRemark(String remark) {","lastModifiedDate":"2024-03-29"},{"lineNumber":66,"author":{"gitId":"shavonneg"},"content":"        descriptor.setRemark(new Remark(remark));","lastModifiedDate":"2024-03-29"},{"lineNumber":67,"author":{"gitId":"shavonneg"},"content":"        return this;","lastModifiedDate":"2024-03-29"},{"lineNumber":68,"author":{"gitId":"shavonneg"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":69,"author":{"gitId":"shavonneg"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":70,"author":{"gitId":"shavonneg"},"content":"    /**","lastModifiedDate":"2024-03-29"},{"lineNumber":71,"author":{"gitId":"shavonneg"},"content":"     * Sets the {@code Status} of the {@code EditOrderDescriptor} that we are building.","lastModifiedDate":"2024-03-29"},{"lineNumber":72,"author":{"gitId":"shavonneg"},"content":"     */","lastModifiedDate":"2024-03-29"},{"lineNumber":73,"author":{"gitId":"shavonneg"},"content":"    public EditOrderDescriptorBuilder withStatus(String status) {","lastModifiedDate":"2024-03-29"},{"lineNumber":74,"author":{"gitId":"shavonneg"},"content":"        descriptor.setStatus(new Status(status));","lastModifiedDate":"2024-03-29"},{"lineNumber":75,"author":{"gitId":"shavonneg"},"content":"        return this;","lastModifiedDate":"2024-03-29"},{"lineNumber":76,"author":{"gitId":"shavonneg"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":77,"author":{"gitId":"shavonneg"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":78,"author":{"gitId":"shavonneg"},"content":"    public EditOrderDescriptor build() {","lastModifiedDate":"2024-03-29"},{"lineNumber":79,"author":{"gitId":"shavonneg"},"content":"        return descriptor;","lastModifiedDate":"2024-03-29"},{"lineNumber":80,"author":{"gitId":"shavonneg"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":81,"author":{"gitId":"shavonneg"},"content":"}","lastModifiedDate":"2024-03-29"}],"authorContributionMap":{"shavonneg":80,"Jaspertzx":1}},{"path":"src/test/java/seedu/address/testutil/OrderBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"rertyy"},"content":"package seedu.address.testutil;","lastModifiedDate":"2024-03-17"},{"lineNumber":2,"author":{"gitId":"rertyy"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":3,"author":{"gitId":"rertyy"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":4,"author":{"gitId":"Jaspertzx"},"content":"import seedu.address.model.client.Client;","lastModifiedDate":"2024-04-14"},{"lineNumber":5,"author":{"gitId":"rertyy"},"content":"import seedu.address.model.order.Deadline;","lastModifiedDate":"2024-03-17"},{"lineNumber":6,"author":{"gitId":"rertyy"},"content":"import seedu.address.model.order.Order;","lastModifiedDate":"2024-03-17"},{"lineNumber":7,"author":{"gitId":"rertyy"},"content":"import seedu.address.model.order.OrderDate;","lastModifiedDate":"2024-03-17"},{"lineNumber":8,"author":{"gitId":"rertyy"},"content":"import seedu.address.model.order.OrderId;","lastModifiedDate":"2024-03-17"},{"lineNumber":9,"author":{"gitId":"kailinteoo"},"content":"import seedu.address.model.order.Price;","lastModifiedDate":"2024-03-28"},{"lineNumber":10,"author":{"gitId":"rertyy"},"content":"import seedu.address.model.order.Remark;","lastModifiedDate":"2024-03-17"},{"lineNumber":11,"author":{"gitId":"rertyy"},"content":"import seedu.address.model.order.Status;","lastModifiedDate":"2024-03-17"},{"lineNumber":12,"author":{"gitId":"rertyy"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":13,"author":{"gitId":"rertyy"},"content":"/**","lastModifiedDate":"2024-03-17"},{"lineNumber":14,"author":{"gitId":"rertyy"},"content":" * A utility class to help with building Order objects.","lastModifiedDate":"2024-03-17"},{"lineNumber":15,"author":{"gitId":"rertyy"},"content":" */","lastModifiedDate":"2024-03-17"},{"lineNumber":16,"author":{"gitId":"rertyy"},"content":"public class OrderBuilder {","lastModifiedDate":"2024-03-17"},{"lineNumber":17,"author":{"gitId":"rertyy"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":18,"author":{"gitId":"rertyy"},"content":"    // Solution below adapted from https://stackoverflow.com/a/29059595","lastModifiedDate":"2024-03-17"},{"lineNumber":19,"author":{"gitId":"rertyy"},"content":"    public static final String DEFAULT_ORDER_ID \u003d \"58b76419-f9ff-4aa1-8e70-604993fc1a20\";","lastModifiedDate":"2024-03-17"},{"lineNumber":20,"author":{"gitId":"rertyy"},"content":"    public static final String DEFAULT_ORDER_DATE \u003d \"10-10-2024 00:00\";","lastModifiedDate":"2024-03-17"},{"lineNumber":21,"author":{"gitId":"rertyy"},"content":"    public static final String DEFAULT_DEADLINE \u003d \"11-10-2024 23:59\";","lastModifiedDate":"2024-03-17"},{"lineNumber":22,"author":{"gitId":"kailinteoo"},"content":"    public static final String DEFAULT_PRICE \u003d \"100\";","lastModifiedDate":"2024-03-28"},{"lineNumber":23,"author":{"gitId":"rertyy"},"content":"    public static final String DEFAULT_REMARK \u003d \"No remark\";","lastModifiedDate":"2024-03-17"},{"lineNumber":24,"author":{"gitId":"rertyy"},"content":"    public static final String DEFAULT_STATUS \u003d \"PENDING\";","lastModifiedDate":"2024-03-17"},{"lineNumber":25,"author":{"gitId":"rertyy"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":26,"author":{"gitId":"rertyy"},"content":"    private OrderId orderId;","lastModifiedDate":"2024-03-17"},{"lineNumber":27,"author":{"gitId":"rertyy"},"content":"    private OrderDate orderDate;","lastModifiedDate":"2024-03-17"},{"lineNumber":28,"author":{"gitId":"rertyy"},"content":"    private Deadline deadline;","lastModifiedDate":"2024-03-17"},{"lineNumber":29,"author":{"gitId":"kailinteoo"},"content":"    private Price price;","lastModifiedDate":"2024-03-28"},{"lineNumber":30,"author":{"gitId":"rertyy"},"content":"    private Remark remark;","lastModifiedDate":"2024-03-17"},{"lineNumber":31,"author":{"gitId":"rertyy"},"content":"    private Status status;","lastModifiedDate":"2024-03-17"},{"lineNumber":32,"author":{"gitId":"Jaspertzx"},"content":"    private Client client;","lastModifiedDate":"2024-04-14"},{"lineNumber":33,"author":{"gitId":"rertyy"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":34,"author":{"gitId":"rertyy"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":35,"author":{"gitId":"rertyy"},"content":"    /**","lastModifiedDate":"2024-03-17"},{"lineNumber":36,"author":{"gitId":"rertyy"},"content":"     * Creates a {@code OrderBuilder} with the default details.","lastModifiedDate":"2024-03-17"},{"lineNumber":37,"author":{"gitId":"rertyy"},"content":"     */","lastModifiedDate":"2024-03-17"},{"lineNumber":38,"author":{"gitId":"rertyy"},"content":"    public OrderBuilder() {","lastModifiedDate":"2024-03-17"},{"lineNumber":39,"author":{"gitId":"rertyy"},"content":"        orderId \u003d new OrderId(DEFAULT_ORDER_ID);","lastModifiedDate":"2024-03-17"},{"lineNumber":40,"author":{"gitId":"rertyy"},"content":"        orderDate \u003d new OrderDate(DEFAULT_ORDER_DATE);","lastModifiedDate":"2024-03-17"},{"lineNumber":41,"author":{"gitId":"rertyy"},"content":"        deadline \u003d new Deadline(DEFAULT_DEADLINE);","lastModifiedDate":"2024-03-17"},{"lineNumber":42,"author":{"gitId":"kailinteoo"},"content":"        price \u003d new Price(DEFAULT_PRICE);","lastModifiedDate":"2024-03-28"},{"lineNumber":43,"author":{"gitId":"rertyy"},"content":"        remark \u003d new Remark(DEFAULT_REMARK);","lastModifiedDate":"2024-03-17"},{"lineNumber":44,"author":{"gitId":"rertyy"},"content":"        status \u003d new Status(DEFAULT_STATUS);","lastModifiedDate":"2024-03-17"},{"lineNumber":45,"author":{"gitId":"Jaspertzx"},"content":"        client \u003d new ClientBuilder().build();","lastModifiedDate":"2024-04-14"},{"lineNumber":46,"author":{"gitId":"rertyy"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":47,"author":{"gitId":"rertyy"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":48,"author":{"gitId":"rertyy"},"content":"    /**","lastModifiedDate":"2024-03-17"},{"lineNumber":49,"author":{"gitId":"rertyy"},"content":"     * Initializes the OrderBuilder with the data of {@code orderToCopy}.","lastModifiedDate":"2024-03-17"},{"lineNumber":50,"author":{"gitId":"rertyy"},"content":"     */","lastModifiedDate":"2024-03-17"},{"lineNumber":51,"author":{"gitId":"rertyy"},"content":"    public OrderBuilder(Order orderToCopy) {","lastModifiedDate":"2024-03-17"},{"lineNumber":52,"author":{"gitId":"rertyy"},"content":"        orderId \u003d orderToCopy.getOrderId();","lastModifiedDate":"2024-03-17"},{"lineNumber":53,"author":{"gitId":"rertyy"},"content":"        orderDate \u003d orderToCopy.getOrderDate();","lastModifiedDate":"2024-03-17"},{"lineNumber":54,"author":{"gitId":"rertyy"},"content":"        deadline \u003d orderToCopy.getDeadline();","lastModifiedDate":"2024-03-17"},{"lineNumber":55,"author":{"gitId":"kailinteoo"},"content":"        price \u003d orderToCopy.getPrice();","lastModifiedDate":"2024-03-28"},{"lineNumber":56,"author":{"gitId":"rertyy"},"content":"        remark \u003d orderToCopy.getRemark();","lastModifiedDate":"2024-03-17"},{"lineNumber":57,"author":{"gitId":"rertyy"},"content":"        status \u003d orderToCopy.getStatus();","lastModifiedDate":"2024-03-17"},{"lineNumber":58,"author":{"gitId":"Jaspertzx"},"content":"        client \u003d orderToCopy.getClient();","lastModifiedDate":"2024-04-14"},{"lineNumber":59,"author":{"gitId":"rertyy"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":60,"author":{"gitId":"rertyy"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":61,"author":{"gitId":"rertyy"},"content":"    /**","lastModifiedDate":"2024-03-17"},{"lineNumber":62,"author":{"gitId":"rertyy"},"content":"     * Sets the {@code OrderId} of the {@code Order} that we are building.","lastModifiedDate":"2024-03-17"},{"lineNumber":63,"author":{"gitId":"rertyy"},"content":"     */","lastModifiedDate":"2024-03-17"},{"lineNumber":64,"author":{"gitId":"rertyy"},"content":"    public OrderBuilder withOrderId(String orderId) {","lastModifiedDate":"2024-03-17"},{"lineNumber":65,"author":{"gitId":"rertyy"},"content":"        this.orderId \u003d new OrderId(orderId);","lastModifiedDate":"2024-03-17"},{"lineNumber":66,"author":{"gitId":"rertyy"},"content":"        return this;","lastModifiedDate":"2024-03-17"},{"lineNumber":67,"author":{"gitId":"rertyy"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":68,"author":{"gitId":"rertyy"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":69,"author":{"gitId":"rertyy"},"content":"    /**","lastModifiedDate":"2024-03-17"},{"lineNumber":70,"author":{"gitId":"rertyy"},"content":"     * Sets the {@code OrderDate} of the {@code Order} that we are building.","lastModifiedDate":"2024-03-17"},{"lineNumber":71,"author":{"gitId":"rertyy"},"content":"     */","lastModifiedDate":"2024-03-17"},{"lineNumber":72,"author":{"gitId":"rertyy"},"content":"    public OrderBuilder withOrderDate(String orderDate) {","lastModifiedDate":"2024-03-17"},{"lineNumber":73,"author":{"gitId":"rertyy"},"content":"        this.orderDate \u003d new OrderDate(orderDate);","lastModifiedDate":"2024-03-17"},{"lineNumber":74,"author":{"gitId":"rertyy"},"content":"        return this;","lastModifiedDate":"2024-03-17"},{"lineNumber":75,"author":{"gitId":"rertyy"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":76,"author":{"gitId":"rertyy"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":77,"author":{"gitId":"rertyy"},"content":"    /**","lastModifiedDate":"2024-03-17"},{"lineNumber":78,"author":{"gitId":"rertyy"},"content":"     * Sets the {@code Deadline} of the {@code Order} that we are building.","lastModifiedDate":"2024-03-17"},{"lineNumber":79,"author":{"gitId":"rertyy"},"content":"     */","lastModifiedDate":"2024-03-17"},{"lineNumber":80,"author":{"gitId":"rertyy"},"content":"    public OrderBuilder withDeadline(String deadline) {","lastModifiedDate":"2024-03-17"},{"lineNumber":81,"author":{"gitId":"rertyy"},"content":"        this.deadline \u003d new Deadline(deadline);","lastModifiedDate":"2024-03-17"},{"lineNumber":82,"author":{"gitId":"rertyy"},"content":"        return this;","lastModifiedDate":"2024-03-17"},{"lineNumber":83,"author":{"gitId":"rertyy"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":84,"author":{"gitId":"rertyy"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":85,"author":{"gitId":"rertyy"},"content":"    /**","lastModifiedDate":"2024-03-17"},{"lineNumber":86,"author":{"gitId":"kailinteoo"},"content":"     * Sets the {@code Price} of the {@code Order} that we are building.","lastModifiedDate":"2024-03-28"},{"lineNumber":87,"author":{"gitId":"rertyy"},"content":"     */","lastModifiedDate":"2024-03-17"},{"lineNumber":88,"author":{"gitId":"kailinteoo"},"content":"    public OrderBuilder withPrice(String price) {","lastModifiedDate":"2024-03-28"},{"lineNumber":89,"author":{"gitId":"kailinteoo"},"content":"        this.price \u003d new Price(price);","lastModifiedDate":"2024-03-28"},{"lineNumber":90,"author":{"gitId":"rertyy"},"content":"        return this;","lastModifiedDate":"2024-03-17"},{"lineNumber":91,"author":{"gitId":"rertyy"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":92,"author":{"gitId":"rertyy"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":93,"author":{"gitId":"rertyy"},"content":"    /**","lastModifiedDate":"2024-03-17"},{"lineNumber":94,"author":{"gitId":"rertyy"},"content":"     * Sets the {@code Remark} of the {@code Order} that we are building.","lastModifiedDate":"2024-03-17"},{"lineNumber":95,"author":{"gitId":"rertyy"},"content":"     */","lastModifiedDate":"2024-03-17"},{"lineNumber":96,"author":{"gitId":"rertyy"},"content":"    public OrderBuilder withRemark(String remark) {","lastModifiedDate":"2024-03-17"},{"lineNumber":97,"author":{"gitId":"rertyy"},"content":"        this.remark \u003d new Remark(remark);","lastModifiedDate":"2024-03-17"},{"lineNumber":98,"author":{"gitId":"rertyy"},"content":"        return this;","lastModifiedDate":"2024-03-17"},{"lineNumber":99,"author":{"gitId":"rertyy"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":100,"author":{"gitId":"rertyy"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":101,"author":{"gitId":"rertyy"},"content":"    /**","lastModifiedDate":"2024-03-17"},{"lineNumber":102,"author":{"gitId":"rertyy"},"content":"     * Sets the {@code Status} of the {@code Order} that we are building.","lastModifiedDate":"2024-03-17"},{"lineNumber":103,"author":{"gitId":"rertyy"},"content":"     */","lastModifiedDate":"2024-03-17"},{"lineNumber":104,"author":{"gitId":"rertyy"},"content":"    public OrderBuilder withStatus(String status) {","lastModifiedDate":"2024-03-17"},{"lineNumber":105,"author":{"gitId":"rertyy"},"content":"        this.status \u003d new Status(status);","lastModifiedDate":"2024-03-17"},{"lineNumber":106,"author":{"gitId":"rertyy"},"content":"        return this;","lastModifiedDate":"2024-03-17"},{"lineNumber":107,"author":{"gitId":"rertyy"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":108,"author":{"gitId":"rertyy"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":109,"author":{"gitId":"rertyy"},"content":"    /**","lastModifiedDate":"2024-03-29"},{"lineNumber":110,"author":{"gitId":"Jaspertzx"},"content":"     * Sets the {@code Client} of the {@code Order} that we are building.","lastModifiedDate":"2024-04-14"},{"lineNumber":111,"author":{"gitId":"rertyy"},"content":"     */","lastModifiedDate":"2024-03-29"},{"lineNumber":112,"author":{"gitId":"Jaspertzx"},"content":"    public OrderBuilder withPerson(Client client) {","lastModifiedDate":"2024-04-14"},{"lineNumber":113,"author":{"gitId":"Jaspertzx"},"content":"        this.client \u003d client;","lastModifiedDate":"2024-04-14"},{"lineNumber":114,"author":{"gitId":"rertyy"},"content":"        return this;","lastModifiedDate":"2024-03-29"},{"lineNumber":115,"author":{"gitId":"rertyy"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":116,"author":{"gitId":"rertyy"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":117,"author":{"gitId":"rertyy"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":118,"author":{"gitId":"rertyy"},"content":"    /**","lastModifiedDate":"2024-03-29"},{"lineNumber":119,"author":{"gitId":"rertyy"},"content":"     * Builds the Order object.","lastModifiedDate":"2024-03-29"},{"lineNumber":120,"author":{"gitId":"rertyy"},"content":"     */","lastModifiedDate":"2024-03-29"},{"lineNumber":121,"author":{"gitId":"rertyy"},"content":"    public Order build() {","lastModifiedDate":"2024-03-17"},{"lineNumber":122,"author":{"gitId":"Jaspertzx"},"content":"        return new Order(orderId, orderDate, deadline, price, remark, status, client);","lastModifiedDate":"2024-04-14"},{"lineNumber":123,"author":{"gitId":"rertyy"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":124,"author":{"gitId":"rertyy"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":125,"author":{"gitId":"rertyy"},"content":"}","lastModifiedDate":"2024-03-17"}],"authorContributionMap":{"kailinteoo":8,"rertyy":109,"Jaspertzx":8}},{"path":"src/test/java/seedu/address/testutil/SerializableTestClass.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2016-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.HashMap;","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"rertyy"},"content":" * A class used to test serialization and deserialization.","lastModifiedDate":"2024-03-20"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class SerializableTestClass {","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String JSON_STRING_REPRESENTATION \u003d String.format(\"{%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"            + \"  \\\"name\\\" : \\\"This is a test class\\\",%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"            + \"  \\\"listOfLocalDateTimes\\\" : \"","lastModifiedDate":"2016-10-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"            + \"[ \\\"-999999999-01-01T00:00:00\\\", \\\"+999999999-12-31T23:59:59.999999999\\\", \"","lastModifiedDate":"2016-10-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"            + \"\\\"0001-01-01T01:01:00\\\" ],%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"            + \"  \\\"mapOfIntegerToString\\\" : {%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"            + \"    \\\"1\\\" : \\\"One\\\",%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"            + \"    \\\"2\\\" : \\\"Two\\\",%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"            + \"    \\\"3\\\" : \\\"Three\\\"%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"            + \"  }%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"            + \"}\");","lastModifiedDate":"2016-10-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private static final String NAME_TEST_VALUE \u003d \"This is a test class\";","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private String name;","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private List\u003cLocalDateTime\u003e listOfLocalDateTimes;","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private HashMap\u003cInteger, String\u003e mapOfIntegerToString;","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public static String getNameTestValue() {","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        return NAME_TEST_VALUE;","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public static List\u003cLocalDateTime\u003e getListTestValues() {","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        List\u003cLocalDateTime\u003e listOfLocalDateTimes \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        listOfLocalDateTimes.add(LocalDateTime.MIN);","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        listOfLocalDateTimes.add(LocalDateTime.MAX);","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        listOfLocalDateTimes.add(LocalDateTime.of(1, 1, 1, 1, 1));","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        return listOfLocalDateTimes;","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public static HashMap\u003cInteger, String\u003e getHashMapTestValues() {","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        HashMap\u003cInteger, String\u003e mapOfIntegerToString \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        mapOfIntegerToString.put(1, \"One\");","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        mapOfIntegerToString.put(2, \"Two\");","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        mapOfIntegerToString.put(3, \"Three\");","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        return mapOfIntegerToString;","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public void setTestValues() {","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        name \u003d getNameTestValue();","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        listOfLocalDateTimes \u003d getListTestValues();","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        mapOfIntegerToString \u003d getHashMapTestValues();","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public String getName() {","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        return name;","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public List\u003cLocalDateTime\u003e getListOfLocalDateTimes() {","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        return listOfLocalDateTimes;","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public HashMap\u003cInteger, String\u003e getMapOfIntegerToString() {","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        return mapOfIntegerToString;","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"rertyy":1,"-":71}},{"path":"src/test/java/seedu/address/testutil/TestUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Files;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-07-30"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-07-30"},{"lineNumber":10,"author":{"gitId":"Jaspertzx"},"content":"import seedu.address.model.client.Client;","lastModifiedDate":"2024-04-14"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * A utility class for test cases.","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class TestUtil {","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * Folder used for temp files created during testing. Ignored by Git.","lastModifiedDate":"2016-10-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private static final Path SANDBOX_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"sandbox\");","lastModifiedDate":"2018-04-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Appends {@code fileName} to the sandbox folder path and returns the resulting path.","lastModifiedDate":"2018-04-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Creates the sandbox folder if it doesn\u0027t exist.","lastModifiedDate":"2016-09-28"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static Path getFilePathInSandboxFolder(String fileName) {","lastModifiedDate":"2018-04-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-28"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            Files.createDirectories(SANDBOX_FOLDER);","lastModifiedDate":"2018-04-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-28"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            throw new RuntimeException(e);","lastModifiedDate":"2016-09-28"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-28"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        return SANDBOX_FOLDER.resolve(fileName);","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-30"},{"lineNumber":36,"author":{"gitId":"Jaspertzx"},"content":"     * Returns the middle index of the client in the {@code model}\u0027s client list.","lastModifiedDate":"2024-04-14"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-30"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static Index getMidIndex(Model model) {","lastModifiedDate":"2017-07-30"},{"lineNumber":39,"author":{"gitId":"Jaspertzx"},"content":"        return Index.fromOneBased(model.getFilteredClientList().size() / 2);","lastModifiedDate":"2024-04-14"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-30"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-30"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-30"},{"lineNumber":43,"author":{"gitId":"Jaspertzx"},"content":"     * Returns the last index of the client in the {@code model}\u0027s client list.","lastModifiedDate":"2024-04-14"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-30"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public static Index getLastIndex(Model model) {","lastModifiedDate":"2017-07-30"},{"lineNumber":46,"author":{"gitId":"Jaspertzx"},"content":"        return Index.fromOneBased(model.getFilteredClientList().size());","lastModifiedDate":"2024-04-14"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-30"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-30"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-30"},{"lineNumber":50,"author":{"gitId":"Jaspertzx"},"content":"     * Returns the client in the {@code model}\u0027s client list at {@code index}.","lastModifiedDate":"2024-04-14"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-30"},{"lineNumber":52,"author":{"gitId":"Jaspertzx"},"content":"    public static Client getPerson(Model model, Index index) {","lastModifiedDate":"2024-04-14"},{"lineNumber":53,"author":{"gitId":"Jaspertzx"},"content":"        return model.getFilteredClientList().get(index.getZeroBased());","lastModifiedDate":"2024-04-14"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-30"},{"lineNumber":55,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"Jaspertzx":8,"-":47}},{"path":"src/test/java/seedu/address/testutil/TypicalClients.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2016-09-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_AMY;","lastModifiedDate":"2017-08-22"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2017-08-22"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_AMY;","lastModifiedDate":"2017-08-22"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2017-08-22"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_AMY;","lastModifiedDate":"2017-08-22"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2017-08-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_AMY;","lastModifiedDate":"2017-08-22"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2017-08-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;","lastModifiedDate":"2017-08-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2017-08-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-08-07"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-08-07"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-08-07"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-07"},{"lineNumber":18,"author":{"gitId":"Jaspertzx"},"content":"import seedu.address.model.BookKeeper;","lastModifiedDate":"2024-04-14"},{"lineNumber":19,"author":{"gitId":"Jaspertzx"},"content":"import seedu.address.model.client.Client;","lastModifiedDate":"2024-04-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-13"},{"lineNumber":22,"author":{"gitId":"Jaspertzx"},"content":" * A utility class containing a list of {@code Client} objects to be used in tests.","lastModifiedDate":"2024-04-14"},{"lineNumber":23,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-13"},{"lineNumber":24,"author":{"gitId":"Jaspertzx"},"content":"public class TypicalClients {","lastModifiedDate":"2024-04-14"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":26,"author":{"gitId":"Jaspertzx"},"content":"    public static final Client ALICE \u003d new ClientBuilder().withName(\"Alice Pauline\")","lastModifiedDate":"2024-04-14"},{"lineNumber":27,"author":{"gitId":"-"},"content":"            .withAddress(\"123, Jurong West Ave 6, #08-111\").withEmail(\"alice@example.com\")","lastModifiedDate":"2017-04-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            .withPhone(\"94351253\")","lastModifiedDate":"2018-04-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            .withTags(\"friends\").build();","lastModifiedDate":"2016-09-13"},{"lineNumber":30,"author":{"gitId":"Jaspertzx"},"content":"    public static final Client BENSON \u003d new ClientBuilder().withName(\"Benson Meier\")","lastModifiedDate":"2024-04-14"},{"lineNumber":31,"author":{"gitId":"-"},"content":"            .withAddress(\"311, Clementi Ave 2, #02-25\")","lastModifiedDate":"2017-09-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"            .withEmail(\"johnd@example.com\").withPhone(\"98765432\")","lastModifiedDate":"2017-04-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            .withTags(\"owesMoney\", \"friends\").build();","lastModifiedDate":"2016-09-13"},{"lineNumber":34,"author":{"gitId":"Jaspertzx"},"content":"    public static final Client CARL \u003d new ClientBuilder().withName(\"Carl Kurz\").withPhone(\"95352563\")","lastModifiedDate":"2024-04-14"},{"lineNumber":35,"author":{"gitId":"-"},"content":"            .withEmail(\"heinz@example.com\").withAddress(\"wall street\").build();","lastModifiedDate":"2017-04-05"},{"lineNumber":36,"author":{"gitId":"Jaspertzx"},"content":"    public static final Client DANIEL \u003d new ClientBuilder().withName(\"Daniel Meier\").withPhone(\"87652533\")","lastModifiedDate":"2024-04-14"},{"lineNumber":37,"author":{"gitId":"-"},"content":"            .withEmail(\"cornelia@example.com\").withAddress(\"10th street\").withTags(\"friends\").build();","lastModifiedDate":"2018-03-26"},{"lineNumber":38,"author":{"gitId":"Jaspertzx"},"content":"    public static final Client ELLE \u003d new ClientBuilder().withName(\"Elle Meyer\").withPhone(\"9482224\")","lastModifiedDate":"2024-04-14"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            .withEmail(\"werner@example.com\").withAddress(\"michegan ave\").build();","lastModifiedDate":"2017-04-05"},{"lineNumber":40,"author":{"gitId":"Jaspertzx"},"content":"    public static final Client FIONA \u003d new ClientBuilder().withName(\"Fiona Kunz\").withPhone(\"9482427\")","lastModifiedDate":"2024-04-14"},{"lineNumber":41,"author":{"gitId":"-"},"content":"            .withEmail(\"lydia@example.com\").withAddress(\"little tokyo\").build();","lastModifiedDate":"2017-04-05"},{"lineNumber":42,"author":{"gitId":"Jaspertzx"},"content":"    public static final Client GEORGE \u003d new ClientBuilder().withName(\"George Best\").withPhone(\"9482442\")","lastModifiedDate":"2024-04-14"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            .withEmail(\"anna@example.com\").withAddress(\"4th street\").build();","lastModifiedDate":"2017-04-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    // Manually added","lastModifiedDate":"2016-09-13"},{"lineNumber":46,"author":{"gitId":"Jaspertzx"},"content":"    public static final Client HOON \u003d new ClientBuilder().withName(\"Hoon Meier\").withPhone(\"8482424\")","lastModifiedDate":"2024-04-14"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            .withEmail(\"stefan@example.com\").withAddress(\"little india\").build();","lastModifiedDate":"2017-04-05"},{"lineNumber":48,"author":{"gitId":"Jaspertzx"},"content":"    public static final Client IDA \u003d new ClientBuilder().withName(\"Ida Mueller\").withPhone(\"8482131\")","lastModifiedDate":"2024-04-14"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            .withEmail(\"hans@example.com\").withAddress(\"chicago ave\").build();","lastModifiedDate":"2017-04-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-22"},{"lineNumber":51,"author":{"gitId":"Jaspertzx"},"content":"    // Manually added - Client\u0027s details found in {@code CommandTestUtil}","lastModifiedDate":"2024-04-14"},{"lineNumber":52,"author":{"gitId":"Jaspertzx"},"content":"    public static final Client AMY \u003d new ClientBuilder().withName(VALID_NAME_AMY).withPhone(VALID_PHONE_AMY)","lastModifiedDate":"2024-04-14"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            .withEmail(VALID_EMAIL_AMY).withAddress(VALID_ADDRESS_AMY).withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2017-09-21"},{"lineNumber":54,"author":{"gitId":"Jaspertzx"},"content":"    public static final Client BOB \u003d new ClientBuilder().withName(VALID_NAME_BOB).withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2024-04-14"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            .withEmail(VALID_EMAIL_BOB).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND)","lastModifiedDate":"2017-09-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"            .build();","lastModifiedDate":"2017-09-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public static final String KEYWORD_MATCHING_MEIER \u003d \"Meier\"; // A keyword that matches MEIER","lastModifiedDate":"2017-09-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":60,"author":{"gitId":"Jaspertzx"},"content":"    private TypicalClients() {} // prevents instantiation","lastModifiedDate":"2024-04-14"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-20"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":63,"author":{"gitId":"Jaspertzx"},"content":"     * Returns an {@code BookKeeper} with all the typical persons.","lastModifiedDate":"2024-04-14"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":65,"author":{"gitId":"Jaspertzx"},"content":"    public static BookKeeper getTypicalAddressBook() {","lastModifiedDate":"2024-04-14"},{"lineNumber":66,"author":{"gitId":"Jaspertzx"},"content":"        BookKeeper ab \u003d new BookKeeper();","lastModifiedDate":"2024-04-14"},{"lineNumber":67,"author":{"gitId":"Jaspertzx"},"content":"        for (Client client : getTypicalPersons()) {","lastModifiedDate":"2024-04-14"},{"lineNumber":68,"author":{"gitId":"Jaspertzx"},"content":"            ab.addClient(client);","lastModifiedDate":"2024-04-14"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        return ab;","lastModifiedDate":"2016-09-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-04"},{"lineNumber":73,"author":{"gitId":"Jaspertzx"},"content":"    public static List\u003cClient\u003e getTypicalPersons() {","lastModifiedDate":"2024-04-14"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        return new ArrayList\u003c\u003e(Arrays.asList(ALICE, BENSON, CARL, DANIEL, ELLE, FIONA, GEORGE));","lastModifiedDate":"2017-08-07"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-08-04"},{"lineNumber":76,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-13"}],"authorContributionMap":{"Jaspertzx":23,"-":53}},{"path":"src/test/java/seedu/address/testutil/TypicalIndexes.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2017-08-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-08-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * A utility class containing a list of {@code Index} objects to be used in tests.","lastModifiedDate":"2017-08-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class TypicalIndexes {","lastModifiedDate":"2017-08-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    public static final Index INDEX_FIRST_PERSON \u003d Index.fromOneBased(1);","lastModifiedDate":"2017-08-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final Index INDEX_SECOND_PERSON \u003d Index.fromOneBased(2);","lastModifiedDate":"2017-08-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    public static final Index INDEX_THIRD_PERSON \u003d Index.fromOneBased(3);","lastModifiedDate":"2017-08-05"},{"lineNumber":12,"author":{"gitId":"shavonneg"},"content":"    public static final Index INDEX_FIRST_ORDER \u003d Index.fromOneBased(1);","lastModifiedDate":"2024-03-19"},{"lineNumber":13,"author":{"gitId":"shavonneg"},"content":"    public static final Index INDEX_SECOND_ORDER \u003d Index.fromOneBased(2);","lastModifiedDate":"2024-03-29"},{"lineNumber":14,"author":{"gitId":"shavonneg"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":15,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-08-05"}],"authorContributionMap":{"shavonneg":3,"-":12}},{"path":"src/test/java/seedu/address/testutil/TypicalOrders.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"rertyy"},"content":"package seedu.address.testutil;","lastModifiedDate":"2024-03-17"},{"lineNumber":2,"author":{"gitId":"rertyy"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":3,"author":{"gitId":"rertyy"},"content":"import seedu.address.model.order.Order;","lastModifiedDate":"2024-03-17"},{"lineNumber":4,"author":{"gitId":"rertyy"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":5,"author":{"gitId":"rertyy"},"content":"/**","lastModifiedDate":"2024-03-17"},{"lineNumber":6,"author":{"gitId":"rertyy"},"content":" * A utility class containing a list of {@code Order} objects to be used in tests.","lastModifiedDate":"2024-03-17"},{"lineNumber":7,"author":{"gitId":"rertyy"},"content":" */","lastModifiedDate":"2024-03-17"},{"lineNumber":8,"author":{"gitId":"rertyy"},"content":"public class TypicalOrders {","lastModifiedDate":"2024-03-17"},{"lineNumber":9,"author":{"gitId":"rertyy"},"content":"    public static final Order ROSES \u003d new OrderBuilder()","lastModifiedDate":"2024-03-17"},{"lineNumber":10,"author":{"gitId":"rertyy"},"content":"            .withOrderId(\"69c25c8d-9e34-4d9d-8bad-e378f203ae73\")","lastModifiedDate":"2024-03-17"},{"lineNumber":11,"author":{"gitId":"rertyy"},"content":"            .withOrderDate(\"01-03-2024 23:59\")","lastModifiedDate":"2024-03-17"},{"lineNumber":12,"author":{"gitId":"rertyy"},"content":"            .withDeadline(\"01-04-2024 23:59\")","lastModifiedDate":"2024-03-17"},{"lineNumber":13,"author":{"gitId":"kailinteoo"},"content":"            .withPrice(\"10\")","lastModifiedDate":"2024-03-28"},{"lineNumber":14,"author":{"gitId":"rertyy"},"content":"            .withRemark(\"No remark\")","lastModifiedDate":"2024-03-17"},{"lineNumber":15,"author":{"gitId":"rertyy"},"content":"            .withStatus(\"CANCELED\")","lastModifiedDate":"2024-03-17"},{"lineNumber":16,"author":{"gitId":"Jaspertzx"},"content":"            .withPerson(TypicalClients.ALICE)","lastModifiedDate":"2024-04-14"},{"lineNumber":17,"author":{"gitId":"rertyy"},"content":"            .build();","lastModifiedDate":"2024-03-17"},{"lineNumber":18,"author":{"gitId":"rertyy"},"content":"    public static final Order LILIES \u003d new OrderBuilder()","lastModifiedDate":"2024-03-17"},{"lineNumber":19,"author":{"gitId":"rertyy"},"content":"            .withOrderId(\"69c25c8d-9e34-4d9d-8bad-e378f203ae74\")","lastModifiedDate":"2024-03-17"},{"lineNumber":20,"author":{"gitId":"rertyy"},"content":"            .withOrderDate(\"23-03-2024 11:59\")","lastModifiedDate":"2024-03-17"},{"lineNumber":21,"author":{"gitId":"rertyy"},"content":"            .withDeadline(\"05-12-2024 20:57\")","lastModifiedDate":"2024-03-17"},{"lineNumber":22,"author":{"gitId":"kailinteoo"},"content":"            .withPrice(\"10\")","lastModifiedDate":"2024-03-28"},{"lineNumber":23,"author":{"gitId":"rertyy"},"content":"            .withRemark(\"Important\")","lastModifiedDate":"2024-03-17"},{"lineNumber":24,"author":{"gitId":"rertyy"},"content":"            .withStatus(\"PENDING\")","lastModifiedDate":"2024-03-17"},{"lineNumber":25,"author":{"gitId":"Jaspertzx"},"content":"            .withPerson(TypicalClients.BOB)","lastModifiedDate":"2024-04-14"},{"lineNumber":26,"author":{"gitId":"rertyy"},"content":"            .build();","lastModifiedDate":"2024-03-17"},{"lineNumber":27,"author":{"gitId":"rertyy"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":28,"author":{"gitId":"rertyy"},"content":"    private TypicalOrders() {","lastModifiedDate":"2024-03-17"},{"lineNumber":29,"author":{"gitId":"rertyy"},"content":"    } // prevents instantiation","lastModifiedDate":"2024-03-17"},{"lineNumber":30,"author":{"gitId":"rertyy"},"content":"}","lastModifiedDate":"2024-03-17"}],"authorContributionMap":{"kailinteoo":2,"rertyy":26,"Jaspertzx":2}}]
